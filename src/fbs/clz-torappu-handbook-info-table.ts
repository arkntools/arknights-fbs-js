// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_HandbookStageTimeData, clz_Torappu_HandbookStageTimeDataT } from './clz-torappu-handbook-stage-time-data.js';
import { dict__string__clz_Torappu_HandbookDisplayCondition, dict__string__clz_Torappu_HandbookDisplayConditionT } from './dict--string--clz-torappu-handbook-display-condition.js';
import { dict__string__clz_Torappu_HandbookInfoData, dict__string__clz_Torappu_HandbookInfoDataT } from './dict--string--clz-torappu-handbook-info-data.js';
import { dict__string__clz_Torappu_HandbookStoryStageData, dict__string__clz_Torappu_HandbookStoryStageDataT } from './dict--string--clz-torappu-handbook-story-stage-data.js';
import { dict__string__clz_Torappu_HandbookTeamMission, dict__string__clz_Torappu_HandbookTeamMissionT } from './dict--string--clz-torappu-handbook-team-mission.js';
import { dict__string__clz_Torappu_NPCData, dict__string__clz_Torappu_NPCDataT } from './dict--string--clz-torappu-npcdata.js';


export class clz_Torappu_HandbookInfoTable implements flatbuffers.IUnpackableObject<clz_Torappu_HandbookInfoTableT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_HandbookInfoTable {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_HandbookInfoTable(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_HandbookInfoTable):clz_Torappu_HandbookInfoTable {
  return (obj || new clz_Torappu_HandbookInfoTable()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_HandbookInfoTable(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_HandbookInfoTable):clz_Torappu_HandbookInfoTable {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_HandbookInfoTable()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

handbookDict(index: number, obj?:dict__string__clz_Torappu_HandbookInfoData):dict__string__clz_Torappu_HandbookInfoData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new dict__string__clz_Torappu_HandbookInfoData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

handbookDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

npcDict(index: number, obj?:dict__string__clz_Torappu_NPCData):dict__string__clz_Torappu_NPCData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new dict__string__clz_Torappu_NPCData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

npcDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

teamMissionList(index: number, obj?:dict__string__clz_Torappu_HandbookTeamMission):dict__string__clz_Torappu_HandbookTeamMission|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new dict__string__clz_Torappu_HandbookTeamMission()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

teamMissionListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

handbookDisplayConditionList(index: number, obj?:dict__string__clz_Torappu_HandbookDisplayCondition):dict__string__clz_Torappu_HandbookDisplayCondition|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new dict__string__clz_Torappu_HandbookDisplayCondition()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

handbookDisplayConditionListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

handbookStageData(index: number, obj?:dict__string__clz_Torappu_HandbookStoryStageData):dict__string__clz_Torappu_HandbookStoryStageData|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new dict__string__clz_Torappu_HandbookStoryStageData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

handbookStageDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

handbookStageTime(index: number, obj?:clz_Torappu_HandbookStageTimeData):clz_Torappu_HandbookStageTimeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new clz_Torappu_HandbookStageTimeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

handbookStageTimeLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_HandbookInfoTable(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addHandbookDict(builder:flatbuffers.Builder, handbookDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, handbookDictOffset, 0);
}

static createHandbookDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startHandbookDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addNpcDict(builder:flatbuffers.Builder, npcDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, npcDictOffset, 0);
}

static createNpcDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startNpcDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTeamMissionList(builder:flatbuffers.Builder, teamMissionListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, teamMissionListOffset, 0);
}

static createTeamMissionListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTeamMissionListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addHandbookDisplayConditionList(builder:flatbuffers.Builder, handbookDisplayConditionListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, handbookDisplayConditionListOffset, 0);
}

static createHandbookDisplayConditionListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startHandbookDisplayConditionListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addHandbookStageData(builder:flatbuffers.Builder, handbookStageDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, handbookStageDataOffset, 0);
}

static createHandbookStageDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startHandbookStageDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addHandbookStageTime(builder:flatbuffers.Builder, handbookStageTimeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, handbookStageTimeOffset, 0);
}

static createHandbookStageTimeVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startHandbookStageTimeVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_HandbookInfoTable(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishclz_Torappu_HandbookInfoTableBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedclz_Torappu_HandbookInfoTableBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createclz_Torappu_HandbookInfoTable(builder:flatbuffers.Builder, handbookDictOffset:flatbuffers.Offset, npcDictOffset:flatbuffers.Offset, teamMissionListOffset:flatbuffers.Offset, handbookDisplayConditionListOffset:flatbuffers.Offset, handbookStageDataOffset:flatbuffers.Offset, handbookStageTimeOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_HandbookInfoTable.startclz_Torappu_HandbookInfoTable(builder);
  clz_Torappu_HandbookInfoTable.addHandbookDict(builder, handbookDictOffset);
  clz_Torappu_HandbookInfoTable.addNpcDict(builder, npcDictOffset);
  clz_Torappu_HandbookInfoTable.addTeamMissionList(builder, teamMissionListOffset);
  clz_Torappu_HandbookInfoTable.addHandbookDisplayConditionList(builder, handbookDisplayConditionListOffset);
  clz_Torappu_HandbookInfoTable.addHandbookStageData(builder, handbookStageDataOffset);
  clz_Torappu_HandbookInfoTable.addHandbookStageTime(builder, handbookStageTimeOffset);
  return clz_Torappu_HandbookInfoTable.endclz_Torappu_HandbookInfoTable(builder);
}

unpack(): clz_Torappu_HandbookInfoTableT {
  return new clz_Torappu_HandbookInfoTableT(
    this.bb!.createObjList<dict__string__clz_Torappu_HandbookInfoData, dict__string__clz_Torappu_HandbookInfoDataT>(this.handbookDict.bind(this), this.handbookDictLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_NPCData, dict__string__clz_Torappu_NPCDataT>(this.npcDict.bind(this), this.npcDictLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_HandbookTeamMission, dict__string__clz_Torappu_HandbookTeamMissionT>(this.teamMissionList.bind(this), this.teamMissionListLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_HandbookDisplayCondition, dict__string__clz_Torappu_HandbookDisplayConditionT>(this.handbookDisplayConditionList.bind(this), this.handbookDisplayConditionListLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_HandbookStoryStageData, dict__string__clz_Torappu_HandbookStoryStageDataT>(this.handbookStageData.bind(this), this.handbookStageDataLength()),
    this.bb!.createObjList<clz_Torappu_HandbookStageTimeData, clz_Torappu_HandbookStageTimeDataT>(this.handbookStageTime.bind(this), this.handbookStageTimeLength())
  );
}


unpackTo(_o: clz_Torappu_HandbookInfoTableT): void {
  _o.handbookDict = this.bb!.createObjList<dict__string__clz_Torappu_HandbookInfoData, dict__string__clz_Torappu_HandbookInfoDataT>(this.handbookDict.bind(this), this.handbookDictLength());
  _o.npcDict = this.bb!.createObjList<dict__string__clz_Torappu_NPCData, dict__string__clz_Torappu_NPCDataT>(this.npcDict.bind(this), this.npcDictLength());
  _o.teamMissionList = this.bb!.createObjList<dict__string__clz_Torappu_HandbookTeamMission, dict__string__clz_Torappu_HandbookTeamMissionT>(this.teamMissionList.bind(this), this.teamMissionListLength());
  _o.handbookDisplayConditionList = this.bb!.createObjList<dict__string__clz_Torappu_HandbookDisplayCondition, dict__string__clz_Torappu_HandbookDisplayConditionT>(this.handbookDisplayConditionList.bind(this), this.handbookDisplayConditionListLength());
  _o.handbookStageData = this.bb!.createObjList<dict__string__clz_Torappu_HandbookStoryStageData, dict__string__clz_Torappu_HandbookStoryStageDataT>(this.handbookStageData.bind(this), this.handbookStageDataLength());
  _o.handbookStageTime = this.bb!.createObjList<clz_Torappu_HandbookStageTimeData, clz_Torappu_HandbookStageTimeDataT>(this.handbookStageTime.bind(this), this.handbookStageTimeLength());
}
}

export class clz_Torappu_HandbookInfoTableT implements flatbuffers.IGeneratedObject {
constructor(
  public handbookDict: (dict__string__clz_Torappu_HandbookInfoDataT)[] = [],
  public npcDict: (dict__string__clz_Torappu_NPCDataT)[] = [],
  public teamMissionList: (dict__string__clz_Torappu_HandbookTeamMissionT)[] = [],
  public handbookDisplayConditionList: (dict__string__clz_Torappu_HandbookDisplayConditionT)[] = [],
  public handbookStageData: (dict__string__clz_Torappu_HandbookStoryStageDataT)[] = [],
  public handbookStageTime: (clz_Torappu_HandbookStageTimeDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const handbookDict = clz_Torappu_HandbookInfoTable.createHandbookDictVector(builder, builder.createObjectOffsetList(this.handbookDict));
  const npcDict = clz_Torappu_HandbookInfoTable.createNpcDictVector(builder, builder.createObjectOffsetList(this.npcDict));
  const teamMissionList = clz_Torappu_HandbookInfoTable.createTeamMissionListVector(builder, builder.createObjectOffsetList(this.teamMissionList));
  const handbookDisplayConditionList = clz_Torappu_HandbookInfoTable.createHandbookDisplayConditionListVector(builder, builder.createObjectOffsetList(this.handbookDisplayConditionList));
  const handbookStageData = clz_Torappu_HandbookInfoTable.createHandbookStageDataVector(builder, builder.createObjectOffsetList(this.handbookStageData));
  const handbookStageTime = clz_Torappu_HandbookInfoTable.createHandbookStageTimeVector(builder, builder.createObjectOffsetList(this.handbookStageTime));

  return clz_Torappu_HandbookInfoTable.createclz_Torappu_HandbookInfoTable(builder,
    handbookDict,
    npcDict,
    teamMissionList,
    handbookDisplayConditionList,
    handbookStageData,
    handbookStageTime
  );
}
}
