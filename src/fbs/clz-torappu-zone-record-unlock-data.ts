// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ZoneRecordUnlockData implements flatbuffers.IUnpackableObject<clz_Torappu_ZoneRecordUnlockDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ZoneRecordUnlockData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ZoneRecordUnlockData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ZoneRecordUnlockData):clz_Torappu_ZoneRecordUnlockData {
  return (obj || new clz_Torappu_ZoneRecordUnlockData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ZoneRecordUnlockData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ZoneRecordUnlockData):clz_Torappu_ZoneRecordUnlockData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ZoneRecordUnlockData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

noteId():string|null
noteId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
noteId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

zoneId():string|null
zoneId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
zoneId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

initialName():string|null
initialName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
initialName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

finalName():string|null
finalName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
finalName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

accordingExposeId():string|null
accordingExposeId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
accordingExposeId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

initialDes():string|null
initialDes(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
initialDes(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

finalDes():string|null
finalDes(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
finalDes(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

remindDes():string|null
remindDes(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
remindDes(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_ZoneRecordUnlockData(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addNoteId(builder:flatbuffers.Builder, noteIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, noteIdOffset, 0);
}

static addZoneId(builder:flatbuffers.Builder, zoneIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, zoneIdOffset, 0);
}

static addInitialName(builder:flatbuffers.Builder, initialNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, initialNameOffset, 0);
}

static addFinalName(builder:flatbuffers.Builder, finalNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, finalNameOffset, 0);
}

static addAccordingExposeId(builder:flatbuffers.Builder, accordingExposeIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, accordingExposeIdOffset, 0);
}

static addInitialDes(builder:flatbuffers.Builder, initialDesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, initialDesOffset, 0);
}

static addFinalDes(builder:flatbuffers.Builder, finalDesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, finalDesOffset, 0);
}

static addRemindDes(builder:flatbuffers.Builder, remindDesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, remindDesOffset, 0);
}

static endclz_Torappu_ZoneRecordUnlockData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ZoneRecordUnlockData(builder:flatbuffers.Builder, noteIdOffset:flatbuffers.Offset, zoneIdOffset:flatbuffers.Offset, initialNameOffset:flatbuffers.Offset, finalNameOffset:flatbuffers.Offset, accordingExposeIdOffset:flatbuffers.Offset, initialDesOffset:flatbuffers.Offset, finalDesOffset:flatbuffers.Offset, remindDesOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ZoneRecordUnlockData.startclz_Torappu_ZoneRecordUnlockData(builder);
  clz_Torappu_ZoneRecordUnlockData.addNoteId(builder, noteIdOffset);
  clz_Torappu_ZoneRecordUnlockData.addZoneId(builder, zoneIdOffset);
  clz_Torappu_ZoneRecordUnlockData.addInitialName(builder, initialNameOffset);
  clz_Torappu_ZoneRecordUnlockData.addFinalName(builder, finalNameOffset);
  clz_Torappu_ZoneRecordUnlockData.addAccordingExposeId(builder, accordingExposeIdOffset);
  clz_Torappu_ZoneRecordUnlockData.addInitialDes(builder, initialDesOffset);
  clz_Torappu_ZoneRecordUnlockData.addFinalDes(builder, finalDesOffset);
  clz_Torappu_ZoneRecordUnlockData.addRemindDes(builder, remindDesOffset);
  return clz_Torappu_ZoneRecordUnlockData.endclz_Torappu_ZoneRecordUnlockData(builder);
}

unpack(): clz_Torappu_ZoneRecordUnlockDataT {
  return new clz_Torappu_ZoneRecordUnlockDataT(
    this.noteId(),
    this.zoneId(),
    this.initialName(),
    this.finalName(),
    this.accordingExposeId(),
    this.initialDes(),
    this.finalDes(),
    this.remindDes()
  );
}


unpackTo(_o: clz_Torappu_ZoneRecordUnlockDataT): void {
  _o.noteId = this.noteId();
  _o.zoneId = this.zoneId();
  _o.initialName = this.initialName();
  _o.finalName = this.finalName();
  _o.accordingExposeId = this.accordingExposeId();
  _o.initialDes = this.initialDes();
  _o.finalDes = this.finalDes();
  _o.remindDes = this.remindDes();
}
}

export class clz_Torappu_ZoneRecordUnlockDataT implements flatbuffers.IGeneratedObject {
constructor(
  public noteId: string|Uint8Array|null = null,
  public zoneId: string|Uint8Array|null = null,
  public initialName: string|Uint8Array|null = null,
  public finalName: string|Uint8Array|null = null,
  public accordingExposeId: string|Uint8Array|null = null,
  public initialDes: string|Uint8Array|null = null,
  public finalDes: string|Uint8Array|null = null,
  public remindDes: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const noteId = (this.noteId !== null ? builder.createString(this.noteId!) : 0);
  const zoneId = (this.zoneId !== null ? builder.createString(this.zoneId!) : 0);
  const initialName = (this.initialName !== null ? builder.createString(this.initialName!) : 0);
  const finalName = (this.finalName !== null ? builder.createString(this.finalName!) : 0);
  const accordingExposeId = (this.accordingExposeId !== null ? builder.createString(this.accordingExposeId!) : 0);
  const initialDes = (this.initialDes !== null ? builder.createString(this.initialDes!) : 0);
  const finalDes = (this.finalDes !== null ? builder.createString(this.finalDes!) : 0);
  const remindDes = (this.remindDes !== null ? builder.createString(this.remindDes!) : 0);

  return clz_Torappu_ZoneRecordUnlockData.createclz_Torappu_ZoneRecordUnlockData(builder,
    noteId,
    zoneId,
    initialName,
    finalName,
    accordingExposeId,
    initialDes,
    finalDes,
    remindDes
  );
}
}
