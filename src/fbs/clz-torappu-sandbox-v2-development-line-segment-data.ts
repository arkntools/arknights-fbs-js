// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_SandboxV2DevelopmentLineStyle } from './enum--torappu-sandbox-v2-development-line-style.js';


export class clz_Torappu_SandboxV2DevelopmentLineSegmentData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxV2DevelopmentLineSegmentDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxV2DevelopmentLineSegmentData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxV2DevelopmentLineSegmentData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2DevelopmentLineSegmentData):clz_Torappu_SandboxV2DevelopmentLineSegmentData {
  return (obj || new clz_Torappu_SandboxV2DevelopmentLineSegmentData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxV2DevelopmentLineSegmentData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2DevelopmentLineSegmentData):clz_Torappu_SandboxV2DevelopmentLineSegmentData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxV2DevelopmentLineSegmentData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

fromNodeId():string|null
fromNodeId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
fromNodeId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

passingNodeIds(index: number):string
passingNodeIds(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
passingNodeIds(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

passingNodeIdsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

fromAxisPosX():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

fromAxisPosY():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

toAxisPosX():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

toAxisPosY():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

lineStyle():enum__Torappu_SandboxV2DevelopmentLineStyle {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_SandboxV2DevelopmentLineStyle.EMPTY;
}

unlockBasementLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SandboxV2DevelopmentLineSegmentData(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addFromNodeId(builder:flatbuffers.Builder, fromNodeIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, fromNodeIdOffset, 0);
}

static addPassingNodeIds(builder:flatbuffers.Builder, passingNodeIdsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, passingNodeIdsOffset, 0);
}

static createPassingNodeIdsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPassingNodeIdsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addFromAxisPosX(builder:flatbuffers.Builder, fromAxisPosX:number) {
  builder.addFieldInt32(2, fromAxisPosX, 0);
}

static addFromAxisPosY(builder:flatbuffers.Builder, fromAxisPosY:number) {
  builder.addFieldInt32(3, fromAxisPosY, 0);
}

static addToAxisPosX(builder:flatbuffers.Builder, toAxisPosX:number) {
  builder.addFieldInt32(4, toAxisPosX, 0);
}

static addToAxisPosY(builder:flatbuffers.Builder, toAxisPosY:number) {
  builder.addFieldInt32(5, toAxisPosY, 0);
}

static addLineStyle(builder:flatbuffers.Builder, lineStyle:enum__Torappu_SandboxV2DevelopmentLineStyle) {
  builder.addFieldInt32(6, lineStyle, enum__Torappu_SandboxV2DevelopmentLineStyle.EMPTY);
}

static addUnlockBasementLevel(builder:flatbuffers.Builder, unlockBasementLevel:number) {
  builder.addFieldInt32(7, unlockBasementLevel, 0);
}

static endclz_Torappu_SandboxV2DevelopmentLineSegmentData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxV2DevelopmentLineSegmentData(builder:flatbuffers.Builder, fromNodeIdOffset:flatbuffers.Offset, passingNodeIdsOffset:flatbuffers.Offset, fromAxisPosX:number, fromAxisPosY:number, toAxisPosX:number, toAxisPosY:number, lineStyle:enum__Torappu_SandboxV2DevelopmentLineStyle, unlockBasementLevel:number):flatbuffers.Offset {
  clz_Torappu_SandboxV2DevelopmentLineSegmentData.startclz_Torappu_SandboxV2DevelopmentLineSegmentData(builder);
  clz_Torappu_SandboxV2DevelopmentLineSegmentData.addFromNodeId(builder, fromNodeIdOffset);
  clz_Torappu_SandboxV2DevelopmentLineSegmentData.addPassingNodeIds(builder, passingNodeIdsOffset);
  clz_Torappu_SandboxV2DevelopmentLineSegmentData.addFromAxisPosX(builder, fromAxisPosX);
  clz_Torappu_SandboxV2DevelopmentLineSegmentData.addFromAxisPosY(builder, fromAxisPosY);
  clz_Torappu_SandboxV2DevelopmentLineSegmentData.addToAxisPosX(builder, toAxisPosX);
  clz_Torappu_SandboxV2DevelopmentLineSegmentData.addToAxisPosY(builder, toAxisPosY);
  clz_Torappu_SandboxV2DevelopmentLineSegmentData.addLineStyle(builder, lineStyle);
  clz_Torappu_SandboxV2DevelopmentLineSegmentData.addUnlockBasementLevel(builder, unlockBasementLevel);
  return clz_Torappu_SandboxV2DevelopmentLineSegmentData.endclz_Torappu_SandboxV2DevelopmentLineSegmentData(builder);
}

unpack(): clz_Torappu_SandboxV2DevelopmentLineSegmentDataT {
  return new clz_Torappu_SandboxV2DevelopmentLineSegmentDataT(
    this.fromNodeId(),
    this.bb!.createScalarList<string>(this.passingNodeIds.bind(this), this.passingNodeIdsLength()),
    this.fromAxisPosX(),
    this.fromAxisPosY(),
    this.toAxisPosX(),
    this.toAxisPosY(),
    this.lineStyle(),
    this.unlockBasementLevel()
  );
}


unpackTo(_o: clz_Torappu_SandboxV2DevelopmentLineSegmentDataT): void {
  _o.fromNodeId = this.fromNodeId();
  _o.passingNodeIds = this.bb!.createScalarList<string>(this.passingNodeIds.bind(this), this.passingNodeIdsLength());
  _o.fromAxisPosX = this.fromAxisPosX();
  _o.fromAxisPosY = this.fromAxisPosY();
  _o.toAxisPosX = this.toAxisPosX();
  _o.toAxisPosY = this.toAxisPosY();
  _o.lineStyle = this.lineStyle();
  _o.unlockBasementLevel = this.unlockBasementLevel();
}
}

export class clz_Torappu_SandboxV2DevelopmentLineSegmentDataT implements flatbuffers.IGeneratedObject {
constructor(
  public fromNodeId: string|Uint8Array|null = null,
  public passingNodeIds: (string)[] = [],
  public fromAxisPosX: number = 0,
  public fromAxisPosY: number = 0,
  public toAxisPosX: number = 0,
  public toAxisPosY: number = 0,
  public lineStyle: enum__Torappu_SandboxV2DevelopmentLineStyle = enum__Torappu_SandboxV2DevelopmentLineStyle.EMPTY,
  public unlockBasementLevel: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const fromNodeId = (this.fromNodeId !== null ? builder.createString(this.fromNodeId!) : 0);
  const passingNodeIds = clz_Torappu_SandboxV2DevelopmentLineSegmentData.createPassingNodeIdsVector(builder, builder.createObjectOffsetList(this.passingNodeIds));

  return clz_Torappu_SandboxV2DevelopmentLineSegmentData.createclz_Torappu_SandboxV2DevelopmentLineSegmentData(builder,
    fromNodeId,
    passingNodeIds,
    this.fromAxisPosX,
    this.fromAxisPosY,
    this.toAxisPosX,
    this.toAxisPosY,
    this.lineStyle,
    this.unlockBasementLevel
  );
}
}
