// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_RoguelikeGameItemType } from './enum--torappu-roguelike-game-item-type.js';


export class clz_Torappu_RoguelikeAlchemyFormulationData implements flatbuffers.IUnpackableObject<clz_Torappu_RoguelikeAlchemyFormulationDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RoguelikeAlchemyFormulationData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RoguelikeAlchemyFormulationData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeAlchemyFormulationData):clz_Torappu_RoguelikeAlchemyFormulationData {
  return (obj || new clz_Torappu_RoguelikeAlchemyFormulationData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RoguelikeAlchemyFormulationData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeAlchemyFormulationData):clz_Torappu_RoguelikeAlchemyFormulationData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RoguelikeAlchemyFormulationData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

fragmentIds(index: number):string
fragmentIds(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
fragmentIds(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

fragmentIdsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

rewardId():string|null
rewardId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
rewardId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

rewardCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

rewardItemType():enum__Torappu_RoguelikeGameItemType {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_RoguelikeGameItemType.NONE;
}

static startclz_Torappu_RoguelikeAlchemyFormulationData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addFragmentIds(builder:flatbuffers.Builder, fragmentIdsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, fragmentIdsOffset, 0);
}

static createFragmentIdsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startFragmentIdsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRewardId(builder:flatbuffers.Builder, rewardIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, rewardIdOffset, 0);
}

static addRewardCount(builder:flatbuffers.Builder, rewardCount:number) {
  builder.addFieldInt32(2, rewardCount, 0);
}

static addRewardItemType(builder:flatbuffers.Builder, rewardItemType:enum__Torappu_RoguelikeGameItemType) {
  builder.addFieldInt32(3, rewardItemType, enum__Torappu_RoguelikeGameItemType.NONE);
}

static endclz_Torappu_RoguelikeAlchemyFormulationData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_RoguelikeAlchemyFormulationData(builder:flatbuffers.Builder, fragmentIdsOffset:flatbuffers.Offset, rewardIdOffset:flatbuffers.Offset, rewardCount:number, rewardItemType:enum__Torappu_RoguelikeGameItemType):flatbuffers.Offset {
  clz_Torappu_RoguelikeAlchemyFormulationData.startclz_Torappu_RoguelikeAlchemyFormulationData(builder);
  clz_Torappu_RoguelikeAlchemyFormulationData.addFragmentIds(builder, fragmentIdsOffset);
  clz_Torappu_RoguelikeAlchemyFormulationData.addRewardId(builder, rewardIdOffset);
  clz_Torappu_RoguelikeAlchemyFormulationData.addRewardCount(builder, rewardCount);
  clz_Torappu_RoguelikeAlchemyFormulationData.addRewardItemType(builder, rewardItemType);
  return clz_Torappu_RoguelikeAlchemyFormulationData.endclz_Torappu_RoguelikeAlchemyFormulationData(builder);
}

unpack(): clz_Torappu_RoguelikeAlchemyFormulationDataT {
  return new clz_Torappu_RoguelikeAlchemyFormulationDataT(
    this.bb!.createScalarList<string>(this.fragmentIds.bind(this), this.fragmentIdsLength()),
    this.rewardId(),
    this.rewardCount(),
    this.rewardItemType()
  );
}


unpackTo(_o: clz_Torappu_RoguelikeAlchemyFormulationDataT): void {
  _o.fragmentIds = this.bb!.createScalarList<string>(this.fragmentIds.bind(this), this.fragmentIdsLength());
  _o.rewardId = this.rewardId();
  _o.rewardCount = this.rewardCount();
  _o.rewardItemType = this.rewardItemType();
}
}

export class clz_Torappu_RoguelikeAlchemyFormulationDataT implements flatbuffers.IGeneratedObject {
constructor(
  public fragmentIds: (string)[] = [],
  public rewardId: string|Uint8Array|null = null,
  public rewardCount: number = 0,
  public rewardItemType: enum__Torappu_RoguelikeGameItemType = enum__Torappu_RoguelikeGameItemType.NONE
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const fragmentIds = clz_Torappu_RoguelikeAlchemyFormulationData.createFragmentIdsVector(builder, builder.createObjectOffsetList(this.fragmentIds));
  const rewardId = (this.rewardId !== null ? builder.createString(this.rewardId!) : 0);

  return clz_Torappu_RoguelikeAlchemyFormulationData.createclz_Torappu_RoguelikeAlchemyFormulationData(builder,
    fragmentIds,
    rewardId,
    this.rewardCount,
    this.rewardItemType
  );
}
}
