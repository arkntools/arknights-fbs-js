// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_DailyMissionGroupInfo_periodInfo implements flatbuffers.IUnpackableObject<clz_Torappu_DailyMissionGroupInfo_periodInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_DailyMissionGroupInfo_periodInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_DailyMissionGroupInfo_periodInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_DailyMissionGroupInfo_periodInfo):clz_Torappu_DailyMissionGroupInfo_periodInfo {
  return (obj || new clz_Torappu_DailyMissionGroupInfo_periodInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_DailyMissionGroupInfo_periodInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_DailyMissionGroupInfo_periodInfo):clz_Torappu_DailyMissionGroupInfo_periodInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_DailyMissionGroupInfo_periodInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

missionGroupId():string|null
missionGroupId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
missionGroupId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

rewardGroupId():string|null
rewardGroupId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
rewardGroupId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

period(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

periodLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

periodArray():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

static startclz_Torappu_DailyMissionGroupInfo_periodInfo(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addMissionGroupId(builder:flatbuffers.Builder, missionGroupIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, missionGroupIdOffset, 0);
}

static addRewardGroupId(builder:flatbuffers.Builder, rewardGroupIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, rewardGroupIdOffset, 0);
}

static addPeriod(builder:flatbuffers.Builder, periodOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, periodOffset, 0);
}

static createPeriodVector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static createPeriodVector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static createPeriodVector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static startPeriodVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_DailyMissionGroupInfo_periodInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_DailyMissionGroupInfo_periodInfo(builder:flatbuffers.Builder, missionGroupIdOffset:flatbuffers.Offset, rewardGroupIdOffset:flatbuffers.Offset, periodOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_DailyMissionGroupInfo_periodInfo.startclz_Torappu_DailyMissionGroupInfo_periodInfo(builder);
  clz_Torappu_DailyMissionGroupInfo_periodInfo.addMissionGroupId(builder, missionGroupIdOffset);
  clz_Torappu_DailyMissionGroupInfo_periodInfo.addRewardGroupId(builder, rewardGroupIdOffset);
  clz_Torappu_DailyMissionGroupInfo_periodInfo.addPeriod(builder, periodOffset);
  return clz_Torappu_DailyMissionGroupInfo_periodInfo.endclz_Torappu_DailyMissionGroupInfo_periodInfo(builder);
}

unpack(): clz_Torappu_DailyMissionGroupInfo_periodInfoT {
  return new clz_Torappu_DailyMissionGroupInfo_periodInfoT(
    this.missionGroupId(),
    this.rewardGroupId(),
    this.bb!.createScalarList<number>(this.period.bind(this), this.periodLength())
  );
}


unpackTo(_o: clz_Torappu_DailyMissionGroupInfo_periodInfoT): void {
  _o.missionGroupId = this.missionGroupId();
  _o.rewardGroupId = this.rewardGroupId();
  _o.period = this.bb!.createScalarList<number>(this.period.bind(this), this.periodLength());
}
}

export class clz_Torappu_DailyMissionGroupInfo_periodInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public missionGroupId: string|Uint8Array|null = null,
  public rewardGroupId: string|Uint8Array|null = null,
  public period: (number)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const missionGroupId = (this.missionGroupId !== null ? builder.createString(this.missionGroupId!) : 0);
  const rewardGroupId = (this.rewardGroupId !== null ? builder.createString(this.rewardGroupId!) : 0);
  const period = clz_Torappu_DailyMissionGroupInfo_periodInfo.createPeriodVector(builder, this.period);

  return clz_Torappu_DailyMissionGroupInfo_periodInfo.createclz_Torappu_DailyMissionGroupInfo_periodInfo(builder,
    missionGroupId,
    rewardGroupId,
    period
  );
}
}
