// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_NameCardV2TimeLimitInfo, clz_Torappu_NameCardV2TimeLimitInfoT } from './clz-torappu-name-card-v2-time-limit-info.js';
import { enum__Torappu_ItemRarity } from './enum--torappu-item-rarity.js';
import { enum__Torappu_NameCardV2SkinType } from './enum--torappu-name-card-v2-skin-type.js';


export class clz_Torappu_NameCardV2SkinData implements flatbuffers.IUnpackableObject<clz_Torappu_NameCardV2SkinDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_NameCardV2SkinData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_NameCardV2SkinData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_NameCardV2SkinData):clz_Torappu_NameCardV2SkinData {
  return (obj || new clz_Torappu_NameCardV2SkinData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_NameCardV2SkinData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_NameCardV2SkinData):clz_Torappu_NameCardV2SkinData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_NameCardV2SkinData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

type():enum__Torappu_NameCardV2SkinType {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_NameCardV2SkinType.NONE;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

isSpTheme():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

defaultShowDetail():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

themeName():string|null
themeName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
themeName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

themeEnName():string|null
themeEnName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
themeEnName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

skinStartTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

skinDesc():string|null
skinDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
skinDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

usageDesc():string|null
usageDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
usageDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

skinApproach():string|null
skinApproach(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
skinApproach(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

unlockConditionCnt():number {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

unlockDescList(index: number):string
unlockDescList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
unlockDescList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

unlockDescListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

fixedModuleList(index: number):string
fixedModuleList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
fixedModuleList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

fixedModuleListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

rarity():enum__Torappu_ItemRarity {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_ItemRarity.TIER_1;
}

skinTmplCnt():number {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

canChangeTmpl():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 38);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

isTimeLimit():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

timeLimitInfoList(index: number, obj?:clz_Torappu_NameCardV2TimeLimitInfo):clz_Torappu_NameCardV2TimeLimitInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? (obj || new clz_Torappu_NameCardV2TimeLimitInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

timeLimitInfoListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_NameCardV2SkinData(builder:flatbuffers.Builder) {
  builder.startObject(20);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nameOffset, 0);
}

static addType(builder:flatbuffers.Builder, type:enum__Torappu_NameCardV2SkinType) {
  builder.addFieldInt32(2, type, enum__Torappu_NameCardV2SkinType.NONE);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(3, sortId, 0);
}

static addIsSpTheme(builder:flatbuffers.Builder, isSpTheme:boolean) {
  builder.addFieldInt8(4, +isSpTheme, +false);
}

static addDefaultShowDetail(builder:flatbuffers.Builder, defaultShowDetail:boolean) {
  builder.addFieldInt8(5, +defaultShowDetail, +false);
}

static addThemeName(builder:flatbuffers.Builder, themeNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, themeNameOffset, 0);
}

static addThemeEnName(builder:flatbuffers.Builder, themeEnNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, themeEnNameOffset, 0);
}

static addSkinStartTime(builder:flatbuffers.Builder, skinStartTime:bigint) {
  builder.addFieldInt64(8, skinStartTime, BigInt('0'));
}

static addSkinDesc(builder:flatbuffers.Builder, skinDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, skinDescOffset, 0);
}

static addUsageDesc(builder:flatbuffers.Builder, usageDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, usageDescOffset, 0);
}

static addSkinApproach(builder:flatbuffers.Builder, skinApproachOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, skinApproachOffset, 0);
}

static addUnlockConditionCnt(builder:flatbuffers.Builder, unlockConditionCnt:number) {
  builder.addFieldInt32(12, unlockConditionCnt, 0);
}

static addUnlockDescList(builder:flatbuffers.Builder, unlockDescListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, unlockDescListOffset, 0);
}

static createUnlockDescListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startUnlockDescListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addFixedModuleList(builder:flatbuffers.Builder, fixedModuleListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, fixedModuleListOffset, 0);
}

static createFixedModuleListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startFixedModuleListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRarity(builder:flatbuffers.Builder, rarity:enum__Torappu_ItemRarity) {
  builder.addFieldInt32(15, rarity, enum__Torappu_ItemRarity.TIER_1);
}

static addSkinTmplCnt(builder:flatbuffers.Builder, skinTmplCnt:number) {
  builder.addFieldInt32(16, skinTmplCnt, 0);
}

static addCanChangeTmpl(builder:flatbuffers.Builder, canChangeTmpl:boolean) {
  builder.addFieldInt8(17, +canChangeTmpl, +false);
}

static addIsTimeLimit(builder:flatbuffers.Builder, isTimeLimit:boolean) {
  builder.addFieldInt8(18, +isTimeLimit, +false);
}

static addTimeLimitInfoList(builder:flatbuffers.Builder, timeLimitInfoListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(19, timeLimitInfoListOffset, 0);
}

static createTimeLimitInfoListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTimeLimitInfoListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_NameCardV2SkinData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_NameCardV2SkinData(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset, nameOffset:flatbuffers.Offset, type:enum__Torappu_NameCardV2SkinType, sortId:number, isSpTheme:boolean, defaultShowDetail:boolean, themeNameOffset:flatbuffers.Offset, themeEnNameOffset:flatbuffers.Offset, skinStartTime:bigint, skinDescOffset:flatbuffers.Offset, usageDescOffset:flatbuffers.Offset, skinApproachOffset:flatbuffers.Offset, unlockConditionCnt:number, unlockDescListOffset:flatbuffers.Offset, fixedModuleListOffset:flatbuffers.Offset, rarity:enum__Torappu_ItemRarity, skinTmplCnt:number, canChangeTmpl:boolean, isTimeLimit:boolean, timeLimitInfoListOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_NameCardV2SkinData.startclz_Torappu_NameCardV2SkinData(builder);
  clz_Torappu_NameCardV2SkinData.addId(builder, idOffset);
  clz_Torappu_NameCardV2SkinData.addName(builder, nameOffset);
  clz_Torappu_NameCardV2SkinData.addType(builder, type);
  clz_Torappu_NameCardV2SkinData.addSortId(builder, sortId);
  clz_Torappu_NameCardV2SkinData.addIsSpTheme(builder, isSpTheme);
  clz_Torappu_NameCardV2SkinData.addDefaultShowDetail(builder, defaultShowDetail);
  clz_Torappu_NameCardV2SkinData.addThemeName(builder, themeNameOffset);
  clz_Torappu_NameCardV2SkinData.addThemeEnName(builder, themeEnNameOffset);
  clz_Torappu_NameCardV2SkinData.addSkinStartTime(builder, skinStartTime);
  clz_Torappu_NameCardV2SkinData.addSkinDesc(builder, skinDescOffset);
  clz_Torappu_NameCardV2SkinData.addUsageDesc(builder, usageDescOffset);
  clz_Torappu_NameCardV2SkinData.addSkinApproach(builder, skinApproachOffset);
  clz_Torappu_NameCardV2SkinData.addUnlockConditionCnt(builder, unlockConditionCnt);
  clz_Torappu_NameCardV2SkinData.addUnlockDescList(builder, unlockDescListOffset);
  clz_Torappu_NameCardV2SkinData.addFixedModuleList(builder, fixedModuleListOffset);
  clz_Torappu_NameCardV2SkinData.addRarity(builder, rarity);
  clz_Torappu_NameCardV2SkinData.addSkinTmplCnt(builder, skinTmplCnt);
  clz_Torappu_NameCardV2SkinData.addCanChangeTmpl(builder, canChangeTmpl);
  clz_Torappu_NameCardV2SkinData.addIsTimeLimit(builder, isTimeLimit);
  clz_Torappu_NameCardV2SkinData.addTimeLimitInfoList(builder, timeLimitInfoListOffset);
  return clz_Torappu_NameCardV2SkinData.endclz_Torappu_NameCardV2SkinData(builder);
}

unpack(): clz_Torappu_NameCardV2SkinDataT {
  return new clz_Torappu_NameCardV2SkinDataT(
    this.id(),
    this.name(),
    this.type(),
    this.sortId(),
    this.isSpTheme(),
    this.defaultShowDetail(),
    this.themeName(),
    this.themeEnName(),
    this.skinStartTime(),
    this.skinDesc(),
    this.usageDesc(),
    this.skinApproach(),
    this.unlockConditionCnt(),
    this.bb!.createScalarList<string>(this.unlockDescList.bind(this), this.unlockDescListLength()),
    this.bb!.createScalarList<string>(this.fixedModuleList.bind(this), this.fixedModuleListLength()),
    this.rarity(),
    this.skinTmplCnt(),
    this.canChangeTmpl(),
    this.isTimeLimit(),
    this.bb!.createObjList<clz_Torappu_NameCardV2TimeLimitInfo, clz_Torappu_NameCardV2TimeLimitInfoT>(this.timeLimitInfoList.bind(this), this.timeLimitInfoListLength())
  );
}


unpackTo(_o: clz_Torappu_NameCardV2SkinDataT): void {
  _o.id = this.id();
  _o.name = this.name();
  _o.type = this.type();
  _o.sortId = this.sortId();
  _o.isSpTheme = this.isSpTheme();
  _o.defaultShowDetail = this.defaultShowDetail();
  _o.themeName = this.themeName();
  _o.themeEnName = this.themeEnName();
  _o.skinStartTime = this.skinStartTime();
  _o.skinDesc = this.skinDesc();
  _o.usageDesc = this.usageDesc();
  _o.skinApproach = this.skinApproach();
  _o.unlockConditionCnt = this.unlockConditionCnt();
  _o.unlockDescList = this.bb!.createScalarList<string>(this.unlockDescList.bind(this), this.unlockDescListLength());
  _o.fixedModuleList = this.bb!.createScalarList<string>(this.fixedModuleList.bind(this), this.fixedModuleListLength());
  _o.rarity = this.rarity();
  _o.skinTmplCnt = this.skinTmplCnt();
  _o.canChangeTmpl = this.canChangeTmpl();
  _o.isTimeLimit = this.isTimeLimit();
  _o.timeLimitInfoList = this.bb!.createObjList<clz_Torappu_NameCardV2TimeLimitInfo, clz_Torappu_NameCardV2TimeLimitInfoT>(this.timeLimitInfoList.bind(this), this.timeLimitInfoListLength());
}
}

export class clz_Torappu_NameCardV2SkinDataT implements flatbuffers.IGeneratedObject {
constructor(
  public id: string|Uint8Array|null = null,
  public name: string|Uint8Array|null = null,
  public type: enum__Torappu_NameCardV2SkinType = enum__Torappu_NameCardV2SkinType.NONE,
  public sortId: number = 0,
  public isSpTheme: boolean = false,
  public defaultShowDetail: boolean = false,
  public themeName: string|Uint8Array|null = null,
  public themeEnName: string|Uint8Array|null = null,
  public skinStartTime: bigint = BigInt('0'),
  public skinDesc: string|Uint8Array|null = null,
  public usageDesc: string|Uint8Array|null = null,
  public skinApproach: string|Uint8Array|null = null,
  public unlockConditionCnt: number = 0,
  public unlockDescList: (string)[] = [],
  public fixedModuleList: (string)[] = [],
  public rarity: enum__Torappu_ItemRarity = enum__Torappu_ItemRarity.TIER_1,
  public skinTmplCnt: number = 0,
  public canChangeTmpl: boolean = false,
  public isTimeLimit: boolean = false,
  public timeLimitInfoList: (clz_Torappu_NameCardV2TimeLimitInfoT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const id = (this.id !== null ? builder.createString(this.id!) : 0);
  const name = (this.name !== null ? builder.createString(this.name!) : 0);
  const themeName = (this.themeName !== null ? builder.createString(this.themeName!) : 0);
  const themeEnName = (this.themeEnName !== null ? builder.createString(this.themeEnName!) : 0);
  const skinDesc = (this.skinDesc !== null ? builder.createString(this.skinDesc!) : 0);
  const usageDesc = (this.usageDesc !== null ? builder.createString(this.usageDesc!) : 0);
  const skinApproach = (this.skinApproach !== null ? builder.createString(this.skinApproach!) : 0);
  const unlockDescList = clz_Torappu_NameCardV2SkinData.createUnlockDescListVector(builder, builder.createObjectOffsetList(this.unlockDescList));
  const fixedModuleList = clz_Torappu_NameCardV2SkinData.createFixedModuleListVector(builder, builder.createObjectOffsetList(this.fixedModuleList));
  const timeLimitInfoList = clz_Torappu_NameCardV2SkinData.createTimeLimitInfoListVector(builder, builder.createObjectOffsetList(this.timeLimitInfoList));

  return clz_Torappu_NameCardV2SkinData.createclz_Torappu_NameCardV2SkinData(builder,
    id,
    name,
    this.type,
    this.sortId,
    this.isSpTheme,
    this.defaultShowDetail,
    themeName,
    themeEnName,
    this.skinStartTime,
    skinDesc,
    usageDesc,
    skinApproach,
    this.unlockConditionCnt,
    unlockDescList,
    fixedModuleList,
    this.rarity,
    this.skinTmplCnt,
    this.canChangeTmpl,
    this.isTimeLimit,
    timeLimitInfoList
  );
}
}
