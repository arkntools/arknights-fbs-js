// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_BuildingData_RoomType } from './enum--torappu-building-data-room-type.js';


export class clz_Torappu_BuildingData_RoomUnlockCond_CondItem implements flatbuffers.IUnpackableObject<clz_Torappu_BuildingData_RoomUnlockCond_CondItemT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_BuildingData_RoomUnlockCond_CondItem {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_BuildingData_RoomUnlockCond_CondItem(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_RoomUnlockCond_CondItem):clz_Torappu_BuildingData_RoomUnlockCond_CondItem {
  return (obj || new clz_Torappu_BuildingData_RoomUnlockCond_CondItem()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_BuildingData_RoomUnlockCond_CondItem(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_RoomUnlockCond_CondItem):clz_Torappu_BuildingData_RoomUnlockCond_CondItem {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_BuildingData_RoomUnlockCond_CondItem()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

type():enum__Torappu_BuildingData_RoomType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_BuildingData_RoomType.NONE;
}

level():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

count():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_BuildingData_RoomUnlockCond_CondItem(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addType(builder:flatbuffers.Builder, type:enum__Torappu_BuildingData_RoomType) {
  builder.addFieldInt32(0, type, enum__Torappu_BuildingData_RoomType.NONE);
}

static addLevel(builder:flatbuffers.Builder, level:number) {
  builder.addFieldInt32(1, level, 0);
}

static addCount(builder:flatbuffers.Builder, count:number) {
  builder.addFieldInt32(2, count, 0);
}

static endclz_Torappu_BuildingData_RoomUnlockCond_CondItem(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_BuildingData_RoomUnlockCond_CondItem(builder:flatbuffers.Builder, type:enum__Torappu_BuildingData_RoomType, level:number, count:number):flatbuffers.Offset {
  clz_Torappu_BuildingData_RoomUnlockCond_CondItem.startclz_Torappu_BuildingData_RoomUnlockCond_CondItem(builder);
  clz_Torappu_BuildingData_RoomUnlockCond_CondItem.addType(builder, type);
  clz_Torappu_BuildingData_RoomUnlockCond_CondItem.addLevel(builder, level);
  clz_Torappu_BuildingData_RoomUnlockCond_CondItem.addCount(builder, count);
  return clz_Torappu_BuildingData_RoomUnlockCond_CondItem.endclz_Torappu_BuildingData_RoomUnlockCond_CondItem(builder);
}

unpack(): clz_Torappu_BuildingData_RoomUnlockCond_CondItemT {
  return new clz_Torappu_BuildingData_RoomUnlockCond_CondItemT(
    this.type(),
    this.level(),
    this.count()
  );
}


unpackTo(_o: clz_Torappu_BuildingData_RoomUnlockCond_CondItemT): void {
  _o.type = this.type();
  _o.level = this.level();
  _o.count = this.count();
}
}

export class clz_Torappu_BuildingData_RoomUnlockCond_CondItemT implements flatbuffers.IGeneratedObject {
constructor(
  public type: enum__Torappu_BuildingData_RoomType = enum__Torappu_BuildingData_RoomType.NONE,
  public level: number = 0,
  public count: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return clz_Torappu_BuildingData_RoomUnlockCond_CondItem.createclz_Torappu_BuildingData_RoomUnlockCond_CondItem(builder,
    this.type,
    this.level,
    this.count
  );
}
}
