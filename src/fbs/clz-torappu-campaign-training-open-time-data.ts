// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_CampaignTrainingOpenTimeData implements flatbuffers.IUnpackableObject<clz_Torappu_CampaignTrainingOpenTimeDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_CampaignTrainingOpenTimeData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_CampaignTrainingOpenTimeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CampaignTrainingOpenTimeData):clz_Torappu_CampaignTrainingOpenTimeData {
  return (obj || new clz_Torappu_CampaignTrainingOpenTimeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_CampaignTrainingOpenTimeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CampaignTrainingOpenTimeData):clz_Torappu_CampaignTrainingOpenTimeData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_CampaignTrainingOpenTimeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

groupId():string|null
groupId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
groupId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

stages(index: number):string
stages(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
stages(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

stagesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

startTs():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

endTs():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startclz_Torappu_CampaignTrainingOpenTimeData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addGroupId(builder:flatbuffers.Builder, groupIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, groupIdOffset, 0);
}

static addStages(builder:flatbuffers.Builder, stagesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, stagesOffset, 0);
}

static createStagesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startStagesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addStartTs(builder:flatbuffers.Builder, startTs:bigint) {
  builder.addFieldInt64(2, startTs, BigInt('0'));
}

static addEndTs(builder:flatbuffers.Builder, endTs:bigint) {
  builder.addFieldInt64(3, endTs, BigInt('0'));
}

static endclz_Torappu_CampaignTrainingOpenTimeData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_CampaignTrainingOpenTimeData(builder:flatbuffers.Builder, groupIdOffset:flatbuffers.Offset, stagesOffset:flatbuffers.Offset, startTs:bigint, endTs:bigint):flatbuffers.Offset {
  clz_Torappu_CampaignTrainingOpenTimeData.startclz_Torappu_CampaignTrainingOpenTimeData(builder);
  clz_Torappu_CampaignTrainingOpenTimeData.addGroupId(builder, groupIdOffset);
  clz_Torappu_CampaignTrainingOpenTimeData.addStages(builder, stagesOffset);
  clz_Torappu_CampaignTrainingOpenTimeData.addStartTs(builder, startTs);
  clz_Torappu_CampaignTrainingOpenTimeData.addEndTs(builder, endTs);
  return clz_Torappu_CampaignTrainingOpenTimeData.endclz_Torappu_CampaignTrainingOpenTimeData(builder);
}

unpack(): clz_Torappu_CampaignTrainingOpenTimeDataT {
  return new clz_Torappu_CampaignTrainingOpenTimeDataT(
    this.groupId(),
    this.bb!.createScalarList<string>(this.stages.bind(this), this.stagesLength()),
    this.startTs(),
    this.endTs()
  );
}


unpackTo(_o: clz_Torappu_CampaignTrainingOpenTimeDataT): void {
  _o.groupId = this.groupId();
  _o.stages = this.bb!.createScalarList<string>(this.stages.bind(this), this.stagesLength());
  _o.startTs = this.startTs();
  _o.endTs = this.endTs();
}
}

export class clz_Torappu_CampaignTrainingOpenTimeDataT implements flatbuffers.IGeneratedObject {
constructor(
  public groupId: string|Uint8Array|null = null,
  public stages: (string)[] = [],
  public startTs: bigint = BigInt('0'),
  public endTs: bigint = BigInt('0')
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const groupId = (this.groupId !== null ? builder.createString(this.groupId!) : 0);
  const stages = clz_Torappu_CampaignTrainingOpenTimeData.createStagesVector(builder, builder.createObjectOffsetList(this.stages));

  return clz_Torappu_CampaignTrainingOpenTimeData.createclz_Torappu_CampaignTrainingOpenTimeData(builder,
    groupId,
    stages,
    this.startTs,
    this.endTs
  );
}
}
