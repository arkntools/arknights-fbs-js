// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_MissionDisplayRewards, clz_Torappu_MissionDisplayRewardsT } from './clz-torappu-mission-display-rewards.js';


export class clz_Torappu_ReturnDailyTaskData implements flatbuffers.IUnpackableObject<clz_Torappu_ReturnDailyTaskDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ReturnDailyTaskData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ReturnDailyTaskData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ReturnDailyTaskData):clz_Torappu_ReturnDailyTaskData {
  return (obj || new clz_Torappu_ReturnDailyTaskData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ReturnDailyTaskData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ReturnDailyTaskData):clz_Torappu_ReturnDailyTaskData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ReturnDailyTaskData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

groupId():string|null
groupId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
groupId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

groupSortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

taskSortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

template():string|null
template(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
template(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

param(index: number):string
param(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
param(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

paramLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

desc():string|null
desc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
desc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

rewards(index: number, obj?:clz_Torappu_MissionDisplayRewards):clz_Torappu_MissionDisplayRewards|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new clz_Torappu_MissionDisplayRewards()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

rewardsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

playPoint():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_ReturnDailyTaskData(builder:flatbuffers.Builder) {
  builder.startObject(9);
}

static addGroupId(builder:flatbuffers.Builder, groupIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, groupIdOffset, 0);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, idOffset, 0);
}

static addGroupSortId(builder:flatbuffers.Builder, groupSortId:number) {
  builder.addFieldInt32(2, groupSortId, 0);
}

static addTaskSortId(builder:flatbuffers.Builder, taskSortId:number) {
  builder.addFieldInt32(3, taskSortId, 0);
}

static addTemplate(builder:flatbuffers.Builder, templateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, templateOffset, 0);
}

static addParam(builder:flatbuffers.Builder, paramOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, paramOffset, 0);
}

static createParamVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startParamVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addDesc(builder:flatbuffers.Builder, descOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, descOffset, 0);
}

static addRewards(builder:flatbuffers.Builder, rewardsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, rewardsOffset, 0);
}

static createRewardsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRewardsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addPlayPoint(builder:flatbuffers.Builder, playPoint:number) {
  builder.addFieldInt32(8, playPoint, 0);
}

static endclz_Torappu_ReturnDailyTaskData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ReturnDailyTaskData(builder:flatbuffers.Builder, groupIdOffset:flatbuffers.Offset, idOffset:flatbuffers.Offset, groupSortId:number, taskSortId:number, templateOffset:flatbuffers.Offset, paramOffset:flatbuffers.Offset, descOffset:flatbuffers.Offset, rewardsOffset:flatbuffers.Offset, playPoint:number):flatbuffers.Offset {
  clz_Torappu_ReturnDailyTaskData.startclz_Torappu_ReturnDailyTaskData(builder);
  clz_Torappu_ReturnDailyTaskData.addGroupId(builder, groupIdOffset);
  clz_Torappu_ReturnDailyTaskData.addId(builder, idOffset);
  clz_Torappu_ReturnDailyTaskData.addGroupSortId(builder, groupSortId);
  clz_Torappu_ReturnDailyTaskData.addTaskSortId(builder, taskSortId);
  clz_Torappu_ReturnDailyTaskData.addTemplate(builder, templateOffset);
  clz_Torappu_ReturnDailyTaskData.addParam(builder, paramOffset);
  clz_Torappu_ReturnDailyTaskData.addDesc(builder, descOffset);
  clz_Torappu_ReturnDailyTaskData.addRewards(builder, rewardsOffset);
  clz_Torappu_ReturnDailyTaskData.addPlayPoint(builder, playPoint);
  return clz_Torappu_ReturnDailyTaskData.endclz_Torappu_ReturnDailyTaskData(builder);
}

unpack(): clz_Torappu_ReturnDailyTaskDataT {
  return new clz_Torappu_ReturnDailyTaskDataT(
    this.groupId(),
    this.id(),
    this.groupSortId(),
    this.taskSortId(),
    this.template(),
    this.bb!.createScalarList<string>(this.param.bind(this), this.paramLength()),
    this.desc(),
    this.bb!.createObjList<clz_Torappu_MissionDisplayRewards, clz_Torappu_MissionDisplayRewardsT>(this.rewards.bind(this), this.rewardsLength()),
    this.playPoint()
  );
}


unpackTo(_o: clz_Torappu_ReturnDailyTaskDataT): void {
  _o.groupId = this.groupId();
  _o.id = this.id();
  _o.groupSortId = this.groupSortId();
  _o.taskSortId = this.taskSortId();
  _o.template = this.template();
  _o.param = this.bb!.createScalarList<string>(this.param.bind(this), this.paramLength());
  _o.desc = this.desc();
  _o.rewards = this.bb!.createObjList<clz_Torappu_MissionDisplayRewards, clz_Torappu_MissionDisplayRewardsT>(this.rewards.bind(this), this.rewardsLength());
  _o.playPoint = this.playPoint();
}
}

export class clz_Torappu_ReturnDailyTaskDataT implements flatbuffers.IGeneratedObject {
constructor(
  public groupId: string|Uint8Array|null = null,
  public id: string|Uint8Array|null = null,
  public groupSortId: number = 0,
  public taskSortId: number = 0,
  public template: string|Uint8Array|null = null,
  public param: (string)[] = [],
  public desc: string|Uint8Array|null = null,
  public rewards: (clz_Torappu_MissionDisplayRewardsT)[] = [],
  public playPoint: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const groupId = (this.groupId !== null ? builder.createString(this.groupId!) : 0);
  const id = (this.id !== null ? builder.createString(this.id!) : 0);
  const template = (this.template !== null ? builder.createString(this.template!) : 0);
  const param = clz_Torappu_ReturnDailyTaskData.createParamVector(builder, builder.createObjectOffsetList(this.param));
  const desc = (this.desc !== null ? builder.createString(this.desc!) : 0);
  const rewards = clz_Torappu_ReturnDailyTaskData.createRewardsVector(builder, builder.createObjectOffsetList(this.rewards));

  return clz_Torappu_ReturnDailyTaskData.createclz_Torappu_ReturnDailyTaskData(builder,
    groupId,
    id,
    this.groupSortId,
    this.taskSortId,
    template,
    param,
    desc,
    rewards,
    this.playPoint
  );
}
}
