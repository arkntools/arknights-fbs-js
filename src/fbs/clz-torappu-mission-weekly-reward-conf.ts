// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_MissionDisplayRewards, clz_Torappu_MissionDisplayRewardsT } from './clz-torappu-mission-display-rewards.js';
import { enum__Torappu_MissionType } from './enum--torappu-mission-type.js';


export class clz_Torappu_MissionWeeklyRewardConf implements flatbuffers.IUnpackableObject<clz_Torappu_MissionWeeklyRewardConfT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_MissionWeeklyRewardConf {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_MissionWeeklyRewardConf(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_MissionWeeklyRewardConf):clz_Torappu_MissionWeeklyRewardConf {
  return (obj || new clz_Torappu_MissionWeeklyRewardConf()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_MissionWeeklyRewardConf(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_MissionWeeklyRewardConf):clz_Torappu_MissionWeeklyRewardConf {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_MissionWeeklyRewardConf()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

beginTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

endTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

groupId():string|null
groupId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
groupId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

periodicalPointCost():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

type():enum__Torappu_MissionType {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_MissionType.UNKNOWN;
}

sortIndex():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

rewards(index: number, obj?:clz_Torappu_MissionDisplayRewards):clz_Torappu_MissionDisplayRewards|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new clz_Torappu_MissionDisplayRewards()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

rewardsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_MissionWeeklyRewardConf(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addBeginTime(builder:flatbuffers.Builder, beginTime:bigint) {
  builder.addFieldInt64(0, beginTime, BigInt('0'));
}

static addEndTime(builder:flatbuffers.Builder, endTime:bigint) {
  builder.addFieldInt64(1, endTime, BigInt('0'));
}

static addGroupId(builder:flatbuffers.Builder, groupIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, groupIdOffset, 0);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, idOffset, 0);
}

static addPeriodicalPointCost(builder:flatbuffers.Builder, periodicalPointCost:number) {
  builder.addFieldInt32(4, periodicalPointCost, 0);
}

static addType(builder:flatbuffers.Builder, type:enum__Torappu_MissionType) {
  builder.addFieldInt32(5, type, enum__Torappu_MissionType.UNKNOWN);
}

static addSortIndex(builder:flatbuffers.Builder, sortIndex:number) {
  builder.addFieldInt32(6, sortIndex, 0);
}

static addRewards(builder:flatbuffers.Builder, rewardsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, rewardsOffset, 0);
}

static createRewardsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRewardsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_MissionWeeklyRewardConf(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_MissionWeeklyRewardConf(builder:flatbuffers.Builder, beginTime:bigint, endTime:bigint, groupIdOffset:flatbuffers.Offset, idOffset:flatbuffers.Offset, periodicalPointCost:number, type:enum__Torappu_MissionType, sortIndex:number, rewardsOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_MissionWeeklyRewardConf.startclz_Torappu_MissionWeeklyRewardConf(builder);
  clz_Torappu_MissionWeeklyRewardConf.addBeginTime(builder, beginTime);
  clz_Torappu_MissionWeeklyRewardConf.addEndTime(builder, endTime);
  clz_Torappu_MissionWeeklyRewardConf.addGroupId(builder, groupIdOffset);
  clz_Torappu_MissionWeeklyRewardConf.addId(builder, idOffset);
  clz_Torappu_MissionWeeklyRewardConf.addPeriodicalPointCost(builder, periodicalPointCost);
  clz_Torappu_MissionWeeklyRewardConf.addType(builder, type);
  clz_Torappu_MissionWeeklyRewardConf.addSortIndex(builder, sortIndex);
  clz_Torappu_MissionWeeklyRewardConf.addRewards(builder, rewardsOffset);
  return clz_Torappu_MissionWeeklyRewardConf.endclz_Torappu_MissionWeeklyRewardConf(builder);
}

unpack(): clz_Torappu_MissionWeeklyRewardConfT {
  return new clz_Torappu_MissionWeeklyRewardConfT(
    this.beginTime(),
    this.endTime(),
    this.groupId(),
    this.id(),
    this.periodicalPointCost(),
    this.type(),
    this.sortIndex(),
    this.bb!.createObjList<clz_Torappu_MissionDisplayRewards, clz_Torappu_MissionDisplayRewardsT>(this.rewards.bind(this), this.rewardsLength())
  );
}


unpackTo(_o: clz_Torappu_MissionWeeklyRewardConfT): void {
  _o.beginTime = this.beginTime();
  _o.endTime = this.endTime();
  _o.groupId = this.groupId();
  _o.id = this.id();
  _o.periodicalPointCost = this.periodicalPointCost();
  _o.type = this.type();
  _o.sortIndex = this.sortIndex();
  _o.rewards = this.bb!.createObjList<clz_Torappu_MissionDisplayRewards, clz_Torappu_MissionDisplayRewardsT>(this.rewards.bind(this), this.rewardsLength());
}
}

export class clz_Torappu_MissionWeeklyRewardConfT implements flatbuffers.IGeneratedObject {
constructor(
  public beginTime: bigint = BigInt('0'),
  public endTime: bigint = BigInt('0'),
  public groupId: string|Uint8Array|null = null,
  public id: string|Uint8Array|null = null,
  public periodicalPointCost: number = 0,
  public type: enum__Torappu_MissionType = enum__Torappu_MissionType.UNKNOWN,
  public sortIndex: number = 0,
  public rewards: (clz_Torappu_MissionDisplayRewardsT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const groupId = (this.groupId !== null ? builder.createString(this.groupId!) : 0);
  const id = (this.id !== null ? builder.createString(this.id!) : 0);
  const rewards = clz_Torappu_MissionWeeklyRewardConf.createRewardsVector(builder, builder.createObjectOffsetList(this.rewards));

  return clz_Torappu_MissionWeeklyRewardConf.createclz_Torappu_MissionWeeklyRewardConf(builder,
    this.beginTime,
    this.endTime,
    groupId,
    id,
    this.periodicalPointCost,
    this.type,
    this.sortIndex,
    rewards
  );
}
}
