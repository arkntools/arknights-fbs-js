// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_EvolvePhase } from './enum--torappu-evolve-phase.js';


export class clz_Torappu_SandboxV2TutorialRepoCharData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxV2TutorialRepoCharDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxV2TutorialRepoCharData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxV2TutorialRepoCharData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2TutorialRepoCharData):clz_Torappu_SandboxV2TutorialRepoCharData {
  return (obj || new clz_Torappu_SandboxV2TutorialRepoCharData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxV2TutorialRepoCharData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2TutorialRepoCharData):clz_Torappu_SandboxV2TutorialRepoCharData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxV2TutorialRepoCharData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

instId():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

charId():string|null
charId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
charId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

evolvePhase():enum__Torappu_EvolvePhase {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_EvolvePhase.PHASE_0;
}

level():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

favorPoint():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

potentialRank():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

mainSkillLv():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

specSkillList(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

specSkillListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

specSkillListArray():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

static startclz_Torappu_SandboxV2TutorialRepoCharData(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addInstId(builder:flatbuffers.Builder, instId:number) {
  builder.addFieldInt32(0, instId, 0);
}

static addCharId(builder:flatbuffers.Builder, charIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, charIdOffset, 0);
}

static addEvolvePhase(builder:flatbuffers.Builder, evolvePhase:enum__Torappu_EvolvePhase) {
  builder.addFieldInt32(2, evolvePhase, enum__Torappu_EvolvePhase.PHASE_0);
}

static addLevel(builder:flatbuffers.Builder, level:number) {
  builder.addFieldInt32(3, level, 0);
}

static addFavorPoint(builder:flatbuffers.Builder, favorPoint:number) {
  builder.addFieldInt32(4, favorPoint, 0);
}

static addPotentialRank(builder:flatbuffers.Builder, potentialRank:number) {
  builder.addFieldInt32(5, potentialRank, 0);
}

static addMainSkillLv(builder:flatbuffers.Builder, mainSkillLv:number) {
  builder.addFieldInt32(6, mainSkillLv, 0);
}

static addSpecSkillList(builder:flatbuffers.Builder, specSkillListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, specSkillListOffset, 0);
}

static createSpecSkillListVector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static createSpecSkillListVector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static createSpecSkillListVector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static startSpecSkillListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_SandboxV2TutorialRepoCharData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxV2TutorialRepoCharData(builder:flatbuffers.Builder, instId:number, charIdOffset:flatbuffers.Offset, evolvePhase:enum__Torappu_EvolvePhase, level:number, favorPoint:number, potentialRank:number, mainSkillLv:number, specSkillListOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SandboxV2TutorialRepoCharData.startclz_Torappu_SandboxV2TutorialRepoCharData(builder);
  clz_Torappu_SandboxV2TutorialRepoCharData.addInstId(builder, instId);
  clz_Torappu_SandboxV2TutorialRepoCharData.addCharId(builder, charIdOffset);
  clz_Torappu_SandboxV2TutorialRepoCharData.addEvolvePhase(builder, evolvePhase);
  clz_Torappu_SandboxV2TutorialRepoCharData.addLevel(builder, level);
  clz_Torappu_SandboxV2TutorialRepoCharData.addFavorPoint(builder, favorPoint);
  clz_Torappu_SandboxV2TutorialRepoCharData.addPotentialRank(builder, potentialRank);
  clz_Torappu_SandboxV2TutorialRepoCharData.addMainSkillLv(builder, mainSkillLv);
  clz_Torappu_SandboxV2TutorialRepoCharData.addSpecSkillList(builder, specSkillListOffset);
  return clz_Torappu_SandboxV2TutorialRepoCharData.endclz_Torappu_SandboxV2TutorialRepoCharData(builder);
}

unpack(): clz_Torappu_SandboxV2TutorialRepoCharDataT {
  return new clz_Torappu_SandboxV2TutorialRepoCharDataT(
    this.instId(),
    this.charId(),
    this.evolvePhase(),
    this.level(),
    this.favorPoint(),
    this.potentialRank(),
    this.mainSkillLv(),
    this.bb!.createScalarList<number>(this.specSkillList.bind(this), this.specSkillListLength())
  );
}


unpackTo(_o: clz_Torappu_SandboxV2TutorialRepoCharDataT): void {
  _o.instId = this.instId();
  _o.charId = this.charId();
  _o.evolvePhase = this.evolvePhase();
  _o.level = this.level();
  _o.favorPoint = this.favorPoint();
  _o.potentialRank = this.potentialRank();
  _o.mainSkillLv = this.mainSkillLv();
  _o.specSkillList = this.bb!.createScalarList<number>(this.specSkillList.bind(this), this.specSkillListLength());
}
}

export class clz_Torappu_SandboxV2TutorialRepoCharDataT implements flatbuffers.IGeneratedObject {
constructor(
  public instId: number = 0,
  public charId: string|Uint8Array|null = null,
  public evolvePhase: enum__Torappu_EvolvePhase = enum__Torappu_EvolvePhase.PHASE_0,
  public level: number = 0,
  public favorPoint: number = 0,
  public potentialRank: number = 0,
  public mainSkillLv: number = 0,
  public specSkillList: (number)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const charId = (this.charId !== null ? builder.createString(this.charId!) : 0);
  const specSkillList = clz_Torappu_SandboxV2TutorialRepoCharData.createSpecSkillListVector(builder, this.specSkillList);

  return clz_Torappu_SandboxV2TutorialRepoCharData.createclz_Torappu_SandboxV2TutorialRepoCharData(builder,
    this.instId,
    charId,
    this.evolvePhase,
    this.level,
    this.favorPoint,
    this.potentialRank,
    this.mainSkillLv,
    specSkillList
  );
}
}
