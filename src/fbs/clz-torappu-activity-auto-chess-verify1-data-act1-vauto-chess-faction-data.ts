// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData implements flatbuffers.IUnpackableObject<clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData):clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData {
  return (obj || new clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData):clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

factionId():string|null
factionId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
factionId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

factionName():string|null
factionName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
factionName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addFactionId(builder:flatbuffers.Builder, factionIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, factionIdOffset, 0);
}

static addFactionName(builder:flatbuffers.Builder, factionNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, factionNameOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(2, sortId, 0);
}

static endclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData(builder:flatbuffers.Builder, factionIdOffset:flatbuffers.Offset, factionNameOffset:flatbuffers.Offset, sortId:number):flatbuffers.Offset {
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData.startclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData(builder);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData.addFactionId(builder, factionIdOffset);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData.addFactionName(builder, factionNameOffset);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData.addSortId(builder, sortId);
  return clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData.endclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData(builder);
}

unpack(): clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionDataT {
  return new clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionDataT(
    this.factionId(),
    this.factionName(),
    this.sortId()
  );
}


unpackTo(_o: clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionDataT): void {
  _o.factionId = this.factionId();
  _o.factionName = this.factionName();
  _o.sortId = this.sortId();
}
}

export class clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionDataT implements flatbuffers.IGeneratedObject {
constructor(
  public factionId: string|Uint8Array|null = null,
  public factionName: string|Uint8Array|null = null,
  public sortId: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const factionId = (this.factionId !== null ? builder.createString(this.factionId!) : 0);
  const factionName = (this.factionName !== null ? builder.createString(this.factionName!) : 0);

  return clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData.createclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessFactionData(builder,
    factionId,
    factionName,
    this.sortId
  );
}
}
