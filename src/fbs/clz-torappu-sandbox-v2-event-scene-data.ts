// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SandboxV2EventSceneData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxV2EventSceneDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxV2EventSceneData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxV2EventSceneData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2EventSceneData):clz_Torappu_SandboxV2EventSceneData {
  return (obj || new clz_Torappu_SandboxV2EventSceneData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxV2EventSceneData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2EventSceneData):clz_Torappu_SandboxV2EventSceneData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxV2EventSceneData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

eventSceneId():string|null
eventSceneId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
eventSceneId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

title():string|null
title(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
title(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

desc():string|null
desc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
desc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

choiceIds(index: number):string
choiceIds(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
choiceIds(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

choiceIdsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SandboxV2EventSceneData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addEventSceneId(builder:flatbuffers.Builder, eventSceneIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, eventSceneIdOffset, 0);
}

static addTitle(builder:flatbuffers.Builder, titleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, titleOffset, 0);
}

static addDesc(builder:flatbuffers.Builder, descOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, descOffset, 0);
}

static addChoiceIds(builder:flatbuffers.Builder, choiceIdsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, choiceIdsOffset, 0);
}

static createChoiceIdsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startChoiceIdsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_SandboxV2EventSceneData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxV2EventSceneData(builder:flatbuffers.Builder, eventSceneIdOffset:flatbuffers.Offset, titleOffset:flatbuffers.Offset, descOffset:flatbuffers.Offset, choiceIdsOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SandboxV2EventSceneData.startclz_Torappu_SandboxV2EventSceneData(builder);
  clz_Torappu_SandboxV2EventSceneData.addEventSceneId(builder, eventSceneIdOffset);
  clz_Torappu_SandboxV2EventSceneData.addTitle(builder, titleOffset);
  clz_Torappu_SandboxV2EventSceneData.addDesc(builder, descOffset);
  clz_Torappu_SandboxV2EventSceneData.addChoiceIds(builder, choiceIdsOffset);
  return clz_Torappu_SandboxV2EventSceneData.endclz_Torappu_SandboxV2EventSceneData(builder);
}

unpack(): clz_Torappu_SandboxV2EventSceneDataT {
  return new clz_Torappu_SandboxV2EventSceneDataT(
    this.eventSceneId(),
    this.title(),
    this.desc(),
    this.bb!.createScalarList<string>(this.choiceIds.bind(this), this.choiceIdsLength())
  );
}


unpackTo(_o: clz_Torappu_SandboxV2EventSceneDataT): void {
  _o.eventSceneId = this.eventSceneId();
  _o.title = this.title();
  _o.desc = this.desc();
  _o.choiceIds = this.bb!.createScalarList<string>(this.choiceIds.bind(this), this.choiceIdsLength());
}
}

export class clz_Torappu_SandboxV2EventSceneDataT implements flatbuffers.IGeneratedObject {
constructor(
  public eventSceneId: string|Uint8Array|null = null,
  public title: string|Uint8Array|null = null,
  public desc: string|Uint8Array|null = null,
  public choiceIds: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const eventSceneId = (this.eventSceneId !== null ? builder.createString(this.eventSceneId!) : 0);
  const title = (this.title !== null ? builder.createString(this.title!) : 0);
  const desc = (this.desc !== null ? builder.createString(this.desc!) : 0);
  const choiceIds = clz_Torappu_SandboxV2EventSceneData.createChoiceIdsVector(builder, builder.createObjectOffsetList(this.choiceIds));

  return clz_Torappu_SandboxV2EventSceneData.createclz_Torappu_SandboxV2EventSceneData(builder,
    eventSceneId,
    title,
    desc,
    choiceIds
  );
}
}
