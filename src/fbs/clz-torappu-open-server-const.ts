// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_OpenServerConst implements flatbuffers.IUnpackableObject<clz_Torappu_OpenServerConstT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_OpenServerConst {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_OpenServerConst(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_OpenServerConst):clz_Torappu_OpenServerConst {
  return (obj || new clz_Torappu_OpenServerConst()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_OpenServerConst(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_OpenServerConst):clz_Torappu_OpenServerConst {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_OpenServerConst()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

firstDiamondShardMailCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

initApMailEndTs():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

resFullOpenUnlockStageId():string|null
resFullOpenUnlockStageId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
resFullOpenUnlockStageId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

resFullOpenDuration():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

resFullOpenTitle():string|null
resFullOpenTitle(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
resFullOpenTitle(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

resFullOpenDesc():string|null
resFullOpenDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
resFullOpenDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

resFullOpenGuideGroupThreshold():string|null
resFullOpenGuideGroupThreshold(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
resFullOpenGuideGroupThreshold(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

resFullOpenStartTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startclz_Torappu_OpenServerConst(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addFirstDiamondShardMailCount(builder:flatbuffers.Builder, firstDiamondShardMailCount:number) {
  builder.addFieldInt32(0, firstDiamondShardMailCount, 0);
}

static addInitApMailEndTs(builder:flatbuffers.Builder, initApMailEndTs:bigint) {
  builder.addFieldInt64(1, initApMailEndTs, BigInt('0'));
}

static addResFullOpenUnlockStageId(builder:flatbuffers.Builder, resFullOpenUnlockStageIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, resFullOpenUnlockStageIdOffset, 0);
}

static addResFullOpenDuration(builder:flatbuffers.Builder, resFullOpenDuration:number) {
  builder.addFieldInt32(3, resFullOpenDuration, 0);
}

static addResFullOpenTitle(builder:flatbuffers.Builder, resFullOpenTitleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, resFullOpenTitleOffset, 0);
}

static addResFullOpenDesc(builder:flatbuffers.Builder, resFullOpenDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, resFullOpenDescOffset, 0);
}

static addResFullOpenGuideGroupThreshold(builder:flatbuffers.Builder, resFullOpenGuideGroupThresholdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, resFullOpenGuideGroupThresholdOffset, 0);
}

static addResFullOpenStartTime(builder:flatbuffers.Builder, resFullOpenStartTime:bigint) {
  builder.addFieldInt64(7, resFullOpenStartTime, BigInt('0'));
}

static endclz_Torappu_OpenServerConst(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_OpenServerConst(builder:flatbuffers.Builder, firstDiamondShardMailCount:number, initApMailEndTs:bigint, resFullOpenUnlockStageIdOffset:flatbuffers.Offset, resFullOpenDuration:number, resFullOpenTitleOffset:flatbuffers.Offset, resFullOpenDescOffset:flatbuffers.Offset, resFullOpenGuideGroupThresholdOffset:flatbuffers.Offset, resFullOpenStartTime:bigint):flatbuffers.Offset {
  clz_Torappu_OpenServerConst.startclz_Torappu_OpenServerConst(builder);
  clz_Torappu_OpenServerConst.addFirstDiamondShardMailCount(builder, firstDiamondShardMailCount);
  clz_Torappu_OpenServerConst.addInitApMailEndTs(builder, initApMailEndTs);
  clz_Torappu_OpenServerConst.addResFullOpenUnlockStageId(builder, resFullOpenUnlockStageIdOffset);
  clz_Torappu_OpenServerConst.addResFullOpenDuration(builder, resFullOpenDuration);
  clz_Torappu_OpenServerConst.addResFullOpenTitle(builder, resFullOpenTitleOffset);
  clz_Torappu_OpenServerConst.addResFullOpenDesc(builder, resFullOpenDescOffset);
  clz_Torappu_OpenServerConst.addResFullOpenGuideGroupThreshold(builder, resFullOpenGuideGroupThresholdOffset);
  clz_Torappu_OpenServerConst.addResFullOpenStartTime(builder, resFullOpenStartTime);
  return clz_Torappu_OpenServerConst.endclz_Torappu_OpenServerConst(builder);
}

unpack(): clz_Torappu_OpenServerConstT {
  return new clz_Torappu_OpenServerConstT(
    this.firstDiamondShardMailCount(),
    this.initApMailEndTs(),
    this.resFullOpenUnlockStageId(),
    this.resFullOpenDuration(),
    this.resFullOpenTitle(),
    this.resFullOpenDesc(),
    this.resFullOpenGuideGroupThreshold(),
    this.resFullOpenStartTime()
  );
}


unpackTo(_o: clz_Torappu_OpenServerConstT): void {
  _o.firstDiamondShardMailCount = this.firstDiamondShardMailCount();
  _o.initApMailEndTs = this.initApMailEndTs();
  _o.resFullOpenUnlockStageId = this.resFullOpenUnlockStageId();
  _o.resFullOpenDuration = this.resFullOpenDuration();
  _o.resFullOpenTitle = this.resFullOpenTitle();
  _o.resFullOpenDesc = this.resFullOpenDesc();
  _o.resFullOpenGuideGroupThreshold = this.resFullOpenGuideGroupThreshold();
  _o.resFullOpenStartTime = this.resFullOpenStartTime();
}
}

export class clz_Torappu_OpenServerConstT implements flatbuffers.IGeneratedObject {
constructor(
  public firstDiamondShardMailCount: number = 0,
  public initApMailEndTs: bigint = BigInt('0'),
  public resFullOpenUnlockStageId: string|Uint8Array|null = null,
  public resFullOpenDuration: number = 0,
  public resFullOpenTitle: string|Uint8Array|null = null,
  public resFullOpenDesc: string|Uint8Array|null = null,
  public resFullOpenGuideGroupThreshold: string|Uint8Array|null = null,
  public resFullOpenStartTime: bigint = BigInt('0')
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const resFullOpenUnlockStageId = (this.resFullOpenUnlockStageId !== null ? builder.createString(this.resFullOpenUnlockStageId!) : 0);
  const resFullOpenTitle = (this.resFullOpenTitle !== null ? builder.createString(this.resFullOpenTitle!) : 0);
  const resFullOpenDesc = (this.resFullOpenDesc !== null ? builder.createString(this.resFullOpenDesc!) : 0);
  const resFullOpenGuideGroupThreshold = (this.resFullOpenGuideGroupThreshold !== null ? builder.createString(this.resFullOpenGuideGroupThreshold!) : 0);

  return clz_Torappu_OpenServerConst.createclz_Torappu_OpenServerConst(builder,
    this.firstDiamondShardMailCount,
    this.initApMailEndTs,
    resFullOpenUnlockStageId,
    this.resFullOpenDuration,
    resFullOpenTitle,
    resFullOpenDesc,
    resFullOpenGuideGroupThreshold,
    this.resFullOpenStartTime
  );
}
}
