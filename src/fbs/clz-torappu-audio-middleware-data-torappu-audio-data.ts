// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_Audio_Middleware_Data_BGMBank, clz_Torappu_Audio_Middleware_Data_BGMBankT } from './clz-torappu-audio-middleware-data-bgmbank.js';
import { clz_Torappu_Audio_Middleware_Data_DuckingData, clz_Torappu_Audio_Middleware_Data_DuckingDataT } from './clz-torappu-audio-middleware-data-ducking-data.js';
import { clz_Torappu_Audio_Middleware_Data_FadeStyleData, clz_Torappu_Audio_Middleware_Data_FadeStyleDataT } from './clz-torappu-audio-middleware-data-fade-style-data.js';
import { clz_Torappu_Audio_Middleware_Data_MusicData, clz_Torappu_Audio_Middleware_Data_MusicDataT } from './clz-torappu-audio-middleware-data-music-data.js';
import { clz_Torappu_Audio_Middleware_Data_SnapshotBank, clz_Torappu_Audio_Middleware_Data_SnapshotBankT } from './clz-torappu-audio-middleware-data-snapshot-bank.js';
import { clz_Torappu_Audio_Middleware_Data_SoundFXBank, clz_Torappu_Audio_Middleware_Data_SoundFXBankT } from './clz-torappu-audio-middleware-data-sound-fxbank.js';
import { clz_Torappu_Audio_Middleware_Data_SoundFXCtrlBank, clz_Torappu_Audio_Middleware_Data_SoundFXCtrlBankT } from './clz-torappu-audio-middleware-data-sound-fxctrl-bank.js';
import { clz_Torappu_BattleVoiceData, clz_Torappu_BattleVoiceDataT } from './clz-torappu-battle-voice-data.js';
import { dict__string__list_dict__string__list_dict__enum__Torappu_VoiceLangType__string, dict__string__list_dict__string__list_dict__enum__Torappu_VoiceLangType__stringT } from './dict--string--list-dict--string--list-dict--enum--torappu-voice-lang-type--string.js';
import { dict__string__string, dict__string__stringT } from './dict--string--string.js';


export class clz_Torappu_Audio_Middleware_Data_TorappuAudioData implements flatbuffers.IUnpackableObject<clz_Torappu_Audio_Middleware_Data_TorappuAudioDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Audio_Middleware_Data_TorappuAudioData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Audio_Middleware_Data_TorappuAudioData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Audio_Middleware_Data_TorappuAudioData):clz_Torappu_Audio_Middleware_Data_TorappuAudioData {
  return (obj || new clz_Torappu_Audio_Middleware_Data_TorappuAudioData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Audio_Middleware_Data_TorappuAudioData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Audio_Middleware_Data_TorappuAudioData):clz_Torappu_Audio_Middleware_Data_TorappuAudioData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Audio_Middleware_Data_TorappuAudioData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

bgmBanks(index: number, obj?:clz_Torappu_Audio_Middleware_Data_BGMBank):clz_Torappu_Audio_Middleware_Data_BGMBank|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new clz_Torappu_Audio_Middleware_Data_BGMBank()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

bgmBanksLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

soundFxbanks(index: number, obj?:clz_Torappu_Audio_Middleware_Data_SoundFXBank):clz_Torappu_Audio_Middleware_Data_SoundFXBank|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new clz_Torappu_Audio_Middleware_Data_SoundFXBank()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

soundFxbanksLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

soundFxctrlBanks(index: number, obj?:clz_Torappu_Audio_Middleware_Data_SoundFXCtrlBank):clz_Torappu_Audio_Middleware_Data_SoundFXCtrlBank|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new clz_Torappu_Audio_Middleware_Data_SoundFXCtrlBank()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

soundFxctrlBanksLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

snapshotBanks(index: number, obj?:clz_Torappu_Audio_Middleware_Data_SnapshotBank):clz_Torappu_Audio_Middleware_Data_SnapshotBank|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_Torappu_Audio_Middleware_Data_SnapshotBank()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

snapshotBanksLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

battleVoice(obj?:clz_Torappu_BattleVoiceData):clz_Torappu_BattleVoiceData|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new clz_Torappu_BattleVoiceData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

musics(index: number, obj?:clz_Torappu_Audio_Middleware_Data_MusicData):clz_Torappu_Audio_Middleware_Data_MusicData|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new clz_Torappu_Audio_Middleware_Data_MusicData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

musicsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

duckings(index: number, obj?:clz_Torappu_Audio_Middleware_Data_DuckingData):clz_Torappu_Audio_Middleware_Data_DuckingData|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new clz_Torappu_Audio_Middleware_Data_DuckingData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

duckingsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

fadeStyles(index: number, obj?:clz_Torappu_Audio_Middleware_Data_FadeStyleData):clz_Torappu_Audio_Middleware_Data_FadeStyleData|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new clz_Torappu_Audio_Middleware_Data_FadeStyleData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

fadeStylesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

soundFxVoiceLang(index: number, obj?:dict__string__list_dict__string__list_dict__enum__Torappu_VoiceLangType__string):dict__string__list_dict__string__list_dict__enum__Torappu_VoiceLangType__string|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? (obj || new dict__string__list_dict__string__list_dict__enum__Torappu_VoiceLangType__string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

soundFxVoiceLangLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

bankAlias(index: number, obj?:dict__string__string):dict__string__string|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? (obj || new dict__string__string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

bankAliasLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_Audio_Middleware_Data_TorappuAudioData(builder:flatbuffers.Builder) {
  builder.startObject(10);
}

static addBgmBanks(builder:flatbuffers.Builder, bgmBanksOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, bgmBanksOffset, 0);
}

static createBgmBanksVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBgmBanksVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addSoundFxbanks(builder:flatbuffers.Builder, soundFxbanksOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, soundFxbanksOffset, 0);
}

static createSoundFxbanksVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startSoundFxbanksVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addSoundFxctrlBanks(builder:flatbuffers.Builder, soundFxctrlBanksOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, soundFxctrlBanksOffset, 0);
}

static createSoundFxctrlBanksVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startSoundFxctrlBanksVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addSnapshotBanks(builder:flatbuffers.Builder, snapshotBanksOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, snapshotBanksOffset, 0);
}

static createSnapshotBanksVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startSnapshotBanksVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBattleVoice(builder:flatbuffers.Builder, battleVoiceOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, battleVoiceOffset, 0);
}

static addMusics(builder:flatbuffers.Builder, musicsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, musicsOffset, 0);
}

static createMusicsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startMusicsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addDuckings(builder:flatbuffers.Builder, duckingsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, duckingsOffset, 0);
}

static createDuckingsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startDuckingsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addFadeStyles(builder:flatbuffers.Builder, fadeStylesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, fadeStylesOffset, 0);
}

static createFadeStylesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startFadeStylesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addSoundFxVoiceLang(builder:flatbuffers.Builder, soundFxVoiceLangOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, soundFxVoiceLangOffset, 0);
}

static createSoundFxVoiceLangVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startSoundFxVoiceLangVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBankAlias(builder:flatbuffers.Builder, bankAliasOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, bankAliasOffset, 0);
}

static createBankAliasVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBankAliasVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_Audio_Middleware_Data_TorappuAudioData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishclz_Torappu_Audio_Middleware_Data_TorappuAudioDataBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedclz_Torappu_Audio_Middleware_Data_TorappuAudioDataBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}


unpack(): clz_Torappu_Audio_Middleware_Data_TorappuAudioDataT {
  return new clz_Torappu_Audio_Middleware_Data_TorappuAudioDataT(
    this.bb!.createObjList<clz_Torappu_Audio_Middleware_Data_BGMBank, clz_Torappu_Audio_Middleware_Data_BGMBankT>(this.bgmBanks.bind(this), this.bgmBanksLength()),
    this.bb!.createObjList<clz_Torappu_Audio_Middleware_Data_SoundFXBank, clz_Torappu_Audio_Middleware_Data_SoundFXBankT>(this.soundFxbanks.bind(this), this.soundFxbanksLength()),
    this.bb!.createObjList<clz_Torappu_Audio_Middleware_Data_SoundFXCtrlBank, clz_Torappu_Audio_Middleware_Data_SoundFXCtrlBankT>(this.soundFxctrlBanks.bind(this), this.soundFxctrlBanksLength()),
    this.bb!.createObjList<clz_Torappu_Audio_Middleware_Data_SnapshotBank, clz_Torappu_Audio_Middleware_Data_SnapshotBankT>(this.snapshotBanks.bind(this), this.snapshotBanksLength()),
    (this.battleVoice() !== null ? this.battleVoice()!.unpack() : null),
    this.bb!.createObjList<clz_Torappu_Audio_Middleware_Data_MusicData, clz_Torappu_Audio_Middleware_Data_MusicDataT>(this.musics.bind(this), this.musicsLength()),
    this.bb!.createObjList<clz_Torappu_Audio_Middleware_Data_DuckingData, clz_Torappu_Audio_Middleware_Data_DuckingDataT>(this.duckings.bind(this), this.duckingsLength()),
    this.bb!.createObjList<clz_Torappu_Audio_Middleware_Data_FadeStyleData, clz_Torappu_Audio_Middleware_Data_FadeStyleDataT>(this.fadeStyles.bind(this), this.fadeStylesLength()),
    this.bb!.createObjList<dict__string__list_dict__string__list_dict__enum__Torappu_VoiceLangType__string, dict__string__list_dict__string__list_dict__enum__Torappu_VoiceLangType__stringT>(this.soundFxVoiceLang.bind(this), this.soundFxVoiceLangLength()),
    this.bb!.createObjList<dict__string__string, dict__string__stringT>(this.bankAlias.bind(this), this.bankAliasLength())
  );
}


unpackTo(_o: clz_Torappu_Audio_Middleware_Data_TorappuAudioDataT): void {
  _o.bgmBanks = this.bb!.createObjList<clz_Torappu_Audio_Middleware_Data_BGMBank, clz_Torappu_Audio_Middleware_Data_BGMBankT>(this.bgmBanks.bind(this), this.bgmBanksLength());
  _o.soundFxbanks = this.bb!.createObjList<clz_Torappu_Audio_Middleware_Data_SoundFXBank, clz_Torappu_Audio_Middleware_Data_SoundFXBankT>(this.soundFxbanks.bind(this), this.soundFxbanksLength());
  _o.soundFxctrlBanks = this.bb!.createObjList<clz_Torappu_Audio_Middleware_Data_SoundFXCtrlBank, clz_Torappu_Audio_Middleware_Data_SoundFXCtrlBankT>(this.soundFxctrlBanks.bind(this), this.soundFxctrlBanksLength());
  _o.snapshotBanks = this.bb!.createObjList<clz_Torappu_Audio_Middleware_Data_SnapshotBank, clz_Torappu_Audio_Middleware_Data_SnapshotBankT>(this.snapshotBanks.bind(this), this.snapshotBanksLength());
  _o.battleVoice = (this.battleVoice() !== null ? this.battleVoice()!.unpack() : null);
  _o.musics = this.bb!.createObjList<clz_Torappu_Audio_Middleware_Data_MusicData, clz_Torappu_Audio_Middleware_Data_MusicDataT>(this.musics.bind(this), this.musicsLength());
  _o.duckings = this.bb!.createObjList<clz_Torappu_Audio_Middleware_Data_DuckingData, clz_Torappu_Audio_Middleware_Data_DuckingDataT>(this.duckings.bind(this), this.duckingsLength());
  _o.fadeStyles = this.bb!.createObjList<clz_Torappu_Audio_Middleware_Data_FadeStyleData, clz_Torappu_Audio_Middleware_Data_FadeStyleDataT>(this.fadeStyles.bind(this), this.fadeStylesLength());
  _o.soundFxVoiceLang = this.bb!.createObjList<dict__string__list_dict__string__list_dict__enum__Torappu_VoiceLangType__string, dict__string__list_dict__string__list_dict__enum__Torappu_VoiceLangType__stringT>(this.soundFxVoiceLang.bind(this), this.soundFxVoiceLangLength());
  _o.bankAlias = this.bb!.createObjList<dict__string__string, dict__string__stringT>(this.bankAlias.bind(this), this.bankAliasLength());
}
}

export class clz_Torappu_Audio_Middleware_Data_TorappuAudioDataT implements flatbuffers.IGeneratedObject {
constructor(
  public bgmBanks: (clz_Torappu_Audio_Middleware_Data_BGMBankT)[] = [],
  public soundFxbanks: (clz_Torappu_Audio_Middleware_Data_SoundFXBankT)[] = [],
  public soundFxctrlBanks: (clz_Torappu_Audio_Middleware_Data_SoundFXCtrlBankT)[] = [],
  public snapshotBanks: (clz_Torappu_Audio_Middleware_Data_SnapshotBankT)[] = [],
  public battleVoice: clz_Torappu_BattleVoiceDataT|null = null,
  public musics: (clz_Torappu_Audio_Middleware_Data_MusicDataT)[] = [],
  public duckings: (clz_Torappu_Audio_Middleware_Data_DuckingDataT)[] = [],
  public fadeStyles: (clz_Torappu_Audio_Middleware_Data_FadeStyleDataT)[] = [],
  public soundFxVoiceLang: (dict__string__list_dict__string__list_dict__enum__Torappu_VoiceLangType__stringT)[] = [],
  public bankAlias: (dict__string__stringT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const bgmBanks = clz_Torappu_Audio_Middleware_Data_TorappuAudioData.createBgmBanksVector(builder, builder.createObjectOffsetList(this.bgmBanks));
  const soundFxbanks = clz_Torappu_Audio_Middleware_Data_TorappuAudioData.createSoundFxbanksVector(builder, builder.createObjectOffsetList(this.soundFxbanks));
  const soundFxctrlBanks = clz_Torappu_Audio_Middleware_Data_TorappuAudioData.createSoundFxctrlBanksVector(builder, builder.createObjectOffsetList(this.soundFxctrlBanks));
  const snapshotBanks = clz_Torappu_Audio_Middleware_Data_TorappuAudioData.createSnapshotBanksVector(builder, builder.createObjectOffsetList(this.snapshotBanks));
  const battleVoice = (this.battleVoice !== null ? this.battleVoice!.pack(builder) : 0);
  const musics = clz_Torappu_Audio_Middleware_Data_TorappuAudioData.createMusicsVector(builder, builder.createObjectOffsetList(this.musics));
  const duckings = clz_Torappu_Audio_Middleware_Data_TorappuAudioData.createDuckingsVector(builder, builder.createObjectOffsetList(this.duckings));
  const fadeStyles = clz_Torappu_Audio_Middleware_Data_TorappuAudioData.createFadeStylesVector(builder, builder.createObjectOffsetList(this.fadeStyles));
  const soundFxVoiceLang = clz_Torappu_Audio_Middleware_Data_TorappuAudioData.createSoundFxVoiceLangVector(builder, builder.createObjectOffsetList(this.soundFxVoiceLang));
  const bankAlias = clz_Torappu_Audio_Middleware_Data_TorappuAudioData.createBankAliasVector(builder, builder.createObjectOffsetList(this.bankAlias));

  clz_Torappu_Audio_Middleware_Data_TorappuAudioData.startclz_Torappu_Audio_Middleware_Data_TorappuAudioData(builder);
  clz_Torappu_Audio_Middleware_Data_TorappuAudioData.addBgmBanks(builder, bgmBanks);
  clz_Torappu_Audio_Middleware_Data_TorappuAudioData.addSoundFxbanks(builder, soundFxbanks);
  clz_Torappu_Audio_Middleware_Data_TorappuAudioData.addSoundFxctrlBanks(builder, soundFxctrlBanks);
  clz_Torappu_Audio_Middleware_Data_TorappuAudioData.addSnapshotBanks(builder, snapshotBanks);
  clz_Torappu_Audio_Middleware_Data_TorappuAudioData.addBattleVoice(builder, battleVoice);
  clz_Torappu_Audio_Middleware_Data_TorappuAudioData.addMusics(builder, musics);
  clz_Torappu_Audio_Middleware_Data_TorappuAudioData.addDuckings(builder, duckings);
  clz_Torappu_Audio_Middleware_Data_TorappuAudioData.addFadeStyles(builder, fadeStyles);
  clz_Torappu_Audio_Middleware_Data_TorappuAudioData.addSoundFxVoiceLang(builder, soundFxVoiceLang);
  clz_Torappu_Audio_Middleware_Data_TorappuAudioData.addBankAlias(builder, bankAlias);

  return clz_Torappu_Audio_Middleware_Data_TorappuAudioData.endclz_Torappu_Audio_Middleware_Data_TorappuAudioData(builder);
}
}
