// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT } from './clz-torappu-item-bundle.js';


export class clz_Torappu_ItemPackInfo implements flatbuffers.IUnpackableObject<clz_Torappu_ItemPackInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ItemPackInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ItemPackInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ItemPackInfo):clz_Torappu_ItemPackInfo {
  return (obj || new clz_Torappu_ItemPackInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ItemPackInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ItemPackInfo):clz_Torappu_ItemPackInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ItemPackInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

packId():string|null
packId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
packId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

content(index: number, obj?:clz_Torappu_ItemBundle):clz_Torappu_ItemBundle|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new clz_Torappu_ItemBundle()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

contentLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_ItemPackInfo(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addPackId(builder:flatbuffers.Builder, packIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, packIdOffset, 0);
}

static addContent(builder:flatbuffers.Builder, contentOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, contentOffset, 0);
}

static createContentVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startContentVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_ItemPackInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ItemPackInfo(builder:flatbuffers.Builder, packIdOffset:flatbuffers.Offset, contentOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ItemPackInfo.startclz_Torappu_ItemPackInfo(builder);
  clz_Torappu_ItemPackInfo.addPackId(builder, packIdOffset);
  clz_Torappu_ItemPackInfo.addContent(builder, contentOffset);
  return clz_Torappu_ItemPackInfo.endclz_Torappu_ItemPackInfo(builder);
}

unpack(): clz_Torappu_ItemPackInfoT {
  return new clz_Torappu_ItemPackInfoT(
    this.packId(),
    this.bb!.createObjList<clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT>(this.content.bind(this), this.contentLength())
  );
}


unpackTo(_o: clz_Torappu_ItemPackInfoT): void {
  _o.packId = this.packId();
  _o.content = this.bb!.createObjList<clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT>(this.content.bind(this), this.contentLength());
}
}

export class clz_Torappu_ItemPackInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public packId: string|Uint8Array|null = null,
  public content: (clz_Torappu_ItemBundleT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const packId = (this.packId !== null ? builder.createString(this.packId!) : 0);
  const content = clz_Torappu_ItemPackInfo.createContentVector(builder, builder.createObjectOffsetList(this.content));

  return clz_Torappu_ItemPackInfo.createclz_Torappu_ItemPackInfo(builder,
    packId,
    content
  );
}
}
