// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_VersusCheckInData_VoteData implements flatbuffers.IUnpackableObject<clz_Torappu_VersusCheckInData_VoteDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_VersusCheckInData_VoteData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_VersusCheckInData_VoteData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_VersusCheckInData_VoteData):clz_Torappu_VersusCheckInData_VoteData {
  return (obj || new clz_Torappu_VersusCheckInData_VoteData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_VersusCheckInData_VoteData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_VersusCheckInData_VoteData):clz_Torappu_VersusCheckInData_VoteData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_VersusCheckInData_VoteData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

plSweetNum():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

plSaltyNum():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

plTaste():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_VersusCheckInData_VoteData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addPlSweetNum(builder:flatbuffers.Builder, plSweetNum:number) {
  builder.addFieldInt32(0, plSweetNum, 0);
}

static addPlSaltyNum(builder:flatbuffers.Builder, plSaltyNum:number) {
  builder.addFieldInt32(1, plSaltyNum, 0);
}

static addPlTaste(builder:flatbuffers.Builder, plTaste:number) {
  builder.addFieldInt32(2, plTaste, 0);
}

static endclz_Torappu_VersusCheckInData_VoteData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_VersusCheckInData_VoteData(builder:flatbuffers.Builder, plSweetNum:number, plSaltyNum:number, plTaste:number):flatbuffers.Offset {
  clz_Torappu_VersusCheckInData_VoteData.startclz_Torappu_VersusCheckInData_VoteData(builder);
  clz_Torappu_VersusCheckInData_VoteData.addPlSweetNum(builder, plSweetNum);
  clz_Torappu_VersusCheckInData_VoteData.addPlSaltyNum(builder, plSaltyNum);
  clz_Torappu_VersusCheckInData_VoteData.addPlTaste(builder, plTaste);
  return clz_Torappu_VersusCheckInData_VoteData.endclz_Torappu_VersusCheckInData_VoteData(builder);
}

unpack(): clz_Torappu_VersusCheckInData_VoteDataT {
  return new clz_Torappu_VersusCheckInData_VoteDataT(
    this.plSweetNum(),
    this.plSaltyNum(),
    this.plTaste()
  );
}


unpackTo(_o: clz_Torappu_VersusCheckInData_VoteDataT): void {
  _o.plSweetNum = this.plSweetNum();
  _o.plSaltyNum = this.plSaltyNum();
  _o.plTaste = this.plTaste();
}
}

export class clz_Torappu_VersusCheckInData_VoteDataT implements flatbuffers.IGeneratedObject {
constructor(
  public plSweetNum: number = 0,
  public plSaltyNum: number = 0,
  public plTaste: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return clz_Torappu_VersusCheckInData_VoteData.createclz_Torappu_VersusCheckInData_VoteData(builder,
    this.plSweetNum,
    this.plSaltyNum,
    this.plTaste
  );
}
}
