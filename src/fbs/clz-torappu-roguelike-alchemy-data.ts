// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_AlchemyPoolRarityType } from './enum--torappu-alchemy-pool-rarity-type.js';
import { enum__Torappu_RoguelikeFragmentType } from './enum--torappu-roguelike-fragment-type.js';


export class clz_Torappu_RoguelikeAlchemyData implements flatbuffers.IUnpackableObject<clz_Torappu_RoguelikeAlchemyDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RoguelikeAlchemyData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RoguelikeAlchemyData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeAlchemyData):clz_Torappu_RoguelikeAlchemyData {
  return (obj || new clz_Torappu_RoguelikeAlchemyData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RoguelikeAlchemyData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeAlchemyData):clz_Torappu_RoguelikeAlchemyData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RoguelikeAlchemyData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

fragmentTypeList(index: number):enum__Torappu_RoguelikeFragmentType|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : null;
}

fragmentTypeListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

fragmentTypeListArray():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

fragmentSquareSum():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

poolRarity():enum__Torappu_AlchemyPoolRarityType {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_AlchemyPoolRarityType.NORMAL;
}

relicProp():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

shieldProp():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

populationProp():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

overrideConditionBandIds(index: number):string
overrideConditionBandIds(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
overrideConditionBandIds(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

overrideConditionBandIdsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

overrideRecipeId():string|null
overrideRecipeId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
overrideRecipeId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_RoguelikeAlchemyData(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addFragmentTypeList(builder:flatbuffers.Builder, fragmentTypeListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, fragmentTypeListOffset, 0);
}

static createFragmentTypeListVector(builder:flatbuffers.Builder, data:enum__Torappu_RoguelikeFragmentType[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static startFragmentTypeListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addFragmentSquareSum(builder:flatbuffers.Builder, fragmentSquareSum:number) {
  builder.addFieldInt32(1, fragmentSquareSum, 0);
}

static addPoolRarity(builder:flatbuffers.Builder, poolRarity:enum__Torappu_AlchemyPoolRarityType) {
  builder.addFieldInt32(2, poolRarity, enum__Torappu_AlchemyPoolRarityType.NORMAL);
}

static addRelicProp(builder:flatbuffers.Builder, relicProp:number) {
  builder.addFieldFloat32(3, relicProp, 0.0);
}

static addShieldProp(builder:flatbuffers.Builder, shieldProp:number) {
  builder.addFieldFloat32(4, shieldProp, 0.0);
}

static addPopulationProp(builder:flatbuffers.Builder, populationProp:number) {
  builder.addFieldFloat32(5, populationProp, 0.0);
}

static addOverrideConditionBandIds(builder:flatbuffers.Builder, overrideConditionBandIdsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, overrideConditionBandIdsOffset, 0);
}

static createOverrideConditionBandIdsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startOverrideConditionBandIdsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addOverrideRecipeId(builder:flatbuffers.Builder, overrideRecipeIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, overrideRecipeIdOffset, 0);
}

static endclz_Torappu_RoguelikeAlchemyData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_RoguelikeAlchemyData(builder:flatbuffers.Builder, fragmentTypeListOffset:flatbuffers.Offset, fragmentSquareSum:number, poolRarity:enum__Torappu_AlchemyPoolRarityType, relicProp:number, shieldProp:number, populationProp:number, overrideConditionBandIdsOffset:flatbuffers.Offset, overrideRecipeIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_RoguelikeAlchemyData.startclz_Torappu_RoguelikeAlchemyData(builder);
  clz_Torappu_RoguelikeAlchemyData.addFragmentTypeList(builder, fragmentTypeListOffset);
  clz_Torappu_RoguelikeAlchemyData.addFragmentSquareSum(builder, fragmentSquareSum);
  clz_Torappu_RoguelikeAlchemyData.addPoolRarity(builder, poolRarity);
  clz_Torappu_RoguelikeAlchemyData.addRelicProp(builder, relicProp);
  clz_Torappu_RoguelikeAlchemyData.addShieldProp(builder, shieldProp);
  clz_Torappu_RoguelikeAlchemyData.addPopulationProp(builder, populationProp);
  clz_Torappu_RoguelikeAlchemyData.addOverrideConditionBandIds(builder, overrideConditionBandIdsOffset);
  clz_Torappu_RoguelikeAlchemyData.addOverrideRecipeId(builder, overrideRecipeIdOffset);
  return clz_Torappu_RoguelikeAlchemyData.endclz_Torappu_RoguelikeAlchemyData(builder);
}

unpack(): clz_Torappu_RoguelikeAlchemyDataT {
  return new clz_Torappu_RoguelikeAlchemyDataT(
    this.bb!.createScalarList<enum__Torappu_RoguelikeFragmentType>(this.fragmentTypeList.bind(this), this.fragmentTypeListLength()),
    this.fragmentSquareSum(),
    this.poolRarity(),
    this.relicProp(),
    this.shieldProp(),
    this.populationProp(),
    this.bb!.createScalarList<string>(this.overrideConditionBandIds.bind(this), this.overrideConditionBandIdsLength()),
    this.overrideRecipeId()
  );
}


unpackTo(_o: clz_Torappu_RoguelikeAlchemyDataT): void {
  _o.fragmentTypeList = this.bb!.createScalarList<enum__Torappu_RoguelikeFragmentType>(this.fragmentTypeList.bind(this), this.fragmentTypeListLength());
  _o.fragmentSquareSum = this.fragmentSquareSum();
  _o.poolRarity = this.poolRarity();
  _o.relicProp = this.relicProp();
  _o.shieldProp = this.shieldProp();
  _o.populationProp = this.populationProp();
  _o.overrideConditionBandIds = this.bb!.createScalarList<string>(this.overrideConditionBandIds.bind(this), this.overrideConditionBandIdsLength());
  _o.overrideRecipeId = this.overrideRecipeId();
}
}

export class clz_Torappu_RoguelikeAlchemyDataT implements flatbuffers.IGeneratedObject {
constructor(
  public fragmentTypeList: (enum__Torappu_RoguelikeFragmentType)[] = [],
  public fragmentSquareSum: number = 0,
  public poolRarity: enum__Torappu_AlchemyPoolRarityType = enum__Torappu_AlchemyPoolRarityType.NORMAL,
  public relicProp: number = 0.0,
  public shieldProp: number = 0.0,
  public populationProp: number = 0.0,
  public overrideConditionBandIds: (string)[] = [],
  public overrideRecipeId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const fragmentTypeList = clz_Torappu_RoguelikeAlchemyData.createFragmentTypeListVector(builder, this.fragmentTypeList);
  const overrideConditionBandIds = clz_Torappu_RoguelikeAlchemyData.createOverrideConditionBandIdsVector(builder, builder.createObjectOffsetList(this.overrideConditionBandIds));
  const overrideRecipeId = (this.overrideRecipeId !== null ? builder.createString(this.overrideRecipeId!) : 0);

  return clz_Torappu_RoguelikeAlchemyData.createclz_Torappu_RoguelikeAlchemyData(builder,
    fragmentTypeList,
    this.fragmentSquareSum,
    this.poolRarity,
    this.relicProp,
    this.shieldProp,
    this.populationProp,
    overrideConditionBandIds,
    overrideRecipeId
  );
}
}
