// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_FireworkData_PlateContent, clz_Torappu_FireworkData_PlateContentT } from './clz-torappu-firework-data-plate-content.js';
import { enum__Torappu_FireworkData_FireworkDirectionType } from './enum--torappu-firework-data-firework-direction-type.js';


export class clz_Torappu_FireworkData_PlateData implements flatbuffers.IUnpackableObject<clz_Torappu_FireworkData_PlateDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_FireworkData_PlateData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_FireworkData_PlateData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_FireworkData_PlateData):clz_Torappu_FireworkData_PlateData {
  return (obj || new clz_Torappu_FireworkData_PlateData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_FireworkData_PlateData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_FireworkData_PlateData):clz_Torappu_FireworkData_PlateData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_FireworkData_PlateData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

plateId():string|null
plateId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
plateId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

directionType():enum__Torappu_FireworkData_FireworkDirectionType {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_FireworkData_FireworkDirectionType.TWO_DIR;
}

unlockLevel():string|null
unlockLevel(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
unlockLevel(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

plateRank():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

plateContents(index: number, obj?:clz_Torappu_FireworkData_PlateContent):clz_Torappu_FireworkData_PlateContent|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new clz_Torappu_FireworkData_PlateContent()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

plateContentsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

isCraft():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startclz_Torappu_FireworkData_PlateData(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static addPlateId(builder:flatbuffers.Builder, plateIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, plateIdOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(1, sortId, 0);
}

static addDirectionType(builder:flatbuffers.Builder, directionType:enum__Torappu_FireworkData_FireworkDirectionType) {
  builder.addFieldInt32(2, directionType, enum__Torappu_FireworkData_FireworkDirectionType.TWO_DIR);
}

static addUnlockLevel(builder:flatbuffers.Builder, unlockLevelOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, unlockLevelOffset, 0);
}

static addPlateRank(builder:flatbuffers.Builder, plateRank:number) {
  builder.addFieldInt32(4, plateRank, 0);
}

static addPlateContents(builder:flatbuffers.Builder, plateContentsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, plateContentsOffset, 0);
}

static createPlateContentsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPlateContentsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addIsCraft(builder:flatbuffers.Builder, isCraft:boolean) {
  builder.addFieldInt8(6, +isCraft, +false);
}

static endclz_Torappu_FireworkData_PlateData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_FireworkData_PlateData(builder:flatbuffers.Builder, plateIdOffset:flatbuffers.Offset, sortId:number, directionType:enum__Torappu_FireworkData_FireworkDirectionType, unlockLevelOffset:flatbuffers.Offset, plateRank:number, plateContentsOffset:flatbuffers.Offset, isCraft:boolean):flatbuffers.Offset {
  clz_Torappu_FireworkData_PlateData.startclz_Torappu_FireworkData_PlateData(builder);
  clz_Torappu_FireworkData_PlateData.addPlateId(builder, plateIdOffset);
  clz_Torappu_FireworkData_PlateData.addSortId(builder, sortId);
  clz_Torappu_FireworkData_PlateData.addDirectionType(builder, directionType);
  clz_Torappu_FireworkData_PlateData.addUnlockLevel(builder, unlockLevelOffset);
  clz_Torappu_FireworkData_PlateData.addPlateRank(builder, plateRank);
  clz_Torappu_FireworkData_PlateData.addPlateContents(builder, plateContentsOffset);
  clz_Torappu_FireworkData_PlateData.addIsCraft(builder, isCraft);
  return clz_Torappu_FireworkData_PlateData.endclz_Torappu_FireworkData_PlateData(builder);
}

unpack(): clz_Torappu_FireworkData_PlateDataT {
  return new clz_Torappu_FireworkData_PlateDataT(
    this.plateId(),
    this.sortId(),
    this.directionType(),
    this.unlockLevel(),
    this.plateRank(),
    this.bb!.createObjList<clz_Torappu_FireworkData_PlateContent, clz_Torappu_FireworkData_PlateContentT>(this.plateContents.bind(this), this.plateContentsLength()),
    this.isCraft()
  );
}


unpackTo(_o: clz_Torappu_FireworkData_PlateDataT): void {
  _o.plateId = this.plateId();
  _o.sortId = this.sortId();
  _o.directionType = this.directionType();
  _o.unlockLevel = this.unlockLevel();
  _o.plateRank = this.plateRank();
  _o.plateContents = this.bb!.createObjList<clz_Torappu_FireworkData_PlateContent, clz_Torappu_FireworkData_PlateContentT>(this.plateContents.bind(this), this.plateContentsLength());
  _o.isCraft = this.isCraft();
}
}

export class clz_Torappu_FireworkData_PlateDataT implements flatbuffers.IGeneratedObject {
constructor(
  public plateId: string|Uint8Array|null = null,
  public sortId: number = 0,
  public directionType: enum__Torappu_FireworkData_FireworkDirectionType = enum__Torappu_FireworkData_FireworkDirectionType.TWO_DIR,
  public unlockLevel: string|Uint8Array|null = null,
  public plateRank: number = 0,
  public plateContents: (clz_Torappu_FireworkData_PlateContentT)[] = [],
  public isCraft: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const plateId = (this.plateId !== null ? builder.createString(this.plateId!) : 0);
  const unlockLevel = (this.unlockLevel !== null ? builder.createString(this.unlockLevel!) : 0);
  const plateContents = clz_Torappu_FireworkData_PlateData.createPlateContentsVector(builder, builder.createObjectOffsetList(this.plateContents));

  return clz_Torappu_FireworkData_PlateData.createclz_Torappu_FireworkData_PlateData(builder,
    plateId,
    this.sortId,
    this.directionType,
    unlockLevel,
    this.plateRank,
    plateContents,
    this.isCraft
  );
}
}
