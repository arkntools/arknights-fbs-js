// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_RuneTable_PackedRuneData, clz_Torappu_RuneTable_PackedRuneDataT } from './clz-torappu-rune-table-packed-rune-data.js';


export class clz_Torappu_ActArcadeData_ArcadeBadgeTierData implements flatbuffers.IUnpackableObject<clz_Torappu_ActArcadeData_ArcadeBadgeTierDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActArcadeData_ArcadeBadgeTierData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActArcadeData_ArcadeBadgeTierData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActArcadeData_ArcadeBadgeTierData):clz_Torappu_ActArcadeData_ArcadeBadgeTierData {
  return (obj || new clz_Torappu_ActArcadeData_ArcadeBadgeTierData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActArcadeData_ArcadeBadgeTierData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActArcadeData_ArcadeBadgeTierData):clz_Torappu_ActArcadeData_ArcadeBadgeTierData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActArcadeData_ArcadeBadgeTierData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

badgeTierId():string|null
badgeTierId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
badgeTierId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

badgeTierIconId():string|null
badgeTierIconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
badgeTierIconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

badgeTierShareIconId():string|null
badgeTierShareIconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
badgeTierShareIconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

badgeTierEffectId():string|null
badgeTierEffectId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
badgeTierEffectId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

title():string|null
title(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
title(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

desc():string|null
desc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
desc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

buffId():string|null
buffId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
buffId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

unlockDesc():string|null
unlockDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
unlockDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

runeData(obj?:clz_Torappu_RuneTable_PackedRuneData):clz_Torappu_RuneTable_PackedRuneData|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? (obj || new clz_Torappu_RuneTable_PackedRuneData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startclz_Torappu_ActArcadeData_ArcadeBadgeTierData(builder:flatbuffers.Builder) {
  builder.startObject(10);
}

static addBadgeTierId(builder:flatbuffers.Builder, badgeTierIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, badgeTierIdOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(1, sortId, 0);
}

static addBadgeTierIconId(builder:flatbuffers.Builder, badgeTierIconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, badgeTierIconIdOffset, 0);
}

static addBadgeTierShareIconId(builder:flatbuffers.Builder, badgeTierShareIconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, badgeTierShareIconIdOffset, 0);
}

static addBadgeTierEffectId(builder:flatbuffers.Builder, badgeTierEffectIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, badgeTierEffectIdOffset, 0);
}

static addTitle(builder:flatbuffers.Builder, titleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, titleOffset, 0);
}

static addDesc(builder:flatbuffers.Builder, descOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, descOffset, 0);
}

static addBuffId(builder:flatbuffers.Builder, buffIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, buffIdOffset, 0);
}

static addUnlockDesc(builder:flatbuffers.Builder, unlockDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, unlockDescOffset, 0);
}

static addRuneData(builder:flatbuffers.Builder, runeDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, runeDataOffset, 0);
}

static endclz_Torappu_ActArcadeData_ArcadeBadgeTierData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_ActArcadeData_ArcadeBadgeTierDataT {
  return new clz_Torappu_ActArcadeData_ArcadeBadgeTierDataT(
    this.badgeTierId(),
    this.sortId(),
    this.badgeTierIconId(),
    this.badgeTierShareIconId(),
    this.badgeTierEffectId(),
    this.title(),
    this.desc(),
    this.buffId(),
    this.unlockDesc(),
    (this.runeData() !== null ? this.runeData()!.unpack() : null)
  );
}


unpackTo(_o: clz_Torappu_ActArcadeData_ArcadeBadgeTierDataT): void {
  _o.badgeTierId = this.badgeTierId();
  _o.sortId = this.sortId();
  _o.badgeTierIconId = this.badgeTierIconId();
  _o.badgeTierShareIconId = this.badgeTierShareIconId();
  _o.badgeTierEffectId = this.badgeTierEffectId();
  _o.title = this.title();
  _o.desc = this.desc();
  _o.buffId = this.buffId();
  _o.unlockDesc = this.unlockDesc();
  _o.runeData = (this.runeData() !== null ? this.runeData()!.unpack() : null);
}
}

export class clz_Torappu_ActArcadeData_ArcadeBadgeTierDataT implements flatbuffers.IGeneratedObject {
constructor(
  public badgeTierId: string|Uint8Array|null = null,
  public sortId: number = 0,
  public badgeTierIconId: string|Uint8Array|null = null,
  public badgeTierShareIconId: string|Uint8Array|null = null,
  public badgeTierEffectId: string|Uint8Array|null = null,
  public title: string|Uint8Array|null = null,
  public desc: string|Uint8Array|null = null,
  public buffId: string|Uint8Array|null = null,
  public unlockDesc: string|Uint8Array|null = null,
  public runeData: clz_Torappu_RuneTable_PackedRuneDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const badgeTierId = (this.badgeTierId !== null ? builder.createString(this.badgeTierId!) : 0);
  const badgeTierIconId = (this.badgeTierIconId !== null ? builder.createString(this.badgeTierIconId!) : 0);
  const badgeTierShareIconId = (this.badgeTierShareIconId !== null ? builder.createString(this.badgeTierShareIconId!) : 0);
  const badgeTierEffectId = (this.badgeTierEffectId !== null ? builder.createString(this.badgeTierEffectId!) : 0);
  const title = (this.title !== null ? builder.createString(this.title!) : 0);
  const desc = (this.desc !== null ? builder.createString(this.desc!) : 0);
  const buffId = (this.buffId !== null ? builder.createString(this.buffId!) : 0);
  const unlockDesc = (this.unlockDesc !== null ? builder.createString(this.unlockDesc!) : 0);
  const runeData = (this.runeData !== null ? this.runeData!.pack(builder) : 0);

  clz_Torappu_ActArcadeData_ArcadeBadgeTierData.startclz_Torappu_ActArcadeData_ArcadeBadgeTierData(builder);
  clz_Torappu_ActArcadeData_ArcadeBadgeTierData.addBadgeTierId(builder, badgeTierId);
  clz_Torappu_ActArcadeData_ArcadeBadgeTierData.addSortId(builder, this.sortId);
  clz_Torappu_ActArcadeData_ArcadeBadgeTierData.addBadgeTierIconId(builder, badgeTierIconId);
  clz_Torappu_ActArcadeData_ArcadeBadgeTierData.addBadgeTierShareIconId(builder, badgeTierShareIconId);
  clz_Torappu_ActArcadeData_ArcadeBadgeTierData.addBadgeTierEffectId(builder, badgeTierEffectId);
  clz_Torappu_ActArcadeData_ArcadeBadgeTierData.addTitle(builder, title);
  clz_Torappu_ActArcadeData_ArcadeBadgeTierData.addDesc(builder, desc);
  clz_Torappu_ActArcadeData_ArcadeBadgeTierData.addBuffId(builder, buffId);
  clz_Torappu_ActArcadeData_ArcadeBadgeTierData.addUnlockDesc(builder, unlockDesc);
  clz_Torappu_ActArcadeData_ArcadeBadgeTierData.addRuneData(builder, runeData);

  return clz_Torappu_ActArcadeData_ArcadeBadgeTierData.endclz_Torappu_ActArcadeData_ArcadeBadgeTierData(builder);
}
}
