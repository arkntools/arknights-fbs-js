// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_BasedRecruitPool_RecruitConstants, clz_Torappu_BasedRecruitPool_RecruitConstantsT } from './clz-torappu-based-recruit-pool-recruit-constants.js';
import { clz_Torappu_RecruitPool_RecruitTime, clz_Torappu_RecruitPool_RecruitTimeT } from './clz-torappu-recruit-pool-recruit-time.js';


export class clz_Torappu_RecruitPool implements flatbuffers.IUnpackableObject<clz_Torappu_RecruitPoolT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RecruitPool {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RecruitPool(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RecruitPool):clz_Torappu_RecruitPool {
  return (obj || new clz_Torappu_RecruitPool()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RecruitPool(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RecruitPool):clz_Torappu_RecruitPool {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RecruitPool()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

recruitTimeTable(index: number, obj?:clz_Torappu_RecruitPool_RecruitTime):clz_Torappu_RecruitPool_RecruitTime|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new clz_Torappu_RecruitPool_RecruitTime()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

recruitTimeTableLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

recruitConstants(obj?:clz_Torappu_BasedRecruitPool_RecruitConstants):clz_Torappu_BasedRecruitPool_RecruitConstants|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new clz_Torappu_BasedRecruitPool_RecruitConstants()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startclz_Torappu_RecruitPool(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addRecruitTimeTable(builder:flatbuffers.Builder, recruitTimeTableOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, recruitTimeTableOffset, 0);
}

static createRecruitTimeTableVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRecruitTimeTableVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRecruitConstants(builder:flatbuffers.Builder, recruitConstantsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, recruitConstantsOffset, 0);
}

static endclz_Torappu_RecruitPool(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_RecruitPoolT {
  return new clz_Torappu_RecruitPoolT(
    this.bb!.createObjList<clz_Torappu_RecruitPool_RecruitTime, clz_Torappu_RecruitPool_RecruitTimeT>(this.recruitTimeTable.bind(this), this.recruitTimeTableLength()),
    (this.recruitConstants() !== null ? this.recruitConstants()!.unpack() : null)
  );
}


unpackTo(_o: clz_Torappu_RecruitPoolT): void {
  _o.recruitTimeTable = this.bb!.createObjList<clz_Torappu_RecruitPool_RecruitTime, clz_Torappu_RecruitPool_RecruitTimeT>(this.recruitTimeTable.bind(this), this.recruitTimeTableLength());
  _o.recruitConstants = (this.recruitConstants() !== null ? this.recruitConstants()!.unpack() : null);
}
}

export class clz_Torappu_RecruitPoolT implements flatbuffers.IGeneratedObject {
constructor(
  public recruitTimeTable: (clz_Torappu_RecruitPool_RecruitTimeT)[] = [],
  public recruitConstants: clz_Torappu_BasedRecruitPool_RecruitConstantsT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const recruitTimeTable = clz_Torappu_RecruitPool.createRecruitTimeTableVector(builder, builder.createObjectOffsetList(this.recruitTimeTable));
  const recruitConstants = (this.recruitConstants !== null ? this.recruitConstants!.pack(builder) : 0);

  clz_Torappu_RecruitPool.startclz_Torappu_RecruitPool(builder);
  clz_Torappu_RecruitPool.addRecruitTimeTable(builder, recruitTimeTable);
  clz_Torappu_RecruitPool.addRecruitConstants(builder, recruitConstants);

  return clz_Torappu_RecruitPool.endclz_Torappu_RecruitPool(builder);
}
}
