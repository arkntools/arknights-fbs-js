// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SandboxV2RiftTeamBuffData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxV2RiftTeamBuffDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxV2RiftTeamBuffData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxV2RiftTeamBuffData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2RiftTeamBuffData):clz_Torappu_SandboxV2RiftTeamBuffData {
  return (obj || new clz_Torappu_SandboxV2RiftTeamBuffData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxV2RiftTeamBuffData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2RiftTeamBuffData):clz_Torappu_SandboxV2RiftTeamBuffData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxV2RiftTeamBuffData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

teamId():string|null
teamId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

teamName():string|null
teamName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

buffLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

buffDesc():string|null
buffDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
buffDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

teamSmallIconId():string|null
teamSmallIconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamSmallIconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

teamBigIconId():string|null
teamBigIconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamBigIconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

teamDesc():string|null
teamDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

teamBgId():string|null
teamBgId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamBgId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_SandboxV2RiftTeamBuffData(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addTeamId(builder:flatbuffers.Builder, teamIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, teamIdOffset, 0);
}

static addTeamName(builder:flatbuffers.Builder, teamNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, teamNameOffset, 0);
}

static addBuffLevel(builder:flatbuffers.Builder, buffLevel:number) {
  builder.addFieldInt32(2, buffLevel, 0);
}

static addBuffDesc(builder:flatbuffers.Builder, buffDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, buffDescOffset, 0);
}

static addTeamSmallIconId(builder:flatbuffers.Builder, teamSmallIconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, teamSmallIconIdOffset, 0);
}

static addTeamBigIconId(builder:flatbuffers.Builder, teamBigIconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, teamBigIconIdOffset, 0);
}

static addTeamDesc(builder:flatbuffers.Builder, teamDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, teamDescOffset, 0);
}

static addTeamBgId(builder:flatbuffers.Builder, teamBgIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, teamBgIdOffset, 0);
}

static endclz_Torappu_SandboxV2RiftTeamBuffData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxV2RiftTeamBuffData(builder:flatbuffers.Builder, teamIdOffset:flatbuffers.Offset, teamNameOffset:flatbuffers.Offset, buffLevel:number, buffDescOffset:flatbuffers.Offset, teamSmallIconIdOffset:flatbuffers.Offset, teamBigIconIdOffset:flatbuffers.Offset, teamDescOffset:flatbuffers.Offset, teamBgIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SandboxV2RiftTeamBuffData.startclz_Torappu_SandboxV2RiftTeamBuffData(builder);
  clz_Torappu_SandboxV2RiftTeamBuffData.addTeamId(builder, teamIdOffset);
  clz_Torappu_SandboxV2RiftTeamBuffData.addTeamName(builder, teamNameOffset);
  clz_Torappu_SandboxV2RiftTeamBuffData.addBuffLevel(builder, buffLevel);
  clz_Torappu_SandboxV2RiftTeamBuffData.addBuffDesc(builder, buffDescOffset);
  clz_Torappu_SandboxV2RiftTeamBuffData.addTeamSmallIconId(builder, teamSmallIconIdOffset);
  clz_Torappu_SandboxV2RiftTeamBuffData.addTeamBigIconId(builder, teamBigIconIdOffset);
  clz_Torappu_SandboxV2RiftTeamBuffData.addTeamDesc(builder, teamDescOffset);
  clz_Torappu_SandboxV2RiftTeamBuffData.addTeamBgId(builder, teamBgIdOffset);
  return clz_Torappu_SandboxV2RiftTeamBuffData.endclz_Torappu_SandboxV2RiftTeamBuffData(builder);
}

unpack(): clz_Torappu_SandboxV2RiftTeamBuffDataT {
  return new clz_Torappu_SandboxV2RiftTeamBuffDataT(
    this.teamId(),
    this.teamName(),
    this.buffLevel(),
    this.buffDesc(),
    this.teamSmallIconId(),
    this.teamBigIconId(),
    this.teamDesc(),
    this.teamBgId()
  );
}


unpackTo(_o: clz_Torappu_SandboxV2RiftTeamBuffDataT): void {
  _o.teamId = this.teamId();
  _o.teamName = this.teamName();
  _o.buffLevel = this.buffLevel();
  _o.buffDesc = this.buffDesc();
  _o.teamSmallIconId = this.teamSmallIconId();
  _o.teamBigIconId = this.teamBigIconId();
  _o.teamDesc = this.teamDesc();
  _o.teamBgId = this.teamBgId();
}
}

export class clz_Torappu_SandboxV2RiftTeamBuffDataT implements flatbuffers.IGeneratedObject {
constructor(
  public teamId: string|Uint8Array|null = null,
  public teamName: string|Uint8Array|null = null,
  public buffLevel: number = 0,
  public buffDesc: string|Uint8Array|null = null,
  public teamSmallIconId: string|Uint8Array|null = null,
  public teamBigIconId: string|Uint8Array|null = null,
  public teamDesc: string|Uint8Array|null = null,
  public teamBgId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const teamId = (this.teamId !== null ? builder.createString(this.teamId!) : 0);
  const teamName = (this.teamName !== null ? builder.createString(this.teamName!) : 0);
  const buffDesc = (this.buffDesc !== null ? builder.createString(this.buffDesc!) : 0);
  const teamSmallIconId = (this.teamSmallIconId !== null ? builder.createString(this.teamSmallIconId!) : 0);
  const teamBigIconId = (this.teamBigIconId !== null ? builder.createString(this.teamBigIconId!) : 0);
  const teamDesc = (this.teamDesc !== null ? builder.createString(this.teamDesc!) : 0);
  const teamBgId = (this.teamBgId !== null ? builder.createString(this.teamBgId!) : 0);

  return clz_Torappu_SandboxV2RiftTeamBuffData.createclz_Torappu_SandboxV2RiftTeamBuffData(builder,
    teamId,
    teamName,
    this.buffLevel,
    buffDesc,
    teamSmallIconId,
    teamBigIconId,
    teamDesc,
    teamBgId
  );
}
}
