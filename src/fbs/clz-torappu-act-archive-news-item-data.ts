// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActArchiveNewsItemData implements flatbuffers.IUnpackableObject<clz_Torappu_ActArchiveNewsItemDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActArchiveNewsItemData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActArchiveNewsItemData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActArchiveNewsItemData):clz_Torappu_ActArchiveNewsItemData {
  return (obj || new clz_Torappu_ActArchiveNewsItemData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActArchiveNewsItemData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActArchiveNewsItemData):clz_Torappu_ActArchiveNewsItemData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActArchiveNewsItemData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

newsId():string|null
newsId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
newsId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

newsSortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_ActArchiveNewsItemData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addNewsId(builder:flatbuffers.Builder, newsIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, newsIdOffset, 0);
}

static addNewsSortId(builder:flatbuffers.Builder, newsSortId:number) {
  builder.addFieldInt32(1, newsSortId, 0);
}

static endclz_Torappu_ActArchiveNewsItemData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActArchiveNewsItemData(builder:flatbuffers.Builder, newsIdOffset:flatbuffers.Offset, newsSortId:number):flatbuffers.Offset {
  clz_Torappu_ActArchiveNewsItemData.startclz_Torappu_ActArchiveNewsItemData(builder);
  clz_Torappu_ActArchiveNewsItemData.addNewsId(builder, newsIdOffset);
  clz_Torappu_ActArchiveNewsItemData.addNewsSortId(builder, newsSortId);
  return clz_Torappu_ActArchiveNewsItemData.endclz_Torappu_ActArchiveNewsItemData(builder);
}

unpack(): clz_Torappu_ActArchiveNewsItemDataT {
  return new clz_Torappu_ActArchiveNewsItemDataT(
    this.newsId(),
    this.newsSortId()
  );
}


unpackTo(_o: clz_Torappu_ActArchiveNewsItemDataT): void {
  _o.newsId = this.newsId();
  _o.newsSortId = this.newsSortId();
}
}

export class clz_Torappu_ActArchiveNewsItemDataT implements flatbuffers.IGeneratedObject {
constructor(
  public newsId: string|Uint8Array|null = null,
  public newsSortId: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const newsId = (this.newsId !== null ? builder.createString(this.newsId!) : 0);

  return clz_Torappu_ActArchiveNewsItemData.createclz_Torappu_ActArchiveNewsItemData(builder,
    newsId,
    this.newsSortId
  );
}
}
