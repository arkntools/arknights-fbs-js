// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT } from './clz-torappu-item-bundle.js';
import { enum__Torappu_SiracusaData_TaskRingLogicType } from './enum--torappu-siracusa-data-task-ring-logic-type.js';


export class clz_Torappu_SiracusaData_TaskRingData implements flatbuffers.IUnpackableObject<clz_Torappu_SiracusaData_TaskRingDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SiracusaData_TaskRingData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SiracusaData_TaskRingData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SiracusaData_TaskRingData):clz_Torappu_SiracusaData_TaskRingData {
  return (obj || new clz_Torappu_SiracusaData_TaskRingData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SiracusaData_TaskRingData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SiracusaData_TaskRingData):clz_Torappu_SiracusaData_TaskRingData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SiracusaData_TaskRingData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

taskRingId():string|null
taskRingId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
taskRingId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortIndex():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

charCardId():string|null
charCardId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
charCardId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

logicType():enum__Torappu_SiracusaData_TaskRingLogicType {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_SiracusaData_TaskRingLogicType.NONE;
}

ringText():string|null
ringText(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
ringText(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

item(obj?:clz_Torappu_ItemBundle):clz_Torappu_ItemBundle|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new clz_Torappu_ItemBundle()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

isPrecious():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

taskIdList(index: number):string
taskIdList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
taskIdList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

taskIdListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SiracusaData_TaskRingData(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addTaskRingId(builder:flatbuffers.Builder, taskRingIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, taskRingIdOffset, 0);
}

static addSortIndex(builder:flatbuffers.Builder, sortIndex:number) {
  builder.addFieldInt32(1, sortIndex, 0);
}

static addCharCardId(builder:flatbuffers.Builder, charCardIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, charCardIdOffset, 0);
}

static addLogicType(builder:flatbuffers.Builder, logicType:enum__Torappu_SiracusaData_TaskRingLogicType) {
  builder.addFieldInt32(3, logicType, enum__Torappu_SiracusaData_TaskRingLogicType.NONE);
}

static addRingText(builder:flatbuffers.Builder, ringTextOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, ringTextOffset, 0);
}

static addItem(builder:flatbuffers.Builder, itemOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, itemOffset, 0);
}

static addIsPrecious(builder:flatbuffers.Builder, isPrecious:boolean) {
  builder.addFieldInt8(6, +isPrecious, +false);
}

static addTaskIdList(builder:flatbuffers.Builder, taskIdListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, taskIdListOffset, 0);
}

static createTaskIdListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTaskIdListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_SiracusaData_TaskRingData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_SiracusaData_TaskRingDataT {
  return new clz_Torappu_SiracusaData_TaskRingDataT(
    this.taskRingId(),
    this.sortIndex(),
    this.charCardId(),
    this.logicType(),
    this.ringText(),
    (this.item() !== null ? this.item()!.unpack() : null),
    this.isPrecious(),
    this.bb!.createScalarList<string>(this.taskIdList.bind(this), this.taskIdListLength())
  );
}


unpackTo(_o: clz_Torappu_SiracusaData_TaskRingDataT): void {
  _o.taskRingId = this.taskRingId();
  _o.sortIndex = this.sortIndex();
  _o.charCardId = this.charCardId();
  _o.logicType = this.logicType();
  _o.ringText = this.ringText();
  _o.item = (this.item() !== null ? this.item()!.unpack() : null);
  _o.isPrecious = this.isPrecious();
  _o.taskIdList = this.bb!.createScalarList<string>(this.taskIdList.bind(this), this.taskIdListLength());
}
}

export class clz_Torappu_SiracusaData_TaskRingDataT implements flatbuffers.IGeneratedObject {
constructor(
  public taskRingId: string|Uint8Array|null = null,
  public sortIndex: number = 0,
  public charCardId: string|Uint8Array|null = null,
  public logicType: enum__Torappu_SiracusaData_TaskRingLogicType = enum__Torappu_SiracusaData_TaskRingLogicType.NONE,
  public ringText: string|Uint8Array|null = null,
  public item: clz_Torappu_ItemBundleT|null = null,
  public isPrecious: boolean = false,
  public taskIdList: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const taskRingId = (this.taskRingId !== null ? builder.createString(this.taskRingId!) : 0);
  const charCardId = (this.charCardId !== null ? builder.createString(this.charCardId!) : 0);
  const ringText = (this.ringText !== null ? builder.createString(this.ringText!) : 0);
  const item = (this.item !== null ? this.item!.pack(builder) : 0);
  const taskIdList = clz_Torappu_SiracusaData_TaskRingData.createTaskIdListVector(builder, builder.createObjectOffsetList(this.taskIdList));

  clz_Torappu_SiracusaData_TaskRingData.startclz_Torappu_SiracusaData_TaskRingData(builder);
  clz_Torappu_SiracusaData_TaskRingData.addTaskRingId(builder, taskRingId);
  clz_Torappu_SiracusaData_TaskRingData.addSortIndex(builder, this.sortIndex);
  clz_Torappu_SiracusaData_TaskRingData.addCharCardId(builder, charCardId);
  clz_Torappu_SiracusaData_TaskRingData.addLogicType(builder, this.logicType);
  clz_Torappu_SiracusaData_TaskRingData.addRingText(builder, ringText);
  clz_Torappu_SiracusaData_TaskRingData.addItem(builder, item);
  clz_Torappu_SiracusaData_TaskRingData.addIsPrecious(builder, this.isPrecious);
  clz_Torappu_SiracusaData_TaskRingData.addTaskIdList(builder, taskIdList);

  return clz_Torappu_SiracusaData_TaskRingData.endclz_Torappu_SiracusaData_TaskRingData(builder);
}
}
