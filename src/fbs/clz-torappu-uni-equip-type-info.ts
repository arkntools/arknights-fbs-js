// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_UniEquipTypeInfo implements flatbuffers.IUnpackableObject<clz_Torappu_UniEquipTypeInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_UniEquipTypeInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_UniEquipTypeInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_UniEquipTypeInfo):clz_Torappu_UniEquipTypeInfo {
  return (obj || new clz_Torappu_UniEquipTypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_UniEquipTypeInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_UniEquipTypeInfo):clz_Torappu_UniEquipTypeInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_UniEquipTypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

uniEquipTypeName():string|null
uniEquipTypeName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
uniEquipTypeName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

isSpecial():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

isInitial():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startclz_Torappu_UniEquipTypeInfo(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addUniEquipTypeName(builder:flatbuffers.Builder, uniEquipTypeNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, uniEquipTypeNameOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(1, sortId, 0);
}

static addIsSpecial(builder:flatbuffers.Builder, isSpecial:boolean) {
  builder.addFieldInt8(2, +isSpecial, +false);
}

static addIsInitial(builder:flatbuffers.Builder, isInitial:boolean) {
  builder.addFieldInt8(3, +isInitial, +false);
}

static endclz_Torappu_UniEquipTypeInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_UniEquipTypeInfo(builder:flatbuffers.Builder, uniEquipTypeNameOffset:flatbuffers.Offset, sortId:number, isSpecial:boolean, isInitial:boolean):flatbuffers.Offset {
  clz_Torappu_UniEquipTypeInfo.startclz_Torappu_UniEquipTypeInfo(builder);
  clz_Torappu_UniEquipTypeInfo.addUniEquipTypeName(builder, uniEquipTypeNameOffset);
  clz_Torappu_UniEquipTypeInfo.addSortId(builder, sortId);
  clz_Torappu_UniEquipTypeInfo.addIsSpecial(builder, isSpecial);
  clz_Torappu_UniEquipTypeInfo.addIsInitial(builder, isInitial);
  return clz_Torappu_UniEquipTypeInfo.endclz_Torappu_UniEquipTypeInfo(builder);
}

unpack(): clz_Torappu_UniEquipTypeInfoT {
  return new clz_Torappu_UniEquipTypeInfoT(
    this.uniEquipTypeName(),
    this.sortId(),
    this.isSpecial(),
    this.isInitial()
  );
}


unpackTo(_o: clz_Torappu_UniEquipTypeInfoT): void {
  _o.uniEquipTypeName = this.uniEquipTypeName();
  _o.sortId = this.sortId();
  _o.isSpecial = this.isSpecial();
  _o.isInitial = this.isInitial();
}
}

export class clz_Torappu_UniEquipTypeInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public uniEquipTypeName: string|Uint8Array|null = null,
  public sortId: number = 0,
  public isSpecial: boolean = false,
  public isInitial: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const uniEquipTypeName = (this.uniEquipTypeName !== null ? builder.createString(this.uniEquipTypeName!) : 0);

  return clz_Torappu_UniEquipTypeInfo.createclz_Torappu_UniEquipTypeInfo(builder,
    uniEquipTypeName,
    this.sortId,
    this.isSpecial,
    this.isInitial
  );
}
}
