// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_BuildingData_TradingPhase implements flatbuffers.IUnpackableObject<clz_Torappu_BuildingData_TradingPhaseT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_BuildingData_TradingPhase {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_BuildingData_TradingPhase(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_TradingPhase):clz_Torappu_BuildingData_TradingPhase {
  return (obj || new clz_Torappu_BuildingData_TradingPhase()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_BuildingData_TradingPhase(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_TradingPhase):clz_Torappu_BuildingData_TradingPhase {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_BuildingData_TradingPhase()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

orderSpeed():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

orderLimit():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

orderRarity():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_BuildingData_TradingPhase(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addOrderSpeed(builder:flatbuffers.Builder, orderSpeed:number) {
  builder.addFieldFloat32(0, orderSpeed, 0.0);
}

static addOrderLimit(builder:flatbuffers.Builder, orderLimit:number) {
  builder.addFieldInt32(1, orderLimit, 0);
}

static addOrderRarity(builder:flatbuffers.Builder, orderRarity:number) {
  builder.addFieldInt32(2, orderRarity, 0);
}

static endclz_Torappu_BuildingData_TradingPhase(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_BuildingData_TradingPhase(builder:flatbuffers.Builder, orderSpeed:number, orderLimit:number, orderRarity:number):flatbuffers.Offset {
  clz_Torappu_BuildingData_TradingPhase.startclz_Torappu_BuildingData_TradingPhase(builder);
  clz_Torappu_BuildingData_TradingPhase.addOrderSpeed(builder, orderSpeed);
  clz_Torappu_BuildingData_TradingPhase.addOrderLimit(builder, orderLimit);
  clz_Torappu_BuildingData_TradingPhase.addOrderRarity(builder, orderRarity);
  return clz_Torappu_BuildingData_TradingPhase.endclz_Torappu_BuildingData_TradingPhase(builder);
}

unpack(): clz_Torappu_BuildingData_TradingPhaseT {
  return new clz_Torappu_BuildingData_TradingPhaseT(
    this.orderSpeed(),
    this.orderLimit(),
    this.orderRarity()
  );
}


unpackTo(_o: clz_Torappu_BuildingData_TradingPhaseT): void {
  _o.orderSpeed = this.orderSpeed();
  _o.orderLimit = this.orderLimit();
  _o.orderRarity = this.orderRarity();
}
}

export class clz_Torappu_BuildingData_TradingPhaseT implements flatbuffers.IGeneratedObject {
constructor(
  public orderSpeed: number = 0.0,
  public orderLimit: number = 0,
  public orderRarity: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return clz_Torappu_BuildingData_TradingPhase.createclz_Torappu_BuildingData_TradingPhase(builder,
    this.orderSpeed,
    this.orderLimit,
    this.orderRarity
  );
}
}
