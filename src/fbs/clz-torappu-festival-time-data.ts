// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_FestivalTimeInterval, clz_Torappu_FestivalTimeIntervalT } from './clz-torappu-festival-time-interval.js';
import { enum__Torappu_FestivalVoiceTimeType } from './enum--torappu-festival-voice-time-type.js';


export class clz_Torappu_FestivalTimeData implements flatbuffers.IUnpackableObject<clz_Torappu_FestivalTimeDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_FestivalTimeData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_FestivalTimeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_FestivalTimeData):clz_Torappu_FestivalTimeData {
  return (obj || new clz_Torappu_FestivalTimeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_FestivalTimeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_FestivalTimeData):clz_Torappu_FestivalTimeData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_FestivalTimeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

timeType():enum__Torappu_FestivalVoiceTimeType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_FestivalVoiceTimeType.NONE;
}

interval(obj?:clz_Torappu_FestivalTimeInterval):clz_Torappu_FestivalTimeInterval|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new clz_Torappu_FestivalTimeInterval()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startclz_Torappu_FestivalTimeData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addTimeType(builder:flatbuffers.Builder, timeType:enum__Torappu_FestivalVoiceTimeType) {
  builder.addFieldInt32(0, timeType, enum__Torappu_FestivalVoiceTimeType.NONE);
}

static addInterval(builder:flatbuffers.Builder, intervalOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, intervalOffset, 0);
}

static endclz_Torappu_FestivalTimeData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_FestivalTimeDataT {
  return new clz_Torappu_FestivalTimeDataT(
    this.timeType(),
    (this.interval() !== null ? this.interval()!.unpack() : null)
  );
}


unpackTo(_o: clz_Torappu_FestivalTimeDataT): void {
  _o.timeType = this.timeType();
  _o.interval = (this.interval() !== null ? this.interval()!.unpack() : null);
}
}

export class clz_Torappu_FestivalTimeDataT implements flatbuffers.IGeneratedObject {
constructor(
  public timeType: enum__Torappu_FestivalVoiceTimeType = enum__Torappu_FestivalVoiceTimeType.NONE,
  public interval: clz_Torappu_FestivalTimeIntervalT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const interval = (this.interval !== null ? this.interval!.pack(builder) : 0);

  clz_Torappu_FestivalTimeData.startclz_Torappu_FestivalTimeData(builder);
  clz_Torappu_FestivalTimeData.addTimeType(builder, this.timeType);
  clz_Torappu_FestivalTimeData.addInterval(builder, interval);

  return clz_Torappu_FestivalTimeData.endclz_Torappu_FestivalTimeData(builder);
}
}
