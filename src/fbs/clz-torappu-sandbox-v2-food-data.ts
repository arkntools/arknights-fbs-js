// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_SandboxV2FoodRecipeData, clz_Torappu_SandboxV2FoodRecipeDataT } from './clz-torappu-sandbox-v2-food-recipe-data.js';
import { clz_Torappu_SandboxV2FoodVariantData, clz_Torappu_SandboxV2FoodVariantDataT } from './clz-torappu-sandbox-v2-food-variant-data.js';
import { enum__Torappu_SandboxV2FoodAttribute } from './enum--torappu-sandbox-v2-food-attribute.js';


export class clz_Torappu_SandboxV2FoodData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxV2FoodDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxV2FoodData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxV2FoodData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2FoodData):clz_Torappu_SandboxV2FoodData {
  return (obj || new clz_Torappu_SandboxV2FoodData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxV2FoodData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2FoodData):clz_Torappu_SandboxV2FoodData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxV2FoodData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

attributes(index: number):enum__Torappu_SandboxV2FoodAttribute|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : null;
}

attributesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

attributesArray():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

recipes(index: number, obj?:clz_Torappu_SandboxV2FoodRecipeData):clz_Torappu_SandboxV2FoodRecipeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new clz_Torappu_SandboxV2FoodRecipeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

recipesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

variants(index: number, obj?:clz_Torappu_SandboxV2FoodVariantData):clz_Torappu_SandboxV2FoodVariantData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_Torappu_SandboxV2FoodVariantData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

variantsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

duration():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SandboxV2FoodData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addAttributes(builder:flatbuffers.Builder, attributesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, attributesOffset, 0);
}

static createAttributesVector(builder:flatbuffers.Builder, data:enum__Torappu_SandboxV2FoodAttribute[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static startAttributesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRecipes(builder:flatbuffers.Builder, recipesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, recipesOffset, 0);
}

static createRecipesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRecipesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addVariants(builder:flatbuffers.Builder, variantsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, variantsOffset, 0);
}

static createVariantsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startVariantsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addDuration(builder:flatbuffers.Builder, duration:number) {
  builder.addFieldInt32(4, duration, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(5, sortId, 0);
}

static endclz_Torappu_SandboxV2FoodData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxV2FoodData(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset, attributesOffset:flatbuffers.Offset, recipesOffset:flatbuffers.Offset, variantsOffset:flatbuffers.Offset, duration:number, sortId:number):flatbuffers.Offset {
  clz_Torappu_SandboxV2FoodData.startclz_Torappu_SandboxV2FoodData(builder);
  clz_Torappu_SandboxV2FoodData.addId(builder, idOffset);
  clz_Torappu_SandboxV2FoodData.addAttributes(builder, attributesOffset);
  clz_Torappu_SandboxV2FoodData.addRecipes(builder, recipesOffset);
  clz_Torappu_SandboxV2FoodData.addVariants(builder, variantsOffset);
  clz_Torappu_SandboxV2FoodData.addDuration(builder, duration);
  clz_Torappu_SandboxV2FoodData.addSortId(builder, sortId);
  return clz_Torappu_SandboxV2FoodData.endclz_Torappu_SandboxV2FoodData(builder);
}

unpack(): clz_Torappu_SandboxV2FoodDataT {
  return new clz_Torappu_SandboxV2FoodDataT(
    this.id(),
    this.bb!.createScalarList<enum__Torappu_SandboxV2FoodAttribute>(this.attributes.bind(this), this.attributesLength()),
    this.bb!.createObjList<clz_Torappu_SandboxV2FoodRecipeData, clz_Torappu_SandboxV2FoodRecipeDataT>(this.recipes.bind(this), this.recipesLength()),
    this.bb!.createObjList<clz_Torappu_SandboxV2FoodVariantData, clz_Torappu_SandboxV2FoodVariantDataT>(this.variants.bind(this), this.variantsLength()),
    this.duration(),
    this.sortId()
  );
}


unpackTo(_o: clz_Torappu_SandboxV2FoodDataT): void {
  _o.id = this.id();
  _o.attributes = this.bb!.createScalarList<enum__Torappu_SandboxV2FoodAttribute>(this.attributes.bind(this), this.attributesLength());
  _o.recipes = this.bb!.createObjList<clz_Torappu_SandboxV2FoodRecipeData, clz_Torappu_SandboxV2FoodRecipeDataT>(this.recipes.bind(this), this.recipesLength());
  _o.variants = this.bb!.createObjList<clz_Torappu_SandboxV2FoodVariantData, clz_Torappu_SandboxV2FoodVariantDataT>(this.variants.bind(this), this.variantsLength());
  _o.duration = this.duration();
  _o.sortId = this.sortId();
}
}

export class clz_Torappu_SandboxV2FoodDataT implements flatbuffers.IGeneratedObject {
constructor(
  public id: string|Uint8Array|null = null,
  public attributes: (enum__Torappu_SandboxV2FoodAttribute)[] = [],
  public recipes: (clz_Torappu_SandboxV2FoodRecipeDataT)[] = [],
  public variants: (clz_Torappu_SandboxV2FoodVariantDataT)[] = [],
  public duration: number = 0,
  public sortId: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const id = (this.id !== null ? builder.createString(this.id!) : 0);
  const attributes = clz_Torappu_SandboxV2FoodData.createAttributesVector(builder, this.attributes);
  const recipes = clz_Torappu_SandboxV2FoodData.createRecipesVector(builder, builder.createObjectOffsetList(this.recipes));
  const variants = clz_Torappu_SandboxV2FoodData.createVariantsVector(builder, builder.createObjectOffsetList(this.variants));

  return clz_Torappu_SandboxV2FoodData.createclz_Torappu_SandboxV2FoodData(builder,
    id,
    attributes,
    recipes,
    variants,
    this.duration,
    this.sortId
  );
}
}
