// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_WeeklyType } from './enum--torappu-weekly-type.js';


export class clz_Torappu_WeeklyZoneData implements flatbuffers.IUnpackableObject<clz_Torappu_WeeklyZoneDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_WeeklyZoneData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_WeeklyZoneData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_WeeklyZoneData):clz_Torappu_WeeklyZoneData {
  return (obj || new clz_Torappu_WeeklyZoneData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_WeeklyZoneData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_WeeklyZoneData):clz_Torappu_WeeklyZoneData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_WeeklyZoneData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

daysOfWeek(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

daysOfWeekLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

daysOfWeekArray():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

type():enum__Torappu_WeeklyType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_WeeklyType.NONE;
}

static startclz_Torappu_WeeklyZoneData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addDaysOfWeek(builder:flatbuffers.Builder, daysOfWeekOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, daysOfWeekOffset, 0);
}

static createDaysOfWeekVector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static createDaysOfWeekVector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static createDaysOfWeekVector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static startDaysOfWeekVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addType(builder:flatbuffers.Builder, type:enum__Torappu_WeeklyType) {
  builder.addFieldInt32(1, type, enum__Torappu_WeeklyType.NONE);
}

static endclz_Torappu_WeeklyZoneData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_WeeklyZoneData(builder:flatbuffers.Builder, daysOfWeekOffset:flatbuffers.Offset, type:enum__Torappu_WeeklyType):flatbuffers.Offset {
  clz_Torappu_WeeklyZoneData.startclz_Torappu_WeeklyZoneData(builder);
  clz_Torappu_WeeklyZoneData.addDaysOfWeek(builder, daysOfWeekOffset);
  clz_Torappu_WeeklyZoneData.addType(builder, type);
  return clz_Torappu_WeeklyZoneData.endclz_Torappu_WeeklyZoneData(builder);
}

unpack(): clz_Torappu_WeeklyZoneDataT {
  return new clz_Torappu_WeeklyZoneDataT(
    this.bb!.createScalarList<number>(this.daysOfWeek.bind(this), this.daysOfWeekLength()),
    this.type()
  );
}


unpackTo(_o: clz_Torappu_WeeklyZoneDataT): void {
  _o.daysOfWeek = this.bb!.createScalarList<number>(this.daysOfWeek.bind(this), this.daysOfWeekLength());
  _o.type = this.type();
}
}

export class clz_Torappu_WeeklyZoneDataT implements flatbuffers.IGeneratedObject {
constructor(
  public daysOfWeek: (number)[] = [],
  public type: enum__Torappu_WeeklyType = enum__Torappu_WeeklyType.NONE
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const daysOfWeek = clz_Torappu_WeeklyZoneData.createDaysOfWeekVector(builder, this.daysOfWeek);

  return clz_Torappu_WeeklyZoneData.createclz_Torappu_WeeklyZoneData(builder,
    daysOfWeek,
    this.type
  );
}
}
