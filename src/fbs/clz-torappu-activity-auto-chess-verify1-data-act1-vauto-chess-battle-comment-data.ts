// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT } from './clz-torappu-blackboard-data-pair.js';
import { enum__Torappu_Act1VAutoChessCommentReportCountType } from './enum--torappu-act1-vauto-chess-comment-report-count-type.js';


export class clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData implements flatbuffers.IUnpackableObject<clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData):clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData {
  return (obj || new clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData):clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

template():string|null
template(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
template(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

description():string|null
description(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
description(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

reportType():enum__Torappu_Act1VAutoChessCommentReportCountType {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_Act1VAutoChessCommentReportCountType.ONCE;
}

blackboard(index: number, obj?:clz_Torappu_Blackboard_DataPair):clz_Torappu_Blackboard_DataPair|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_Torappu_Blackboard_DataPair()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

blackboardLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addTemplate(builder:flatbuffers.Builder, templateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, templateOffset, 0);
}

static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, descriptionOffset, 0);
}

static addReportType(builder:flatbuffers.Builder, reportType:enum__Torappu_Act1VAutoChessCommentReportCountType) {
  builder.addFieldInt32(2, reportType, enum__Torappu_Act1VAutoChessCommentReportCountType.ONCE);
}

static addBlackboard(builder:flatbuffers.Builder, blackboardOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, blackboardOffset, 0);
}

static createBlackboardVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBlackboardVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData(builder:flatbuffers.Builder, templateOffset:flatbuffers.Offset, descriptionOffset:flatbuffers.Offset, reportType:enum__Torappu_Act1VAutoChessCommentReportCountType, blackboardOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData.startclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData(builder);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData.addTemplate(builder, templateOffset);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData.addDescription(builder, descriptionOffset);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData.addReportType(builder, reportType);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData.addBlackboard(builder, blackboardOffset);
  return clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData.endclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData(builder);
}

unpack(): clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentDataT {
  return new clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentDataT(
    this.template(),
    this.description(),
    this.reportType(),
    this.bb!.createObjList<clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT>(this.blackboard.bind(this), this.blackboardLength())
  );
}


unpackTo(_o: clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentDataT): void {
  _o.template = this.template();
  _o.description = this.description();
  _o.reportType = this.reportType();
  _o.blackboard = this.bb!.createObjList<clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT>(this.blackboard.bind(this), this.blackboardLength());
}
}

export class clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentDataT implements flatbuffers.IGeneratedObject {
constructor(
  public template: string|Uint8Array|null = null,
  public description: string|Uint8Array|null = null,
  public reportType: enum__Torappu_Act1VAutoChessCommentReportCountType = enum__Torappu_Act1VAutoChessCommentReportCountType.ONCE,
  public blackboard: (clz_Torappu_Blackboard_DataPairT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const template = (this.template !== null ? builder.createString(this.template!) : 0);
  const description = (this.description !== null ? builder.createString(this.description!) : 0);
  const blackboard = clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData.createBlackboardVector(builder, builder.createObjectOffsetList(this.blackboard));

  return clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData.createclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessBattleCommentData(builder,
    template,
    description,
    this.reportType,
    blackboard
  );
}
}
