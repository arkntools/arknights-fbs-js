// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SiracusaData_BattleTaskData implements flatbuffers.IUnpackableObject<clz_Torappu_SiracusaData_BattleTaskDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SiracusaData_BattleTaskData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SiracusaData_BattleTaskData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SiracusaData_BattleTaskData):clz_Torappu_SiracusaData_BattleTaskData {
  return (obj || new clz_Torappu_SiracusaData_BattleTaskData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SiracusaData_BattleTaskData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SiracusaData_BattleTaskData):clz_Torappu_SiracusaData_BattleTaskData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SiracusaData_BattleTaskData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

taskId():string|null
taskId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
taskId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

stageId():string|null
stageId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
stageId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

battleTaskDesc():string|null
battleTaskDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
battleTaskDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

targetType():string|null
targetType(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
targetType(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

targetTemplate():string|null
targetTemplate(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
targetTemplate(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

targetParamList(index: number):string
targetParamList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
targetParamList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

targetParamListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SiracusaData_BattleTaskData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addTaskId(builder:flatbuffers.Builder, taskIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, taskIdOffset, 0);
}

static addStageId(builder:flatbuffers.Builder, stageIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, stageIdOffset, 0);
}

static addBattleTaskDesc(builder:flatbuffers.Builder, battleTaskDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, battleTaskDescOffset, 0);
}

static addTargetType(builder:flatbuffers.Builder, targetTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, targetTypeOffset, 0);
}

static addTargetTemplate(builder:flatbuffers.Builder, targetTemplateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, targetTemplateOffset, 0);
}

static addTargetParamList(builder:flatbuffers.Builder, targetParamListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, targetParamListOffset, 0);
}

static createTargetParamListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTargetParamListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_SiracusaData_BattleTaskData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SiracusaData_BattleTaskData(builder:flatbuffers.Builder, taskIdOffset:flatbuffers.Offset, stageIdOffset:flatbuffers.Offset, battleTaskDescOffset:flatbuffers.Offset, targetTypeOffset:flatbuffers.Offset, targetTemplateOffset:flatbuffers.Offset, targetParamListOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SiracusaData_BattleTaskData.startclz_Torappu_SiracusaData_BattleTaskData(builder);
  clz_Torappu_SiracusaData_BattleTaskData.addTaskId(builder, taskIdOffset);
  clz_Torappu_SiracusaData_BattleTaskData.addStageId(builder, stageIdOffset);
  clz_Torappu_SiracusaData_BattleTaskData.addBattleTaskDesc(builder, battleTaskDescOffset);
  clz_Torappu_SiracusaData_BattleTaskData.addTargetType(builder, targetTypeOffset);
  clz_Torappu_SiracusaData_BattleTaskData.addTargetTemplate(builder, targetTemplateOffset);
  clz_Torappu_SiracusaData_BattleTaskData.addTargetParamList(builder, targetParamListOffset);
  return clz_Torappu_SiracusaData_BattleTaskData.endclz_Torappu_SiracusaData_BattleTaskData(builder);
}

unpack(): clz_Torappu_SiracusaData_BattleTaskDataT {
  return new clz_Torappu_SiracusaData_BattleTaskDataT(
    this.taskId(),
    this.stageId(),
    this.battleTaskDesc(),
    this.targetType(),
    this.targetTemplate(),
    this.bb!.createScalarList<string>(this.targetParamList.bind(this), this.targetParamListLength())
  );
}


unpackTo(_o: clz_Torappu_SiracusaData_BattleTaskDataT): void {
  _o.taskId = this.taskId();
  _o.stageId = this.stageId();
  _o.battleTaskDesc = this.battleTaskDesc();
  _o.targetType = this.targetType();
  _o.targetTemplate = this.targetTemplate();
  _o.targetParamList = this.bb!.createScalarList<string>(this.targetParamList.bind(this), this.targetParamListLength());
}
}

export class clz_Torappu_SiracusaData_BattleTaskDataT implements flatbuffers.IGeneratedObject {
constructor(
  public taskId: string|Uint8Array|null = null,
  public stageId: string|Uint8Array|null = null,
  public battleTaskDesc: string|Uint8Array|null = null,
  public targetType: string|Uint8Array|null = null,
  public targetTemplate: string|Uint8Array|null = null,
  public targetParamList: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const taskId = (this.taskId !== null ? builder.createString(this.taskId!) : 0);
  const stageId = (this.stageId !== null ? builder.createString(this.stageId!) : 0);
  const battleTaskDesc = (this.battleTaskDesc !== null ? builder.createString(this.battleTaskDesc!) : 0);
  const targetType = (this.targetType !== null ? builder.createString(this.targetType!) : 0);
  const targetTemplate = (this.targetTemplate !== null ? builder.createString(this.targetTemplate!) : 0);
  const targetParamList = clz_Torappu_SiracusaData_BattleTaskData.createTargetParamListVector(builder, builder.createObjectOffsetList(this.targetParamList));

  return clz_Torappu_SiracusaData_BattleTaskData.createclz_Torappu_SiracusaData_BattleTaskData(builder,
    taskId,
    stageId,
    battleTaskDesc,
    targetType,
    targetTemplate,
    targetParamList
  );
}
}
