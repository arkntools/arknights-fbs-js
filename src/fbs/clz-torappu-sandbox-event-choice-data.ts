// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_SandboxEventChoiceType } from './enum--torappu-sandbox-event-choice-type.js';


export class clz_Torappu_SandboxEventChoiceData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxEventChoiceDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxEventChoiceData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxEventChoiceData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxEventChoiceData):clz_Torappu_SandboxEventChoiceData {
  return (obj || new clz_Torappu_SandboxEventChoiceData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxEventChoiceData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxEventChoiceData):clz_Torappu_SandboxEventChoiceData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxEventChoiceData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

choiceId():string|null
choiceId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
choiceId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

type():enum__Torappu_SandboxEventChoiceType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_SandboxEventChoiceType.LEAVE;
}

costAction():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

finishScene():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

title():string|null
title(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
title(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

description():string|null
description(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
description(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_SandboxEventChoiceData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addChoiceId(builder:flatbuffers.Builder, choiceIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, choiceIdOffset, 0);
}

static addType(builder:flatbuffers.Builder, type:enum__Torappu_SandboxEventChoiceType) {
  builder.addFieldInt32(1, type, enum__Torappu_SandboxEventChoiceType.LEAVE);
}

static addCostAction(builder:flatbuffers.Builder, costAction:number) {
  builder.addFieldInt32(2, costAction, 0);
}

static addFinishScene(builder:flatbuffers.Builder, finishScene:boolean) {
  builder.addFieldInt8(3, +finishScene, +false);
}

static addTitle(builder:flatbuffers.Builder, titleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, titleOffset, 0);
}

static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, descriptionOffset, 0);
}

static endclz_Torappu_SandboxEventChoiceData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxEventChoiceData(builder:flatbuffers.Builder, choiceIdOffset:flatbuffers.Offset, type:enum__Torappu_SandboxEventChoiceType, costAction:number, finishScene:boolean, titleOffset:flatbuffers.Offset, descriptionOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SandboxEventChoiceData.startclz_Torappu_SandboxEventChoiceData(builder);
  clz_Torappu_SandboxEventChoiceData.addChoiceId(builder, choiceIdOffset);
  clz_Torappu_SandboxEventChoiceData.addType(builder, type);
  clz_Torappu_SandboxEventChoiceData.addCostAction(builder, costAction);
  clz_Torappu_SandboxEventChoiceData.addFinishScene(builder, finishScene);
  clz_Torappu_SandboxEventChoiceData.addTitle(builder, titleOffset);
  clz_Torappu_SandboxEventChoiceData.addDescription(builder, descriptionOffset);
  return clz_Torappu_SandboxEventChoiceData.endclz_Torappu_SandboxEventChoiceData(builder);
}

unpack(): clz_Torappu_SandboxEventChoiceDataT {
  return new clz_Torappu_SandboxEventChoiceDataT(
    this.choiceId(),
    this.type(),
    this.costAction(),
    this.finishScene(),
    this.title(),
    this.description()
  );
}


unpackTo(_o: clz_Torappu_SandboxEventChoiceDataT): void {
  _o.choiceId = this.choiceId();
  _o.type = this.type();
  _o.costAction = this.costAction();
  _o.finishScene = this.finishScene();
  _o.title = this.title();
  _o.description = this.description();
}
}

export class clz_Torappu_SandboxEventChoiceDataT implements flatbuffers.IGeneratedObject {
constructor(
  public choiceId: string|Uint8Array|null = null,
  public type: enum__Torappu_SandboxEventChoiceType = enum__Torappu_SandboxEventChoiceType.LEAVE,
  public costAction: number = 0,
  public finishScene: boolean = false,
  public title: string|Uint8Array|null = null,
  public description: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const choiceId = (this.choiceId !== null ? builder.createString(this.choiceId!) : 0);
  const title = (this.title !== null ? builder.createString(this.title!) : 0);
  const description = (this.description !== null ? builder.createString(this.description!) : 0);

  return clz_Torappu_SandboxEventChoiceData.createclz_Torappu_SandboxEventChoiceData(builder,
    choiceId,
    this.type,
    this.costAction,
    this.finishScene,
    title,
    description
  );
}
}
