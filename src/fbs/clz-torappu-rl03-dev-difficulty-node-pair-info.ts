// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_RL03DevDifficultyNodePairInfo implements flatbuffers.IUnpackableObject<clz_Torappu_RL03DevDifficultyNodePairInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RL03DevDifficultyNodePairInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RL03DevDifficultyNodePairInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RL03DevDifficultyNodePairInfo):clz_Torappu_RL03DevDifficultyNodePairInfo {
  return (obj || new clz_Torappu_RL03DevDifficultyNodePairInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RL03DevDifficultyNodePairInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RL03DevDifficultyNodePairInfo):clz_Torappu_RL03DevDifficultyNodePairInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RL03DevDifficultyNodePairInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

frontNode():string|null
frontNode(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
frontNode(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

nextNode():string|null
nextNode(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
nextNode(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_RL03DevDifficultyNodePairInfo(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addFrontNode(builder:flatbuffers.Builder, frontNodeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, frontNodeOffset, 0);
}

static addNextNode(builder:flatbuffers.Builder, nextNodeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nextNodeOffset, 0);
}

static endclz_Torappu_RL03DevDifficultyNodePairInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_RL03DevDifficultyNodePairInfo(builder:flatbuffers.Builder, frontNodeOffset:flatbuffers.Offset, nextNodeOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_RL03DevDifficultyNodePairInfo.startclz_Torappu_RL03DevDifficultyNodePairInfo(builder);
  clz_Torappu_RL03DevDifficultyNodePairInfo.addFrontNode(builder, frontNodeOffset);
  clz_Torappu_RL03DevDifficultyNodePairInfo.addNextNode(builder, nextNodeOffset);
  return clz_Torappu_RL03DevDifficultyNodePairInfo.endclz_Torappu_RL03DevDifficultyNodePairInfo(builder);
}

unpack(): clz_Torappu_RL03DevDifficultyNodePairInfoT {
  return new clz_Torappu_RL03DevDifficultyNodePairInfoT(
    this.frontNode(),
    this.nextNode()
  );
}


unpackTo(_o: clz_Torappu_RL03DevDifficultyNodePairInfoT): void {
  _o.frontNode = this.frontNode();
  _o.nextNode = this.nextNode();
}
}

export class clz_Torappu_RL03DevDifficultyNodePairInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public frontNode: string|Uint8Array|null = null,
  public nextNode: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const frontNode = (this.frontNode !== null ? builder.createString(this.frontNode!) : 0);
  const nextNode = (this.nextNode !== null ? builder.createString(this.nextNode!) : 0);

  return clz_Torappu_RL03DevDifficultyNodePairInfo.createclz_Torappu_RL03DevDifficultyNodePairInfo(builder,
    frontNode,
    nextNode
  );
}
}
