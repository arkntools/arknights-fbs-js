// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_CharPatchData_PatchDetailInfo implements flatbuffers.IUnpackableObject<clz_Torappu_CharPatchData_PatchDetailInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_CharPatchData_PatchDetailInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_CharPatchData_PatchDetailInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CharPatchData_PatchDetailInfo):clz_Torappu_CharPatchData_PatchDetailInfo {
  return (obj || new clz_Torappu_CharPatchData_PatchDetailInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_CharPatchData_PatchDetailInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CharPatchData_PatchDetailInfo):clz_Torappu_CharPatchData_PatchDetailInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_CharPatchData_PatchDetailInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

patchId():string|null
patchId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
patchId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

infoParam():string|null
infoParam(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
infoParam(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

transSortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_CharPatchData_PatchDetailInfo(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addPatchId(builder:flatbuffers.Builder, patchIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, patchIdOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(1, sortId, 0);
}

static addInfoParam(builder:flatbuffers.Builder, infoParamOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, infoParamOffset, 0);
}

static addTransSortId(builder:flatbuffers.Builder, transSortId:number) {
  builder.addFieldInt32(3, transSortId, 0);
}

static endclz_Torappu_CharPatchData_PatchDetailInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_CharPatchData_PatchDetailInfo(builder:flatbuffers.Builder, patchIdOffset:flatbuffers.Offset, sortId:number, infoParamOffset:flatbuffers.Offset, transSortId:number):flatbuffers.Offset {
  clz_Torappu_CharPatchData_PatchDetailInfo.startclz_Torappu_CharPatchData_PatchDetailInfo(builder);
  clz_Torappu_CharPatchData_PatchDetailInfo.addPatchId(builder, patchIdOffset);
  clz_Torappu_CharPatchData_PatchDetailInfo.addSortId(builder, sortId);
  clz_Torappu_CharPatchData_PatchDetailInfo.addInfoParam(builder, infoParamOffset);
  clz_Torappu_CharPatchData_PatchDetailInfo.addTransSortId(builder, transSortId);
  return clz_Torappu_CharPatchData_PatchDetailInfo.endclz_Torappu_CharPatchData_PatchDetailInfo(builder);
}

unpack(): clz_Torappu_CharPatchData_PatchDetailInfoT {
  return new clz_Torappu_CharPatchData_PatchDetailInfoT(
    this.patchId(),
    this.sortId(),
    this.infoParam(),
    this.transSortId()
  );
}


unpackTo(_o: clz_Torappu_CharPatchData_PatchDetailInfoT): void {
  _o.patchId = this.patchId();
  _o.sortId = this.sortId();
  _o.infoParam = this.infoParam();
  _o.transSortId = this.transSortId();
}
}

export class clz_Torappu_CharPatchData_PatchDetailInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public patchId: string|Uint8Array|null = null,
  public sortId: number = 0,
  public infoParam: string|Uint8Array|null = null,
  public transSortId: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const patchId = (this.patchId !== null ? builder.createString(this.patchId!) : 0);
  const infoParam = (this.infoParam !== null ? builder.createString(this.infoParam!) : 0);

  return clz_Torappu_CharPatchData_PatchDetailInfo.createclz_Torappu_CharPatchData_PatchDetailInfo(builder,
    patchId,
    this.sortId,
    infoParam,
    this.transSortId
  );
}
}
