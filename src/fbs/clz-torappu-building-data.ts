// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_BuildingData_ControlRoomBean, clz_Torappu_BuildingData_ControlRoomBeanT } from './clz-torappu-building-data-control-room-bean.js';
import { clz_Torappu_BuildingData_CreditFormula, clz_Torappu_BuildingData_CreditFormulaT } from './clz-torappu-building-data-credit-formula.js';
import { clz_Torappu_BuildingData_CustomData, clz_Torappu_BuildingData_CustomDataT } from './clz-torappu-building-data-custom-data.js';
import { clz_Torappu_BuildingData_HireRoomBean, clz_Torappu_BuildingData_HireRoomBeanT } from './clz-torappu-building-data-hire-room-bean.js';
import { clz_Torappu_BuildingData_ManufactRoomBean, clz_Torappu_BuildingData_ManufactRoomBeanT } from './clz-torappu-building-data-manufact-room-bean.js';
import { clz_Torappu_BuildingData_MeetingRoomBean, clz_Torappu_BuildingData_MeetingRoomBeanT } from './clz-torappu-building-data-meeting-room-bean.js';
import { clz_Torappu_BuildingData_MusicData, clz_Torappu_BuildingData_MusicDataT } from './clz-torappu-building-data-music-data.js';
import { clz_Torappu_BuildingData_PowerRoomBean, clz_Torappu_BuildingData_PowerRoomBeanT } from './clz-torappu-building-data-power-room-bean.js';
import { clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_DormPhase_, clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_DormPhase_T } from './clz-torappu-building-data-room-bean1-torappu-building-data-dorm-phase-.js';
import { clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_PrivatePhase_, clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_PrivatePhase_T } from './clz-torappu-building-data-room-bean1-torappu-building-data-private-phase-.js';
import { clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_ShopPhase_, clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_ShopPhase_T } from './clz-torappu-building-data-room-bean1-torappu-building-data-shop-phase-.js';
import { clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_WorkshopPhase_, clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_WorkshopPhase_T } from './clz-torappu-building-data-room-bean1-torappu-building-data-workshop-phase-.js';
import { clz_Torappu_BuildingData_StationManageConstData, clz_Torappu_BuildingData_StationManageConstDataT } from './clz-torappu-building-data-station-manage-const-data.js';
import { clz_Torappu_BuildingData_TradingRoomBean, clz_Torappu_BuildingData_TradingRoomBeanT } from './clz-torappu-building-data-trading-room-bean.js';
import { clz_Torappu_BuildingData_TrainingBean, clz_Torappu_BuildingData_TrainingBeanT } from './clz-torappu-building-data-training-bean.js';
import { clz_Torappu_BuildingData_WorkshopRarityInfo, clz_Torappu_BuildingData_WorkshopRarityInfoT } from './clz-torappu-building-data-workshop-rarity-info.js';
import { dict__int__clz_Torappu_BuildingData_StationManageFilterInfo, dict__int__clz_Torappu_BuildingData_StationManageFilterInfoT } from './dict--int--clz-torappu-building-data-station-manage-filter-info.js';
import { dict__string__clz_Torappu_BuildingData_BuildingBuff, dict__string__clz_Torappu_BuildingData_BuildingBuffT } from './dict--string--clz-torappu-building-data-building-buff.js';
import { dict__string__clz_Torappu_BuildingData_BuildingCharacter, dict__string__clz_Torappu_BuildingData_BuildingCharacterT } from './dict--string--clz-torappu-building-data-building-character.js';
import { dict__string__clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData, dict__string__clz_Torappu_BuildingData_BuildingRoomTypeBuffSortDataT } from './dict--string--clz-torappu-building-data-building-room-type-buff-sort-data.js';
import { dict__string__clz_Torappu_BuildingData_DormitoryPrequeData, dict__string__clz_Torappu_BuildingData_DormitoryPrequeDataT } from './dict--string--clz-torappu-building-data-dormitory-preque-data.js';
import { dict__string__clz_Torappu_BuildingData_LayoutData, dict__string__clz_Torappu_BuildingData_LayoutDataT } from './dict--string--clz-torappu-building-data-layout-data.js';
import { dict__string__clz_Torappu_BuildingData_ManufactFormula, dict__string__clz_Torappu_BuildingData_ManufactFormulaT } from './dict--string--clz-torappu-building-data-manufact-formula.js';
import { dict__string__clz_Torappu_BuildingData_PrefabInfo, dict__string__clz_Torappu_BuildingData_PrefabInfoT } from './dict--string--clz-torappu-building-data-prefab-info.js';
import { dict__string__clz_Torappu_BuildingData_RoomData, dict__string__clz_Torappu_BuildingData_RoomDataT } from './dict--string--clz-torappu-building-data-room-data.js';
import { dict__string__clz_Torappu_BuildingData_RoomUnlockCond, dict__string__clz_Torappu_BuildingData_RoomUnlockCondT } from './dict--string--clz-torappu-building-data-room-unlock-cond.js';
import { dict__string__clz_Torappu_BuildingData_ShopFormula, dict__string__clz_Torappu_BuildingData_ShopFormulaT } from './dict--string--clz-torappu-building-data-shop-formula.js';
import { dict__string__clz_Torappu_BuildingData_SlotPrequeData, dict__string__clz_Torappu_BuildingData_SlotPrequeDataT } from './dict--string--clz-torappu-building-data-slot-preque-data.js';
import { dict__string__clz_Torappu_BuildingData_WorkshopFormula, dict__string__clz_Torappu_BuildingData_WorkshopFormulaT } from './dict--string--clz-torappu-building-data-workshop-formula.js';
import { dict__string__int, dict__string__intT } from './dict--string--int.js';
import { dict__string__list_string, dict__string__list_stringT } from './dict--string--list-string.js';
import { dict__string__string, dict__string__stringT } from './dict--string--string.js';


export class clz_Torappu_BuildingData implements flatbuffers.IUnpackableObject<clz_Torappu_BuildingDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_BuildingData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_BuildingData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData):clz_Torappu_BuildingData {
  return (obj || new clz_Torappu_BuildingData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_BuildingData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData):clz_Torappu_BuildingData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_BuildingData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

controlSlotId():string|null
controlSlotId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
controlSlotId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

meetingSlotId():string|null
meetingSlotId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
meetingSlotId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

initMaxLabor():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

laborRecoverTime():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

manufactInputCapacity():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

shopCounterCapacity():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

comfortLimit():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

creditInitiativeLimit():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

creditPassiveLimit():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

creditComfortFactor():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

creditGuaranteed():number {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

creditCeiling():number {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

manufactUnlockTips():string|null
manufactUnlockTips(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
manufactUnlockTips(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

shopUnlockTips():string|null
shopUnlockTips(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
shopUnlockTips(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

manufactStationBuff():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

comfortManpowerRecoverFactor():number {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

manpowerDisplayFactor():number {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

shopOutputRatio(index: number, obj?:dict__string__int):dict__string__int|null {
  const offset = this.bb!.__offset(this.bb_pos, 38);
  return offset ? (obj || new dict__string__int()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

shopOutputRatioLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 38);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

shopStackRatio(index: number, obj?:dict__string__int):dict__string__int|null {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? (obj || new dict__string__int()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

shopStackRatioLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

basicFavorPerDay():number {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

humanResourceLimit():number {
  const offset = this.bb!.__offset(this.bb_pos, 44);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

tiredApThreshold():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 46);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

processedCountRatio():number {
  const offset = this.bb!.__offset(this.bb_pos, 48);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

tradingStrategyUnlockLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 50);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

tradingReduceTimeUnit():number {
  const offset = this.bb!.__offset(this.bb_pos, 52);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

tradingLaborCostUnit():number {
  const offset = this.bb!.__offset(this.bb_pos, 54);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

manufactReduceTimeUnit():number {
  const offset = this.bb!.__offset(this.bb_pos, 56);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

manufactLaborCostUnit():number {
  const offset = this.bb!.__offset(this.bb_pos, 58);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

laborAssistUnlockLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 60);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

apToLaborUnlockLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 62);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

apToLaborRatio():number {
  const offset = this.bb!.__offset(this.bb_pos, 64);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

socialResourceLimit():number {
  const offset = this.bb!.__offset(this.bb_pos, 66);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

socialSlotNum():number {
  const offset = this.bb!.__offset(this.bb_pos, 68);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

furniDuplicationLimit():number {
  const offset = this.bb!.__offset(this.bb_pos, 70);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

assistFavorReport():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 72);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

manufactManpowerCostByNum(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 74);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

manufactManpowerCostByNumLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 74);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

manufactManpowerCostByNumArray():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 74);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

tradingManpowerCostByNum(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 76);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

tradingManpowerCostByNumLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 76);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

tradingManpowerCostByNumArray():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 76);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

trainingBonusMax():number {
  const offset = this.bb!.__offset(this.bb_pos, 78);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

betaRemoveTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 80);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

furniHighlightTime():number {
  const offset = this.bb!.__offset(this.bb_pos, 82);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

canNotVisitToast():string|null
canNotVisitToast(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
canNotVisitToast(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 84);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

musicPlayerOpenTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 86);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

roomsWithoutRemoveStaff(index: number):string
roomsWithoutRemoveStaff(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
roomsWithoutRemoveStaff(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 88);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

roomsWithoutRemoveStaffLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 88);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

privateFavorLevelThresholds(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 90);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

privateFavorLevelThresholdsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 90);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

privateFavorLevelThresholdsArray():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 90);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

roomUnlockConds(index: number, obj?:dict__string__clz_Torappu_BuildingData_RoomUnlockCond):dict__string__clz_Torappu_BuildingData_RoomUnlockCond|null {
  const offset = this.bb!.__offset(this.bb_pos, 92);
  return offset ? (obj || new dict__string__clz_Torappu_BuildingData_RoomUnlockCond()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

roomUnlockCondsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 92);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

rooms(index: number, obj?:dict__string__clz_Torappu_BuildingData_RoomData):dict__string__clz_Torappu_BuildingData_RoomData|null {
  const offset = this.bb!.__offset(this.bb_pos, 94);
  return offset ? (obj || new dict__string__clz_Torappu_BuildingData_RoomData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

roomsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 94);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

layouts(index: number, obj?:dict__string__clz_Torappu_BuildingData_LayoutData):dict__string__clz_Torappu_BuildingData_LayoutData|null {
  const offset = this.bb!.__offset(this.bb_pos, 96);
  return offset ? (obj || new dict__string__clz_Torappu_BuildingData_LayoutData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

layoutsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 96);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

prefabs(index: number, obj?:dict__string__clz_Torappu_BuildingData_PrefabInfo):dict__string__clz_Torappu_BuildingData_PrefabInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 98);
  return offset ? (obj || new dict__string__clz_Torappu_BuildingData_PrefabInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

prefabsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 98);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

controlData(obj?:clz_Torappu_BuildingData_ControlRoomBean):clz_Torappu_BuildingData_ControlRoomBean|null {
  const offset = this.bb!.__offset(this.bb_pos, 100);
  return offset ? (obj || new clz_Torappu_BuildingData_ControlRoomBean()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

manufactData(obj?:clz_Torappu_BuildingData_ManufactRoomBean):clz_Torappu_BuildingData_ManufactRoomBean|null {
  const offset = this.bb!.__offset(this.bb_pos, 102);
  return offset ? (obj || new clz_Torappu_BuildingData_ManufactRoomBean()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

shopData(obj?:clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_ShopPhase_):clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_ShopPhase_|null {
  const offset = this.bb!.__offset(this.bb_pos, 104);
  return offset ? (obj || new clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_ShopPhase_()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

hireData(obj?:clz_Torappu_BuildingData_HireRoomBean):clz_Torappu_BuildingData_HireRoomBean|null {
  const offset = this.bb!.__offset(this.bb_pos, 106);
  return offset ? (obj || new clz_Torappu_BuildingData_HireRoomBean()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

dormData(obj?:clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_DormPhase_):clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_DormPhase_|null {
  const offset = this.bb!.__offset(this.bb_pos, 108);
  return offset ? (obj || new clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_DormPhase_()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

privateRoomData(obj?:clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_PrivatePhase_):clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_PrivatePhase_|null {
  const offset = this.bb!.__offset(this.bb_pos, 110);
  return offset ? (obj || new clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_PrivatePhase_()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

meetingData(obj?:clz_Torappu_BuildingData_MeetingRoomBean):clz_Torappu_BuildingData_MeetingRoomBean|null {
  const offset = this.bb!.__offset(this.bb_pos, 112);
  return offset ? (obj || new clz_Torappu_BuildingData_MeetingRoomBean()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

tradingData(obj?:clz_Torappu_BuildingData_TradingRoomBean):clz_Torappu_BuildingData_TradingRoomBean|null {
  const offset = this.bb!.__offset(this.bb_pos, 114);
  return offset ? (obj || new clz_Torappu_BuildingData_TradingRoomBean()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

workshopData(obj?:clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_WorkshopPhase_):clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_WorkshopPhase_|null {
  const offset = this.bb!.__offset(this.bb_pos, 116);
  return offset ? (obj || new clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_WorkshopPhase_()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

trainingData(obj?:clz_Torappu_BuildingData_TrainingBean):clz_Torappu_BuildingData_TrainingBean|null {
  const offset = this.bb!.__offset(this.bb_pos, 118);
  return offset ? (obj || new clz_Torappu_BuildingData_TrainingBean()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

powerData(obj?:clz_Torappu_BuildingData_PowerRoomBean):clz_Torappu_BuildingData_PowerRoomBean|null {
  const offset = this.bb!.__offset(this.bb_pos, 120);
  return offset ? (obj || new clz_Torappu_BuildingData_PowerRoomBean()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

chars(index: number, obj?:dict__string__clz_Torappu_BuildingData_BuildingCharacter):dict__string__clz_Torappu_BuildingData_BuildingCharacter|null {
  const offset = this.bb!.__offset(this.bb_pos, 122);
  return offset ? (obj || new dict__string__clz_Torappu_BuildingData_BuildingCharacter()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

charsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 122);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

buffs(index: number, obj?:dict__string__clz_Torappu_BuildingData_BuildingBuff):dict__string__clz_Torappu_BuildingData_BuildingBuff|null {
  const offset = this.bb!.__offset(this.bb_pos, 124);
  return offset ? (obj || new dict__string__clz_Torappu_BuildingData_BuildingBuff()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

buffsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 124);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

workshopBonus(index: number, obj?:dict__string__list_string):dict__string__list_string|null {
  const offset = this.bb!.__offset(this.bb_pos, 126);
  return offset ? (obj || new dict__string__list_string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

workshopBonusLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 126);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

customData(obj?:clz_Torappu_BuildingData_CustomData):clz_Torappu_BuildingData_CustomData|null {
  const offset = this.bb!.__offset(this.bb_pos, 128);
  return offset ? (obj || new clz_Torappu_BuildingData_CustomData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

manufactFormulas(index: number, obj?:dict__string__clz_Torappu_BuildingData_ManufactFormula):dict__string__clz_Torappu_BuildingData_ManufactFormula|null {
  const offset = this.bb!.__offset(this.bb_pos, 130);
  return offset ? (obj || new dict__string__clz_Torappu_BuildingData_ManufactFormula()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

manufactFormulasLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 130);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

shopFormulas(index: number, obj?:dict__string__clz_Torappu_BuildingData_ShopFormula):dict__string__clz_Torappu_BuildingData_ShopFormula|null {
  const offset = this.bb!.__offset(this.bb_pos, 132);
  return offset ? (obj || new dict__string__clz_Torappu_BuildingData_ShopFormula()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

shopFormulasLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 132);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

workshopFormulas(index: number, obj?:dict__string__clz_Torappu_BuildingData_WorkshopFormula):dict__string__clz_Torappu_BuildingData_WorkshopFormula|null {
  const offset = this.bb!.__offset(this.bb_pos, 134);
  return offset ? (obj || new dict__string__clz_Torappu_BuildingData_WorkshopFormula()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

workshopFormulasLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 134);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

creditFormula(obj?:clz_Torappu_BuildingData_CreditFormula):clz_Torappu_BuildingData_CreditFormula|null {
  const offset = this.bb!.__offset(this.bb_pos, 136);
  return offset ? (obj || new clz_Torappu_BuildingData_CreditFormula()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

goldItems(index: number, obj?:dict__string__int):dict__string__int|null {
  const offset = this.bb!.__offset(this.bb_pos, 138);
  return offset ? (obj || new dict__string__int()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

goldItemsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 138);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

assistantUnlock(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 140);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

assistantUnlockLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 140);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

assistantUnlockArray():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 140);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

workshopRarities(index: number, obj?:clz_Torappu_BuildingData_WorkshopRarityInfo):clz_Torappu_BuildingData_WorkshopRarityInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 142);
  return offset ? (obj || new clz_Torappu_BuildingData_WorkshopRarityInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

workshopRaritiesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 142);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

todoItemSortPriorityDict(index: number, obj?:dict__string__int):dict__string__int|null {
  const offset = this.bb!.__offset(this.bb_pos, 144);
  return offset ? (obj || new dict__string__int()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

todoItemSortPriorityDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 144);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

slotPrequeDatas(index: number, obj?:dict__string__clz_Torappu_BuildingData_SlotPrequeData):dict__string__clz_Torappu_BuildingData_SlotPrequeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 146);
  return offset ? (obj || new dict__string__clz_Torappu_BuildingData_SlotPrequeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

slotPrequeDatasLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 146);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

dormitoryPrequeDatas(index: number, obj?:dict__string__clz_Torappu_BuildingData_DormitoryPrequeData):dict__string__clz_Torappu_BuildingData_DormitoryPrequeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 148);
  return offset ? (obj || new dict__string__clz_Torappu_BuildingData_DormitoryPrequeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

dormitoryPrequeDatasLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 148);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

workshopTargetDesDict(index: number, obj?:dict__string__string):dict__string__string|null {
  const offset = this.bb!.__offset(this.bb_pos, 150);
  return offset ? (obj || new dict__string__string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

workshopTargetDesDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 150);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

tradingOrderDesDict(index: number, obj?:dict__string__string):dict__string__string|null {
  const offset = this.bb!.__offset(this.bb_pos, 152);
  return offset ? (obj || new dict__string__string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

tradingOrderDesDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 152);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

stationManageConstData(obj?:clz_Torappu_BuildingData_StationManageConstData):clz_Torappu_BuildingData_StationManageConstData|null {
  const offset = this.bb!.__offset(this.bb_pos, 154);
  return offset ? (obj || new clz_Torappu_BuildingData_StationManageConstData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

stationManageFilterInfos(index: number, obj?:dict__int__clz_Torappu_BuildingData_StationManageFilterInfo):dict__int__clz_Torappu_BuildingData_StationManageFilterInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 156);
  return offset ? (obj || new dict__int__clz_Torappu_BuildingData_StationManageFilterInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

stationManageFilterInfosLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 156);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

musicData(obj?:clz_Torappu_BuildingData_MusicData):clz_Torappu_BuildingData_MusicData|null {
  const offset = this.bb!.__offset(this.bb_pos, 158);
  return offset ? (obj || new clz_Torappu_BuildingData_MusicData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

emojis(index: number):string
emojis(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
emojis(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 160);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

emojisLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 160);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

categoryNames(index: number, obj?:dict__string__string):dict__string__string|null {
  const offset = this.bb!.__offset(this.bb_pos, 162);
  return offset ? (obj || new dict__string__string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

categoryNamesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 162);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

buffSortData(index: number, obj?:dict__string__clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData):dict__string__clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData|null {
  const offset = this.bb!.__offset(this.bb_pos, 164);
  return offset ? (obj || new dict__string__clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

buffSortDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 164);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_BuildingData(builder:flatbuffers.Builder) {
  builder.startObject(81);
}

static addControlSlotId(builder:flatbuffers.Builder, controlSlotIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, controlSlotIdOffset, 0);
}

static addMeetingSlotId(builder:flatbuffers.Builder, meetingSlotIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, meetingSlotIdOffset, 0);
}

static addInitMaxLabor(builder:flatbuffers.Builder, initMaxLabor:number) {
  builder.addFieldInt32(2, initMaxLabor, 0);
}

static addLaborRecoverTime(builder:flatbuffers.Builder, laborRecoverTime:number) {
  builder.addFieldInt32(3, laborRecoverTime, 0);
}

static addManufactInputCapacity(builder:flatbuffers.Builder, manufactInputCapacity:number) {
  builder.addFieldInt32(4, manufactInputCapacity, 0);
}

static addShopCounterCapacity(builder:flatbuffers.Builder, shopCounterCapacity:number) {
  builder.addFieldInt32(5, shopCounterCapacity, 0);
}

static addComfortLimit(builder:flatbuffers.Builder, comfortLimit:number) {
  builder.addFieldInt32(6, comfortLimit, 0);
}

static addCreditInitiativeLimit(builder:flatbuffers.Builder, creditInitiativeLimit:number) {
  builder.addFieldInt32(7, creditInitiativeLimit, 0);
}

static addCreditPassiveLimit(builder:flatbuffers.Builder, creditPassiveLimit:number) {
  builder.addFieldInt32(8, creditPassiveLimit, 0);
}

static addCreditComfortFactor(builder:flatbuffers.Builder, creditComfortFactor:number) {
  builder.addFieldInt32(9, creditComfortFactor, 0);
}

static addCreditGuaranteed(builder:flatbuffers.Builder, creditGuaranteed:number) {
  builder.addFieldInt32(10, creditGuaranteed, 0);
}

static addCreditCeiling(builder:flatbuffers.Builder, creditCeiling:number) {
  builder.addFieldInt32(11, creditCeiling, 0);
}

static addManufactUnlockTips(builder:flatbuffers.Builder, manufactUnlockTipsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, manufactUnlockTipsOffset, 0);
}

static addShopUnlockTips(builder:flatbuffers.Builder, shopUnlockTipsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, shopUnlockTipsOffset, 0);
}

static addManufactStationBuff(builder:flatbuffers.Builder, manufactStationBuff:number) {
  builder.addFieldFloat32(14, manufactStationBuff, 0.0);
}

static addComfortManpowerRecoverFactor(builder:flatbuffers.Builder, comfortManpowerRecoverFactor:number) {
  builder.addFieldInt32(15, comfortManpowerRecoverFactor, 0);
}

static addManpowerDisplayFactor(builder:flatbuffers.Builder, manpowerDisplayFactor:number) {
  builder.addFieldInt32(16, manpowerDisplayFactor, 0);
}

static addShopOutputRatio(builder:flatbuffers.Builder, shopOutputRatioOffset:flatbuffers.Offset) {
  builder.addFieldOffset(17, shopOutputRatioOffset, 0);
}

static createShopOutputRatioVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startShopOutputRatioVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addShopStackRatio(builder:flatbuffers.Builder, shopStackRatioOffset:flatbuffers.Offset) {
  builder.addFieldOffset(18, shopStackRatioOffset, 0);
}

static createShopStackRatioVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startShopStackRatioVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBasicFavorPerDay(builder:flatbuffers.Builder, basicFavorPerDay:number) {
  builder.addFieldInt32(19, basicFavorPerDay, 0);
}

static addHumanResourceLimit(builder:flatbuffers.Builder, humanResourceLimit:number) {
  builder.addFieldInt32(20, humanResourceLimit, 0);
}

static addTiredApThreshold(builder:flatbuffers.Builder, tiredApThreshold:bigint) {
  builder.addFieldInt64(21, tiredApThreshold, BigInt('0'));
}

static addProcessedCountRatio(builder:flatbuffers.Builder, processedCountRatio:number) {
  builder.addFieldInt32(22, processedCountRatio, 0);
}

static addTradingStrategyUnlockLevel(builder:flatbuffers.Builder, tradingStrategyUnlockLevel:number) {
  builder.addFieldInt32(23, tradingStrategyUnlockLevel, 0);
}

static addTradingReduceTimeUnit(builder:flatbuffers.Builder, tradingReduceTimeUnit:number) {
  builder.addFieldInt32(24, tradingReduceTimeUnit, 0);
}

static addTradingLaborCostUnit(builder:flatbuffers.Builder, tradingLaborCostUnit:number) {
  builder.addFieldInt32(25, tradingLaborCostUnit, 0);
}

static addManufactReduceTimeUnit(builder:flatbuffers.Builder, manufactReduceTimeUnit:number) {
  builder.addFieldInt32(26, manufactReduceTimeUnit, 0);
}

static addManufactLaborCostUnit(builder:flatbuffers.Builder, manufactLaborCostUnit:number) {
  builder.addFieldInt32(27, manufactLaborCostUnit, 0);
}

static addLaborAssistUnlockLevel(builder:flatbuffers.Builder, laborAssistUnlockLevel:number) {
  builder.addFieldInt32(28, laborAssistUnlockLevel, 0);
}

static addApToLaborUnlockLevel(builder:flatbuffers.Builder, apToLaborUnlockLevel:number) {
  builder.addFieldInt32(29, apToLaborUnlockLevel, 0);
}

static addApToLaborRatio(builder:flatbuffers.Builder, apToLaborRatio:number) {
  builder.addFieldInt32(30, apToLaborRatio, 0);
}

static addSocialResourceLimit(builder:flatbuffers.Builder, socialResourceLimit:number) {
  builder.addFieldInt32(31, socialResourceLimit, 0);
}

static addSocialSlotNum(builder:flatbuffers.Builder, socialSlotNum:number) {
  builder.addFieldInt32(32, socialSlotNum, 0);
}

static addFurniDuplicationLimit(builder:flatbuffers.Builder, furniDuplicationLimit:number) {
  builder.addFieldInt32(33, furniDuplicationLimit, 0);
}

static addAssistFavorReport(builder:flatbuffers.Builder, assistFavorReport:bigint) {
  builder.addFieldInt64(34, assistFavorReport, BigInt('0'));
}

static addManufactManpowerCostByNum(builder:flatbuffers.Builder, manufactManpowerCostByNumOffset:flatbuffers.Offset) {
  builder.addFieldOffset(35, manufactManpowerCostByNumOffset, 0);
}

static createManufactManpowerCostByNumVector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static createManufactManpowerCostByNumVector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static createManufactManpowerCostByNumVector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static startManufactManpowerCostByNumVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTradingManpowerCostByNum(builder:flatbuffers.Builder, tradingManpowerCostByNumOffset:flatbuffers.Offset) {
  builder.addFieldOffset(36, tradingManpowerCostByNumOffset, 0);
}

static createTradingManpowerCostByNumVector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static createTradingManpowerCostByNumVector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static createTradingManpowerCostByNumVector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static startTradingManpowerCostByNumVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTrainingBonusMax(builder:flatbuffers.Builder, trainingBonusMax:number) {
  builder.addFieldInt32(37, trainingBonusMax, 0);
}

static addBetaRemoveTime(builder:flatbuffers.Builder, betaRemoveTime:bigint) {
  builder.addFieldInt64(38, betaRemoveTime, BigInt('0'));
}

static addFurniHighlightTime(builder:flatbuffers.Builder, furniHighlightTime:number) {
  builder.addFieldFloat32(39, furniHighlightTime, 0.0);
}

static addCanNotVisitToast(builder:flatbuffers.Builder, canNotVisitToastOffset:flatbuffers.Offset) {
  builder.addFieldOffset(40, canNotVisitToastOffset, 0);
}

static addMusicPlayerOpenTime(builder:flatbuffers.Builder, musicPlayerOpenTime:bigint) {
  builder.addFieldInt64(41, musicPlayerOpenTime, BigInt('0'));
}

static addRoomsWithoutRemoveStaff(builder:flatbuffers.Builder, roomsWithoutRemoveStaffOffset:flatbuffers.Offset) {
  builder.addFieldOffset(42, roomsWithoutRemoveStaffOffset, 0);
}

static createRoomsWithoutRemoveStaffVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRoomsWithoutRemoveStaffVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addPrivateFavorLevelThresholds(builder:flatbuffers.Builder, privateFavorLevelThresholdsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(43, privateFavorLevelThresholdsOffset, 0);
}

static createPrivateFavorLevelThresholdsVector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static createPrivateFavorLevelThresholdsVector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static createPrivateFavorLevelThresholdsVector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static startPrivateFavorLevelThresholdsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRoomUnlockConds(builder:flatbuffers.Builder, roomUnlockCondsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(44, roomUnlockCondsOffset, 0);
}

static createRoomUnlockCondsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRoomUnlockCondsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRooms(builder:flatbuffers.Builder, roomsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(45, roomsOffset, 0);
}

static createRoomsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRoomsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addLayouts(builder:flatbuffers.Builder, layoutsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(46, layoutsOffset, 0);
}

static createLayoutsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startLayoutsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addPrefabs(builder:flatbuffers.Builder, prefabsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(47, prefabsOffset, 0);
}

static createPrefabsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPrefabsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addControlData(builder:flatbuffers.Builder, controlDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(48, controlDataOffset, 0);
}

static addManufactData(builder:flatbuffers.Builder, manufactDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(49, manufactDataOffset, 0);
}

static addShopData(builder:flatbuffers.Builder, shopDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(50, shopDataOffset, 0);
}

static addHireData(builder:flatbuffers.Builder, hireDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(51, hireDataOffset, 0);
}

static addDormData(builder:flatbuffers.Builder, dormDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(52, dormDataOffset, 0);
}

static addPrivateRoomData(builder:flatbuffers.Builder, privateRoomDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(53, privateRoomDataOffset, 0);
}

static addMeetingData(builder:flatbuffers.Builder, meetingDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(54, meetingDataOffset, 0);
}

static addTradingData(builder:flatbuffers.Builder, tradingDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(55, tradingDataOffset, 0);
}

static addWorkshopData(builder:flatbuffers.Builder, workshopDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(56, workshopDataOffset, 0);
}

static addTrainingData(builder:flatbuffers.Builder, trainingDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(57, trainingDataOffset, 0);
}

static addPowerData(builder:flatbuffers.Builder, powerDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(58, powerDataOffset, 0);
}

static addChars(builder:flatbuffers.Builder, charsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(59, charsOffset, 0);
}

static createCharsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCharsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBuffs(builder:flatbuffers.Builder, buffsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(60, buffsOffset, 0);
}

static createBuffsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBuffsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addWorkshopBonus(builder:flatbuffers.Builder, workshopBonusOffset:flatbuffers.Offset) {
  builder.addFieldOffset(61, workshopBonusOffset, 0);
}

static createWorkshopBonusVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startWorkshopBonusVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCustomData(builder:flatbuffers.Builder, customDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(62, customDataOffset, 0);
}

static addManufactFormulas(builder:flatbuffers.Builder, manufactFormulasOffset:flatbuffers.Offset) {
  builder.addFieldOffset(63, manufactFormulasOffset, 0);
}

static createManufactFormulasVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startManufactFormulasVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addShopFormulas(builder:flatbuffers.Builder, shopFormulasOffset:flatbuffers.Offset) {
  builder.addFieldOffset(64, shopFormulasOffset, 0);
}

static createShopFormulasVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startShopFormulasVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addWorkshopFormulas(builder:flatbuffers.Builder, workshopFormulasOffset:flatbuffers.Offset) {
  builder.addFieldOffset(65, workshopFormulasOffset, 0);
}

static createWorkshopFormulasVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startWorkshopFormulasVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCreditFormula(builder:flatbuffers.Builder, creditFormulaOffset:flatbuffers.Offset) {
  builder.addFieldOffset(66, creditFormulaOffset, 0);
}

static addGoldItems(builder:flatbuffers.Builder, goldItemsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(67, goldItemsOffset, 0);
}

static createGoldItemsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startGoldItemsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addAssistantUnlock(builder:flatbuffers.Builder, assistantUnlockOffset:flatbuffers.Offset) {
  builder.addFieldOffset(68, assistantUnlockOffset, 0);
}

static createAssistantUnlockVector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static createAssistantUnlockVector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static createAssistantUnlockVector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static startAssistantUnlockVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addWorkshopRarities(builder:flatbuffers.Builder, workshopRaritiesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(69, workshopRaritiesOffset, 0);
}

static createWorkshopRaritiesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startWorkshopRaritiesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTodoItemSortPriorityDict(builder:flatbuffers.Builder, todoItemSortPriorityDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(70, todoItemSortPriorityDictOffset, 0);
}

static createTodoItemSortPriorityDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTodoItemSortPriorityDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addSlotPrequeDatas(builder:flatbuffers.Builder, slotPrequeDatasOffset:flatbuffers.Offset) {
  builder.addFieldOffset(71, slotPrequeDatasOffset, 0);
}

static createSlotPrequeDatasVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startSlotPrequeDatasVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addDormitoryPrequeDatas(builder:flatbuffers.Builder, dormitoryPrequeDatasOffset:flatbuffers.Offset) {
  builder.addFieldOffset(72, dormitoryPrequeDatasOffset, 0);
}

static createDormitoryPrequeDatasVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startDormitoryPrequeDatasVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addWorkshopTargetDesDict(builder:flatbuffers.Builder, workshopTargetDesDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(73, workshopTargetDesDictOffset, 0);
}

static createWorkshopTargetDesDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startWorkshopTargetDesDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTradingOrderDesDict(builder:flatbuffers.Builder, tradingOrderDesDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(74, tradingOrderDesDictOffset, 0);
}

static createTradingOrderDesDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTradingOrderDesDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addStationManageConstData(builder:flatbuffers.Builder, stationManageConstDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(75, stationManageConstDataOffset, 0);
}

static addStationManageFilterInfos(builder:flatbuffers.Builder, stationManageFilterInfosOffset:flatbuffers.Offset) {
  builder.addFieldOffset(76, stationManageFilterInfosOffset, 0);
}

static createStationManageFilterInfosVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startStationManageFilterInfosVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addMusicData(builder:flatbuffers.Builder, musicDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(77, musicDataOffset, 0);
}

static addEmojis(builder:flatbuffers.Builder, emojisOffset:flatbuffers.Offset) {
  builder.addFieldOffset(78, emojisOffset, 0);
}

static createEmojisVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEmojisVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCategoryNames(builder:flatbuffers.Builder, categoryNamesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(79, categoryNamesOffset, 0);
}

static createCategoryNamesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCategoryNamesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBuffSortData(builder:flatbuffers.Builder, buffSortDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(80, buffSortDataOffset, 0);
}

static createBuffSortDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBuffSortDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_BuildingData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishclz_Torappu_BuildingDataBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedclz_Torappu_BuildingDataBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}


unpack(): clz_Torappu_BuildingDataT {
  return new clz_Torappu_BuildingDataT(
    this.controlSlotId(),
    this.meetingSlotId(),
    this.initMaxLabor(),
    this.laborRecoverTime(),
    this.manufactInputCapacity(),
    this.shopCounterCapacity(),
    this.comfortLimit(),
    this.creditInitiativeLimit(),
    this.creditPassiveLimit(),
    this.creditComfortFactor(),
    this.creditGuaranteed(),
    this.creditCeiling(),
    this.manufactUnlockTips(),
    this.shopUnlockTips(),
    this.manufactStationBuff(),
    this.comfortManpowerRecoverFactor(),
    this.manpowerDisplayFactor(),
    this.bb!.createObjList<dict__string__int, dict__string__intT>(this.shopOutputRatio.bind(this), this.shopOutputRatioLength()),
    this.bb!.createObjList<dict__string__int, dict__string__intT>(this.shopStackRatio.bind(this), this.shopStackRatioLength()),
    this.basicFavorPerDay(),
    this.humanResourceLimit(),
    this.tiredApThreshold(),
    this.processedCountRatio(),
    this.tradingStrategyUnlockLevel(),
    this.tradingReduceTimeUnit(),
    this.tradingLaborCostUnit(),
    this.manufactReduceTimeUnit(),
    this.manufactLaborCostUnit(),
    this.laborAssistUnlockLevel(),
    this.apToLaborUnlockLevel(),
    this.apToLaborRatio(),
    this.socialResourceLimit(),
    this.socialSlotNum(),
    this.furniDuplicationLimit(),
    this.assistFavorReport(),
    this.bb!.createScalarList<number>(this.manufactManpowerCostByNum.bind(this), this.manufactManpowerCostByNumLength()),
    this.bb!.createScalarList<number>(this.tradingManpowerCostByNum.bind(this), this.tradingManpowerCostByNumLength()),
    this.trainingBonusMax(),
    this.betaRemoveTime(),
    this.furniHighlightTime(),
    this.canNotVisitToast(),
    this.musicPlayerOpenTime(),
    this.bb!.createScalarList<string>(this.roomsWithoutRemoveStaff.bind(this), this.roomsWithoutRemoveStaffLength()),
    this.bb!.createScalarList<number>(this.privateFavorLevelThresholds.bind(this), this.privateFavorLevelThresholdsLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_RoomUnlockCond, dict__string__clz_Torappu_BuildingData_RoomUnlockCondT>(this.roomUnlockConds.bind(this), this.roomUnlockCondsLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_RoomData, dict__string__clz_Torappu_BuildingData_RoomDataT>(this.rooms.bind(this), this.roomsLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_LayoutData, dict__string__clz_Torappu_BuildingData_LayoutDataT>(this.layouts.bind(this), this.layoutsLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_PrefabInfo, dict__string__clz_Torappu_BuildingData_PrefabInfoT>(this.prefabs.bind(this), this.prefabsLength()),
    (this.controlData() !== null ? this.controlData()!.unpack() : null),
    (this.manufactData() !== null ? this.manufactData()!.unpack() : null),
    (this.shopData() !== null ? this.shopData()!.unpack() : null),
    (this.hireData() !== null ? this.hireData()!.unpack() : null),
    (this.dormData() !== null ? this.dormData()!.unpack() : null),
    (this.privateRoomData() !== null ? this.privateRoomData()!.unpack() : null),
    (this.meetingData() !== null ? this.meetingData()!.unpack() : null),
    (this.tradingData() !== null ? this.tradingData()!.unpack() : null),
    (this.workshopData() !== null ? this.workshopData()!.unpack() : null),
    (this.trainingData() !== null ? this.trainingData()!.unpack() : null),
    (this.powerData() !== null ? this.powerData()!.unpack() : null),
    this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_BuildingCharacter, dict__string__clz_Torappu_BuildingData_BuildingCharacterT>(this.chars.bind(this), this.charsLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_BuildingBuff, dict__string__clz_Torappu_BuildingData_BuildingBuffT>(this.buffs.bind(this), this.buffsLength()),
    this.bb!.createObjList<dict__string__list_string, dict__string__list_stringT>(this.workshopBonus.bind(this), this.workshopBonusLength()),
    (this.customData() !== null ? this.customData()!.unpack() : null),
    this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_ManufactFormula, dict__string__clz_Torappu_BuildingData_ManufactFormulaT>(this.manufactFormulas.bind(this), this.manufactFormulasLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_ShopFormula, dict__string__clz_Torappu_BuildingData_ShopFormulaT>(this.shopFormulas.bind(this), this.shopFormulasLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_WorkshopFormula, dict__string__clz_Torappu_BuildingData_WorkshopFormulaT>(this.workshopFormulas.bind(this), this.workshopFormulasLength()),
    (this.creditFormula() !== null ? this.creditFormula()!.unpack() : null),
    this.bb!.createObjList<dict__string__int, dict__string__intT>(this.goldItems.bind(this), this.goldItemsLength()),
    this.bb!.createScalarList<number>(this.assistantUnlock.bind(this), this.assistantUnlockLength()),
    this.bb!.createObjList<clz_Torappu_BuildingData_WorkshopRarityInfo, clz_Torappu_BuildingData_WorkshopRarityInfoT>(this.workshopRarities.bind(this), this.workshopRaritiesLength()),
    this.bb!.createObjList<dict__string__int, dict__string__intT>(this.todoItemSortPriorityDict.bind(this), this.todoItemSortPriorityDictLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_SlotPrequeData, dict__string__clz_Torappu_BuildingData_SlotPrequeDataT>(this.slotPrequeDatas.bind(this), this.slotPrequeDatasLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_DormitoryPrequeData, dict__string__clz_Torappu_BuildingData_DormitoryPrequeDataT>(this.dormitoryPrequeDatas.bind(this), this.dormitoryPrequeDatasLength()),
    this.bb!.createObjList<dict__string__string, dict__string__stringT>(this.workshopTargetDesDict.bind(this), this.workshopTargetDesDictLength()),
    this.bb!.createObjList<dict__string__string, dict__string__stringT>(this.tradingOrderDesDict.bind(this), this.tradingOrderDesDictLength()),
    (this.stationManageConstData() !== null ? this.stationManageConstData()!.unpack() : null),
    this.bb!.createObjList<dict__int__clz_Torappu_BuildingData_StationManageFilterInfo, dict__int__clz_Torappu_BuildingData_StationManageFilterInfoT>(this.stationManageFilterInfos.bind(this), this.stationManageFilterInfosLength()),
    (this.musicData() !== null ? this.musicData()!.unpack() : null),
    this.bb!.createScalarList<string>(this.emojis.bind(this), this.emojisLength()),
    this.bb!.createObjList<dict__string__string, dict__string__stringT>(this.categoryNames.bind(this), this.categoryNamesLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData, dict__string__clz_Torappu_BuildingData_BuildingRoomTypeBuffSortDataT>(this.buffSortData.bind(this), this.buffSortDataLength())
  );
}


unpackTo(_o: clz_Torappu_BuildingDataT): void {
  _o.controlSlotId = this.controlSlotId();
  _o.meetingSlotId = this.meetingSlotId();
  _o.initMaxLabor = this.initMaxLabor();
  _o.laborRecoverTime = this.laborRecoverTime();
  _o.manufactInputCapacity = this.manufactInputCapacity();
  _o.shopCounterCapacity = this.shopCounterCapacity();
  _o.comfortLimit = this.comfortLimit();
  _o.creditInitiativeLimit = this.creditInitiativeLimit();
  _o.creditPassiveLimit = this.creditPassiveLimit();
  _o.creditComfortFactor = this.creditComfortFactor();
  _o.creditGuaranteed = this.creditGuaranteed();
  _o.creditCeiling = this.creditCeiling();
  _o.manufactUnlockTips = this.manufactUnlockTips();
  _o.shopUnlockTips = this.shopUnlockTips();
  _o.manufactStationBuff = this.manufactStationBuff();
  _o.comfortManpowerRecoverFactor = this.comfortManpowerRecoverFactor();
  _o.manpowerDisplayFactor = this.manpowerDisplayFactor();
  _o.shopOutputRatio = this.bb!.createObjList<dict__string__int, dict__string__intT>(this.shopOutputRatio.bind(this), this.shopOutputRatioLength());
  _o.shopStackRatio = this.bb!.createObjList<dict__string__int, dict__string__intT>(this.shopStackRatio.bind(this), this.shopStackRatioLength());
  _o.basicFavorPerDay = this.basicFavorPerDay();
  _o.humanResourceLimit = this.humanResourceLimit();
  _o.tiredApThreshold = this.tiredApThreshold();
  _o.processedCountRatio = this.processedCountRatio();
  _o.tradingStrategyUnlockLevel = this.tradingStrategyUnlockLevel();
  _o.tradingReduceTimeUnit = this.tradingReduceTimeUnit();
  _o.tradingLaborCostUnit = this.tradingLaborCostUnit();
  _o.manufactReduceTimeUnit = this.manufactReduceTimeUnit();
  _o.manufactLaborCostUnit = this.manufactLaborCostUnit();
  _o.laborAssistUnlockLevel = this.laborAssistUnlockLevel();
  _o.apToLaborUnlockLevel = this.apToLaborUnlockLevel();
  _o.apToLaborRatio = this.apToLaborRatio();
  _o.socialResourceLimit = this.socialResourceLimit();
  _o.socialSlotNum = this.socialSlotNum();
  _o.furniDuplicationLimit = this.furniDuplicationLimit();
  _o.assistFavorReport = this.assistFavorReport();
  _o.manufactManpowerCostByNum = this.bb!.createScalarList<number>(this.manufactManpowerCostByNum.bind(this), this.manufactManpowerCostByNumLength());
  _o.tradingManpowerCostByNum = this.bb!.createScalarList<number>(this.tradingManpowerCostByNum.bind(this), this.tradingManpowerCostByNumLength());
  _o.trainingBonusMax = this.trainingBonusMax();
  _o.betaRemoveTime = this.betaRemoveTime();
  _o.furniHighlightTime = this.furniHighlightTime();
  _o.canNotVisitToast = this.canNotVisitToast();
  _o.musicPlayerOpenTime = this.musicPlayerOpenTime();
  _o.roomsWithoutRemoveStaff = this.bb!.createScalarList<string>(this.roomsWithoutRemoveStaff.bind(this), this.roomsWithoutRemoveStaffLength());
  _o.privateFavorLevelThresholds = this.bb!.createScalarList<number>(this.privateFavorLevelThresholds.bind(this), this.privateFavorLevelThresholdsLength());
  _o.roomUnlockConds = this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_RoomUnlockCond, dict__string__clz_Torappu_BuildingData_RoomUnlockCondT>(this.roomUnlockConds.bind(this), this.roomUnlockCondsLength());
  _o.rooms = this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_RoomData, dict__string__clz_Torappu_BuildingData_RoomDataT>(this.rooms.bind(this), this.roomsLength());
  _o.layouts = this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_LayoutData, dict__string__clz_Torappu_BuildingData_LayoutDataT>(this.layouts.bind(this), this.layoutsLength());
  _o.prefabs = this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_PrefabInfo, dict__string__clz_Torappu_BuildingData_PrefabInfoT>(this.prefabs.bind(this), this.prefabsLength());
  _o.controlData = (this.controlData() !== null ? this.controlData()!.unpack() : null);
  _o.manufactData = (this.manufactData() !== null ? this.manufactData()!.unpack() : null);
  _o.shopData = (this.shopData() !== null ? this.shopData()!.unpack() : null);
  _o.hireData = (this.hireData() !== null ? this.hireData()!.unpack() : null);
  _o.dormData = (this.dormData() !== null ? this.dormData()!.unpack() : null);
  _o.privateRoomData = (this.privateRoomData() !== null ? this.privateRoomData()!.unpack() : null);
  _o.meetingData = (this.meetingData() !== null ? this.meetingData()!.unpack() : null);
  _o.tradingData = (this.tradingData() !== null ? this.tradingData()!.unpack() : null);
  _o.workshopData = (this.workshopData() !== null ? this.workshopData()!.unpack() : null);
  _o.trainingData = (this.trainingData() !== null ? this.trainingData()!.unpack() : null);
  _o.powerData = (this.powerData() !== null ? this.powerData()!.unpack() : null);
  _o.chars = this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_BuildingCharacter, dict__string__clz_Torappu_BuildingData_BuildingCharacterT>(this.chars.bind(this), this.charsLength());
  _o.buffs = this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_BuildingBuff, dict__string__clz_Torappu_BuildingData_BuildingBuffT>(this.buffs.bind(this), this.buffsLength());
  _o.workshopBonus = this.bb!.createObjList<dict__string__list_string, dict__string__list_stringT>(this.workshopBonus.bind(this), this.workshopBonusLength());
  _o.customData = (this.customData() !== null ? this.customData()!.unpack() : null);
  _o.manufactFormulas = this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_ManufactFormula, dict__string__clz_Torappu_BuildingData_ManufactFormulaT>(this.manufactFormulas.bind(this), this.manufactFormulasLength());
  _o.shopFormulas = this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_ShopFormula, dict__string__clz_Torappu_BuildingData_ShopFormulaT>(this.shopFormulas.bind(this), this.shopFormulasLength());
  _o.workshopFormulas = this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_WorkshopFormula, dict__string__clz_Torappu_BuildingData_WorkshopFormulaT>(this.workshopFormulas.bind(this), this.workshopFormulasLength());
  _o.creditFormula = (this.creditFormula() !== null ? this.creditFormula()!.unpack() : null);
  _o.goldItems = this.bb!.createObjList<dict__string__int, dict__string__intT>(this.goldItems.bind(this), this.goldItemsLength());
  _o.assistantUnlock = this.bb!.createScalarList<number>(this.assistantUnlock.bind(this), this.assistantUnlockLength());
  _o.workshopRarities = this.bb!.createObjList<clz_Torappu_BuildingData_WorkshopRarityInfo, clz_Torappu_BuildingData_WorkshopRarityInfoT>(this.workshopRarities.bind(this), this.workshopRaritiesLength());
  _o.todoItemSortPriorityDict = this.bb!.createObjList<dict__string__int, dict__string__intT>(this.todoItemSortPriorityDict.bind(this), this.todoItemSortPriorityDictLength());
  _o.slotPrequeDatas = this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_SlotPrequeData, dict__string__clz_Torappu_BuildingData_SlotPrequeDataT>(this.slotPrequeDatas.bind(this), this.slotPrequeDatasLength());
  _o.dormitoryPrequeDatas = this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_DormitoryPrequeData, dict__string__clz_Torappu_BuildingData_DormitoryPrequeDataT>(this.dormitoryPrequeDatas.bind(this), this.dormitoryPrequeDatasLength());
  _o.workshopTargetDesDict = this.bb!.createObjList<dict__string__string, dict__string__stringT>(this.workshopTargetDesDict.bind(this), this.workshopTargetDesDictLength());
  _o.tradingOrderDesDict = this.bb!.createObjList<dict__string__string, dict__string__stringT>(this.tradingOrderDesDict.bind(this), this.tradingOrderDesDictLength());
  _o.stationManageConstData = (this.stationManageConstData() !== null ? this.stationManageConstData()!.unpack() : null);
  _o.stationManageFilterInfos = this.bb!.createObjList<dict__int__clz_Torappu_BuildingData_StationManageFilterInfo, dict__int__clz_Torappu_BuildingData_StationManageFilterInfoT>(this.stationManageFilterInfos.bind(this), this.stationManageFilterInfosLength());
  _o.musicData = (this.musicData() !== null ? this.musicData()!.unpack() : null);
  _o.emojis = this.bb!.createScalarList<string>(this.emojis.bind(this), this.emojisLength());
  _o.categoryNames = this.bb!.createObjList<dict__string__string, dict__string__stringT>(this.categoryNames.bind(this), this.categoryNamesLength());
  _o.buffSortData = this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData, dict__string__clz_Torappu_BuildingData_BuildingRoomTypeBuffSortDataT>(this.buffSortData.bind(this), this.buffSortDataLength());
}
}

export class clz_Torappu_BuildingDataT implements flatbuffers.IGeneratedObject {
constructor(
  public controlSlotId: string|Uint8Array|null = null,
  public meetingSlotId: string|Uint8Array|null = null,
  public initMaxLabor: number = 0,
  public laborRecoverTime: number = 0,
  public manufactInputCapacity: number = 0,
  public shopCounterCapacity: number = 0,
  public comfortLimit: number = 0,
  public creditInitiativeLimit: number = 0,
  public creditPassiveLimit: number = 0,
  public creditComfortFactor: number = 0,
  public creditGuaranteed: number = 0,
  public creditCeiling: number = 0,
  public manufactUnlockTips: string|Uint8Array|null = null,
  public shopUnlockTips: string|Uint8Array|null = null,
  public manufactStationBuff: number = 0.0,
  public comfortManpowerRecoverFactor: number = 0,
  public manpowerDisplayFactor: number = 0,
  public shopOutputRatio: (dict__string__intT)[] = [],
  public shopStackRatio: (dict__string__intT)[] = [],
  public basicFavorPerDay: number = 0,
  public humanResourceLimit: number = 0,
  public tiredApThreshold: bigint = BigInt('0'),
  public processedCountRatio: number = 0,
  public tradingStrategyUnlockLevel: number = 0,
  public tradingReduceTimeUnit: number = 0,
  public tradingLaborCostUnit: number = 0,
  public manufactReduceTimeUnit: number = 0,
  public manufactLaborCostUnit: number = 0,
  public laborAssistUnlockLevel: number = 0,
  public apToLaborUnlockLevel: number = 0,
  public apToLaborRatio: number = 0,
  public socialResourceLimit: number = 0,
  public socialSlotNum: number = 0,
  public furniDuplicationLimit: number = 0,
  public assistFavorReport: bigint = BigInt('0'),
  public manufactManpowerCostByNum: (number)[] = [],
  public tradingManpowerCostByNum: (number)[] = [],
  public trainingBonusMax: number = 0,
  public betaRemoveTime: bigint = BigInt('0'),
  public furniHighlightTime: number = 0.0,
  public canNotVisitToast: string|Uint8Array|null = null,
  public musicPlayerOpenTime: bigint = BigInt('0'),
  public roomsWithoutRemoveStaff: (string)[] = [],
  public privateFavorLevelThresholds: (number)[] = [],
  public roomUnlockConds: (dict__string__clz_Torappu_BuildingData_RoomUnlockCondT)[] = [],
  public rooms: (dict__string__clz_Torappu_BuildingData_RoomDataT)[] = [],
  public layouts: (dict__string__clz_Torappu_BuildingData_LayoutDataT)[] = [],
  public prefabs: (dict__string__clz_Torappu_BuildingData_PrefabInfoT)[] = [],
  public controlData: clz_Torappu_BuildingData_ControlRoomBeanT|null = null,
  public manufactData: clz_Torappu_BuildingData_ManufactRoomBeanT|null = null,
  public shopData: clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_ShopPhase_T|null = null,
  public hireData: clz_Torappu_BuildingData_HireRoomBeanT|null = null,
  public dormData: clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_DormPhase_T|null = null,
  public privateRoomData: clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_PrivatePhase_T|null = null,
  public meetingData: clz_Torappu_BuildingData_MeetingRoomBeanT|null = null,
  public tradingData: clz_Torappu_BuildingData_TradingRoomBeanT|null = null,
  public workshopData: clz_Torappu_BuildingData_RoomBean_1_Torappu_BuildingData_WorkshopPhase_T|null = null,
  public trainingData: clz_Torappu_BuildingData_TrainingBeanT|null = null,
  public powerData: clz_Torappu_BuildingData_PowerRoomBeanT|null = null,
  public chars: (dict__string__clz_Torappu_BuildingData_BuildingCharacterT)[] = [],
  public buffs: (dict__string__clz_Torappu_BuildingData_BuildingBuffT)[] = [],
  public workshopBonus: (dict__string__list_stringT)[] = [],
  public customData: clz_Torappu_BuildingData_CustomDataT|null = null,
  public manufactFormulas: (dict__string__clz_Torappu_BuildingData_ManufactFormulaT)[] = [],
  public shopFormulas: (dict__string__clz_Torappu_BuildingData_ShopFormulaT)[] = [],
  public workshopFormulas: (dict__string__clz_Torappu_BuildingData_WorkshopFormulaT)[] = [],
  public creditFormula: clz_Torappu_BuildingData_CreditFormulaT|null = null,
  public goldItems: (dict__string__intT)[] = [],
  public assistantUnlock: (number)[] = [],
  public workshopRarities: (clz_Torappu_BuildingData_WorkshopRarityInfoT)[] = [],
  public todoItemSortPriorityDict: (dict__string__intT)[] = [],
  public slotPrequeDatas: (dict__string__clz_Torappu_BuildingData_SlotPrequeDataT)[] = [],
  public dormitoryPrequeDatas: (dict__string__clz_Torappu_BuildingData_DormitoryPrequeDataT)[] = [],
  public workshopTargetDesDict: (dict__string__stringT)[] = [],
  public tradingOrderDesDict: (dict__string__stringT)[] = [],
  public stationManageConstData: clz_Torappu_BuildingData_StationManageConstDataT|null = null,
  public stationManageFilterInfos: (dict__int__clz_Torappu_BuildingData_StationManageFilterInfoT)[] = [],
  public musicData: clz_Torappu_BuildingData_MusicDataT|null = null,
  public emojis: (string)[] = [],
  public categoryNames: (dict__string__stringT)[] = [],
  public buffSortData: (dict__string__clz_Torappu_BuildingData_BuildingRoomTypeBuffSortDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const controlSlotId = (this.controlSlotId !== null ? builder.createString(this.controlSlotId!) : 0);
  const meetingSlotId = (this.meetingSlotId !== null ? builder.createString(this.meetingSlotId!) : 0);
  const manufactUnlockTips = (this.manufactUnlockTips !== null ? builder.createString(this.manufactUnlockTips!) : 0);
  const shopUnlockTips = (this.shopUnlockTips !== null ? builder.createString(this.shopUnlockTips!) : 0);
  const shopOutputRatio = clz_Torappu_BuildingData.createShopOutputRatioVector(builder, builder.createObjectOffsetList(this.shopOutputRatio));
  const shopStackRatio = clz_Torappu_BuildingData.createShopStackRatioVector(builder, builder.createObjectOffsetList(this.shopStackRatio));
  const manufactManpowerCostByNum = clz_Torappu_BuildingData.createManufactManpowerCostByNumVector(builder, this.manufactManpowerCostByNum);
  const tradingManpowerCostByNum = clz_Torappu_BuildingData.createTradingManpowerCostByNumVector(builder, this.tradingManpowerCostByNum);
  const canNotVisitToast = (this.canNotVisitToast !== null ? builder.createString(this.canNotVisitToast!) : 0);
  const roomsWithoutRemoveStaff = clz_Torappu_BuildingData.createRoomsWithoutRemoveStaffVector(builder, builder.createObjectOffsetList(this.roomsWithoutRemoveStaff));
  const privateFavorLevelThresholds = clz_Torappu_BuildingData.createPrivateFavorLevelThresholdsVector(builder, this.privateFavorLevelThresholds);
  const roomUnlockConds = clz_Torappu_BuildingData.createRoomUnlockCondsVector(builder, builder.createObjectOffsetList(this.roomUnlockConds));
  const rooms = clz_Torappu_BuildingData.createRoomsVector(builder, builder.createObjectOffsetList(this.rooms));
  const layouts = clz_Torappu_BuildingData.createLayoutsVector(builder, builder.createObjectOffsetList(this.layouts));
  const prefabs = clz_Torappu_BuildingData.createPrefabsVector(builder, builder.createObjectOffsetList(this.prefabs));
  const controlData = (this.controlData !== null ? this.controlData!.pack(builder) : 0);
  const manufactData = (this.manufactData !== null ? this.manufactData!.pack(builder) : 0);
  const shopData = (this.shopData !== null ? this.shopData!.pack(builder) : 0);
  const hireData = (this.hireData !== null ? this.hireData!.pack(builder) : 0);
  const dormData = (this.dormData !== null ? this.dormData!.pack(builder) : 0);
  const privateRoomData = (this.privateRoomData !== null ? this.privateRoomData!.pack(builder) : 0);
  const meetingData = (this.meetingData !== null ? this.meetingData!.pack(builder) : 0);
  const tradingData = (this.tradingData !== null ? this.tradingData!.pack(builder) : 0);
  const workshopData = (this.workshopData !== null ? this.workshopData!.pack(builder) : 0);
  const trainingData = (this.trainingData !== null ? this.trainingData!.pack(builder) : 0);
  const powerData = (this.powerData !== null ? this.powerData!.pack(builder) : 0);
  const chars = clz_Torappu_BuildingData.createCharsVector(builder, builder.createObjectOffsetList(this.chars));
  const buffs = clz_Torappu_BuildingData.createBuffsVector(builder, builder.createObjectOffsetList(this.buffs));
  const workshopBonus = clz_Torappu_BuildingData.createWorkshopBonusVector(builder, builder.createObjectOffsetList(this.workshopBonus));
  const customData = (this.customData !== null ? this.customData!.pack(builder) : 0);
  const manufactFormulas = clz_Torappu_BuildingData.createManufactFormulasVector(builder, builder.createObjectOffsetList(this.manufactFormulas));
  const shopFormulas = clz_Torappu_BuildingData.createShopFormulasVector(builder, builder.createObjectOffsetList(this.shopFormulas));
  const workshopFormulas = clz_Torappu_BuildingData.createWorkshopFormulasVector(builder, builder.createObjectOffsetList(this.workshopFormulas));
  const creditFormula = (this.creditFormula !== null ? this.creditFormula!.pack(builder) : 0);
  const goldItems = clz_Torappu_BuildingData.createGoldItemsVector(builder, builder.createObjectOffsetList(this.goldItems));
  const assistantUnlock = clz_Torappu_BuildingData.createAssistantUnlockVector(builder, this.assistantUnlock);
  const workshopRarities = clz_Torappu_BuildingData.createWorkshopRaritiesVector(builder, builder.createObjectOffsetList(this.workshopRarities));
  const todoItemSortPriorityDict = clz_Torappu_BuildingData.createTodoItemSortPriorityDictVector(builder, builder.createObjectOffsetList(this.todoItemSortPriorityDict));
  const slotPrequeDatas = clz_Torappu_BuildingData.createSlotPrequeDatasVector(builder, builder.createObjectOffsetList(this.slotPrequeDatas));
  const dormitoryPrequeDatas = clz_Torappu_BuildingData.createDormitoryPrequeDatasVector(builder, builder.createObjectOffsetList(this.dormitoryPrequeDatas));
  const workshopTargetDesDict = clz_Torappu_BuildingData.createWorkshopTargetDesDictVector(builder, builder.createObjectOffsetList(this.workshopTargetDesDict));
  const tradingOrderDesDict = clz_Torappu_BuildingData.createTradingOrderDesDictVector(builder, builder.createObjectOffsetList(this.tradingOrderDesDict));
  const stationManageConstData = (this.stationManageConstData !== null ? this.stationManageConstData!.pack(builder) : 0);
  const stationManageFilterInfos = clz_Torappu_BuildingData.createStationManageFilterInfosVector(builder, builder.createObjectOffsetList(this.stationManageFilterInfos));
  const musicData = (this.musicData !== null ? this.musicData!.pack(builder) : 0);
  const emojis = clz_Torappu_BuildingData.createEmojisVector(builder, builder.createObjectOffsetList(this.emojis));
  const categoryNames = clz_Torappu_BuildingData.createCategoryNamesVector(builder, builder.createObjectOffsetList(this.categoryNames));
  const buffSortData = clz_Torappu_BuildingData.createBuffSortDataVector(builder, builder.createObjectOffsetList(this.buffSortData));

  clz_Torappu_BuildingData.startclz_Torappu_BuildingData(builder);
  clz_Torappu_BuildingData.addControlSlotId(builder, controlSlotId);
  clz_Torappu_BuildingData.addMeetingSlotId(builder, meetingSlotId);
  clz_Torappu_BuildingData.addInitMaxLabor(builder, this.initMaxLabor);
  clz_Torappu_BuildingData.addLaborRecoverTime(builder, this.laborRecoverTime);
  clz_Torappu_BuildingData.addManufactInputCapacity(builder, this.manufactInputCapacity);
  clz_Torappu_BuildingData.addShopCounterCapacity(builder, this.shopCounterCapacity);
  clz_Torappu_BuildingData.addComfortLimit(builder, this.comfortLimit);
  clz_Torappu_BuildingData.addCreditInitiativeLimit(builder, this.creditInitiativeLimit);
  clz_Torappu_BuildingData.addCreditPassiveLimit(builder, this.creditPassiveLimit);
  clz_Torappu_BuildingData.addCreditComfortFactor(builder, this.creditComfortFactor);
  clz_Torappu_BuildingData.addCreditGuaranteed(builder, this.creditGuaranteed);
  clz_Torappu_BuildingData.addCreditCeiling(builder, this.creditCeiling);
  clz_Torappu_BuildingData.addManufactUnlockTips(builder, manufactUnlockTips);
  clz_Torappu_BuildingData.addShopUnlockTips(builder, shopUnlockTips);
  clz_Torappu_BuildingData.addManufactStationBuff(builder, this.manufactStationBuff);
  clz_Torappu_BuildingData.addComfortManpowerRecoverFactor(builder, this.comfortManpowerRecoverFactor);
  clz_Torappu_BuildingData.addManpowerDisplayFactor(builder, this.manpowerDisplayFactor);
  clz_Torappu_BuildingData.addShopOutputRatio(builder, shopOutputRatio);
  clz_Torappu_BuildingData.addShopStackRatio(builder, shopStackRatio);
  clz_Torappu_BuildingData.addBasicFavorPerDay(builder, this.basicFavorPerDay);
  clz_Torappu_BuildingData.addHumanResourceLimit(builder, this.humanResourceLimit);
  clz_Torappu_BuildingData.addTiredApThreshold(builder, this.tiredApThreshold);
  clz_Torappu_BuildingData.addProcessedCountRatio(builder, this.processedCountRatio);
  clz_Torappu_BuildingData.addTradingStrategyUnlockLevel(builder, this.tradingStrategyUnlockLevel);
  clz_Torappu_BuildingData.addTradingReduceTimeUnit(builder, this.tradingReduceTimeUnit);
  clz_Torappu_BuildingData.addTradingLaborCostUnit(builder, this.tradingLaborCostUnit);
  clz_Torappu_BuildingData.addManufactReduceTimeUnit(builder, this.manufactReduceTimeUnit);
  clz_Torappu_BuildingData.addManufactLaborCostUnit(builder, this.manufactLaborCostUnit);
  clz_Torappu_BuildingData.addLaborAssistUnlockLevel(builder, this.laborAssistUnlockLevel);
  clz_Torappu_BuildingData.addApToLaborUnlockLevel(builder, this.apToLaborUnlockLevel);
  clz_Torappu_BuildingData.addApToLaborRatio(builder, this.apToLaborRatio);
  clz_Torappu_BuildingData.addSocialResourceLimit(builder, this.socialResourceLimit);
  clz_Torappu_BuildingData.addSocialSlotNum(builder, this.socialSlotNum);
  clz_Torappu_BuildingData.addFurniDuplicationLimit(builder, this.furniDuplicationLimit);
  clz_Torappu_BuildingData.addAssistFavorReport(builder, this.assistFavorReport);
  clz_Torappu_BuildingData.addManufactManpowerCostByNum(builder, manufactManpowerCostByNum);
  clz_Torappu_BuildingData.addTradingManpowerCostByNum(builder, tradingManpowerCostByNum);
  clz_Torappu_BuildingData.addTrainingBonusMax(builder, this.trainingBonusMax);
  clz_Torappu_BuildingData.addBetaRemoveTime(builder, this.betaRemoveTime);
  clz_Torappu_BuildingData.addFurniHighlightTime(builder, this.furniHighlightTime);
  clz_Torappu_BuildingData.addCanNotVisitToast(builder, canNotVisitToast);
  clz_Torappu_BuildingData.addMusicPlayerOpenTime(builder, this.musicPlayerOpenTime);
  clz_Torappu_BuildingData.addRoomsWithoutRemoveStaff(builder, roomsWithoutRemoveStaff);
  clz_Torappu_BuildingData.addPrivateFavorLevelThresholds(builder, privateFavorLevelThresholds);
  clz_Torappu_BuildingData.addRoomUnlockConds(builder, roomUnlockConds);
  clz_Torappu_BuildingData.addRooms(builder, rooms);
  clz_Torappu_BuildingData.addLayouts(builder, layouts);
  clz_Torappu_BuildingData.addPrefabs(builder, prefabs);
  clz_Torappu_BuildingData.addControlData(builder, controlData);
  clz_Torappu_BuildingData.addManufactData(builder, manufactData);
  clz_Torappu_BuildingData.addShopData(builder, shopData);
  clz_Torappu_BuildingData.addHireData(builder, hireData);
  clz_Torappu_BuildingData.addDormData(builder, dormData);
  clz_Torappu_BuildingData.addPrivateRoomData(builder, privateRoomData);
  clz_Torappu_BuildingData.addMeetingData(builder, meetingData);
  clz_Torappu_BuildingData.addTradingData(builder, tradingData);
  clz_Torappu_BuildingData.addWorkshopData(builder, workshopData);
  clz_Torappu_BuildingData.addTrainingData(builder, trainingData);
  clz_Torappu_BuildingData.addPowerData(builder, powerData);
  clz_Torappu_BuildingData.addChars(builder, chars);
  clz_Torappu_BuildingData.addBuffs(builder, buffs);
  clz_Torappu_BuildingData.addWorkshopBonus(builder, workshopBonus);
  clz_Torappu_BuildingData.addCustomData(builder, customData);
  clz_Torappu_BuildingData.addManufactFormulas(builder, manufactFormulas);
  clz_Torappu_BuildingData.addShopFormulas(builder, shopFormulas);
  clz_Torappu_BuildingData.addWorkshopFormulas(builder, workshopFormulas);
  clz_Torappu_BuildingData.addCreditFormula(builder, creditFormula);
  clz_Torappu_BuildingData.addGoldItems(builder, goldItems);
  clz_Torappu_BuildingData.addAssistantUnlock(builder, assistantUnlock);
  clz_Torappu_BuildingData.addWorkshopRarities(builder, workshopRarities);
  clz_Torappu_BuildingData.addTodoItemSortPriorityDict(builder, todoItemSortPriorityDict);
  clz_Torappu_BuildingData.addSlotPrequeDatas(builder, slotPrequeDatas);
  clz_Torappu_BuildingData.addDormitoryPrequeDatas(builder, dormitoryPrequeDatas);
  clz_Torappu_BuildingData.addWorkshopTargetDesDict(builder, workshopTargetDesDict);
  clz_Torappu_BuildingData.addTradingOrderDesDict(builder, tradingOrderDesDict);
  clz_Torappu_BuildingData.addStationManageConstData(builder, stationManageConstData);
  clz_Torappu_BuildingData.addStationManageFilterInfos(builder, stationManageFilterInfos);
  clz_Torappu_BuildingData.addMusicData(builder, musicData);
  clz_Torappu_BuildingData.addEmojis(builder, emojis);
  clz_Torappu_BuildingData.addCategoryNames(builder, categoryNames);
  clz_Torappu_BuildingData.addBuffSortData(builder, buffSortData);

  return clz_Torappu_BuildingData.endclz_Torappu_BuildingData(builder);
}
}
