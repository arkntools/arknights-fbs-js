// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_SandboxV2SeasonType } from './enum--torappu-sandbox-v2-season-type.js';


export class clz_Torappu_SandboxV2RiftConst implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxV2RiftConstT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxV2RiftConst {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxV2RiftConst(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2RiftConst):clz_Torappu_SandboxV2RiftConst {
  return (obj || new clz_Torappu_SandboxV2RiftConst()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxV2RiftConst(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2RiftConst):clz_Torappu_SandboxV2RiftConst {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxV2RiftConst()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

refreshRate():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

randomDungeonId():string|null
randomDungeonId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
randomDungeonId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

huntDungeonId():string|null
huntDungeonId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
huntDungeonId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

subTargetRewardId():string|null
subTargetRewardId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
subTargetRewardId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

preyQuestRewardId():string|null
preyQuestRewardId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
preyQuestRewardId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

dungeonSeasonId():enum__Torappu_SandboxV2SeasonType {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_SandboxV2SeasonType.NONE;
}

fixedDungeonTypeName():string|null
fixedDungeonTypeName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
fixedDungeonTypeName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

randomDungeonTypeName():string|null
randomDungeonTypeName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
randomDungeonTypeName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

preyDungeonTypeName():string|null
preyDungeonTypeName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
preyDungeonTypeName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

noTeamDescription():string|null
noTeamDescription(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
noTeamDescription(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

noTeamName():string|null
noTeamName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
noTeamName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

noTeamBackgroundId():string|null
noTeamBackgroundId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
noTeamBackgroundId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

noTeamSmallIconId():string|null
noTeamSmallIconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
noTeamSmallIconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

noTeamBigIconId():string|null
noTeamBigIconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
noTeamBigIconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

messengerEnemyId():string|null
messengerEnemyId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
messengerEnemyId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

riftRushEnemyGroupLimit():number {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

riftRushSpawnCd():number {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SandboxV2RiftConst(builder:flatbuffers.Builder) {
  builder.startObject(17);
}

static addRefreshRate(builder:flatbuffers.Builder, refreshRate:number) {
  builder.addFieldInt32(0, refreshRate, 0);
}

static addRandomDungeonId(builder:flatbuffers.Builder, randomDungeonIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, randomDungeonIdOffset, 0);
}

static addHuntDungeonId(builder:flatbuffers.Builder, huntDungeonIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, huntDungeonIdOffset, 0);
}

static addSubTargetRewardId(builder:flatbuffers.Builder, subTargetRewardIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, subTargetRewardIdOffset, 0);
}

static addPreyQuestRewardId(builder:flatbuffers.Builder, preyQuestRewardIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, preyQuestRewardIdOffset, 0);
}

static addDungeonSeasonId(builder:flatbuffers.Builder, dungeonSeasonId:enum__Torappu_SandboxV2SeasonType) {
  builder.addFieldInt32(5, dungeonSeasonId, enum__Torappu_SandboxV2SeasonType.NONE);
}

static addFixedDungeonTypeName(builder:flatbuffers.Builder, fixedDungeonTypeNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, fixedDungeonTypeNameOffset, 0);
}

static addRandomDungeonTypeName(builder:flatbuffers.Builder, randomDungeonTypeNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, randomDungeonTypeNameOffset, 0);
}

static addPreyDungeonTypeName(builder:flatbuffers.Builder, preyDungeonTypeNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, preyDungeonTypeNameOffset, 0);
}

static addNoTeamDescription(builder:flatbuffers.Builder, noTeamDescriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, noTeamDescriptionOffset, 0);
}

static addNoTeamName(builder:flatbuffers.Builder, noTeamNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, noTeamNameOffset, 0);
}

static addNoTeamBackgroundId(builder:flatbuffers.Builder, noTeamBackgroundIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, noTeamBackgroundIdOffset, 0);
}

static addNoTeamSmallIconId(builder:flatbuffers.Builder, noTeamSmallIconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, noTeamSmallIconIdOffset, 0);
}

static addNoTeamBigIconId(builder:flatbuffers.Builder, noTeamBigIconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, noTeamBigIconIdOffset, 0);
}

static addMessengerEnemyId(builder:flatbuffers.Builder, messengerEnemyIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, messengerEnemyIdOffset, 0);
}

static addRiftRushEnemyGroupLimit(builder:flatbuffers.Builder, riftRushEnemyGroupLimit:number) {
  builder.addFieldInt32(15, riftRushEnemyGroupLimit, 0);
}

static addRiftRushSpawnCd(builder:flatbuffers.Builder, riftRushSpawnCd:number) {
  builder.addFieldInt32(16, riftRushSpawnCd, 0);
}

static endclz_Torappu_SandboxV2RiftConst(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxV2RiftConst(builder:flatbuffers.Builder, refreshRate:number, randomDungeonIdOffset:flatbuffers.Offset, huntDungeonIdOffset:flatbuffers.Offset, subTargetRewardIdOffset:flatbuffers.Offset, preyQuestRewardIdOffset:flatbuffers.Offset, dungeonSeasonId:enum__Torappu_SandboxV2SeasonType, fixedDungeonTypeNameOffset:flatbuffers.Offset, randomDungeonTypeNameOffset:flatbuffers.Offset, preyDungeonTypeNameOffset:flatbuffers.Offset, noTeamDescriptionOffset:flatbuffers.Offset, noTeamNameOffset:flatbuffers.Offset, noTeamBackgroundIdOffset:flatbuffers.Offset, noTeamSmallIconIdOffset:flatbuffers.Offset, noTeamBigIconIdOffset:flatbuffers.Offset, messengerEnemyIdOffset:flatbuffers.Offset, riftRushEnemyGroupLimit:number, riftRushSpawnCd:number):flatbuffers.Offset {
  clz_Torappu_SandboxV2RiftConst.startclz_Torappu_SandboxV2RiftConst(builder);
  clz_Torappu_SandboxV2RiftConst.addRefreshRate(builder, refreshRate);
  clz_Torappu_SandboxV2RiftConst.addRandomDungeonId(builder, randomDungeonIdOffset);
  clz_Torappu_SandboxV2RiftConst.addHuntDungeonId(builder, huntDungeonIdOffset);
  clz_Torappu_SandboxV2RiftConst.addSubTargetRewardId(builder, subTargetRewardIdOffset);
  clz_Torappu_SandboxV2RiftConst.addPreyQuestRewardId(builder, preyQuestRewardIdOffset);
  clz_Torappu_SandboxV2RiftConst.addDungeonSeasonId(builder, dungeonSeasonId);
  clz_Torappu_SandboxV2RiftConst.addFixedDungeonTypeName(builder, fixedDungeonTypeNameOffset);
  clz_Torappu_SandboxV2RiftConst.addRandomDungeonTypeName(builder, randomDungeonTypeNameOffset);
  clz_Torappu_SandboxV2RiftConst.addPreyDungeonTypeName(builder, preyDungeonTypeNameOffset);
  clz_Torappu_SandboxV2RiftConst.addNoTeamDescription(builder, noTeamDescriptionOffset);
  clz_Torappu_SandboxV2RiftConst.addNoTeamName(builder, noTeamNameOffset);
  clz_Torappu_SandboxV2RiftConst.addNoTeamBackgroundId(builder, noTeamBackgroundIdOffset);
  clz_Torappu_SandboxV2RiftConst.addNoTeamSmallIconId(builder, noTeamSmallIconIdOffset);
  clz_Torappu_SandboxV2RiftConst.addNoTeamBigIconId(builder, noTeamBigIconIdOffset);
  clz_Torappu_SandboxV2RiftConst.addMessengerEnemyId(builder, messengerEnemyIdOffset);
  clz_Torappu_SandboxV2RiftConst.addRiftRushEnemyGroupLimit(builder, riftRushEnemyGroupLimit);
  clz_Torappu_SandboxV2RiftConst.addRiftRushSpawnCd(builder, riftRushSpawnCd);
  return clz_Torappu_SandboxV2RiftConst.endclz_Torappu_SandboxV2RiftConst(builder);
}

unpack(): clz_Torappu_SandboxV2RiftConstT {
  return new clz_Torappu_SandboxV2RiftConstT(
    this.refreshRate(),
    this.randomDungeonId(),
    this.huntDungeonId(),
    this.subTargetRewardId(),
    this.preyQuestRewardId(),
    this.dungeonSeasonId(),
    this.fixedDungeonTypeName(),
    this.randomDungeonTypeName(),
    this.preyDungeonTypeName(),
    this.noTeamDescription(),
    this.noTeamName(),
    this.noTeamBackgroundId(),
    this.noTeamSmallIconId(),
    this.noTeamBigIconId(),
    this.messengerEnemyId(),
    this.riftRushEnemyGroupLimit(),
    this.riftRushSpawnCd()
  );
}


unpackTo(_o: clz_Torappu_SandboxV2RiftConstT): void {
  _o.refreshRate = this.refreshRate();
  _o.randomDungeonId = this.randomDungeonId();
  _o.huntDungeonId = this.huntDungeonId();
  _o.subTargetRewardId = this.subTargetRewardId();
  _o.preyQuestRewardId = this.preyQuestRewardId();
  _o.dungeonSeasonId = this.dungeonSeasonId();
  _o.fixedDungeonTypeName = this.fixedDungeonTypeName();
  _o.randomDungeonTypeName = this.randomDungeonTypeName();
  _o.preyDungeonTypeName = this.preyDungeonTypeName();
  _o.noTeamDescription = this.noTeamDescription();
  _o.noTeamName = this.noTeamName();
  _o.noTeamBackgroundId = this.noTeamBackgroundId();
  _o.noTeamSmallIconId = this.noTeamSmallIconId();
  _o.noTeamBigIconId = this.noTeamBigIconId();
  _o.messengerEnemyId = this.messengerEnemyId();
  _o.riftRushEnemyGroupLimit = this.riftRushEnemyGroupLimit();
  _o.riftRushSpawnCd = this.riftRushSpawnCd();
}
}

export class clz_Torappu_SandboxV2RiftConstT implements flatbuffers.IGeneratedObject {
constructor(
  public refreshRate: number = 0,
  public randomDungeonId: string|Uint8Array|null = null,
  public huntDungeonId: string|Uint8Array|null = null,
  public subTargetRewardId: string|Uint8Array|null = null,
  public preyQuestRewardId: string|Uint8Array|null = null,
  public dungeonSeasonId: enum__Torappu_SandboxV2SeasonType = enum__Torappu_SandboxV2SeasonType.NONE,
  public fixedDungeonTypeName: string|Uint8Array|null = null,
  public randomDungeonTypeName: string|Uint8Array|null = null,
  public preyDungeonTypeName: string|Uint8Array|null = null,
  public noTeamDescription: string|Uint8Array|null = null,
  public noTeamName: string|Uint8Array|null = null,
  public noTeamBackgroundId: string|Uint8Array|null = null,
  public noTeamSmallIconId: string|Uint8Array|null = null,
  public noTeamBigIconId: string|Uint8Array|null = null,
  public messengerEnemyId: string|Uint8Array|null = null,
  public riftRushEnemyGroupLimit: number = 0,
  public riftRushSpawnCd: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const randomDungeonId = (this.randomDungeonId !== null ? builder.createString(this.randomDungeonId!) : 0);
  const huntDungeonId = (this.huntDungeonId !== null ? builder.createString(this.huntDungeonId!) : 0);
  const subTargetRewardId = (this.subTargetRewardId !== null ? builder.createString(this.subTargetRewardId!) : 0);
  const preyQuestRewardId = (this.preyQuestRewardId !== null ? builder.createString(this.preyQuestRewardId!) : 0);
  const fixedDungeonTypeName = (this.fixedDungeonTypeName !== null ? builder.createString(this.fixedDungeonTypeName!) : 0);
  const randomDungeonTypeName = (this.randomDungeonTypeName !== null ? builder.createString(this.randomDungeonTypeName!) : 0);
  const preyDungeonTypeName = (this.preyDungeonTypeName !== null ? builder.createString(this.preyDungeonTypeName!) : 0);
  const noTeamDescription = (this.noTeamDescription !== null ? builder.createString(this.noTeamDescription!) : 0);
  const noTeamName = (this.noTeamName !== null ? builder.createString(this.noTeamName!) : 0);
  const noTeamBackgroundId = (this.noTeamBackgroundId !== null ? builder.createString(this.noTeamBackgroundId!) : 0);
  const noTeamSmallIconId = (this.noTeamSmallIconId !== null ? builder.createString(this.noTeamSmallIconId!) : 0);
  const noTeamBigIconId = (this.noTeamBigIconId !== null ? builder.createString(this.noTeamBigIconId!) : 0);
  const messengerEnemyId = (this.messengerEnemyId !== null ? builder.createString(this.messengerEnemyId!) : 0);

  return clz_Torappu_SandboxV2RiftConst.createclz_Torappu_SandboxV2RiftConst(builder,
    this.refreshRate,
    randomDungeonId,
    huntDungeonId,
    subTargetRewardId,
    preyQuestRewardId,
    this.dungeonSeasonId,
    fixedDungeonTypeName,
    randomDungeonTypeName,
    preyDungeonTypeName,
    noTeamDescription,
    noTeamName,
    noTeamBackgroundId,
    noTeamSmallIconId,
    noTeamBigIconId,
    messengerEnemyId,
    this.riftRushEnemyGroupLimit,
    this.riftRushSpawnCd
  );
}
}
