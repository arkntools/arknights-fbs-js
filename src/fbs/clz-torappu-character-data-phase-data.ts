// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT } from './clz-torappu-item-bundle.js';
import { clz_Torappu_KeyFrames_2_KeyFrame_Torappu_AttributesData_Torappu_AttributesData_, clz_Torappu_KeyFrames_2_KeyFrame_Torappu_AttributesData_Torappu_AttributesData_T } from './clz-torappu-key-frames2-key-frame-torappu-attributes-data-torappu-attributes-data-.js';


export class clz_Torappu_CharacterData_PhaseData implements flatbuffers.IUnpackableObject<clz_Torappu_CharacterData_PhaseDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_CharacterData_PhaseData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_CharacterData_PhaseData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CharacterData_PhaseData):clz_Torappu_CharacterData_PhaseData {
  return (obj || new clz_Torappu_CharacterData_PhaseData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_CharacterData_PhaseData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CharacterData_PhaseData):clz_Torappu_CharacterData_PhaseData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_CharacterData_PhaseData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

characterPrefabKey():string|null
characterPrefabKey(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
characterPrefabKey(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

rangeId():string|null
rangeId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
rangeId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

maxLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

attributesKeyFrames(index: number, obj?:clz_Torappu_KeyFrames_2_KeyFrame_Torappu_AttributesData_Torappu_AttributesData_):clz_Torappu_KeyFrames_2_KeyFrame_Torappu_AttributesData_Torappu_AttributesData_|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_Torappu_KeyFrames_2_KeyFrame_Torappu_AttributesData_Torappu_AttributesData_()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

attributesKeyFramesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

evolveCost(index: number, obj?:clz_Torappu_ItemBundle):clz_Torappu_ItemBundle|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new clz_Torappu_ItemBundle()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

evolveCostLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_CharacterData_PhaseData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addCharacterPrefabKey(builder:flatbuffers.Builder, characterPrefabKeyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, characterPrefabKeyOffset, 0);
}

static addRangeId(builder:flatbuffers.Builder, rangeIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, rangeIdOffset, 0);
}

static addMaxLevel(builder:flatbuffers.Builder, maxLevel:number) {
  builder.addFieldInt32(2, maxLevel, 0);
}

static addAttributesKeyFrames(builder:flatbuffers.Builder, attributesKeyFramesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, attributesKeyFramesOffset, 0);
}

static createAttributesKeyFramesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startAttributesKeyFramesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addEvolveCost(builder:flatbuffers.Builder, evolveCostOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, evolveCostOffset, 0);
}

static createEvolveCostVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEvolveCostVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_CharacterData_PhaseData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_CharacterData_PhaseData(builder:flatbuffers.Builder, characterPrefabKeyOffset:flatbuffers.Offset, rangeIdOffset:flatbuffers.Offset, maxLevel:number, attributesKeyFramesOffset:flatbuffers.Offset, evolveCostOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_CharacterData_PhaseData.startclz_Torappu_CharacterData_PhaseData(builder);
  clz_Torappu_CharacterData_PhaseData.addCharacterPrefabKey(builder, characterPrefabKeyOffset);
  clz_Torappu_CharacterData_PhaseData.addRangeId(builder, rangeIdOffset);
  clz_Torappu_CharacterData_PhaseData.addMaxLevel(builder, maxLevel);
  clz_Torappu_CharacterData_PhaseData.addAttributesKeyFrames(builder, attributesKeyFramesOffset);
  clz_Torappu_CharacterData_PhaseData.addEvolveCost(builder, evolveCostOffset);
  return clz_Torappu_CharacterData_PhaseData.endclz_Torappu_CharacterData_PhaseData(builder);
}

unpack(): clz_Torappu_CharacterData_PhaseDataT {
  return new clz_Torappu_CharacterData_PhaseDataT(
    this.characterPrefabKey(),
    this.rangeId(),
    this.maxLevel(),
    this.bb!.createObjList<clz_Torappu_KeyFrames_2_KeyFrame_Torappu_AttributesData_Torappu_AttributesData_, clz_Torappu_KeyFrames_2_KeyFrame_Torappu_AttributesData_Torappu_AttributesData_T>(this.attributesKeyFrames.bind(this), this.attributesKeyFramesLength()),
    this.bb!.createObjList<clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT>(this.evolveCost.bind(this), this.evolveCostLength())
  );
}


unpackTo(_o: clz_Torappu_CharacterData_PhaseDataT): void {
  _o.characterPrefabKey = this.characterPrefabKey();
  _o.rangeId = this.rangeId();
  _o.maxLevel = this.maxLevel();
  _o.attributesKeyFrames = this.bb!.createObjList<clz_Torappu_KeyFrames_2_KeyFrame_Torappu_AttributesData_Torappu_AttributesData_, clz_Torappu_KeyFrames_2_KeyFrame_Torappu_AttributesData_Torappu_AttributesData_T>(this.attributesKeyFrames.bind(this), this.attributesKeyFramesLength());
  _o.evolveCost = this.bb!.createObjList<clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT>(this.evolveCost.bind(this), this.evolveCostLength());
}
}

export class clz_Torappu_CharacterData_PhaseDataT implements flatbuffers.IGeneratedObject {
constructor(
  public characterPrefabKey: string|Uint8Array|null = null,
  public rangeId: string|Uint8Array|null = null,
  public maxLevel: number = 0,
  public attributesKeyFrames: (clz_Torappu_KeyFrames_2_KeyFrame_Torappu_AttributesData_Torappu_AttributesData_T)[] = [],
  public evolveCost: (clz_Torappu_ItemBundleT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const characterPrefabKey = (this.characterPrefabKey !== null ? builder.createString(this.characterPrefabKey!) : 0);
  const rangeId = (this.rangeId !== null ? builder.createString(this.rangeId!) : 0);
  const attributesKeyFrames = clz_Torappu_CharacterData_PhaseData.createAttributesKeyFramesVector(builder, builder.createObjectOffsetList(this.attributesKeyFrames));
  const evolveCost = clz_Torappu_CharacterData_PhaseData.createEvolveCostVector(builder, builder.createObjectOffsetList(this.evolveCost));

  return clz_Torappu_CharacterData_PhaseData.createclz_Torappu_CharacterData_PhaseData(builder,
    characterPrefabKey,
    rangeId,
    this.maxLevel,
    attributesKeyFrames,
    evolveCost
  );
}
}
