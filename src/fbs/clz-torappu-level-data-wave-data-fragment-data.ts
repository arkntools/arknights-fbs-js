// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_LevelData_WaveData_FragmentData_ActionData, clz_Torappu_LevelData_WaveData_FragmentData_ActionDataT } from './clz-torappu-level-data-wave-data-fragment-data-action-data.js';


export class clz_Torappu_LevelData_WaveData_FragmentData implements flatbuffers.IUnpackableObject<clz_Torappu_LevelData_WaveData_FragmentDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_LevelData_WaveData_FragmentData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_LevelData_WaveData_FragmentData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_LevelData_WaveData_FragmentData):clz_Torappu_LevelData_WaveData_FragmentData {
  return (obj || new clz_Torappu_LevelData_WaveData_FragmentData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_LevelData_WaveData_FragmentData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_LevelData_WaveData_FragmentData):clz_Torappu_LevelData_WaveData_FragmentData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_LevelData_WaveData_FragmentData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

preDelay():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

actions(index: number, obj?:clz_Torappu_LevelData_WaveData_FragmentData_ActionData):clz_Torappu_LevelData_WaveData_FragmentData_ActionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new clz_Torappu_LevelData_WaveData_FragmentData_ActionData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

actionsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_LevelData_WaveData_FragmentData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addPreDelay(builder:flatbuffers.Builder, preDelay:number) {
  builder.addFieldFloat32(0, preDelay, 0.0);
}

static addActions(builder:flatbuffers.Builder, actionsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, actionsOffset, 0);
}

static createActionsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startActionsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_LevelData_WaveData_FragmentData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_LevelData_WaveData_FragmentData(builder:flatbuffers.Builder, preDelay:number, actionsOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_LevelData_WaveData_FragmentData.startclz_Torappu_LevelData_WaveData_FragmentData(builder);
  clz_Torappu_LevelData_WaveData_FragmentData.addPreDelay(builder, preDelay);
  clz_Torappu_LevelData_WaveData_FragmentData.addActions(builder, actionsOffset);
  return clz_Torappu_LevelData_WaveData_FragmentData.endclz_Torappu_LevelData_WaveData_FragmentData(builder);
}

unpack(): clz_Torappu_LevelData_WaveData_FragmentDataT {
  return new clz_Torappu_LevelData_WaveData_FragmentDataT(
    this.preDelay(),
    this.bb!.createObjList<clz_Torappu_LevelData_WaveData_FragmentData_ActionData, clz_Torappu_LevelData_WaveData_FragmentData_ActionDataT>(this.actions.bind(this), this.actionsLength())
  );
}


unpackTo(_o: clz_Torappu_LevelData_WaveData_FragmentDataT): void {
  _o.preDelay = this.preDelay();
  _o.actions = this.bb!.createObjList<clz_Torappu_LevelData_WaveData_FragmentData_ActionData, clz_Torappu_LevelData_WaveData_FragmentData_ActionDataT>(this.actions.bind(this), this.actionsLength());
}
}

export class clz_Torappu_LevelData_WaveData_FragmentDataT implements flatbuffers.IGeneratedObject {
constructor(
  public preDelay: number = 0.0,
  public actions: (clz_Torappu_LevelData_WaveData_FragmentData_ActionDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const actions = clz_Torappu_LevelData_WaveData_FragmentData.createActionsVector(builder, builder.createObjectOffsetList(this.actions));

  return clz_Torappu_LevelData_WaveData_FragmentData.createclz_Torappu_LevelData_WaveData_FragmentData(builder,
    this.preDelay,
    actions
  );
}
}
