// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { dict__int__clz_Torappu_RoguelikeTopicDetailConst_CharUpgradeData, dict__int__clz_Torappu_RoguelikeTopicDetailConst_CharUpgradeDataT } from './dict--int--clz-torappu-roguelike-topic-detail-const-char-upgrade-data.js';
import { dict__int__clz_Torappu_RoguelikeTopicDetailConst_PlayerLevelData, dict__int__clz_Torappu_RoguelikeTopicDetailConst_PlayerLevelDataT } from './dict--int--clz-torappu-roguelike-topic-detail-const-player-level-data.js';
import { dict__int__string, dict__int__stringT } from './dict--int--string.js';
import { dict__string__clz_Torappu_RoguelikeTopicDetailConst_PredefinedPlayerLevelData, dict__string__clz_Torappu_RoguelikeTopicDetailConst_PredefinedPlayerLevelDataT } from './dict--string--clz-torappu-roguelike-topic-detail-const-predefined-player-level-data.js';
import { enum__Torappu_RoguelikeTopicMode } from './enum--torappu-roguelike-topic-mode.js';


export class clz_Torappu_RoguelikeTopicDetailConst implements flatbuffers.IUnpackableObject<clz_Torappu_RoguelikeTopicDetailConstT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RoguelikeTopicDetailConst {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RoguelikeTopicDetailConst(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeTopicDetailConst):clz_Torappu_RoguelikeTopicDetailConst {
  return (obj || new clz_Torappu_RoguelikeTopicDetailConst()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RoguelikeTopicDetailConst(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeTopicDetailConst):clz_Torappu_RoguelikeTopicDetailConst {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RoguelikeTopicDetailConst()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

playerLevelTable(index: number, obj?:dict__int__clz_Torappu_RoguelikeTopicDetailConst_PlayerLevelData):dict__int__clz_Torappu_RoguelikeTopicDetailConst_PlayerLevelData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new dict__int__clz_Torappu_RoguelikeTopicDetailConst_PlayerLevelData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

playerLevelTableLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

charUpgradeTable(index: number, obj?:dict__int__clz_Torappu_RoguelikeTopicDetailConst_CharUpgradeData):dict__int__clz_Torappu_RoguelikeTopicDetailConst_CharUpgradeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new dict__int__clz_Torappu_RoguelikeTopicDetailConst_CharUpgradeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

charUpgradeTableLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

difficultyUpgradeRelicDescTable(index: number, obj?:dict__int__string):dict__int__string|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new dict__int__string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

difficultyUpgradeRelicDescTableLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

predefinedLevelTable(index: number, obj?:dict__string__clz_Torappu_RoguelikeTopicDetailConst_PredefinedPlayerLevelData):dict__string__clz_Torappu_RoguelikeTopicDetailConst_PredefinedPlayerLevelData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new dict__string__clz_Torappu_RoguelikeTopicDetailConst_PredefinedPlayerLevelData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

predefinedLevelTableLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

tokenBpId():string|null
tokenBpId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
tokenBpId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

tokenOuterBuffId():string|null
tokenOuterBuffId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
tokenOuterBuffId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

spOperatorLockedMessage():string|null
spOperatorLockedMessage(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
spOperatorLockedMessage(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

previewedRewardsAccordingUpdateId():string|null
previewedRewardsAccordingUpdateId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
previewedRewardsAccordingUpdateId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

tipButtonName():string|null
tipButtonName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
tipButtonName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

collectButtonName():string|null
collectButtonName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
collectButtonName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

bpSystemName():string|null
bpSystemName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
bpSystemName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

autoSetKv():string|null
autoSetKv(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
autoSetKv(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

bpPurchaseActiveEnroll():string|null
bpPurchaseActiveEnroll(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
bpPurchaseActiveEnroll(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

defaultExpeditionSelectDesc():string|null
defaultExpeditionSelectDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
defaultExpeditionSelectDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

gotCharMutationBuffToast():string|null
gotCharMutationBuffToast(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
gotCharMutationBuffToast(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

gotCharEvolutionBuffToast():string|null
gotCharEvolutionBuffToast(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
gotCharEvolutionBuffToast(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

gotSquadBuffToast():string|null
gotSquadBuffToast(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
gotSquadBuffToast(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

loseCharBuffToast():string|null
loseCharBuffToast(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
loseCharBuffToast(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 38);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

monthTeamSystemName():string|null
monthTeamSystemName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
monthTeamSystemName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

battlePassUpdateName():string|null
battlePassUpdateName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
battlePassUpdateName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

monthCharCardTagName():string|null
monthCharCardTagName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
monthCharCardTagName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 44);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

monthTeamDescTagName():string|null
monthTeamDescTagName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
monthTeamDescTagName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 46);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

outerBuffCompleteText():string|null
outerBuffCompleteText(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
outerBuffCompleteText(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 48);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

outerProgressTextColor():string|null
outerProgressTextColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
outerProgressTextColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 50);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

challengeTaskTargetName():string|null
challengeTaskTargetName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
challengeTaskTargetName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 52);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

challengeTaskConditionName():string|null
challengeTaskConditionName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
challengeTaskConditionName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 54);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

challengeTaskRewardName():string|null
challengeTaskRewardName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
challengeTaskRewardName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 56);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

challengeTaskModeName():string|null
challengeTaskModeName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
challengeTaskModeName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 58);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

challengeTaskName():string|null
challengeTaskName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
challengeTaskName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 60);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

outerBuffTokenSum():number {
  const offset = this.bb!.__offset(this.bb_pos, 62);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

needAllFrontNode():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 64);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

showBlurBack():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 66);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

endingIconBorderDifficulty():number {
  const offset = this.bb!.__offset(this.bb_pos, 68);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

endingIconBorderCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 70);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

copySeedModeInfo():string|null
copySeedModeInfo(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
copySeedModeInfo(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 72);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

copySucceededTextHint():string|null
copySucceededTextHint(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
copySucceededTextHint(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 74);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

historicalRecordsCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 76);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

historicalRecordsStartTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 78);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

historicalRecordsMode():enum__Torappu_RoguelikeTopicMode {
  const offset = this.bb!.__offset(this.bb_pos, 80);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_RoguelikeTopicMode.NONE;
}

static startclz_Torappu_RoguelikeTopicDetailConst(builder:flatbuffers.Builder) {
  builder.startObject(39);
}

static addPlayerLevelTable(builder:flatbuffers.Builder, playerLevelTableOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, playerLevelTableOffset, 0);
}

static createPlayerLevelTableVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPlayerLevelTableVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCharUpgradeTable(builder:flatbuffers.Builder, charUpgradeTableOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, charUpgradeTableOffset, 0);
}

static createCharUpgradeTableVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCharUpgradeTableVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addDifficultyUpgradeRelicDescTable(builder:flatbuffers.Builder, difficultyUpgradeRelicDescTableOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, difficultyUpgradeRelicDescTableOffset, 0);
}

static createDifficultyUpgradeRelicDescTableVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startDifficultyUpgradeRelicDescTableVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addPredefinedLevelTable(builder:flatbuffers.Builder, predefinedLevelTableOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, predefinedLevelTableOffset, 0);
}

static createPredefinedLevelTableVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPredefinedLevelTableVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTokenBpId(builder:flatbuffers.Builder, tokenBpIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, tokenBpIdOffset, 0);
}

static addTokenOuterBuffId(builder:flatbuffers.Builder, tokenOuterBuffIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, tokenOuterBuffIdOffset, 0);
}

static addSpOperatorLockedMessage(builder:flatbuffers.Builder, spOperatorLockedMessageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, spOperatorLockedMessageOffset, 0);
}

static addPreviewedRewardsAccordingUpdateId(builder:flatbuffers.Builder, previewedRewardsAccordingUpdateIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, previewedRewardsAccordingUpdateIdOffset, 0);
}

static addTipButtonName(builder:flatbuffers.Builder, tipButtonNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, tipButtonNameOffset, 0);
}

static addCollectButtonName(builder:flatbuffers.Builder, collectButtonNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, collectButtonNameOffset, 0);
}

static addBpSystemName(builder:flatbuffers.Builder, bpSystemNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, bpSystemNameOffset, 0);
}

static addAutoSetKv(builder:flatbuffers.Builder, autoSetKvOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, autoSetKvOffset, 0);
}

static addBpPurchaseActiveEnroll(builder:flatbuffers.Builder, bpPurchaseActiveEnrollOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, bpPurchaseActiveEnrollOffset, 0);
}

static addDefaultExpeditionSelectDesc(builder:flatbuffers.Builder, defaultExpeditionSelectDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, defaultExpeditionSelectDescOffset, 0);
}

static addGotCharMutationBuffToast(builder:flatbuffers.Builder, gotCharMutationBuffToastOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, gotCharMutationBuffToastOffset, 0);
}

static addGotCharEvolutionBuffToast(builder:flatbuffers.Builder, gotCharEvolutionBuffToastOffset:flatbuffers.Offset) {
  builder.addFieldOffset(15, gotCharEvolutionBuffToastOffset, 0);
}

static addGotSquadBuffToast(builder:flatbuffers.Builder, gotSquadBuffToastOffset:flatbuffers.Offset) {
  builder.addFieldOffset(16, gotSquadBuffToastOffset, 0);
}

static addLoseCharBuffToast(builder:flatbuffers.Builder, loseCharBuffToastOffset:flatbuffers.Offset) {
  builder.addFieldOffset(17, loseCharBuffToastOffset, 0);
}

static addMonthTeamSystemName(builder:flatbuffers.Builder, monthTeamSystemNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(18, monthTeamSystemNameOffset, 0);
}

static addBattlePassUpdateName(builder:flatbuffers.Builder, battlePassUpdateNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(19, battlePassUpdateNameOffset, 0);
}

static addMonthCharCardTagName(builder:flatbuffers.Builder, monthCharCardTagNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(20, monthCharCardTagNameOffset, 0);
}

static addMonthTeamDescTagName(builder:flatbuffers.Builder, monthTeamDescTagNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(21, monthTeamDescTagNameOffset, 0);
}

static addOuterBuffCompleteText(builder:flatbuffers.Builder, outerBuffCompleteTextOffset:flatbuffers.Offset) {
  builder.addFieldOffset(22, outerBuffCompleteTextOffset, 0);
}

static addOuterProgressTextColor(builder:flatbuffers.Builder, outerProgressTextColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(23, outerProgressTextColorOffset, 0);
}

static addChallengeTaskTargetName(builder:flatbuffers.Builder, challengeTaskTargetNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(24, challengeTaskTargetNameOffset, 0);
}

static addChallengeTaskConditionName(builder:flatbuffers.Builder, challengeTaskConditionNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(25, challengeTaskConditionNameOffset, 0);
}

static addChallengeTaskRewardName(builder:flatbuffers.Builder, challengeTaskRewardNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(26, challengeTaskRewardNameOffset, 0);
}

static addChallengeTaskModeName(builder:flatbuffers.Builder, challengeTaskModeNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(27, challengeTaskModeNameOffset, 0);
}

static addChallengeTaskName(builder:flatbuffers.Builder, challengeTaskNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(28, challengeTaskNameOffset, 0);
}

static addOuterBuffTokenSum(builder:flatbuffers.Builder, outerBuffTokenSum:number) {
  builder.addFieldInt32(29, outerBuffTokenSum, 0);
}

static addNeedAllFrontNode(builder:flatbuffers.Builder, needAllFrontNode:boolean) {
  builder.addFieldInt8(30, +needAllFrontNode, +false);
}

static addShowBlurBack(builder:flatbuffers.Builder, showBlurBack:boolean) {
  builder.addFieldInt8(31, +showBlurBack, +false);
}

static addEndingIconBorderDifficulty(builder:flatbuffers.Builder, endingIconBorderDifficulty:number) {
  builder.addFieldInt32(32, endingIconBorderDifficulty, 0);
}

static addEndingIconBorderCount(builder:flatbuffers.Builder, endingIconBorderCount:number) {
  builder.addFieldInt32(33, endingIconBorderCount, 0);
}

static addCopySeedModeInfo(builder:flatbuffers.Builder, copySeedModeInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(34, copySeedModeInfoOffset, 0);
}

static addCopySucceededTextHint(builder:flatbuffers.Builder, copySucceededTextHintOffset:flatbuffers.Offset) {
  builder.addFieldOffset(35, copySucceededTextHintOffset, 0);
}

static addHistoricalRecordsCount(builder:flatbuffers.Builder, historicalRecordsCount:number) {
  builder.addFieldInt32(36, historicalRecordsCount, 0);
}

static addHistoricalRecordsStartTime(builder:flatbuffers.Builder, historicalRecordsStartTime:bigint) {
  builder.addFieldInt64(37, historicalRecordsStartTime, BigInt('0'));
}

static addHistoricalRecordsMode(builder:flatbuffers.Builder, historicalRecordsMode:enum__Torappu_RoguelikeTopicMode) {
  builder.addFieldInt32(38, historicalRecordsMode, enum__Torappu_RoguelikeTopicMode.NONE);
}

static endclz_Torappu_RoguelikeTopicDetailConst(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_RoguelikeTopicDetailConst(builder:flatbuffers.Builder, playerLevelTableOffset:flatbuffers.Offset, charUpgradeTableOffset:flatbuffers.Offset, difficultyUpgradeRelicDescTableOffset:flatbuffers.Offset, predefinedLevelTableOffset:flatbuffers.Offset, tokenBpIdOffset:flatbuffers.Offset, tokenOuterBuffIdOffset:flatbuffers.Offset, spOperatorLockedMessageOffset:flatbuffers.Offset, previewedRewardsAccordingUpdateIdOffset:flatbuffers.Offset, tipButtonNameOffset:flatbuffers.Offset, collectButtonNameOffset:flatbuffers.Offset, bpSystemNameOffset:flatbuffers.Offset, autoSetKvOffset:flatbuffers.Offset, bpPurchaseActiveEnrollOffset:flatbuffers.Offset, defaultExpeditionSelectDescOffset:flatbuffers.Offset, gotCharMutationBuffToastOffset:flatbuffers.Offset, gotCharEvolutionBuffToastOffset:flatbuffers.Offset, gotSquadBuffToastOffset:flatbuffers.Offset, loseCharBuffToastOffset:flatbuffers.Offset, monthTeamSystemNameOffset:flatbuffers.Offset, battlePassUpdateNameOffset:flatbuffers.Offset, monthCharCardTagNameOffset:flatbuffers.Offset, monthTeamDescTagNameOffset:flatbuffers.Offset, outerBuffCompleteTextOffset:flatbuffers.Offset, outerProgressTextColorOffset:flatbuffers.Offset, challengeTaskTargetNameOffset:flatbuffers.Offset, challengeTaskConditionNameOffset:flatbuffers.Offset, challengeTaskRewardNameOffset:flatbuffers.Offset, challengeTaskModeNameOffset:flatbuffers.Offset, challengeTaskNameOffset:flatbuffers.Offset, outerBuffTokenSum:number, needAllFrontNode:boolean, showBlurBack:boolean, endingIconBorderDifficulty:number, endingIconBorderCount:number, copySeedModeInfoOffset:flatbuffers.Offset, copySucceededTextHintOffset:flatbuffers.Offset, historicalRecordsCount:number, historicalRecordsStartTime:bigint, historicalRecordsMode:enum__Torappu_RoguelikeTopicMode):flatbuffers.Offset {
  clz_Torappu_RoguelikeTopicDetailConst.startclz_Torappu_RoguelikeTopicDetailConst(builder);
  clz_Torappu_RoguelikeTopicDetailConst.addPlayerLevelTable(builder, playerLevelTableOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addCharUpgradeTable(builder, charUpgradeTableOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addDifficultyUpgradeRelicDescTable(builder, difficultyUpgradeRelicDescTableOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addPredefinedLevelTable(builder, predefinedLevelTableOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addTokenBpId(builder, tokenBpIdOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addTokenOuterBuffId(builder, tokenOuterBuffIdOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addSpOperatorLockedMessage(builder, spOperatorLockedMessageOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addPreviewedRewardsAccordingUpdateId(builder, previewedRewardsAccordingUpdateIdOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addTipButtonName(builder, tipButtonNameOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addCollectButtonName(builder, collectButtonNameOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addBpSystemName(builder, bpSystemNameOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addAutoSetKv(builder, autoSetKvOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addBpPurchaseActiveEnroll(builder, bpPurchaseActiveEnrollOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addDefaultExpeditionSelectDesc(builder, defaultExpeditionSelectDescOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addGotCharMutationBuffToast(builder, gotCharMutationBuffToastOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addGotCharEvolutionBuffToast(builder, gotCharEvolutionBuffToastOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addGotSquadBuffToast(builder, gotSquadBuffToastOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addLoseCharBuffToast(builder, loseCharBuffToastOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addMonthTeamSystemName(builder, monthTeamSystemNameOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addBattlePassUpdateName(builder, battlePassUpdateNameOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addMonthCharCardTagName(builder, monthCharCardTagNameOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addMonthTeamDescTagName(builder, monthTeamDescTagNameOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addOuterBuffCompleteText(builder, outerBuffCompleteTextOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addOuterProgressTextColor(builder, outerProgressTextColorOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addChallengeTaskTargetName(builder, challengeTaskTargetNameOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addChallengeTaskConditionName(builder, challengeTaskConditionNameOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addChallengeTaskRewardName(builder, challengeTaskRewardNameOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addChallengeTaskModeName(builder, challengeTaskModeNameOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addChallengeTaskName(builder, challengeTaskNameOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addOuterBuffTokenSum(builder, outerBuffTokenSum);
  clz_Torappu_RoguelikeTopicDetailConst.addNeedAllFrontNode(builder, needAllFrontNode);
  clz_Torappu_RoguelikeTopicDetailConst.addShowBlurBack(builder, showBlurBack);
  clz_Torappu_RoguelikeTopicDetailConst.addEndingIconBorderDifficulty(builder, endingIconBorderDifficulty);
  clz_Torappu_RoguelikeTopicDetailConst.addEndingIconBorderCount(builder, endingIconBorderCount);
  clz_Torappu_RoguelikeTopicDetailConst.addCopySeedModeInfo(builder, copySeedModeInfoOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addCopySucceededTextHint(builder, copySucceededTextHintOffset);
  clz_Torappu_RoguelikeTopicDetailConst.addHistoricalRecordsCount(builder, historicalRecordsCount);
  clz_Torappu_RoguelikeTopicDetailConst.addHistoricalRecordsStartTime(builder, historicalRecordsStartTime);
  clz_Torappu_RoguelikeTopicDetailConst.addHistoricalRecordsMode(builder, historicalRecordsMode);
  return clz_Torappu_RoguelikeTopicDetailConst.endclz_Torappu_RoguelikeTopicDetailConst(builder);
}

unpack(): clz_Torappu_RoguelikeTopicDetailConstT {
  return new clz_Torappu_RoguelikeTopicDetailConstT(
    this.bb!.createObjList<dict__int__clz_Torappu_RoguelikeTopicDetailConst_PlayerLevelData, dict__int__clz_Torappu_RoguelikeTopicDetailConst_PlayerLevelDataT>(this.playerLevelTable.bind(this), this.playerLevelTableLength()),
    this.bb!.createObjList<dict__int__clz_Torappu_RoguelikeTopicDetailConst_CharUpgradeData, dict__int__clz_Torappu_RoguelikeTopicDetailConst_CharUpgradeDataT>(this.charUpgradeTable.bind(this), this.charUpgradeTableLength()),
    this.bb!.createObjList<dict__int__string, dict__int__stringT>(this.difficultyUpgradeRelicDescTable.bind(this), this.difficultyUpgradeRelicDescTableLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_RoguelikeTopicDetailConst_PredefinedPlayerLevelData, dict__string__clz_Torappu_RoguelikeTopicDetailConst_PredefinedPlayerLevelDataT>(this.predefinedLevelTable.bind(this), this.predefinedLevelTableLength()),
    this.tokenBpId(),
    this.tokenOuterBuffId(),
    this.spOperatorLockedMessage(),
    this.previewedRewardsAccordingUpdateId(),
    this.tipButtonName(),
    this.collectButtonName(),
    this.bpSystemName(),
    this.autoSetKv(),
    this.bpPurchaseActiveEnroll(),
    this.defaultExpeditionSelectDesc(),
    this.gotCharMutationBuffToast(),
    this.gotCharEvolutionBuffToast(),
    this.gotSquadBuffToast(),
    this.loseCharBuffToast(),
    this.monthTeamSystemName(),
    this.battlePassUpdateName(),
    this.monthCharCardTagName(),
    this.monthTeamDescTagName(),
    this.outerBuffCompleteText(),
    this.outerProgressTextColor(),
    this.challengeTaskTargetName(),
    this.challengeTaskConditionName(),
    this.challengeTaskRewardName(),
    this.challengeTaskModeName(),
    this.challengeTaskName(),
    this.outerBuffTokenSum(),
    this.needAllFrontNode(),
    this.showBlurBack(),
    this.endingIconBorderDifficulty(),
    this.endingIconBorderCount(),
    this.copySeedModeInfo(),
    this.copySucceededTextHint(),
    this.historicalRecordsCount(),
    this.historicalRecordsStartTime(),
    this.historicalRecordsMode()
  );
}


unpackTo(_o: clz_Torappu_RoguelikeTopicDetailConstT): void {
  _o.playerLevelTable = this.bb!.createObjList<dict__int__clz_Torappu_RoguelikeTopicDetailConst_PlayerLevelData, dict__int__clz_Torappu_RoguelikeTopicDetailConst_PlayerLevelDataT>(this.playerLevelTable.bind(this), this.playerLevelTableLength());
  _o.charUpgradeTable = this.bb!.createObjList<dict__int__clz_Torappu_RoguelikeTopicDetailConst_CharUpgradeData, dict__int__clz_Torappu_RoguelikeTopicDetailConst_CharUpgradeDataT>(this.charUpgradeTable.bind(this), this.charUpgradeTableLength());
  _o.difficultyUpgradeRelicDescTable = this.bb!.createObjList<dict__int__string, dict__int__stringT>(this.difficultyUpgradeRelicDescTable.bind(this), this.difficultyUpgradeRelicDescTableLength());
  _o.predefinedLevelTable = this.bb!.createObjList<dict__string__clz_Torappu_RoguelikeTopicDetailConst_PredefinedPlayerLevelData, dict__string__clz_Torappu_RoguelikeTopicDetailConst_PredefinedPlayerLevelDataT>(this.predefinedLevelTable.bind(this), this.predefinedLevelTableLength());
  _o.tokenBpId = this.tokenBpId();
  _o.tokenOuterBuffId = this.tokenOuterBuffId();
  _o.spOperatorLockedMessage = this.spOperatorLockedMessage();
  _o.previewedRewardsAccordingUpdateId = this.previewedRewardsAccordingUpdateId();
  _o.tipButtonName = this.tipButtonName();
  _o.collectButtonName = this.collectButtonName();
  _o.bpSystemName = this.bpSystemName();
  _o.autoSetKv = this.autoSetKv();
  _o.bpPurchaseActiveEnroll = this.bpPurchaseActiveEnroll();
  _o.defaultExpeditionSelectDesc = this.defaultExpeditionSelectDesc();
  _o.gotCharMutationBuffToast = this.gotCharMutationBuffToast();
  _o.gotCharEvolutionBuffToast = this.gotCharEvolutionBuffToast();
  _o.gotSquadBuffToast = this.gotSquadBuffToast();
  _o.loseCharBuffToast = this.loseCharBuffToast();
  _o.monthTeamSystemName = this.monthTeamSystemName();
  _o.battlePassUpdateName = this.battlePassUpdateName();
  _o.monthCharCardTagName = this.monthCharCardTagName();
  _o.monthTeamDescTagName = this.monthTeamDescTagName();
  _o.outerBuffCompleteText = this.outerBuffCompleteText();
  _o.outerProgressTextColor = this.outerProgressTextColor();
  _o.challengeTaskTargetName = this.challengeTaskTargetName();
  _o.challengeTaskConditionName = this.challengeTaskConditionName();
  _o.challengeTaskRewardName = this.challengeTaskRewardName();
  _o.challengeTaskModeName = this.challengeTaskModeName();
  _o.challengeTaskName = this.challengeTaskName();
  _o.outerBuffTokenSum = this.outerBuffTokenSum();
  _o.needAllFrontNode = this.needAllFrontNode();
  _o.showBlurBack = this.showBlurBack();
  _o.endingIconBorderDifficulty = this.endingIconBorderDifficulty();
  _o.endingIconBorderCount = this.endingIconBorderCount();
  _o.copySeedModeInfo = this.copySeedModeInfo();
  _o.copySucceededTextHint = this.copySucceededTextHint();
  _o.historicalRecordsCount = this.historicalRecordsCount();
  _o.historicalRecordsStartTime = this.historicalRecordsStartTime();
  _o.historicalRecordsMode = this.historicalRecordsMode();
}
}

export class clz_Torappu_RoguelikeTopicDetailConstT implements flatbuffers.IGeneratedObject {
constructor(
  public playerLevelTable: (dict__int__clz_Torappu_RoguelikeTopicDetailConst_PlayerLevelDataT)[] = [],
  public charUpgradeTable: (dict__int__clz_Torappu_RoguelikeTopicDetailConst_CharUpgradeDataT)[] = [],
  public difficultyUpgradeRelicDescTable: (dict__int__stringT)[] = [],
  public predefinedLevelTable: (dict__string__clz_Torappu_RoguelikeTopicDetailConst_PredefinedPlayerLevelDataT)[] = [],
  public tokenBpId: string|Uint8Array|null = null,
  public tokenOuterBuffId: string|Uint8Array|null = null,
  public spOperatorLockedMessage: string|Uint8Array|null = null,
  public previewedRewardsAccordingUpdateId: string|Uint8Array|null = null,
  public tipButtonName: string|Uint8Array|null = null,
  public collectButtonName: string|Uint8Array|null = null,
  public bpSystemName: string|Uint8Array|null = null,
  public autoSetKv: string|Uint8Array|null = null,
  public bpPurchaseActiveEnroll: string|Uint8Array|null = null,
  public defaultExpeditionSelectDesc: string|Uint8Array|null = null,
  public gotCharMutationBuffToast: string|Uint8Array|null = null,
  public gotCharEvolutionBuffToast: string|Uint8Array|null = null,
  public gotSquadBuffToast: string|Uint8Array|null = null,
  public loseCharBuffToast: string|Uint8Array|null = null,
  public monthTeamSystemName: string|Uint8Array|null = null,
  public battlePassUpdateName: string|Uint8Array|null = null,
  public monthCharCardTagName: string|Uint8Array|null = null,
  public monthTeamDescTagName: string|Uint8Array|null = null,
  public outerBuffCompleteText: string|Uint8Array|null = null,
  public outerProgressTextColor: string|Uint8Array|null = null,
  public challengeTaskTargetName: string|Uint8Array|null = null,
  public challengeTaskConditionName: string|Uint8Array|null = null,
  public challengeTaskRewardName: string|Uint8Array|null = null,
  public challengeTaskModeName: string|Uint8Array|null = null,
  public challengeTaskName: string|Uint8Array|null = null,
  public outerBuffTokenSum: number = 0,
  public needAllFrontNode: boolean = false,
  public showBlurBack: boolean = false,
  public endingIconBorderDifficulty: number = 0,
  public endingIconBorderCount: number = 0,
  public copySeedModeInfo: string|Uint8Array|null = null,
  public copySucceededTextHint: string|Uint8Array|null = null,
  public historicalRecordsCount: number = 0,
  public historicalRecordsStartTime: bigint = BigInt('0'),
  public historicalRecordsMode: enum__Torappu_RoguelikeTopicMode = enum__Torappu_RoguelikeTopicMode.NONE
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const playerLevelTable = clz_Torappu_RoguelikeTopicDetailConst.createPlayerLevelTableVector(builder, builder.createObjectOffsetList(this.playerLevelTable));
  const charUpgradeTable = clz_Torappu_RoguelikeTopicDetailConst.createCharUpgradeTableVector(builder, builder.createObjectOffsetList(this.charUpgradeTable));
  const difficultyUpgradeRelicDescTable = clz_Torappu_RoguelikeTopicDetailConst.createDifficultyUpgradeRelicDescTableVector(builder, builder.createObjectOffsetList(this.difficultyUpgradeRelicDescTable));
  const predefinedLevelTable = clz_Torappu_RoguelikeTopicDetailConst.createPredefinedLevelTableVector(builder, builder.createObjectOffsetList(this.predefinedLevelTable));
  const tokenBpId = (this.tokenBpId !== null ? builder.createString(this.tokenBpId!) : 0);
  const tokenOuterBuffId = (this.tokenOuterBuffId !== null ? builder.createString(this.tokenOuterBuffId!) : 0);
  const spOperatorLockedMessage = (this.spOperatorLockedMessage !== null ? builder.createString(this.spOperatorLockedMessage!) : 0);
  const previewedRewardsAccordingUpdateId = (this.previewedRewardsAccordingUpdateId !== null ? builder.createString(this.previewedRewardsAccordingUpdateId!) : 0);
  const tipButtonName = (this.tipButtonName !== null ? builder.createString(this.tipButtonName!) : 0);
  const collectButtonName = (this.collectButtonName !== null ? builder.createString(this.collectButtonName!) : 0);
  const bpSystemName = (this.bpSystemName !== null ? builder.createString(this.bpSystemName!) : 0);
  const autoSetKv = (this.autoSetKv !== null ? builder.createString(this.autoSetKv!) : 0);
  const bpPurchaseActiveEnroll = (this.bpPurchaseActiveEnroll !== null ? builder.createString(this.bpPurchaseActiveEnroll!) : 0);
  const defaultExpeditionSelectDesc = (this.defaultExpeditionSelectDesc !== null ? builder.createString(this.defaultExpeditionSelectDesc!) : 0);
  const gotCharMutationBuffToast = (this.gotCharMutationBuffToast !== null ? builder.createString(this.gotCharMutationBuffToast!) : 0);
  const gotCharEvolutionBuffToast = (this.gotCharEvolutionBuffToast !== null ? builder.createString(this.gotCharEvolutionBuffToast!) : 0);
  const gotSquadBuffToast = (this.gotSquadBuffToast !== null ? builder.createString(this.gotSquadBuffToast!) : 0);
  const loseCharBuffToast = (this.loseCharBuffToast !== null ? builder.createString(this.loseCharBuffToast!) : 0);
  const monthTeamSystemName = (this.monthTeamSystemName !== null ? builder.createString(this.monthTeamSystemName!) : 0);
  const battlePassUpdateName = (this.battlePassUpdateName !== null ? builder.createString(this.battlePassUpdateName!) : 0);
  const monthCharCardTagName = (this.monthCharCardTagName !== null ? builder.createString(this.monthCharCardTagName!) : 0);
  const monthTeamDescTagName = (this.monthTeamDescTagName !== null ? builder.createString(this.monthTeamDescTagName!) : 0);
  const outerBuffCompleteText = (this.outerBuffCompleteText !== null ? builder.createString(this.outerBuffCompleteText!) : 0);
  const outerProgressTextColor = (this.outerProgressTextColor !== null ? builder.createString(this.outerProgressTextColor!) : 0);
  const challengeTaskTargetName = (this.challengeTaskTargetName !== null ? builder.createString(this.challengeTaskTargetName!) : 0);
  const challengeTaskConditionName = (this.challengeTaskConditionName !== null ? builder.createString(this.challengeTaskConditionName!) : 0);
  const challengeTaskRewardName = (this.challengeTaskRewardName !== null ? builder.createString(this.challengeTaskRewardName!) : 0);
  const challengeTaskModeName = (this.challengeTaskModeName !== null ? builder.createString(this.challengeTaskModeName!) : 0);
  const challengeTaskName = (this.challengeTaskName !== null ? builder.createString(this.challengeTaskName!) : 0);
  const copySeedModeInfo = (this.copySeedModeInfo !== null ? builder.createString(this.copySeedModeInfo!) : 0);
  const copySucceededTextHint = (this.copySucceededTextHint !== null ? builder.createString(this.copySucceededTextHint!) : 0);

  return clz_Torappu_RoguelikeTopicDetailConst.createclz_Torappu_RoguelikeTopicDetailConst(builder,
    playerLevelTable,
    charUpgradeTable,
    difficultyUpgradeRelicDescTable,
    predefinedLevelTable,
    tokenBpId,
    tokenOuterBuffId,
    spOperatorLockedMessage,
    previewedRewardsAccordingUpdateId,
    tipButtonName,
    collectButtonName,
    bpSystemName,
    autoSetKv,
    bpPurchaseActiveEnroll,
    defaultExpeditionSelectDesc,
    gotCharMutationBuffToast,
    gotCharEvolutionBuffToast,
    gotSquadBuffToast,
    loseCharBuffToast,
    monthTeamSystemName,
    battlePassUpdateName,
    monthCharCardTagName,
    monthTeamDescTagName,
    outerBuffCompleteText,
    outerProgressTextColor,
    challengeTaskTargetName,
    challengeTaskConditionName,
    challengeTaskRewardName,
    challengeTaskModeName,
    challengeTaskName,
    this.outerBuffTokenSum,
    this.needAllFrontNode,
    this.showBlurBack,
    this.endingIconBorderDifficulty,
    this.endingIconBorderCount,
    copySeedModeInfo,
    copySucceededTextHint,
    this.historicalRecordsCount,
    this.historicalRecordsStartTime,
    this.historicalRecordsMode
  );
}
}
