// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SandboxV2ChallengeModeUnlockData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxV2ChallengeModeUnlockDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxV2ChallengeModeUnlockData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxV2ChallengeModeUnlockData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2ChallengeModeUnlockData):clz_Torappu_SandboxV2ChallengeModeUnlockData {
  return (obj || new clz_Torappu_SandboxV2ChallengeModeUnlockData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxV2ChallengeModeUnlockData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2ChallengeModeUnlockData):clz_Torappu_SandboxV2ChallengeModeUnlockData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxV2ChallengeModeUnlockData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

unlockId():string|null
unlockId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
unlockId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

conditionDesc():string|null
conditionDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
conditionDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_SandboxV2ChallengeModeUnlockData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addUnlockId(builder:flatbuffers.Builder, unlockIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, unlockIdOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(1, sortId, 0);
}

static addConditionDesc(builder:flatbuffers.Builder, conditionDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, conditionDescOffset, 0);
}

static endclz_Torappu_SandboxV2ChallengeModeUnlockData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxV2ChallengeModeUnlockData(builder:flatbuffers.Builder, unlockIdOffset:flatbuffers.Offset, sortId:number, conditionDescOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SandboxV2ChallengeModeUnlockData.startclz_Torappu_SandboxV2ChallengeModeUnlockData(builder);
  clz_Torappu_SandboxV2ChallengeModeUnlockData.addUnlockId(builder, unlockIdOffset);
  clz_Torappu_SandboxV2ChallengeModeUnlockData.addSortId(builder, sortId);
  clz_Torappu_SandboxV2ChallengeModeUnlockData.addConditionDesc(builder, conditionDescOffset);
  return clz_Torappu_SandboxV2ChallengeModeUnlockData.endclz_Torappu_SandboxV2ChallengeModeUnlockData(builder);
}

unpack(): clz_Torappu_SandboxV2ChallengeModeUnlockDataT {
  return new clz_Torappu_SandboxV2ChallengeModeUnlockDataT(
    this.unlockId(),
    this.sortId(),
    this.conditionDesc()
  );
}


unpackTo(_o: clz_Torappu_SandboxV2ChallengeModeUnlockDataT): void {
  _o.unlockId = this.unlockId();
  _o.sortId = this.sortId();
  _o.conditionDesc = this.conditionDesc();
}
}

export class clz_Torappu_SandboxV2ChallengeModeUnlockDataT implements flatbuffers.IGeneratedObject {
constructor(
  public unlockId: string|Uint8Array|null = null,
  public sortId: number = 0,
  public conditionDesc: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const unlockId = (this.unlockId !== null ? builder.createString(this.unlockId!) : 0);
  const conditionDesc = (this.conditionDesc !== null ? builder.createString(this.conditionDesc!) : 0);

  return clz_Torappu_SandboxV2ChallengeModeUnlockData.createclz_Torappu_SandboxV2ChallengeModeUnlockData(builder,
    unlockId,
    this.sortId,
    conditionDesc
  );
}
}
