// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_BuildingData_RoomData_BuildCost, clz_Torappu_BuildingData_RoomData_BuildCostT } from './clz-torappu-building-data-room-data-build-cost.js';


export class clz_Torappu_BuildingData_RoomData_PhaseData implements flatbuffers.IUnpackableObject<clz_Torappu_BuildingData_RoomData_PhaseDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_BuildingData_RoomData_PhaseData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_BuildingData_RoomData_PhaseData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_RoomData_PhaseData):clz_Torappu_BuildingData_RoomData_PhaseData {
  return (obj || new clz_Torappu_BuildingData_RoomData_PhaseData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_BuildingData_RoomData_PhaseData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_RoomData_PhaseData):clz_Torappu_BuildingData_RoomData_PhaseData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_BuildingData_RoomData_PhaseData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

overrideName():string|null
overrideName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
overrideName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

overridePrefabId():string|null
overridePrefabId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
overridePrefabId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

unlockCondId():string|null
unlockCondId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
unlockCondId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

buildCost(obj?:clz_Torappu_BuildingData_RoomData_BuildCost):clz_Torappu_BuildingData_RoomData_BuildCost|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_Torappu_BuildingData_RoomData_BuildCost()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

electricity():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

maxStationedNum():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

manpowerCost():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startclz_Torappu_BuildingData_RoomData_PhaseData(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static addOverrideName(builder:flatbuffers.Builder, overrideNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, overrideNameOffset, 0);
}

static addOverridePrefabId(builder:flatbuffers.Builder, overridePrefabIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, overridePrefabIdOffset, 0);
}

static addUnlockCondId(builder:flatbuffers.Builder, unlockCondIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, unlockCondIdOffset, 0);
}

static addBuildCost(builder:flatbuffers.Builder, buildCostOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, buildCostOffset, 0);
}

static addElectricity(builder:flatbuffers.Builder, electricity:number) {
  builder.addFieldInt32(4, electricity, 0);
}

static addMaxStationedNum(builder:flatbuffers.Builder, maxStationedNum:number) {
  builder.addFieldInt32(5, maxStationedNum, 0);
}

static addManpowerCost(builder:flatbuffers.Builder, manpowerCost:bigint) {
  builder.addFieldInt64(6, manpowerCost, BigInt('0'));
}

static endclz_Torappu_BuildingData_RoomData_PhaseData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_BuildingData_RoomData_PhaseDataT {
  return new clz_Torappu_BuildingData_RoomData_PhaseDataT(
    this.overrideName(),
    this.overridePrefabId(),
    this.unlockCondId(),
    (this.buildCost() !== null ? this.buildCost()!.unpack() : null),
    this.electricity(),
    this.maxStationedNum(),
    this.manpowerCost()
  );
}


unpackTo(_o: clz_Torappu_BuildingData_RoomData_PhaseDataT): void {
  _o.overrideName = this.overrideName();
  _o.overridePrefabId = this.overridePrefabId();
  _o.unlockCondId = this.unlockCondId();
  _o.buildCost = (this.buildCost() !== null ? this.buildCost()!.unpack() : null);
  _o.electricity = this.electricity();
  _o.maxStationedNum = this.maxStationedNum();
  _o.manpowerCost = this.manpowerCost();
}
}

export class clz_Torappu_BuildingData_RoomData_PhaseDataT implements flatbuffers.IGeneratedObject {
constructor(
  public overrideName: string|Uint8Array|null = null,
  public overridePrefabId: string|Uint8Array|null = null,
  public unlockCondId: string|Uint8Array|null = null,
  public buildCost: clz_Torappu_BuildingData_RoomData_BuildCostT|null = null,
  public electricity: number = 0,
  public maxStationedNum: number = 0,
  public manpowerCost: bigint = BigInt('0')
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const overrideName = (this.overrideName !== null ? builder.createString(this.overrideName!) : 0);
  const overridePrefabId = (this.overridePrefabId !== null ? builder.createString(this.overridePrefabId!) : 0);
  const unlockCondId = (this.unlockCondId !== null ? builder.createString(this.unlockCondId!) : 0);
  const buildCost = (this.buildCost !== null ? this.buildCost!.pack(builder) : 0);

  clz_Torappu_BuildingData_RoomData_PhaseData.startclz_Torappu_BuildingData_RoomData_PhaseData(builder);
  clz_Torappu_BuildingData_RoomData_PhaseData.addOverrideName(builder, overrideName);
  clz_Torappu_BuildingData_RoomData_PhaseData.addOverridePrefabId(builder, overridePrefabId);
  clz_Torappu_BuildingData_RoomData_PhaseData.addUnlockCondId(builder, unlockCondId);
  clz_Torappu_BuildingData_RoomData_PhaseData.addBuildCost(builder, buildCost);
  clz_Torappu_BuildingData_RoomData_PhaseData.addElectricity(builder, this.electricity);
  clz_Torappu_BuildingData_RoomData_PhaseData.addMaxStationedNum(builder, this.maxStationedNum);
  clz_Torappu_BuildingData_RoomData_PhaseData.addManpowerCost(builder, this.manpowerCost);

  return clz_Torappu_BuildingData_RoomData_PhaseData.endclz_Torappu_BuildingData_RoomData_PhaseData(builder);
}
}
