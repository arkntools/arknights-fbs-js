// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_ActAutoChessData_ActAutoChessBaseRewardData, clz_Torappu_ActAutoChessData_ActAutoChessBaseRewardDataT } from './clz-torappu-act-auto-chess-data-act-auto-chess-base-reward-data.js';
import { clz_Torappu_ActAutoChessData_ActAutoChessConstData, clz_Torappu_ActAutoChessData_ActAutoChessConstDataT } from './clz-torappu-act-auto-chess-data-act-auto-chess-const-data.js';
import { clz_Torappu_ActAutoChessData_ActAutoChessTrainingNpcData, clz_Torappu_ActAutoChessData_ActAutoChessTrainingNpcDataT } from './clz-torappu-act-auto-chess-data-act-auto-chess-training-npc-data.js';
import { clz_Torappu_ActivityCommonMilestoneData, clz_Torappu_ActivityCommonMilestoneDataT } from './clz-torappu-activity-common-milestone-data.js';
import { dict__int__clz_Torappu_ActAutoChessData_ActAutoChessShopLevelDisplayData, dict__int__clz_Torappu_ActAutoChessData_ActAutoChessShopLevelDisplayDataT } from './dict--int--clz-torappu-act-auto-chess-data-act-auto-chess-shop-level-display-data.js';
import { dict__int__list_clz_Torappu_ActAutoChessData_ActAutoChessShopCharChessInfoData, dict__int__list_clz_Torappu_ActAutoChessData_ActAutoChessShopCharChessInfoDataT } from './dict--int--list-clz-torappu-act-auto-chess-data-act-auto-chess-shop-char-chess-info-data.js';
import { dict__string__clz_Torappu_ActAutoChessData_ActAutoChessBandData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessBandDataT } from './dict--string--clz-torappu-act-auto-chess-data-act-auto-chess-band-data.js';
import { dict__string__clz_Torappu_ActAutoChessData_ActAutoChessBondInfo, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessBondInfoT } from './dict--string--clz-torappu-act-auto-chess-data-act-auto-chess-bond-info.js';
import { dict__string__clz_Torappu_ActAutoChessData_ActAutoChessCharChessData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessCharChessDataT } from './dict--string--clz-torappu-act-auto-chess-data-act-auto-chess-char-chess-data.js';
import { dict__string__clz_Torappu_ActAutoChessData_ActAutoChessCharShopChessData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessCharShopChessDataT } from './dict--string--clz-torappu-act-auto-chess-data-act-auto-chess-char-shop-chess-data.js';
import { dict__string__clz_Torappu_ActAutoChessData_ActAutoChessEffectChoiceInfoData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessEffectChoiceInfoDataT } from './dict--string--clz-torappu-act-auto-chess-data-act-auto-chess-effect-choice-info-data.js';
import { dict__string__clz_Torappu_ActAutoChessData_ActAutoChessEffectInfoData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessEffectInfoDataT } from './dict--string--clz-torappu-act-auto-chess-data-act-auto-chess-effect-info-data.js';
import { dict__string__clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessGarrisonDataT } from './dict--string--clz-torappu-act-auto-chess-data-act-auto-chess-garrison-data.js';
import { dict__string__clz_Torappu_ActAutoChessData_ActAutoChessModeData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessModeDataT } from './dict--string--clz-torappu-act-auto-chess-data-act-auto-chess-mode-data.js';
import { dict__string__clz_Torappu_ActAutoChessData_ActAutoChessPlayerTitleData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessPlayerTitleDataT } from './dict--string--clz-torappu-act-auto-chess-data-act-auto-chess-player-title-data.js';
import { dict__string__clz_Torappu_ActAutoChessData_ActAutoChessStageData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessStageDataT } from './dict--string--clz-torappu-act-auto-chess-data-act-auto-chess-stage-data.js';
import { dict__string__clz_Torappu_ActAutoChessData_ActAutoChessTrapChessData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessTrapChessDataT } from './dict--string--clz-torappu-act-auto-chess-data-act-auto-chess-trap-chess-data.js';
import { dict__string__clz_Torappu_ActAutoChessData_ActAutoChessTrapShopChessData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessTrapShopChessDataT } from './dict--string--clz-torappu-act-auto-chess-data-act-auto-chess-trap-shop-chess-data.js';
import { dict__string__clz_Torappu_ActAutoChessData_ActAutochessBossEntry, dict__string__clz_Torappu_ActAutoChessData_ActAutochessBossEntryT } from './dict--string--clz-torappu-act-auto-chess-data-act-autochess-boss-entry.js';
import { dict__string__clz_Torappu_ActAutoChessData_ActAutochessSpecialEnemyEntry, dict__string__clz_Torappu_ActAutoChessData_ActAutochessSpecialEnemyEntryT } from './dict--string--clz-torappu-act-auto-chess-data-act-autochess-special-enemy-entry.js';
import { dict__string__clz_Torappu_ActAutoChessData_ActAutochessSpecialEnemyTypeEntry, dict__string__clz_Torappu_ActAutoChessData_ActAutochessSpecialEnemyTypeEntryT } from './dict--string--clz-torappu-act-auto-chess-data-act-autochess-special-enemy-type-entry.js';
import { dict__string__enum__Torappu_RarityRank, dict__string__enum__Torappu_RarityRankT } from './dict--string--enum--torappu-rarity-rank.js';
import { dict__string__float, dict__string__floatT } from './dict--string--float.js';
import { dict__string__list_clz_Torappu_ActAutoChessData_ActAutoChessBuffInfoData, dict__string__list_clz_Torappu_ActAutoChessData_ActAutoChessBuffInfoDataT } from './dict--string--list-clz-torappu-act-auto-chess-data-act-auto-chess-buff-info-data.js';
import { dict__string__list_dict__int__clz_Torappu_ActAutoChessData_ActAutoChessShopLevelData, dict__string__list_dict__int__clz_Torappu_ActAutoChessData_ActAutoChessShopLevelDataT } from './dict--string--list-dict--int--clz-torappu-act-auto-chess-data-act-auto-chess-shop-level-data.js';
import { dict__string__list_dict__int__list_clz_Torappu_ActAutoChessData_ActAutoChessBattleData, dict__string__list_dict__int__list_clz_Torappu_ActAutoChessData_ActAutoChessBattleDataT } from './dict--string--list-dict--int--list-clz-torappu-act-auto-chess-data-act-auto-chess-battle-data.js';
import { dict__string__list_string, dict__string__list_stringT } from './dict--string--list-string.js';
import { dict__string__string, dict__string__stringT } from './dict--string--string.js';


export class clz_Torappu_ActAutoChessData implements flatbuffers.IUnpackableObject<clz_Torappu_ActAutoChessDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActAutoChessData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActAutoChessData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActAutoChessData):clz_Torappu_ActAutoChessData {
  return (obj || new clz_Torappu_ActAutoChessData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActAutoChessData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActAutoChessData):clz_Torappu_ActAutoChessData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActAutoChessData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

modeDataDict(index: number, obj?:dict__string__clz_Torappu_ActAutoChessData_ActAutoChessModeData):dict__string__clz_Torappu_ActAutoChessData_ActAutoChessModeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new dict__string__clz_Torappu_ActAutoChessData_ActAutoChessModeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

modeDataDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

baseRewardDataList(index: number, obj?:clz_Torappu_ActAutoChessData_ActAutoChessBaseRewardData):clz_Torappu_ActAutoChessData_ActAutoChessBaseRewardData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new clz_Torappu_ActAutoChessData_ActAutoChessBaseRewardData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

baseRewardDataListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

bandDataListDict(index: number, obj?:dict__string__clz_Torappu_ActAutoChessData_ActAutoChessBandData):dict__string__clz_Torappu_ActAutoChessData_ActAutoChessBandData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new dict__string__clz_Torappu_ActAutoChessData_ActAutoChessBandData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

bandDataListDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

charChessDataDict(index: number, obj?:dict__string__clz_Torappu_ActAutoChessData_ActAutoChessCharChessData):dict__string__clz_Torappu_ActAutoChessData_ActAutoChessCharChessData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new dict__string__clz_Torappu_ActAutoChessData_ActAutoChessCharChessData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

charChessDataDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

chessNormalIdLookupDict(index: number, obj?:dict__string__string):dict__string__string|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new dict__string__string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

chessNormalIdLookupDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

diyChessDict(index: number, obj?:dict__string__enum__Torappu_RarityRank):dict__string__enum__Torappu_RarityRank|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new dict__string__enum__Torappu_RarityRank()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

diyChessDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

shopLevelDataDict(index: number, obj?:dict__string__list_dict__int__clz_Torappu_ActAutoChessData_ActAutoChessShopLevelData):dict__string__list_dict__int__clz_Torappu_ActAutoChessData_ActAutoChessShopLevelData|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new dict__string__list_dict__int__clz_Torappu_ActAutoChessData_ActAutoChessShopLevelData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

shopLevelDataDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

shopLevelDisplayDataDict(index: number, obj?:dict__int__clz_Torappu_ActAutoChessData_ActAutoChessShopLevelDisplayData):dict__int__clz_Torappu_ActAutoChessData_ActAutoChessShopLevelDisplayData|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new dict__int__clz_Torappu_ActAutoChessData_ActAutoChessShopLevelDisplayData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

shopLevelDisplayDataDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

charShopChessDatas(index: number, obj?:dict__string__clz_Torappu_ActAutoChessData_ActAutoChessCharShopChessData):dict__string__clz_Torappu_ActAutoChessData_ActAutoChessCharShopChessData|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? (obj || new dict__string__clz_Torappu_ActAutoChessData_ActAutoChessCharShopChessData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

charShopChessDatasLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

trapChessDataDict(index: number, obj?:dict__string__clz_Torappu_ActAutoChessData_ActAutoChessTrapChessData):dict__string__clz_Torappu_ActAutoChessData_ActAutoChessTrapChessData|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? (obj || new dict__string__clz_Torappu_ActAutoChessData_ActAutoChessTrapChessData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

trapChessDataDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

trapShopChessDatas(index: number, obj?:dict__string__clz_Torappu_ActAutoChessData_ActAutoChessTrapShopChessData):dict__string__clz_Torappu_ActAutoChessData_ActAutoChessTrapShopChessData|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? (obj || new dict__string__clz_Torappu_ActAutoChessData_ActAutoChessTrapShopChessData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

trapShopChessDatasLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

stageDatasDict(index: number, obj?:dict__string__clz_Torappu_ActAutoChessData_ActAutoChessStageData):dict__string__clz_Torappu_ActAutoChessData_ActAutoChessStageData|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? (obj || new dict__string__clz_Torappu_ActAutoChessData_ActAutoChessStageData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

stageDatasDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

battleDataDict(index: number, obj?:dict__string__list_dict__int__list_clz_Torappu_ActAutoChessData_ActAutoChessBattleData):dict__string__list_dict__int__list_clz_Torappu_ActAutoChessData_ActAutoChessBattleData|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? (obj || new dict__string__list_dict__int__list_clz_Torappu_ActAutoChessData_ActAutoChessBattleData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

battleDataDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

bondInfoDict(index: number, obj?:dict__string__clz_Torappu_ActAutoChessData_ActAutoChessBondInfo):dict__string__clz_Torappu_ActAutoChessData_ActAutoChessBondInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? (obj || new dict__string__clz_Torappu_ActAutoChessData_ActAutoChessBondInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

bondInfoDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

garrisonDataDict(index: number, obj?:dict__string__clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData):dict__string__clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? (obj || new dict__string__clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

garrisonDataDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

effectInfoDataDict(index: number, obj?:dict__string__clz_Torappu_ActAutoChessData_ActAutoChessEffectInfoData):dict__string__clz_Torappu_ActAutoChessData_ActAutoChessEffectInfoData|null {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? (obj || new dict__string__clz_Torappu_ActAutoChessData_ActAutoChessEffectInfoData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

effectInfoDataDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

effectBuffInfoDataDict(index: number, obj?:dict__string__list_clz_Torappu_ActAutoChessData_ActAutoChessBuffInfoData):dict__string__list_clz_Torappu_ActAutoChessData_ActAutoChessBuffInfoData|null {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? (obj || new dict__string__list_clz_Torappu_ActAutoChessData_ActAutoChessBuffInfoData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

effectBuffInfoDataDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

effectChoiceInfoDict(index: number, obj?:dict__string__clz_Torappu_ActAutoChessData_ActAutoChessEffectChoiceInfoData):dict__string__clz_Torappu_ActAutoChessData_ActAutoChessEffectChoiceInfoData|null {
  const offset = this.bb!.__offset(this.bb_pos, 38);
  return offset ? (obj || new dict__string__clz_Torappu_ActAutoChessData_ActAutoChessEffectChoiceInfoData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

effectChoiceInfoDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 38);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

bossInfoDict(index: number, obj?:dict__string__clz_Torappu_ActAutoChessData_ActAutochessBossEntry):dict__string__clz_Torappu_ActAutoChessData_ActAutochessBossEntry|null {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? (obj || new dict__string__clz_Torappu_ActAutoChessData_ActAutochessBossEntry()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

bossInfoDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

specialEnemyInfoDict(index: number, obj?:dict__string__clz_Torappu_ActAutoChessData_ActAutochessSpecialEnemyEntry):dict__string__clz_Torappu_ActAutoChessData_ActAutochessSpecialEnemyEntry|null {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? (obj || new dict__string__clz_Torappu_ActAutoChessData_ActAutochessSpecialEnemyEntry()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

specialEnemyInfoDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

enemyInfoDict(index: number, obj?:dict__string__list_string):dict__string__list_string|null {
  const offset = this.bb!.__offset(this.bb_pos, 44);
  return offset ? (obj || new dict__string__list_string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

enemyInfoDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 44);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

specialEnemyRandomTypeDict(index: number, obj?:dict__string__clz_Torappu_ActAutoChessData_ActAutochessSpecialEnemyTypeEntry):dict__string__clz_Torappu_ActAutoChessData_ActAutochessSpecialEnemyTypeEntry|null {
  const offset = this.bb!.__offset(this.bb_pos, 46);
  return offset ? (obj || new dict__string__clz_Torappu_ActAutoChessData_ActAutochessSpecialEnemyTypeEntry()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

specialEnemyRandomTypeDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 46);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

trainingNpcList(index: number, obj?:clz_Torappu_ActAutoChessData_ActAutoChessTrainingNpcData):clz_Torappu_ActAutoChessData_ActAutoChessTrainingNpcData|null {
  const offset = this.bb!.__offset(this.bb_pos, 48);
  return offset ? (obj || new clz_Torappu_ActAutoChessData_ActAutoChessTrainingNpcData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

trainingNpcListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 48);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

milestoneList(index: number, obj?:clz_Torappu_ActivityCommonMilestoneData):clz_Torappu_ActivityCommonMilestoneData|null {
  const offset = this.bb!.__offset(this.bb_pos, 50);
  return offset ? (obj || new clz_Torappu_ActivityCommonMilestoneData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

milestoneListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 50);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

modeFactorInfo(index: number, obj?:dict__string__float):dict__string__float|null {
  const offset = this.bb!.__offset(this.bb_pos, 52);
  return offset ? (obj || new dict__string__float()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

modeFactorInfoLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 52);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

difficultyFactorInfo(index: number, obj?:dict__string__float):dict__string__float|null {
  const offset = this.bb!.__offset(this.bb_pos, 54);
  return offset ? (obj || new dict__string__float()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

difficultyFactorInfoLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 54);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

playerTitleDataDict(index: number, obj?:dict__string__clz_Torappu_ActAutoChessData_ActAutoChessPlayerTitleData):dict__string__clz_Torappu_ActAutoChessData_ActAutoChessPlayerTitleData|null {
  const offset = this.bb!.__offset(this.bb_pos, 56);
  return offset ? (obj || new dict__string__clz_Torappu_ActAutoChessData_ActAutoChessPlayerTitleData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

playerTitleDataDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 56);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

shopCharChessInfoData(index: number, obj?:dict__int__list_clz_Torappu_ActAutoChessData_ActAutoChessShopCharChessInfoData):dict__int__list_clz_Torappu_ActAutoChessData_ActAutoChessShopCharChessInfoData|null {
  const offset = this.bb!.__offset(this.bb_pos, 58);
  return offset ? (obj || new dict__int__list_clz_Torappu_ActAutoChessData_ActAutoChessShopCharChessInfoData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

shopCharChessInfoDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 58);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

constData(obj?:clz_Torappu_ActAutoChessData_ActAutoChessConstData):clz_Torappu_ActAutoChessData_ActAutoChessConstData|null {
  const offset = this.bb!.__offset(this.bb_pos, 60);
  return offset ? (obj || new clz_Torappu_ActAutoChessData_ActAutoChessConstData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startclz_Torappu_ActAutoChessData(builder:flatbuffers.Builder) {
  builder.startObject(29);
}

static addModeDataDict(builder:flatbuffers.Builder, modeDataDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, modeDataDictOffset, 0);
}

static createModeDataDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startModeDataDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBaseRewardDataList(builder:flatbuffers.Builder, baseRewardDataListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, baseRewardDataListOffset, 0);
}

static createBaseRewardDataListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBaseRewardDataListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBandDataListDict(builder:flatbuffers.Builder, bandDataListDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, bandDataListDictOffset, 0);
}

static createBandDataListDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBandDataListDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCharChessDataDict(builder:flatbuffers.Builder, charChessDataDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, charChessDataDictOffset, 0);
}

static createCharChessDataDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCharChessDataDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addChessNormalIdLookupDict(builder:flatbuffers.Builder, chessNormalIdLookupDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, chessNormalIdLookupDictOffset, 0);
}

static createChessNormalIdLookupDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startChessNormalIdLookupDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addDiyChessDict(builder:flatbuffers.Builder, diyChessDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, diyChessDictOffset, 0);
}

static createDiyChessDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startDiyChessDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addShopLevelDataDict(builder:flatbuffers.Builder, shopLevelDataDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, shopLevelDataDictOffset, 0);
}

static createShopLevelDataDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startShopLevelDataDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addShopLevelDisplayDataDict(builder:flatbuffers.Builder, shopLevelDisplayDataDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, shopLevelDisplayDataDictOffset, 0);
}

static createShopLevelDisplayDataDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startShopLevelDisplayDataDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCharShopChessDatas(builder:flatbuffers.Builder, charShopChessDatasOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, charShopChessDatasOffset, 0);
}

static createCharShopChessDatasVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCharShopChessDatasVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTrapChessDataDict(builder:flatbuffers.Builder, trapChessDataDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, trapChessDataDictOffset, 0);
}

static createTrapChessDataDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTrapChessDataDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTrapShopChessDatas(builder:flatbuffers.Builder, trapShopChessDatasOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, trapShopChessDatasOffset, 0);
}

static createTrapShopChessDatasVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTrapShopChessDatasVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addStageDatasDict(builder:flatbuffers.Builder, stageDatasDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, stageDatasDictOffset, 0);
}

static createStageDatasDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startStageDatasDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBattleDataDict(builder:flatbuffers.Builder, battleDataDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, battleDataDictOffset, 0);
}

static createBattleDataDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBattleDataDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBondInfoDict(builder:flatbuffers.Builder, bondInfoDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, bondInfoDictOffset, 0);
}

static createBondInfoDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBondInfoDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addGarrisonDataDict(builder:flatbuffers.Builder, garrisonDataDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, garrisonDataDictOffset, 0);
}

static createGarrisonDataDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startGarrisonDataDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addEffectInfoDataDict(builder:flatbuffers.Builder, effectInfoDataDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(15, effectInfoDataDictOffset, 0);
}

static createEffectInfoDataDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEffectInfoDataDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addEffectBuffInfoDataDict(builder:flatbuffers.Builder, effectBuffInfoDataDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(16, effectBuffInfoDataDictOffset, 0);
}

static createEffectBuffInfoDataDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEffectBuffInfoDataDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addEffectChoiceInfoDict(builder:flatbuffers.Builder, effectChoiceInfoDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(17, effectChoiceInfoDictOffset, 0);
}

static createEffectChoiceInfoDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEffectChoiceInfoDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBossInfoDict(builder:flatbuffers.Builder, bossInfoDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(18, bossInfoDictOffset, 0);
}

static createBossInfoDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBossInfoDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addSpecialEnemyInfoDict(builder:flatbuffers.Builder, specialEnemyInfoDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(19, specialEnemyInfoDictOffset, 0);
}

static createSpecialEnemyInfoDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startSpecialEnemyInfoDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addEnemyInfoDict(builder:flatbuffers.Builder, enemyInfoDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(20, enemyInfoDictOffset, 0);
}

static createEnemyInfoDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEnemyInfoDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addSpecialEnemyRandomTypeDict(builder:flatbuffers.Builder, specialEnemyRandomTypeDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(21, specialEnemyRandomTypeDictOffset, 0);
}

static createSpecialEnemyRandomTypeDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startSpecialEnemyRandomTypeDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTrainingNpcList(builder:flatbuffers.Builder, trainingNpcListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(22, trainingNpcListOffset, 0);
}

static createTrainingNpcListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTrainingNpcListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addMilestoneList(builder:flatbuffers.Builder, milestoneListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(23, milestoneListOffset, 0);
}

static createMilestoneListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startMilestoneListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addModeFactorInfo(builder:flatbuffers.Builder, modeFactorInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(24, modeFactorInfoOffset, 0);
}

static createModeFactorInfoVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startModeFactorInfoVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addDifficultyFactorInfo(builder:flatbuffers.Builder, difficultyFactorInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(25, difficultyFactorInfoOffset, 0);
}

static createDifficultyFactorInfoVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startDifficultyFactorInfoVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addPlayerTitleDataDict(builder:flatbuffers.Builder, playerTitleDataDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(26, playerTitleDataDictOffset, 0);
}

static createPlayerTitleDataDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPlayerTitleDataDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addShopCharChessInfoData(builder:flatbuffers.Builder, shopCharChessInfoDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(27, shopCharChessInfoDataOffset, 0);
}

static createShopCharChessInfoDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startShopCharChessInfoDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addConstData(builder:flatbuffers.Builder, constDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(28, constDataOffset, 0);
}

static endclz_Torappu_ActAutoChessData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_ActAutoChessDataT {
  return new clz_Torappu_ActAutoChessDataT(
    this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessModeData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessModeDataT>(this.modeDataDict.bind(this), this.modeDataDictLength()),
    this.bb!.createObjList<clz_Torappu_ActAutoChessData_ActAutoChessBaseRewardData, clz_Torappu_ActAutoChessData_ActAutoChessBaseRewardDataT>(this.baseRewardDataList.bind(this), this.baseRewardDataListLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessBandData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessBandDataT>(this.bandDataListDict.bind(this), this.bandDataListDictLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessCharChessData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessCharChessDataT>(this.charChessDataDict.bind(this), this.charChessDataDictLength()),
    this.bb!.createObjList<dict__string__string, dict__string__stringT>(this.chessNormalIdLookupDict.bind(this), this.chessNormalIdLookupDictLength()),
    this.bb!.createObjList<dict__string__enum__Torappu_RarityRank, dict__string__enum__Torappu_RarityRankT>(this.diyChessDict.bind(this), this.diyChessDictLength()),
    this.bb!.createObjList<dict__string__list_dict__int__clz_Torappu_ActAutoChessData_ActAutoChessShopLevelData, dict__string__list_dict__int__clz_Torappu_ActAutoChessData_ActAutoChessShopLevelDataT>(this.shopLevelDataDict.bind(this), this.shopLevelDataDictLength()),
    this.bb!.createObjList<dict__int__clz_Torappu_ActAutoChessData_ActAutoChessShopLevelDisplayData, dict__int__clz_Torappu_ActAutoChessData_ActAutoChessShopLevelDisplayDataT>(this.shopLevelDisplayDataDict.bind(this), this.shopLevelDisplayDataDictLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessCharShopChessData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessCharShopChessDataT>(this.charShopChessDatas.bind(this), this.charShopChessDatasLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessTrapChessData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessTrapChessDataT>(this.trapChessDataDict.bind(this), this.trapChessDataDictLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessTrapShopChessData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessTrapShopChessDataT>(this.trapShopChessDatas.bind(this), this.trapShopChessDatasLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessStageData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessStageDataT>(this.stageDatasDict.bind(this), this.stageDatasDictLength()),
    this.bb!.createObjList<dict__string__list_dict__int__list_clz_Torappu_ActAutoChessData_ActAutoChessBattleData, dict__string__list_dict__int__list_clz_Torappu_ActAutoChessData_ActAutoChessBattleDataT>(this.battleDataDict.bind(this), this.battleDataDictLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessBondInfo, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessBondInfoT>(this.bondInfoDict.bind(this), this.bondInfoDictLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessGarrisonDataT>(this.garrisonDataDict.bind(this), this.garrisonDataDictLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessEffectInfoData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessEffectInfoDataT>(this.effectInfoDataDict.bind(this), this.effectInfoDataDictLength()),
    this.bb!.createObjList<dict__string__list_clz_Torappu_ActAutoChessData_ActAutoChessBuffInfoData, dict__string__list_clz_Torappu_ActAutoChessData_ActAutoChessBuffInfoDataT>(this.effectBuffInfoDataDict.bind(this), this.effectBuffInfoDataDictLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessEffectChoiceInfoData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessEffectChoiceInfoDataT>(this.effectChoiceInfoDict.bind(this), this.effectChoiceInfoDictLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutochessBossEntry, dict__string__clz_Torappu_ActAutoChessData_ActAutochessBossEntryT>(this.bossInfoDict.bind(this), this.bossInfoDictLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutochessSpecialEnemyEntry, dict__string__clz_Torappu_ActAutoChessData_ActAutochessSpecialEnemyEntryT>(this.specialEnemyInfoDict.bind(this), this.specialEnemyInfoDictLength()),
    this.bb!.createObjList<dict__string__list_string, dict__string__list_stringT>(this.enemyInfoDict.bind(this), this.enemyInfoDictLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutochessSpecialEnemyTypeEntry, dict__string__clz_Torappu_ActAutoChessData_ActAutochessSpecialEnemyTypeEntryT>(this.specialEnemyRandomTypeDict.bind(this), this.specialEnemyRandomTypeDictLength()),
    this.bb!.createObjList<clz_Torappu_ActAutoChessData_ActAutoChessTrainingNpcData, clz_Torappu_ActAutoChessData_ActAutoChessTrainingNpcDataT>(this.trainingNpcList.bind(this), this.trainingNpcListLength()),
    this.bb!.createObjList<clz_Torappu_ActivityCommonMilestoneData, clz_Torappu_ActivityCommonMilestoneDataT>(this.milestoneList.bind(this), this.milestoneListLength()),
    this.bb!.createObjList<dict__string__float, dict__string__floatT>(this.modeFactorInfo.bind(this), this.modeFactorInfoLength()),
    this.bb!.createObjList<dict__string__float, dict__string__floatT>(this.difficultyFactorInfo.bind(this), this.difficultyFactorInfoLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessPlayerTitleData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessPlayerTitleDataT>(this.playerTitleDataDict.bind(this), this.playerTitleDataDictLength()),
    this.bb!.createObjList<dict__int__list_clz_Torappu_ActAutoChessData_ActAutoChessShopCharChessInfoData, dict__int__list_clz_Torappu_ActAutoChessData_ActAutoChessShopCharChessInfoDataT>(this.shopCharChessInfoData.bind(this), this.shopCharChessInfoDataLength()),
    (this.constData() !== null ? this.constData()!.unpack() : null)
  );
}


unpackTo(_o: clz_Torappu_ActAutoChessDataT): void {
  _o.modeDataDict = this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessModeData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessModeDataT>(this.modeDataDict.bind(this), this.modeDataDictLength());
  _o.baseRewardDataList = this.bb!.createObjList<clz_Torappu_ActAutoChessData_ActAutoChessBaseRewardData, clz_Torappu_ActAutoChessData_ActAutoChessBaseRewardDataT>(this.baseRewardDataList.bind(this), this.baseRewardDataListLength());
  _o.bandDataListDict = this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessBandData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessBandDataT>(this.bandDataListDict.bind(this), this.bandDataListDictLength());
  _o.charChessDataDict = this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessCharChessData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessCharChessDataT>(this.charChessDataDict.bind(this), this.charChessDataDictLength());
  _o.chessNormalIdLookupDict = this.bb!.createObjList<dict__string__string, dict__string__stringT>(this.chessNormalIdLookupDict.bind(this), this.chessNormalIdLookupDictLength());
  _o.diyChessDict = this.bb!.createObjList<dict__string__enum__Torappu_RarityRank, dict__string__enum__Torappu_RarityRankT>(this.diyChessDict.bind(this), this.diyChessDictLength());
  _o.shopLevelDataDict = this.bb!.createObjList<dict__string__list_dict__int__clz_Torappu_ActAutoChessData_ActAutoChessShopLevelData, dict__string__list_dict__int__clz_Torappu_ActAutoChessData_ActAutoChessShopLevelDataT>(this.shopLevelDataDict.bind(this), this.shopLevelDataDictLength());
  _o.shopLevelDisplayDataDict = this.bb!.createObjList<dict__int__clz_Torappu_ActAutoChessData_ActAutoChessShopLevelDisplayData, dict__int__clz_Torappu_ActAutoChessData_ActAutoChessShopLevelDisplayDataT>(this.shopLevelDisplayDataDict.bind(this), this.shopLevelDisplayDataDictLength());
  _o.charShopChessDatas = this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessCharShopChessData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessCharShopChessDataT>(this.charShopChessDatas.bind(this), this.charShopChessDatasLength());
  _o.trapChessDataDict = this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessTrapChessData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessTrapChessDataT>(this.trapChessDataDict.bind(this), this.trapChessDataDictLength());
  _o.trapShopChessDatas = this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessTrapShopChessData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessTrapShopChessDataT>(this.trapShopChessDatas.bind(this), this.trapShopChessDatasLength());
  _o.stageDatasDict = this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessStageData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessStageDataT>(this.stageDatasDict.bind(this), this.stageDatasDictLength());
  _o.battleDataDict = this.bb!.createObjList<dict__string__list_dict__int__list_clz_Torappu_ActAutoChessData_ActAutoChessBattleData, dict__string__list_dict__int__list_clz_Torappu_ActAutoChessData_ActAutoChessBattleDataT>(this.battleDataDict.bind(this), this.battleDataDictLength());
  _o.bondInfoDict = this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessBondInfo, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessBondInfoT>(this.bondInfoDict.bind(this), this.bondInfoDictLength());
  _o.garrisonDataDict = this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessGarrisonDataT>(this.garrisonDataDict.bind(this), this.garrisonDataDictLength());
  _o.effectInfoDataDict = this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessEffectInfoData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessEffectInfoDataT>(this.effectInfoDataDict.bind(this), this.effectInfoDataDictLength());
  _o.effectBuffInfoDataDict = this.bb!.createObjList<dict__string__list_clz_Torappu_ActAutoChessData_ActAutoChessBuffInfoData, dict__string__list_clz_Torappu_ActAutoChessData_ActAutoChessBuffInfoDataT>(this.effectBuffInfoDataDict.bind(this), this.effectBuffInfoDataDictLength());
  _o.effectChoiceInfoDict = this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessEffectChoiceInfoData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessEffectChoiceInfoDataT>(this.effectChoiceInfoDict.bind(this), this.effectChoiceInfoDictLength());
  _o.bossInfoDict = this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutochessBossEntry, dict__string__clz_Torappu_ActAutoChessData_ActAutochessBossEntryT>(this.bossInfoDict.bind(this), this.bossInfoDictLength());
  _o.specialEnemyInfoDict = this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutochessSpecialEnemyEntry, dict__string__clz_Torappu_ActAutoChessData_ActAutochessSpecialEnemyEntryT>(this.specialEnemyInfoDict.bind(this), this.specialEnemyInfoDictLength());
  _o.enemyInfoDict = this.bb!.createObjList<dict__string__list_string, dict__string__list_stringT>(this.enemyInfoDict.bind(this), this.enemyInfoDictLength());
  _o.specialEnemyRandomTypeDict = this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutochessSpecialEnemyTypeEntry, dict__string__clz_Torappu_ActAutoChessData_ActAutochessSpecialEnemyTypeEntryT>(this.specialEnemyRandomTypeDict.bind(this), this.specialEnemyRandomTypeDictLength());
  _o.trainingNpcList = this.bb!.createObjList<clz_Torappu_ActAutoChessData_ActAutoChessTrainingNpcData, clz_Torappu_ActAutoChessData_ActAutoChessTrainingNpcDataT>(this.trainingNpcList.bind(this), this.trainingNpcListLength());
  _o.milestoneList = this.bb!.createObjList<clz_Torappu_ActivityCommonMilestoneData, clz_Torappu_ActivityCommonMilestoneDataT>(this.milestoneList.bind(this), this.milestoneListLength());
  _o.modeFactorInfo = this.bb!.createObjList<dict__string__float, dict__string__floatT>(this.modeFactorInfo.bind(this), this.modeFactorInfoLength());
  _o.difficultyFactorInfo = this.bb!.createObjList<dict__string__float, dict__string__floatT>(this.difficultyFactorInfo.bind(this), this.difficultyFactorInfoLength());
  _o.playerTitleDataDict = this.bb!.createObjList<dict__string__clz_Torappu_ActAutoChessData_ActAutoChessPlayerTitleData, dict__string__clz_Torappu_ActAutoChessData_ActAutoChessPlayerTitleDataT>(this.playerTitleDataDict.bind(this), this.playerTitleDataDictLength());
  _o.shopCharChessInfoData = this.bb!.createObjList<dict__int__list_clz_Torappu_ActAutoChessData_ActAutoChessShopCharChessInfoData, dict__int__list_clz_Torappu_ActAutoChessData_ActAutoChessShopCharChessInfoDataT>(this.shopCharChessInfoData.bind(this), this.shopCharChessInfoDataLength());
  _o.constData = (this.constData() !== null ? this.constData()!.unpack() : null);
}
}

export class clz_Torappu_ActAutoChessDataT implements flatbuffers.IGeneratedObject {
constructor(
  public modeDataDict: (dict__string__clz_Torappu_ActAutoChessData_ActAutoChessModeDataT)[] = [],
  public baseRewardDataList: (clz_Torappu_ActAutoChessData_ActAutoChessBaseRewardDataT)[] = [],
  public bandDataListDict: (dict__string__clz_Torappu_ActAutoChessData_ActAutoChessBandDataT)[] = [],
  public charChessDataDict: (dict__string__clz_Torappu_ActAutoChessData_ActAutoChessCharChessDataT)[] = [],
  public chessNormalIdLookupDict: (dict__string__stringT)[] = [],
  public diyChessDict: (dict__string__enum__Torappu_RarityRankT)[] = [],
  public shopLevelDataDict: (dict__string__list_dict__int__clz_Torappu_ActAutoChessData_ActAutoChessShopLevelDataT)[] = [],
  public shopLevelDisplayDataDict: (dict__int__clz_Torappu_ActAutoChessData_ActAutoChessShopLevelDisplayDataT)[] = [],
  public charShopChessDatas: (dict__string__clz_Torappu_ActAutoChessData_ActAutoChessCharShopChessDataT)[] = [],
  public trapChessDataDict: (dict__string__clz_Torappu_ActAutoChessData_ActAutoChessTrapChessDataT)[] = [],
  public trapShopChessDatas: (dict__string__clz_Torappu_ActAutoChessData_ActAutoChessTrapShopChessDataT)[] = [],
  public stageDatasDict: (dict__string__clz_Torappu_ActAutoChessData_ActAutoChessStageDataT)[] = [],
  public battleDataDict: (dict__string__list_dict__int__list_clz_Torappu_ActAutoChessData_ActAutoChessBattleDataT)[] = [],
  public bondInfoDict: (dict__string__clz_Torappu_ActAutoChessData_ActAutoChessBondInfoT)[] = [],
  public garrisonDataDict: (dict__string__clz_Torappu_ActAutoChessData_ActAutoChessGarrisonDataT)[] = [],
  public effectInfoDataDict: (dict__string__clz_Torappu_ActAutoChessData_ActAutoChessEffectInfoDataT)[] = [],
  public effectBuffInfoDataDict: (dict__string__list_clz_Torappu_ActAutoChessData_ActAutoChessBuffInfoDataT)[] = [],
  public effectChoiceInfoDict: (dict__string__clz_Torappu_ActAutoChessData_ActAutoChessEffectChoiceInfoDataT)[] = [],
  public bossInfoDict: (dict__string__clz_Torappu_ActAutoChessData_ActAutochessBossEntryT)[] = [],
  public specialEnemyInfoDict: (dict__string__clz_Torappu_ActAutoChessData_ActAutochessSpecialEnemyEntryT)[] = [],
  public enemyInfoDict: (dict__string__list_stringT)[] = [],
  public specialEnemyRandomTypeDict: (dict__string__clz_Torappu_ActAutoChessData_ActAutochessSpecialEnemyTypeEntryT)[] = [],
  public trainingNpcList: (clz_Torappu_ActAutoChessData_ActAutoChessTrainingNpcDataT)[] = [],
  public milestoneList: (clz_Torappu_ActivityCommonMilestoneDataT)[] = [],
  public modeFactorInfo: (dict__string__floatT)[] = [],
  public difficultyFactorInfo: (dict__string__floatT)[] = [],
  public playerTitleDataDict: (dict__string__clz_Torappu_ActAutoChessData_ActAutoChessPlayerTitleDataT)[] = [],
  public shopCharChessInfoData: (dict__int__list_clz_Torappu_ActAutoChessData_ActAutoChessShopCharChessInfoDataT)[] = [],
  public constData: clz_Torappu_ActAutoChessData_ActAutoChessConstDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const modeDataDict = clz_Torappu_ActAutoChessData.createModeDataDictVector(builder, builder.createObjectOffsetList(this.modeDataDict));
  const baseRewardDataList = clz_Torappu_ActAutoChessData.createBaseRewardDataListVector(builder, builder.createObjectOffsetList(this.baseRewardDataList));
  const bandDataListDict = clz_Torappu_ActAutoChessData.createBandDataListDictVector(builder, builder.createObjectOffsetList(this.bandDataListDict));
  const charChessDataDict = clz_Torappu_ActAutoChessData.createCharChessDataDictVector(builder, builder.createObjectOffsetList(this.charChessDataDict));
  const chessNormalIdLookupDict = clz_Torappu_ActAutoChessData.createChessNormalIdLookupDictVector(builder, builder.createObjectOffsetList(this.chessNormalIdLookupDict));
  const diyChessDict = clz_Torappu_ActAutoChessData.createDiyChessDictVector(builder, builder.createObjectOffsetList(this.diyChessDict));
  const shopLevelDataDict = clz_Torappu_ActAutoChessData.createShopLevelDataDictVector(builder, builder.createObjectOffsetList(this.shopLevelDataDict));
  const shopLevelDisplayDataDict = clz_Torappu_ActAutoChessData.createShopLevelDisplayDataDictVector(builder, builder.createObjectOffsetList(this.shopLevelDisplayDataDict));
  const charShopChessDatas = clz_Torappu_ActAutoChessData.createCharShopChessDatasVector(builder, builder.createObjectOffsetList(this.charShopChessDatas));
  const trapChessDataDict = clz_Torappu_ActAutoChessData.createTrapChessDataDictVector(builder, builder.createObjectOffsetList(this.trapChessDataDict));
  const trapShopChessDatas = clz_Torappu_ActAutoChessData.createTrapShopChessDatasVector(builder, builder.createObjectOffsetList(this.trapShopChessDatas));
  const stageDatasDict = clz_Torappu_ActAutoChessData.createStageDatasDictVector(builder, builder.createObjectOffsetList(this.stageDatasDict));
  const battleDataDict = clz_Torappu_ActAutoChessData.createBattleDataDictVector(builder, builder.createObjectOffsetList(this.battleDataDict));
  const bondInfoDict = clz_Torappu_ActAutoChessData.createBondInfoDictVector(builder, builder.createObjectOffsetList(this.bondInfoDict));
  const garrisonDataDict = clz_Torappu_ActAutoChessData.createGarrisonDataDictVector(builder, builder.createObjectOffsetList(this.garrisonDataDict));
  const effectInfoDataDict = clz_Torappu_ActAutoChessData.createEffectInfoDataDictVector(builder, builder.createObjectOffsetList(this.effectInfoDataDict));
  const effectBuffInfoDataDict = clz_Torappu_ActAutoChessData.createEffectBuffInfoDataDictVector(builder, builder.createObjectOffsetList(this.effectBuffInfoDataDict));
  const effectChoiceInfoDict = clz_Torappu_ActAutoChessData.createEffectChoiceInfoDictVector(builder, builder.createObjectOffsetList(this.effectChoiceInfoDict));
  const bossInfoDict = clz_Torappu_ActAutoChessData.createBossInfoDictVector(builder, builder.createObjectOffsetList(this.bossInfoDict));
  const specialEnemyInfoDict = clz_Torappu_ActAutoChessData.createSpecialEnemyInfoDictVector(builder, builder.createObjectOffsetList(this.specialEnemyInfoDict));
  const enemyInfoDict = clz_Torappu_ActAutoChessData.createEnemyInfoDictVector(builder, builder.createObjectOffsetList(this.enemyInfoDict));
  const specialEnemyRandomTypeDict = clz_Torappu_ActAutoChessData.createSpecialEnemyRandomTypeDictVector(builder, builder.createObjectOffsetList(this.specialEnemyRandomTypeDict));
  const trainingNpcList = clz_Torappu_ActAutoChessData.createTrainingNpcListVector(builder, builder.createObjectOffsetList(this.trainingNpcList));
  const milestoneList = clz_Torappu_ActAutoChessData.createMilestoneListVector(builder, builder.createObjectOffsetList(this.milestoneList));
  const modeFactorInfo = clz_Torappu_ActAutoChessData.createModeFactorInfoVector(builder, builder.createObjectOffsetList(this.modeFactorInfo));
  const difficultyFactorInfo = clz_Torappu_ActAutoChessData.createDifficultyFactorInfoVector(builder, builder.createObjectOffsetList(this.difficultyFactorInfo));
  const playerTitleDataDict = clz_Torappu_ActAutoChessData.createPlayerTitleDataDictVector(builder, builder.createObjectOffsetList(this.playerTitleDataDict));
  const shopCharChessInfoData = clz_Torappu_ActAutoChessData.createShopCharChessInfoDataVector(builder, builder.createObjectOffsetList(this.shopCharChessInfoData));
  const constData = (this.constData !== null ? this.constData!.pack(builder) : 0);

  clz_Torappu_ActAutoChessData.startclz_Torappu_ActAutoChessData(builder);
  clz_Torappu_ActAutoChessData.addModeDataDict(builder, modeDataDict);
  clz_Torappu_ActAutoChessData.addBaseRewardDataList(builder, baseRewardDataList);
  clz_Torappu_ActAutoChessData.addBandDataListDict(builder, bandDataListDict);
  clz_Torappu_ActAutoChessData.addCharChessDataDict(builder, charChessDataDict);
  clz_Torappu_ActAutoChessData.addChessNormalIdLookupDict(builder, chessNormalIdLookupDict);
  clz_Torappu_ActAutoChessData.addDiyChessDict(builder, diyChessDict);
  clz_Torappu_ActAutoChessData.addShopLevelDataDict(builder, shopLevelDataDict);
  clz_Torappu_ActAutoChessData.addShopLevelDisplayDataDict(builder, shopLevelDisplayDataDict);
  clz_Torappu_ActAutoChessData.addCharShopChessDatas(builder, charShopChessDatas);
  clz_Torappu_ActAutoChessData.addTrapChessDataDict(builder, trapChessDataDict);
  clz_Torappu_ActAutoChessData.addTrapShopChessDatas(builder, trapShopChessDatas);
  clz_Torappu_ActAutoChessData.addStageDatasDict(builder, stageDatasDict);
  clz_Torappu_ActAutoChessData.addBattleDataDict(builder, battleDataDict);
  clz_Torappu_ActAutoChessData.addBondInfoDict(builder, bondInfoDict);
  clz_Torappu_ActAutoChessData.addGarrisonDataDict(builder, garrisonDataDict);
  clz_Torappu_ActAutoChessData.addEffectInfoDataDict(builder, effectInfoDataDict);
  clz_Torappu_ActAutoChessData.addEffectBuffInfoDataDict(builder, effectBuffInfoDataDict);
  clz_Torappu_ActAutoChessData.addEffectChoiceInfoDict(builder, effectChoiceInfoDict);
  clz_Torappu_ActAutoChessData.addBossInfoDict(builder, bossInfoDict);
  clz_Torappu_ActAutoChessData.addSpecialEnemyInfoDict(builder, specialEnemyInfoDict);
  clz_Torappu_ActAutoChessData.addEnemyInfoDict(builder, enemyInfoDict);
  clz_Torappu_ActAutoChessData.addSpecialEnemyRandomTypeDict(builder, specialEnemyRandomTypeDict);
  clz_Torappu_ActAutoChessData.addTrainingNpcList(builder, trainingNpcList);
  clz_Torappu_ActAutoChessData.addMilestoneList(builder, milestoneList);
  clz_Torappu_ActAutoChessData.addModeFactorInfo(builder, modeFactorInfo);
  clz_Torappu_ActAutoChessData.addDifficultyFactorInfo(builder, difficultyFactorInfo);
  clz_Torappu_ActAutoChessData.addPlayerTitleDataDict(builder, playerTitleDataDict);
  clz_Torappu_ActAutoChessData.addShopCharChessInfoData(builder, shopCharChessInfoData);
  clz_Torappu_ActAutoChessData.addConstData(builder, constData);

  return clz_Torappu_ActAutoChessData.endclz_Torappu_ActAutoChessData(builder);
}
}
