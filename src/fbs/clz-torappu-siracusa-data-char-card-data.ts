// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_SiracusaData_CardGainType } from './enum--torappu-siracusa-data-card-gain-type.js';


export class clz_Torappu_SiracusaData_CharCardData implements flatbuffers.IUnpackableObject<clz_Torappu_SiracusaData_CharCardDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SiracusaData_CharCardData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SiracusaData_CharCardData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SiracusaData_CharCardData):clz_Torappu_SiracusaData_CharCardData {
  return (obj || new clz_Torappu_SiracusaData_CharCardData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SiracusaData_CharCardData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SiracusaData_CharCardData):clz_Torappu_SiracusaData_CharCardData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SiracusaData_CharCardData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

charCardId():string|null
charCardId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
charCardId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortIndex():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

avgChar():string|null
avgChar(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
avgChar(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

avgCharOffsetY():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

charCardName():string|null
charCardName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
charCardName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

charCardItaName():string|null
charCardItaName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
charCardItaName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

charCardTitle():string|null
charCardTitle(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
charCardTitle(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

charCardDesc():string|null
charCardDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
charCardDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

fullCompleteDes():string|null
fullCompleteDes(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
fullCompleteDes(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

gainDesc():string|null
gainDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
gainDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

themeColor():string|null
themeColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
themeColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

taskRingList(index: number):string
taskRingList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
taskRingList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

taskRingListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

operaItemId():string|null
operaItemId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
operaItemId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

gainType():enum__Torappu_SiracusaData_CardGainType {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_SiracusaData_CardGainType.NONE;
}

gainParamList(index: number):string
gainParamList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
gainParamList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

gainParamListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SiracusaData_CharCardData(builder:flatbuffers.Builder) {
  builder.startObject(15);
}

static addCharCardId(builder:flatbuffers.Builder, charCardIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, charCardIdOffset, 0);
}

static addSortIndex(builder:flatbuffers.Builder, sortIndex:number) {
  builder.addFieldInt32(1, sortIndex, 0);
}

static addAvgChar(builder:flatbuffers.Builder, avgCharOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, avgCharOffset, 0);
}

static addAvgCharOffsetY(builder:flatbuffers.Builder, avgCharOffsetY:number) {
  builder.addFieldFloat32(3, avgCharOffsetY, 0.0);
}

static addCharCardName(builder:flatbuffers.Builder, charCardNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, charCardNameOffset, 0);
}

static addCharCardItaName(builder:flatbuffers.Builder, charCardItaNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, charCardItaNameOffset, 0);
}

static addCharCardTitle(builder:flatbuffers.Builder, charCardTitleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, charCardTitleOffset, 0);
}

static addCharCardDesc(builder:flatbuffers.Builder, charCardDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, charCardDescOffset, 0);
}

static addFullCompleteDes(builder:flatbuffers.Builder, fullCompleteDesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, fullCompleteDesOffset, 0);
}

static addGainDesc(builder:flatbuffers.Builder, gainDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, gainDescOffset, 0);
}

static addThemeColor(builder:flatbuffers.Builder, themeColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, themeColorOffset, 0);
}

static addTaskRingList(builder:flatbuffers.Builder, taskRingListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, taskRingListOffset, 0);
}

static createTaskRingListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTaskRingListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addOperaItemId(builder:flatbuffers.Builder, operaItemIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, operaItemIdOffset, 0);
}

static addGainType(builder:flatbuffers.Builder, gainType:enum__Torappu_SiracusaData_CardGainType) {
  builder.addFieldInt32(13, gainType, enum__Torappu_SiracusaData_CardGainType.NONE);
}

static addGainParamList(builder:flatbuffers.Builder, gainParamListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, gainParamListOffset, 0);
}

static createGainParamListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startGainParamListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_SiracusaData_CharCardData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SiracusaData_CharCardData(builder:flatbuffers.Builder, charCardIdOffset:flatbuffers.Offset, sortIndex:number, avgCharOffset:flatbuffers.Offset, avgCharOffsetY:number, charCardNameOffset:flatbuffers.Offset, charCardItaNameOffset:flatbuffers.Offset, charCardTitleOffset:flatbuffers.Offset, charCardDescOffset:flatbuffers.Offset, fullCompleteDesOffset:flatbuffers.Offset, gainDescOffset:flatbuffers.Offset, themeColorOffset:flatbuffers.Offset, taskRingListOffset:flatbuffers.Offset, operaItemIdOffset:flatbuffers.Offset, gainType:enum__Torappu_SiracusaData_CardGainType, gainParamListOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SiracusaData_CharCardData.startclz_Torappu_SiracusaData_CharCardData(builder);
  clz_Torappu_SiracusaData_CharCardData.addCharCardId(builder, charCardIdOffset);
  clz_Torappu_SiracusaData_CharCardData.addSortIndex(builder, sortIndex);
  clz_Torappu_SiracusaData_CharCardData.addAvgChar(builder, avgCharOffset);
  clz_Torappu_SiracusaData_CharCardData.addAvgCharOffsetY(builder, avgCharOffsetY);
  clz_Torappu_SiracusaData_CharCardData.addCharCardName(builder, charCardNameOffset);
  clz_Torappu_SiracusaData_CharCardData.addCharCardItaName(builder, charCardItaNameOffset);
  clz_Torappu_SiracusaData_CharCardData.addCharCardTitle(builder, charCardTitleOffset);
  clz_Torappu_SiracusaData_CharCardData.addCharCardDesc(builder, charCardDescOffset);
  clz_Torappu_SiracusaData_CharCardData.addFullCompleteDes(builder, fullCompleteDesOffset);
  clz_Torappu_SiracusaData_CharCardData.addGainDesc(builder, gainDescOffset);
  clz_Torappu_SiracusaData_CharCardData.addThemeColor(builder, themeColorOffset);
  clz_Torappu_SiracusaData_CharCardData.addTaskRingList(builder, taskRingListOffset);
  clz_Torappu_SiracusaData_CharCardData.addOperaItemId(builder, operaItemIdOffset);
  clz_Torappu_SiracusaData_CharCardData.addGainType(builder, gainType);
  clz_Torappu_SiracusaData_CharCardData.addGainParamList(builder, gainParamListOffset);
  return clz_Torappu_SiracusaData_CharCardData.endclz_Torappu_SiracusaData_CharCardData(builder);
}

unpack(): clz_Torappu_SiracusaData_CharCardDataT {
  return new clz_Torappu_SiracusaData_CharCardDataT(
    this.charCardId(),
    this.sortIndex(),
    this.avgChar(),
    this.avgCharOffsetY(),
    this.charCardName(),
    this.charCardItaName(),
    this.charCardTitle(),
    this.charCardDesc(),
    this.fullCompleteDes(),
    this.gainDesc(),
    this.themeColor(),
    this.bb!.createScalarList<string>(this.taskRingList.bind(this), this.taskRingListLength()),
    this.operaItemId(),
    this.gainType(),
    this.bb!.createScalarList<string>(this.gainParamList.bind(this), this.gainParamListLength())
  );
}


unpackTo(_o: clz_Torappu_SiracusaData_CharCardDataT): void {
  _o.charCardId = this.charCardId();
  _o.sortIndex = this.sortIndex();
  _o.avgChar = this.avgChar();
  _o.avgCharOffsetY = this.avgCharOffsetY();
  _o.charCardName = this.charCardName();
  _o.charCardItaName = this.charCardItaName();
  _o.charCardTitle = this.charCardTitle();
  _o.charCardDesc = this.charCardDesc();
  _o.fullCompleteDes = this.fullCompleteDes();
  _o.gainDesc = this.gainDesc();
  _o.themeColor = this.themeColor();
  _o.taskRingList = this.bb!.createScalarList<string>(this.taskRingList.bind(this), this.taskRingListLength());
  _o.operaItemId = this.operaItemId();
  _o.gainType = this.gainType();
  _o.gainParamList = this.bb!.createScalarList<string>(this.gainParamList.bind(this), this.gainParamListLength());
}
}

export class clz_Torappu_SiracusaData_CharCardDataT implements flatbuffers.IGeneratedObject {
constructor(
  public charCardId: string|Uint8Array|null = null,
  public sortIndex: number = 0,
  public avgChar: string|Uint8Array|null = null,
  public avgCharOffsetY: number = 0.0,
  public charCardName: string|Uint8Array|null = null,
  public charCardItaName: string|Uint8Array|null = null,
  public charCardTitle: string|Uint8Array|null = null,
  public charCardDesc: string|Uint8Array|null = null,
  public fullCompleteDes: string|Uint8Array|null = null,
  public gainDesc: string|Uint8Array|null = null,
  public themeColor: string|Uint8Array|null = null,
  public taskRingList: (string)[] = [],
  public operaItemId: string|Uint8Array|null = null,
  public gainType: enum__Torappu_SiracusaData_CardGainType = enum__Torappu_SiracusaData_CardGainType.NONE,
  public gainParamList: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const charCardId = (this.charCardId !== null ? builder.createString(this.charCardId!) : 0);
  const avgChar = (this.avgChar !== null ? builder.createString(this.avgChar!) : 0);
  const charCardName = (this.charCardName !== null ? builder.createString(this.charCardName!) : 0);
  const charCardItaName = (this.charCardItaName !== null ? builder.createString(this.charCardItaName!) : 0);
  const charCardTitle = (this.charCardTitle !== null ? builder.createString(this.charCardTitle!) : 0);
  const charCardDesc = (this.charCardDesc !== null ? builder.createString(this.charCardDesc!) : 0);
  const fullCompleteDes = (this.fullCompleteDes !== null ? builder.createString(this.fullCompleteDes!) : 0);
  const gainDesc = (this.gainDesc !== null ? builder.createString(this.gainDesc!) : 0);
  const themeColor = (this.themeColor !== null ? builder.createString(this.themeColor!) : 0);
  const taskRingList = clz_Torappu_SiracusaData_CharCardData.createTaskRingListVector(builder, builder.createObjectOffsetList(this.taskRingList));
  const operaItemId = (this.operaItemId !== null ? builder.createString(this.operaItemId!) : 0);
  const gainParamList = clz_Torappu_SiracusaData_CharCardData.createGainParamListVector(builder, builder.createObjectOffsetList(this.gainParamList));

  return clz_Torappu_SiracusaData_CharCardData.createclz_Torappu_SiracusaData_CharCardData(builder,
    charCardId,
    this.sortIndex,
    avgChar,
    this.avgCharOffsetY,
    charCardName,
    charCardItaName,
    charCardTitle,
    charCardDesc,
    fullCompleteDes,
    gainDesc,
    themeColor,
    taskRingList,
    operaItemId,
    this.gainType,
    gainParamList
  );
}
}
