// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_RoguelikeDiceRuleGroupData implements flatbuffers.IUnpackableObject<clz_Torappu_RoguelikeDiceRuleGroupDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RoguelikeDiceRuleGroupData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RoguelikeDiceRuleGroupData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeDiceRuleGroupData):clz_Torappu_RoguelikeDiceRuleGroupData {
  return (obj || new clz_Torappu_RoguelikeDiceRuleGroupData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RoguelikeDiceRuleGroupData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeDiceRuleGroupData):clz_Torappu_RoguelikeDiceRuleGroupData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RoguelikeDiceRuleGroupData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

ruleGroupId():string|null
ruleGroupId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
ruleGroupId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

minGoodNum():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_RoguelikeDiceRuleGroupData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addRuleGroupId(builder:flatbuffers.Builder, ruleGroupIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ruleGroupIdOffset, 0);
}

static addMinGoodNum(builder:flatbuffers.Builder, minGoodNum:number) {
  builder.addFieldInt32(1, minGoodNum, 0);
}

static endclz_Torappu_RoguelikeDiceRuleGroupData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_RoguelikeDiceRuleGroupData(builder:flatbuffers.Builder, ruleGroupIdOffset:flatbuffers.Offset, minGoodNum:number):flatbuffers.Offset {
  clz_Torappu_RoguelikeDiceRuleGroupData.startclz_Torappu_RoguelikeDiceRuleGroupData(builder);
  clz_Torappu_RoguelikeDiceRuleGroupData.addRuleGroupId(builder, ruleGroupIdOffset);
  clz_Torappu_RoguelikeDiceRuleGroupData.addMinGoodNum(builder, minGoodNum);
  return clz_Torappu_RoguelikeDiceRuleGroupData.endclz_Torappu_RoguelikeDiceRuleGroupData(builder);
}

unpack(): clz_Torappu_RoguelikeDiceRuleGroupDataT {
  return new clz_Torappu_RoguelikeDiceRuleGroupDataT(
    this.ruleGroupId(),
    this.minGoodNum()
  );
}


unpackTo(_o: clz_Torappu_RoguelikeDiceRuleGroupDataT): void {
  _o.ruleGroupId = this.ruleGroupId();
  _o.minGoodNum = this.minGoodNum();
}
}

export class clz_Torappu_RoguelikeDiceRuleGroupDataT implements flatbuffers.IGeneratedObject {
constructor(
  public ruleGroupId: string|Uint8Array|null = null,
  public minGoodNum: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const ruleGroupId = (this.ruleGroupId !== null ? builder.createString(this.ruleGroupId!) : 0);

  return clz_Torappu_RoguelikeDiceRuleGroupData.createclz_Torappu_RoguelikeDiceRuleGroupData(builder,
    ruleGroupId,
    this.minGoodNum
  );
}
}
