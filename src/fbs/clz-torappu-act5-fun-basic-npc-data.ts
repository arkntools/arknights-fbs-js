// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_Act5FunBasicNpcData implements flatbuffers.IUnpackableObject<clz_Torappu_Act5FunBasicNpcDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Act5FunBasicNpcData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Act5FunBasicNpcData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act5FunBasicNpcData):clz_Torappu_Act5FunBasicNpcData {
  return (obj || new clz_Torappu_Act5FunBasicNpcData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Act5FunBasicNpcData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act5FunBasicNpcData):clz_Torappu_Act5FunBasicNpcData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Act5FunBasicNpcData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

npcId():string|null
npcId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
npcId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

avatarId():string|null
avatarId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
avatarId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_Act5FunBasicNpcData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addNpcId(builder:flatbuffers.Builder, npcIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, npcIdOffset, 0);
}

static addAvatarId(builder:flatbuffers.Builder, avatarIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, avatarIdOffset, 0);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, nameOffset, 0);
}

static endclz_Torappu_Act5FunBasicNpcData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Act5FunBasicNpcData(builder:flatbuffers.Builder, npcIdOffset:flatbuffers.Offset, avatarIdOffset:flatbuffers.Offset, nameOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_Act5FunBasicNpcData.startclz_Torappu_Act5FunBasicNpcData(builder);
  clz_Torappu_Act5FunBasicNpcData.addNpcId(builder, npcIdOffset);
  clz_Torappu_Act5FunBasicNpcData.addAvatarId(builder, avatarIdOffset);
  clz_Torappu_Act5FunBasicNpcData.addName(builder, nameOffset);
  return clz_Torappu_Act5FunBasicNpcData.endclz_Torappu_Act5FunBasicNpcData(builder);
}

unpack(): clz_Torappu_Act5FunBasicNpcDataT {
  return new clz_Torappu_Act5FunBasicNpcDataT(
    this.npcId(),
    this.avatarId(),
    this.name()
  );
}


unpackTo(_o: clz_Torappu_Act5FunBasicNpcDataT): void {
  _o.npcId = this.npcId();
  _o.avatarId = this.avatarId();
  _o.name = this.name();
}
}

export class clz_Torappu_Act5FunBasicNpcDataT implements flatbuffers.IGeneratedObject {
constructor(
  public npcId: string|Uint8Array|null = null,
  public avatarId: string|Uint8Array|null = null,
  public name: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const npcId = (this.npcId !== null ? builder.createString(this.npcId!) : 0);
  const avatarId = (this.avatarId !== null ? builder.createString(this.avatarId!) : 0);
  const name = (this.name !== null ? builder.createString(this.name!) : 0);

  return clz_Torappu_Act5FunBasicNpcData.createclz_Torappu_Act5FunBasicNpcData(builder,
    npcId,
    avatarId,
    name
  );
}
}
