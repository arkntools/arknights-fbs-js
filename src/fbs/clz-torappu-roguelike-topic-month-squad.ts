// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT } from './clz-torappu-item-bundle.js';
import { clz_Torappu_RoguelikeTopicMonthSquadTeamChar, clz_Torappu_RoguelikeTopicMonthSquadTeamCharT } from './clz-torappu-roguelike-topic-month-squad-team-char.js';


export class clz_Torappu_RoguelikeTopicMonthSquad implements flatbuffers.IUnpackableObject<clz_Torappu_RoguelikeTopicMonthSquadT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RoguelikeTopicMonthSquad {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RoguelikeTopicMonthSquad(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeTopicMonthSquad):clz_Torappu_RoguelikeTopicMonthSquad {
  return (obj || new clz_Torappu_RoguelikeTopicMonthSquad()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RoguelikeTopicMonthSquad(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeTopicMonthSquad):clz_Torappu_RoguelikeTopicMonthSquad {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RoguelikeTopicMonthSquad()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

teamName():string|null
teamName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

teamSubName():string|null
teamSubName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamSubName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

teamFlavorDesc():string|null
teamFlavorDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamFlavorDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

teamDes():string|null
teamDes(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamDes(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

teamColor():string|null
teamColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

teamMonth():string|null
teamMonth(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamMonth(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

teamYear():string|null
teamYear(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamYear(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

teamIndex():string|null
teamIndex(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamIndex(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

teamChars(index: number, obj?:clz_Torappu_RoguelikeTopicMonthSquadTeamChar):clz_Torappu_RoguelikeTopicMonthSquadTeamChar|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? (obj || new clz_Torappu_RoguelikeTopicMonthSquadTeamChar()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

teamCharsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

zoneId():string|null
zoneId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
zoneId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

chatId():string|null
chatId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
chatId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

tokenRewardNum():number {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

items(index: number, obj?:clz_Torappu_ItemBundle):clz_Torappu_ItemBundle|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? (obj || new clz_Torappu_ItemBundle()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

itemsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

startTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

endTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

taskDes():string|null
taskDes(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
taskDes(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_RoguelikeTopicMonthSquad(builder:flatbuffers.Builder) {
  builder.startObject(17);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addTeamName(builder:flatbuffers.Builder, teamNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, teamNameOffset, 0);
}

static addTeamSubName(builder:flatbuffers.Builder, teamSubNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, teamSubNameOffset, 0);
}

static addTeamFlavorDesc(builder:flatbuffers.Builder, teamFlavorDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, teamFlavorDescOffset, 0);
}

static addTeamDes(builder:flatbuffers.Builder, teamDesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, teamDesOffset, 0);
}

static addTeamColor(builder:flatbuffers.Builder, teamColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, teamColorOffset, 0);
}

static addTeamMonth(builder:flatbuffers.Builder, teamMonthOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, teamMonthOffset, 0);
}

static addTeamYear(builder:flatbuffers.Builder, teamYearOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, teamYearOffset, 0);
}

static addTeamIndex(builder:flatbuffers.Builder, teamIndexOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, teamIndexOffset, 0);
}

static addTeamChars(builder:flatbuffers.Builder, teamCharsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, teamCharsOffset, 0);
}

static createTeamCharsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTeamCharsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addZoneId(builder:flatbuffers.Builder, zoneIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, zoneIdOffset, 0);
}

static addChatId(builder:flatbuffers.Builder, chatIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, chatIdOffset, 0);
}

static addTokenRewardNum(builder:flatbuffers.Builder, tokenRewardNum:number) {
  builder.addFieldInt32(12, tokenRewardNum, 0);
}

static addItems(builder:flatbuffers.Builder, itemsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, itemsOffset, 0);
}

static createItemsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startItemsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addStartTime(builder:flatbuffers.Builder, startTime:bigint) {
  builder.addFieldInt64(14, startTime, BigInt('0'));
}

static addEndTime(builder:flatbuffers.Builder, endTime:bigint) {
  builder.addFieldInt64(15, endTime, BigInt('0'));
}

static addTaskDes(builder:flatbuffers.Builder, taskDesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(16, taskDesOffset, 0);
}

static endclz_Torappu_RoguelikeTopicMonthSquad(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_RoguelikeTopicMonthSquad(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset, teamNameOffset:flatbuffers.Offset, teamSubNameOffset:flatbuffers.Offset, teamFlavorDescOffset:flatbuffers.Offset, teamDesOffset:flatbuffers.Offset, teamColorOffset:flatbuffers.Offset, teamMonthOffset:flatbuffers.Offset, teamYearOffset:flatbuffers.Offset, teamIndexOffset:flatbuffers.Offset, teamCharsOffset:flatbuffers.Offset, zoneIdOffset:flatbuffers.Offset, chatIdOffset:flatbuffers.Offset, tokenRewardNum:number, itemsOffset:flatbuffers.Offset, startTime:bigint, endTime:bigint, taskDesOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_RoguelikeTopicMonthSquad.startclz_Torappu_RoguelikeTopicMonthSquad(builder);
  clz_Torappu_RoguelikeTopicMonthSquad.addId(builder, idOffset);
  clz_Torappu_RoguelikeTopicMonthSquad.addTeamName(builder, teamNameOffset);
  clz_Torappu_RoguelikeTopicMonthSquad.addTeamSubName(builder, teamSubNameOffset);
  clz_Torappu_RoguelikeTopicMonthSquad.addTeamFlavorDesc(builder, teamFlavorDescOffset);
  clz_Torappu_RoguelikeTopicMonthSquad.addTeamDes(builder, teamDesOffset);
  clz_Torappu_RoguelikeTopicMonthSquad.addTeamColor(builder, teamColorOffset);
  clz_Torappu_RoguelikeTopicMonthSquad.addTeamMonth(builder, teamMonthOffset);
  clz_Torappu_RoguelikeTopicMonthSquad.addTeamYear(builder, teamYearOffset);
  clz_Torappu_RoguelikeTopicMonthSquad.addTeamIndex(builder, teamIndexOffset);
  clz_Torappu_RoguelikeTopicMonthSquad.addTeamChars(builder, teamCharsOffset);
  clz_Torappu_RoguelikeTopicMonthSquad.addZoneId(builder, zoneIdOffset);
  clz_Torappu_RoguelikeTopicMonthSquad.addChatId(builder, chatIdOffset);
  clz_Torappu_RoguelikeTopicMonthSquad.addTokenRewardNum(builder, tokenRewardNum);
  clz_Torappu_RoguelikeTopicMonthSquad.addItems(builder, itemsOffset);
  clz_Torappu_RoguelikeTopicMonthSquad.addStartTime(builder, startTime);
  clz_Torappu_RoguelikeTopicMonthSquad.addEndTime(builder, endTime);
  clz_Torappu_RoguelikeTopicMonthSquad.addTaskDes(builder, taskDesOffset);
  return clz_Torappu_RoguelikeTopicMonthSquad.endclz_Torappu_RoguelikeTopicMonthSquad(builder);
}

unpack(): clz_Torappu_RoguelikeTopicMonthSquadT {
  return new clz_Torappu_RoguelikeTopicMonthSquadT(
    this.id(),
    this.teamName(),
    this.teamSubName(),
    this.teamFlavorDesc(),
    this.teamDes(),
    this.teamColor(),
    this.teamMonth(),
    this.teamYear(),
    this.teamIndex(),
    this.bb!.createObjList<clz_Torappu_RoguelikeTopicMonthSquadTeamChar, clz_Torappu_RoguelikeTopicMonthSquadTeamCharT>(this.teamChars.bind(this), this.teamCharsLength()),
    this.zoneId(),
    this.chatId(),
    this.tokenRewardNum(),
    this.bb!.createObjList<clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT>(this.items.bind(this), this.itemsLength()),
    this.startTime(),
    this.endTime(),
    this.taskDes()
  );
}


unpackTo(_o: clz_Torappu_RoguelikeTopicMonthSquadT): void {
  _o.id = this.id();
  _o.teamName = this.teamName();
  _o.teamSubName = this.teamSubName();
  _o.teamFlavorDesc = this.teamFlavorDesc();
  _o.teamDes = this.teamDes();
  _o.teamColor = this.teamColor();
  _o.teamMonth = this.teamMonth();
  _o.teamYear = this.teamYear();
  _o.teamIndex = this.teamIndex();
  _o.teamChars = this.bb!.createObjList<clz_Torappu_RoguelikeTopicMonthSquadTeamChar, clz_Torappu_RoguelikeTopicMonthSquadTeamCharT>(this.teamChars.bind(this), this.teamCharsLength());
  _o.zoneId = this.zoneId();
  _o.chatId = this.chatId();
  _o.tokenRewardNum = this.tokenRewardNum();
  _o.items = this.bb!.createObjList<clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT>(this.items.bind(this), this.itemsLength());
  _o.startTime = this.startTime();
  _o.endTime = this.endTime();
  _o.taskDes = this.taskDes();
}
}

export class clz_Torappu_RoguelikeTopicMonthSquadT implements flatbuffers.IGeneratedObject {
constructor(
  public id: string|Uint8Array|null = null,
  public teamName: string|Uint8Array|null = null,
  public teamSubName: string|Uint8Array|null = null,
  public teamFlavorDesc: string|Uint8Array|null = null,
  public teamDes: string|Uint8Array|null = null,
  public teamColor: string|Uint8Array|null = null,
  public teamMonth: string|Uint8Array|null = null,
  public teamYear: string|Uint8Array|null = null,
  public teamIndex: string|Uint8Array|null = null,
  public teamChars: (clz_Torappu_RoguelikeTopicMonthSquadTeamCharT)[] = [],
  public zoneId: string|Uint8Array|null = null,
  public chatId: string|Uint8Array|null = null,
  public tokenRewardNum: number = 0,
  public items: (clz_Torappu_ItemBundleT)[] = [],
  public startTime: bigint = BigInt('0'),
  public endTime: bigint = BigInt('0'),
  public taskDes: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const id = (this.id !== null ? builder.createString(this.id!) : 0);
  const teamName = (this.teamName !== null ? builder.createString(this.teamName!) : 0);
  const teamSubName = (this.teamSubName !== null ? builder.createString(this.teamSubName!) : 0);
  const teamFlavorDesc = (this.teamFlavorDesc !== null ? builder.createString(this.teamFlavorDesc!) : 0);
  const teamDes = (this.teamDes !== null ? builder.createString(this.teamDes!) : 0);
  const teamColor = (this.teamColor !== null ? builder.createString(this.teamColor!) : 0);
  const teamMonth = (this.teamMonth !== null ? builder.createString(this.teamMonth!) : 0);
  const teamYear = (this.teamYear !== null ? builder.createString(this.teamYear!) : 0);
  const teamIndex = (this.teamIndex !== null ? builder.createString(this.teamIndex!) : 0);
  const teamChars = clz_Torappu_RoguelikeTopicMonthSquad.createTeamCharsVector(builder, builder.createObjectOffsetList(this.teamChars));
  const zoneId = (this.zoneId !== null ? builder.createString(this.zoneId!) : 0);
  const chatId = (this.chatId !== null ? builder.createString(this.chatId!) : 0);
  const items = clz_Torappu_RoguelikeTopicMonthSquad.createItemsVector(builder, builder.createObjectOffsetList(this.items));
  const taskDes = (this.taskDes !== null ? builder.createString(this.taskDes!) : 0);

  return clz_Torappu_RoguelikeTopicMonthSquad.createclz_Torappu_RoguelikeTopicMonthSquad(builder,
    id,
    teamName,
    teamSubName,
    teamFlavorDesc,
    teamDes,
    teamColor,
    teamMonth,
    teamYear,
    teamIndex,
    teamChars,
    zoneId,
    chatId,
    this.tokenRewardNum,
    items,
    this.startTime,
    this.endTime,
    taskDes
  );
}
}
