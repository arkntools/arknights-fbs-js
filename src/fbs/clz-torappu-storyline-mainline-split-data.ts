// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_StorylineMainlineSplitData implements flatbuffers.IUnpackableObject<clz_Torappu_StorylineMainlineSplitDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_StorylineMainlineSplitData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_StorylineMainlineSplitData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_StorylineMainlineSplitData):clz_Torappu_StorylineMainlineSplitData {
  return (obj || new clz_Torappu_StorylineMainlineSplitData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_StorylineMainlineSplitData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_StorylineMainlineSplitData):clz_Torappu_StorylineMainlineSplitData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_StorylineMainlineSplitData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

iconId():string|null
iconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
iconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

subName():string|null
subName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
subName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_StorylineMainlineSplitData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addIconId(builder:flatbuffers.Builder, iconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, iconIdOffset, 0);
}

static addSubName(builder:flatbuffers.Builder, subNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, subNameOffset, 0);
}

static endclz_Torappu_StorylineMainlineSplitData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_StorylineMainlineSplitData(builder:flatbuffers.Builder, iconIdOffset:flatbuffers.Offset, subNameOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_StorylineMainlineSplitData.startclz_Torappu_StorylineMainlineSplitData(builder);
  clz_Torappu_StorylineMainlineSplitData.addIconId(builder, iconIdOffset);
  clz_Torappu_StorylineMainlineSplitData.addSubName(builder, subNameOffset);
  return clz_Torappu_StorylineMainlineSplitData.endclz_Torappu_StorylineMainlineSplitData(builder);
}

unpack(): clz_Torappu_StorylineMainlineSplitDataT {
  return new clz_Torappu_StorylineMainlineSplitDataT(
    this.iconId(),
    this.subName()
  );
}


unpackTo(_o: clz_Torappu_StorylineMainlineSplitDataT): void {
  _o.iconId = this.iconId();
  _o.subName = this.subName();
}
}

export class clz_Torappu_StorylineMainlineSplitDataT implements flatbuffers.IGeneratedObject {
constructor(
  public iconId: string|Uint8Array|null = null,
  public subName: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const iconId = (this.iconId !== null ? builder.createString(this.iconId!) : 0);
  const subName = (this.subName !== null ? builder.createString(this.subName!) : 0);

  return clz_Torappu_StorylineMainlineSplitData.createclz_Torappu_StorylineMainlineSplitData(builder,
    iconId,
    subName
  );
}
}
