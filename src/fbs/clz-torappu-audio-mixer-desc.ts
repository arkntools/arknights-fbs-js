// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_Audio_MixerDesc_Category } from './enum--torappu-audio-mixer-desc-category.js';


export class clz_Torappu_Audio_MixerDesc implements flatbuffers.IUnpackableObject<clz_Torappu_Audio_MixerDescT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Audio_MixerDesc {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Audio_MixerDesc(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Audio_MixerDesc):clz_Torappu_Audio_MixerDesc {
  return (obj || new clz_Torappu_Audio_MixerDesc()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Audio_MixerDesc(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Audio_MixerDesc):clz_Torappu_Audio_MixerDesc {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Audio_MixerDesc()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

category():enum__Torappu_Audio_MixerDesc_Category {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_Audio_MixerDesc_Category.CUSTOM;
}

customGroup():string|null
customGroup(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
customGroup(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

important():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startclz_Torappu_Audio_MixerDesc(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addCategory(builder:flatbuffers.Builder, category:enum__Torappu_Audio_MixerDesc_Category) {
  builder.addFieldInt32(0, category, enum__Torappu_Audio_MixerDesc_Category.CUSTOM);
}

static addCustomGroup(builder:flatbuffers.Builder, customGroupOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, customGroupOffset, 0);
}

static addImportant(builder:flatbuffers.Builder, important:boolean) {
  builder.addFieldInt8(2, +important, +false);
}

static endclz_Torappu_Audio_MixerDesc(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Audio_MixerDesc(builder:flatbuffers.Builder, category:enum__Torappu_Audio_MixerDesc_Category, customGroupOffset:flatbuffers.Offset, important:boolean):flatbuffers.Offset {
  clz_Torappu_Audio_MixerDesc.startclz_Torappu_Audio_MixerDesc(builder);
  clz_Torappu_Audio_MixerDesc.addCategory(builder, category);
  clz_Torappu_Audio_MixerDesc.addCustomGroup(builder, customGroupOffset);
  clz_Torappu_Audio_MixerDesc.addImportant(builder, important);
  return clz_Torappu_Audio_MixerDesc.endclz_Torappu_Audio_MixerDesc(builder);
}

unpack(): clz_Torappu_Audio_MixerDescT {
  return new clz_Torappu_Audio_MixerDescT(
    this.category(),
    this.customGroup(),
    this.important()
  );
}


unpackTo(_o: clz_Torappu_Audio_MixerDescT): void {
  _o.category = this.category();
  _o.customGroup = this.customGroup();
  _o.important = this.important();
}
}

export class clz_Torappu_Audio_MixerDescT implements flatbuffers.IGeneratedObject {
constructor(
  public category: enum__Torappu_Audio_MixerDesc_Category = enum__Torappu_Audio_MixerDesc_Category.CUSTOM,
  public customGroup: string|Uint8Array|null = null,
  public important: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const customGroup = (this.customGroup !== null ? builder.createString(this.customGroup!) : 0);

  return clz_Torappu_Audio_MixerDesc.createclz_Torappu_Audio_MixerDesc(builder,
    this.category,
    customGroup,
    this.important
  );
}
}
