// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_ActArcadeData_BadgeType } from './enum--torappu-act-arcade-data-badge-type.js';


export class clz_Torappu_ActArcadeData_ArcadeBadgeTypeData implements flatbuffers.IUnpackableObject<clz_Torappu_ActArcadeData_ArcadeBadgeTypeDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActArcadeData_ArcadeBadgeTypeData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActArcadeData_ArcadeBadgeTypeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActArcadeData_ArcadeBadgeTypeData):clz_Torappu_ActArcadeData_ArcadeBadgeTypeData {
  return (obj || new clz_Torappu_ActArcadeData_ArcadeBadgeTypeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActArcadeData_ArcadeBadgeTypeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActArcadeData_ArcadeBadgeTypeData):clz_Torappu_ActArcadeData_ArcadeBadgeTypeData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActArcadeData_ArcadeBadgeTypeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

badgeType():enum__Torappu_ActArcadeData_BadgeType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_ActArcadeData_BadgeType.COMMON;
}

badgeTypeName():string|null
badgeTypeName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
badgeTypeName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

buffRangeDesc():string|null
buffRangeDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
buffRangeDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_ActArcadeData_ArcadeBadgeTypeData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addBadgeType(builder:flatbuffers.Builder, badgeType:enum__Torappu_ActArcadeData_BadgeType) {
  builder.addFieldInt32(0, badgeType, enum__Torappu_ActArcadeData_BadgeType.COMMON);
}

static addBadgeTypeName(builder:flatbuffers.Builder, badgeTypeNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, badgeTypeNameOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(2, sortId, 0);
}

static addBuffRangeDesc(builder:flatbuffers.Builder, buffRangeDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, buffRangeDescOffset, 0);
}

static endclz_Torappu_ActArcadeData_ArcadeBadgeTypeData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActArcadeData_ArcadeBadgeTypeData(builder:flatbuffers.Builder, badgeType:enum__Torappu_ActArcadeData_BadgeType, badgeTypeNameOffset:flatbuffers.Offset, sortId:number, buffRangeDescOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActArcadeData_ArcadeBadgeTypeData.startclz_Torappu_ActArcadeData_ArcadeBadgeTypeData(builder);
  clz_Torappu_ActArcadeData_ArcadeBadgeTypeData.addBadgeType(builder, badgeType);
  clz_Torappu_ActArcadeData_ArcadeBadgeTypeData.addBadgeTypeName(builder, badgeTypeNameOffset);
  clz_Torappu_ActArcadeData_ArcadeBadgeTypeData.addSortId(builder, sortId);
  clz_Torappu_ActArcadeData_ArcadeBadgeTypeData.addBuffRangeDesc(builder, buffRangeDescOffset);
  return clz_Torappu_ActArcadeData_ArcadeBadgeTypeData.endclz_Torappu_ActArcadeData_ArcadeBadgeTypeData(builder);
}

unpack(): clz_Torappu_ActArcadeData_ArcadeBadgeTypeDataT {
  return new clz_Torappu_ActArcadeData_ArcadeBadgeTypeDataT(
    this.badgeType(),
    this.badgeTypeName(),
    this.sortId(),
    this.buffRangeDesc()
  );
}


unpackTo(_o: clz_Torappu_ActArcadeData_ArcadeBadgeTypeDataT): void {
  _o.badgeType = this.badgeType();
  _o.badgeTypeName = this.badgeTypeName();
  _o.sortId = this.sortId();
  _o.buffRangeDesc = this.buffRangeDesc();
}
}

export class clz_Torappu_ActArcadeData_ArcadeBadgeTypeDataT implements flatbuffers.IGeneratedObject {
constructor(
  public badgeType: enum__Torappu_ActArcadeData_BadgeType = enum__Torappu_ActArcadeData_BadgeType.COMMON,
  public badgeTypeName: string|Uint8Array|null = null,
  public sortId: number = 0,
  public buffRangeDesc: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const badgeTypeName = (this.badgeTypeName !== null ? builder.createString(this.badgeTypeName!) : 0);
  const buffRangeDesc = (this.buffRangeDesc !== null ? builder.createString(this.buffRangeDesc!) : 0);

  return clz_Torappu_ActArcadeData_ArcadeBadgeTypeData.createclz_Torappu_ActArcadeData_ArcadeBadgeTypeData(builder,
    this.badgeType,
    badgeTypeName,
    this.sortId,
    buffRangeDesc
  );
}
}
