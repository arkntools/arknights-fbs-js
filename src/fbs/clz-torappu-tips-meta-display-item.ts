// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_CommonAvailCheck, clz_Torappu_CommonAvailCheckT } from './clz-torappu-common-avail-check.js';
import { clz_Torappu_TipData, clz_Torappu_TipDataT } from './clz-torappu-tip-data.js';


export class clz_Torappu_TipsMetaDisplayItem implements flatbuffers.IUnpackableObject<clz_Torappu_TipsMetaDisplayItemT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_TipsMetaDisplayItem {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_TipsMetaDisplayItem(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_TipsMetaDisplayItem):clz_Torappu_TipsMetaDisplayItem {
  return (obj || new clz_Torappu_TipsMetaDisplayItem()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_TipsMetaDisplayItem(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_TipsMetaDisplayItem):clz_Torappu_TipsMetaDisplayItem {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_TipsMetaDisplayItem()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

tipsId():string|null
tipsId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
tipsId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

loadingPic():string|null
loadingPic(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
loadingPic(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

availCheck(obj?:clz_Torappu_CommonAvailCheck):clz_Torappu_CommonAvailCheck|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new clz_Torappu_CommonAvailCheck()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

relateActId():string|null
relateActId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
relateActId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

isAllStageActive():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

stageIdList(index: number):string
stageIdList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
stageIdList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

stageIdListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

zoneIdList(index: number):string
zoneIdList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
zoneIdList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

zoneIdListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

tips(index: number, obj?:clz_Torappu_TipData):clz_Torappu_TipData|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new clz_Torappu_TipData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

tipsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_TipsMetaDisplayItem(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addTipsId(builder:flatbuffers.Builder, tipsIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, tipsIdOffset, 0);
}

static addLoadingPic(builder:flatbuffers.Builder, loadingPicOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, loadingPicOffset, 0);
}

static addAvailCheck(builder:flatbuffers.Builder, availCheckOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, availCheckOffset, 0);
}

static addRelateActId(builder:flatbuffers.Builder, relateActIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, relateActIdOffset, 0);
}

static addIsAllStageActive(builder:flatbuffers.Builder, isAllStageActive:boolean) {
  builder.addFieldInt8(4, +isAllStageActive, +false);
}

static addStageIdList(builder:flatbuffers.Builder, stageIdListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, stageIdListOffset, 0);
}

static createStageIdListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startStageIdListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addZoneIdList(builder:flatbuffers.Builder, zoneIdListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, zoneIdListOffset, 0);
}

static createZoneIdListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startZoneIdListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTips(builder:flatbuffers.Builder, tipsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, tipsOffset, 0);
}

static createTipsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTipsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_TipsMetaDisplayItem(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_TipsMetaDisplayItemT {
  return new clz_Torappu_TipsMetaDisplayItemT(
    this.tipsId(),
    this.loadingPic(),
    (this.availCheck() !== null ? this.availCheck()!.unpack() : null),
    this.relateActId(),
    this.isAllStageActive(),
    this.bb!.createScalarList<string>(this.stageIdList.bind(this), this.stageIdListLength()),
    this.bb!.createScalarList<string>(this.zoneIdList.bind(this), this.zoneIdListLength()),
    this.bb!.createObjList<clz_Torappu_TipData, clz_Torappu_TipDataT>(this.tips.bind(this), this.tipsLength())
  );
}


unpackTo(_o: clz_Torappu_TipsMetaDisplayItemT): void {
  _o.tipsId = this.tipsId();
  _o.loadingPic = this.loadingPic();
  _o.availCheck = (this.availCheck() !== null ? this.availCheck()!.unpack() : null);
  _o.relateActId = this.relateActId();
  _o.isAllStageActive = this.isAllStageActive();
  _o.stageIdList = this.bb!.createScalarList<string>(this.stageIdList.bind(this), this.stageIdListLength());
  _o.zoneIdList = this.bb!.createScalarList<string>(this.zoneIdList.bind(this), this.zoneIdListLength());
  _o.tips = this.bb!.createObjList<clz_Torappu_TipData, clz_Torappu_TipDataT>(this.tips.bind(this), this.tipsLength());
}
}

export class clz_Torappu_TipsMetaDisplayItemT implements flatbuffers.IGeneratedObject {
constructor(
  public tipsId: string|Uint8Array|null = null,
  public loadingPic: string|Uint8Array|null = null,
  public availCheck: clz_Torappu_CommonAvailCheckT|null = null,
  public relateActId: string|Uint8Array|null = null,
  public isAllStageActive: boolean = false,
  public stageIdList: (string)[] = [],
  public zoneIdList: (string)[] = [],
  public tips: (clz_Torappu_TipDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const tipsId = (this.tipsId !== null ? builder.createString(this.tipsId!) : 0);
  const loadingPic = (this.loadingPic !== null ? builder.createString(this.loadingPic!) : 0);
  const availCheck = (this.availCheck !== null ? this.availCheck!.pack(builder) : 0);
  const relateActId = (this.relateActId !== null ? builder.createString(this.relateActId!) : 0);
  const stageIdList = clz_Torappu_TipsMetaDisplayItem.createStageIdListVector(builder, builder.createObjectOffsetList(this.stageIdList));
  const zoneIdList = clz_Torappu_TipsMetaDisplayItem.createZoneIdListVector(builder, builder.createObjectOffsetList(this.zoneIdList));
  const tips = clz_Torappu_TipsMetaDisplayItem.createTipsVector(builder, builder.createObjectOffsetList(this.tips));

  clz_Torappu_TipsMetaDisplayItem.startclz_Torappu_TipsMetaDisplayItem(builder);
  clz_Torappu_TipsMetaDisplayItem.addTipsId(builder, tipsId);
  clz_Torappu_TipsMetaDisplayItem.addLoadingPic(builder, loadingPic);
  clz_Torappu_TipsMetaDisplayItem.addAvailCheck(builder, availCheck);
  clz_Torappu_TipsMetaDisplayItem.addRelateActId(builder, relateActId);
  clz_Torappu_TipsMetaDisplayItem.addIsAllStageActive(builder, this.isAllStageActive);
  clz_Torappu_TipsMetaDisplayItem.addStageIdList(builder, stageIdList);
  clz_Torappu_TipsMetaDisplayItem.addZoneIdList(builder, zoneIdList);
  clz_Torappu_TipsMetaDisplayItem.addTips(builder, tips);

  return clz_Torappu_TipsMetaDisplayItem.endclz_Torappu_TipsMetaDisplayItem(builder);
}
}
