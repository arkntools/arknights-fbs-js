// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_Act4funSpLiveMatInfoData implements flatbuffers.IUnpackableObject<clz_Torappu_Act4funSpLiveMatInfoDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Act4funSpLiveMatInfoData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Act4funSpLiveMatInfoData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act4funSpLiveMatInfoData):clz_Torappu_Act4funSpLiveMatInfoData {
  return (obj || new clz_Torappu_Act4funSpLiveMatInfoData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Act4funSpLiveMatInfoData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act4funSpLiveMatInfoData):clz_Torappu_Act4funSpLiveMatInfoData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Act4funSpLiveMatInfoData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

spLiveMatId():string|null
spLiveMatId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
spLiveMatId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

spLiveEveId():string|null
spLiveEveId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
spLiveEveId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

stageId():string|null
stageId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
stageId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

picId():string|null
picId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
picId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

tagTxt():string|null
tagTxt(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
tagTxt(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

emojiIcon():string|null
emojiIcon(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
emojiIcon(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

accordingPerformId():string|null
accordingPerformId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
accordingPerformId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

selectedPerformId():string|null
selectedPerformId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
selectedPerformId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

valueEffectId():string|null
valueEffectId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
valueEffectId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

accordingSuperChatId():string|null
accordingSuperChatId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
accordingSuperChatId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_Act4funSpLiveMatInfoData(builder:flatbuffers.Builder) {
  builder.startObject(11);
}

static addSpLiveMatId(builder:flatbuffers.Builder, spLiveMatIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, spLiveMatIdOffset, 0);
}

static addSpLiveEveId(builder:flatbuffers.Builder, spLiveEveIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, spLiveEveIdOffset, 0);
}

static addStageId(builder:flatbuffers.Builder, stageIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, stageIdOffset, 0);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, nameOffset, 0);
}

static addPicId(builder:flatbuffers.Builder, picIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, picIdOffset, 0);
}

static addTagTxt(builder:flatbuffers.Builder, tagTxtOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, tagTxtOffset, 0);
}

static addEmojiIcon(builder:flatbuffers.Builder, emojiIconOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, emojiIconOffset, 0);
}

static addAccordingPerformId(builder:flatbuffers.Builder, accordingPerformIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, accordingPerformIdOffset, 0);
}

static addSelectedPerformId(builder:flatbuffers.Builder, selectedPerformIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, selectedPerformIdOffset, 0);
}

static addValueEffectId(builder:flatbuffers.Builder, valueEffectIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, valueEffectIdOffset, 0);
}

static addAccordingSuperChatId(builder:flatbuffers.Builder, accordingSuperChatIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, accordingSuperChatIdOffset, 0);
}

static endclz_Torappu_Act4funSpLiveMatInfoData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Act4funSpLiveMatInfoData(builder:flatbuffers.Builder, spLiveMatIdOffset:flatbuffers.Offset, spLiveEveIdOffset:flatbuffers.Offset, stageIdOffset:flatbuffers.Offset, nameOffset:flatbuffers.Offset, picIdOffset:flatbuffers.Offset, tagTxtOffset:flatbuffers.Offset, emojiIconOffset:flatbuffers.Offset, accordingPerformIdOffset:flatbuffers.Offset, selectedPerformIdOffset:flatbuffers.Offset, valueEffectIdOffset:flatbuffers.Offset, accordingSuperChatIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_Act4funSpLiveMatInfoData.startclz_Torappu_Act4funSpLiveMatInfoData(builder);
  clz_Torappu_Act4funSpLiveMatInfoData.addSpLiveMatId(builder, spLiveMatIdOffset);
  clz_Torappu_Act4funSpLiveMatInfoData.addSpLiveEveId(builder, spLiveEveIdOffset);
  clz_Torappu_Act4funSpLiveMatInfoData.addStageId(builder, stageIdOffset);
  clz_Torappu_Act4funSpLiveMatInfoData.addName(builder, nameOffset);
  clz_Torappu_Act4funSpLiveMatInfoData.addPicId(builder, picIdOffset);
  clz_Torappu_Act4funSpLiveMatInfoData.addTagTxt(builder, tagTxtOffset);
  clz_Torappu_Act4funSpLiveMatInfoData.addEmojiIcon(builder, emojiIconOffset);
  clz_Torappu_Act4funSpLiveMatInfoData.addAccordingPerformId(builder, accordingPerformIdOffset);
  clz_Torappu_Act4funSpLiveMatInfoData.addSelectedPerformId(builder, selectedPerformIdOffset);
  clz_Torappu_Act4funSpLiveMatInfoData.addValueEffectId(builder, valueEffectIdOffset);
  clz_Torappu_Act4funSpLiveMatInfoData.addAccordingSuperChatId(builder, accordingSuperChatIdOffset);
  return clz_Torappu_Act4funSpLiveMatInfoData.endclz_Torappu_Act4funSpLiveMatInfoData(builder);
}

unpack(): clz_Torappu_Act4funSpLiveMatInfoDataT {
  return new clz_Torappu_Act4funSpLiveMatInfoDataT(
    this.spLiveMatId(),
    this.spLiveEveId(),
    this.stageId(),
    this.name(),
    this.picId(),
    this.tagTxt(),
    this.emojiIcon(),
    this.accordingPerformId(),
    this.selectedPerformId(),
    this.valueEffectId(),
    this.accordingSuperChatId()
  );
}


unpackTo(_o: clz_Torappu_Act4funSpLiveMatInfoDataT): void {
  _o.spLiveMatId = this.spLiveMatId();
  _o.spLiveEveId = this.spLiveEveId();
  _o.stageId = this.stageId();
  _o.name = this.name();
  _o.picId = this.picId();
  _o.tagTxt = this.tagTxt();
  _o.emojiIcon = this.emojiIcon();
  _o.accordingPerformId = this.accordingPerformId();
  _o.selectedPerformId = this.selectedPerformId();
  _o.valueEffectId = this.valueEffectId();
  _o.accordingSuperChatId = this.accordingSuperChatId();
}
}

export class clz_Torappu_Act4funSpLiveMatInfoDataT implements flatbuffers.IGeneratedObject {
constructor(
  public spLiveMatId: string|Uint8Array|null = null,
  public spLiveEveId: string|Uint8Array|null = null,
  public stageId: string|Uint8Array|null = null,
  public name: string|Uint8Array|null = null,
  public picId: string|Uint8Array|null = null,
  public tagTxt: string|Uint8Array|null = null,
  public emojiIcon: string|Uint8Array|null = null,
  public accordingPerformId: string|Uint8Array|null = null,
  public selectedPerformId: string|Uint8Array|null = null,
  public valueEffectId: string|Uint8Array|null = null,
  public accordingSuperChatId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const spLiveMatId = (this.spLiveMatId !== null ? builder.createString(this.spLiveMatId!) : 0);
  const spLiveEveId = (this.spLiveEveId !== null ? builder.createString(this.spLiveEveId!) : 0);
  const stageId = (this.stageId !== null ? builder.createString(this.stageId!) : 0);
  const name = (this.name !== null ? builder.createString(this.name!) : 0);
  const picId = (this.picId !== null ? builder.createString(this.picId!) : 0);
  const tagTxt = (this.tagTxt !== null ? builder.createString(this.tagTxt!) : 0);
  const emojiIcon = (this.emojiIcon !== null ? builder.createString(this.emojiIcon!) : 0);
  const accordingPerformId = (this.accordingPerformId !== null ? builder.createString(this.accordingPerformId!) : 0);
  const selectedPerformId = (this.selectedPerformId !== null ? builder.createString(this.selectedPerformId!) : 0);
  const valueEffectId = (this.valueEffectId !== null ? builder.createString(this.valueEffectId!) : 0);
  const accordingSuperChatId = (this.accordingSuperChatId !== null ? builder.createString(this.accordingSuperChatId!) : 0);

  return clz_Torappu_Act4funSpLiveMatInfoData.createclz_Torappu_Act4funSpLiveMatInfoData(builder,
    spLiveMatId,
    spLiveEveId,
    stageId,
    name,
    picId,
    tagTxt,
    emojiIcon,
    accordingPerformId,
    selectedPerformId,
    valueEffectId,
    accordingSuperChatId
  );
}
}
