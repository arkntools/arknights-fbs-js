// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT } from './clz-torappu-item-bundle.js';


export class clz_Torappu_VersusCheckInData_DailyInfo implements flatbuffers.IUnpackableObject<clz_Torappu_VersusCheckInData_DailyInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_VersusCheckInData_DailyInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_VersusCheckInData_DailyInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_VersusCheckInData_DailyInfo):clz_Torappu_VersusCheckInData_DailyInfo {
  return (obj || new clz_Torappu_VersusCheckInData_DailyInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_VersusCheckInData_DailyInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_VersusCheckInData_DailyInfo):clz_Torappu_VersusCheckInData_DailyInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_VersusCheckInData_DailyInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

rewardList(index: number, obj?:clz_Torappu_ItemBundle):clz_Torappu_ItemBundle|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new clz_Torappu_ItemBundle()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

rewardListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

order():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_VersusCheckInData_DailyInfo(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addRewardList(builder:flatbuffers.Builder, rewardListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, rewardListOffset, 0);
}

static createRewardListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRewardListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addOrder(builder:flatbuffers.Builder, order:number) {
  builder.addFieldInt32(1, order, 0);
}

static endclz_Torappu_VersusCheckInData_DailyInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_VersusCheckInData_DailyInfo(builder:flatbuffers.Builder, rewardListOffset:flatbuffers.Offset, order:number):flatbuffers.Offset {
  clz_Torappu_VersusCheckInData_DailyInfo.startclz_Torappu_VersusCheckInData_DailyInfo(builder);
  clz_Torappu_VersusCheckInData_DailyInfo.addRewardList(builder, rewardListOffset);
  clz_Torappu_VersusCheckInData_DailyInfo.addOrder(builder, order);
  return clz_Torappu_VersusCheckInData_DailyInfo.endclz_Torappu_VersusCheckInData_DailyInfo(builder);
}

unpack(): clz_Torappu_VersusCheckInData_DailyInfoT {
  return new clz_Torappu_VersusCheckInData_DailyInfoT(
    this.bb!.createObjList<clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT>(this.rewardList.bind(this), this.rewardListLength()),
    this.order()
  );
}


unpackTo(_o: clz_Torappu_VersusCheckInData_DailyInfoT): void {
  _o.rewardList = this.bb!.createObjList<clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT>(this.rewardList.bind(this), this.rewardListLength());
  _o.order = this.order();
}
}

export class clz_Torappu_VersusCheckInData_DailyInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public rewardList: (clz_Torappu_ItemBundleT)[] = [],
  public order: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const rewardList = clz_Torappu_VersusCheckInData_DailyInfo.createRewardListVector(builder, builder.createObjectOffsetList(this.rewardList));

  return clz_Torappu_VersusCheckInData_DailyInfo.createclz_Torappu_VersusCheckInData_DailyInfo(builder,
    rewardList,
    this.order
  );
}
}
