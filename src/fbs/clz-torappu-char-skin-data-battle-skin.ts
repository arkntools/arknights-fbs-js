// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_CharSkinData_BattleSkin implements flatbuffers.IUnpackableObject<clz_Torappu_CharSkinData_BattleSkinT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_CharSkinData_BattleSkin {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_CharSkinData_BattleSkin(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CharSkinData_BattleSkin):clz_Torappu_CharSkinData_BattleSkin {
  return (obj || new clz_Torappu_CharSkinData_BattleSkin()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_CharSkinData_BattleSkin(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CharSkinData_BattleSkin):clz_Torappu_CharSkinData_BattleSkin {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_CharSkinData_BattleSkin()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

overwritePrefab():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

skinOrPrefabId():string|null
skinOrPrefabId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
skinOrPrefabId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_CharSkinData_BattleSkin(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addOverwritePrefab(builder:flatbuffers.Builder, overwritePrefab:boolean) {
  builder.addFieldInt8(0, +overwritePrefab, +false);
}

static addSkinOrPrefabId(builder:flatbuffers.Builder, skinOrPrefabIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, skinOrPrefabIdOffset, 0);
}

static endclz_Torappu_CharSkinData_BattleSkin(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_CharSkinData_BattleSkin(builder:flatbuffers.Builder, overwritePrefab:boolean, skinOrPrefabIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_CharSkinData_BattleSkin.startclz_Torappu_CharSkinData_BattleSkin(builder);
  clz_Torappu_CharSkinData_BattleSkin.addOverwritePrefab(builder, overwritePrefab);
  clz_Torappu_CharSkinData_BattleSkin.addSkinOrPrefabId(builder, skinOrPrefabIdOffset);
  return clz_Torappu_CharSkinData_BattleSkin.endclz_Torappu_CharSkinData_BattleSkin(builder);
}

unpack(): clz_Torappu_CharSkinData_BattleSkinT {
  return new clz_Torappu_CharSkinData_BattleSkinT(
    this.overwritePrefab(),
    this.skinOrPrefabId()
  );
}


unpackTo(_o: clz_Torappu_CharSkinData_BattleSkinT): void {
  _o.overwritePrefab = this.overwritePrefab();
  _o.skinOrPrefabId = this.skinOrPrefabId();
}
}

export class clz_Torappu_CharSkinData_BattleSkinT implements flatbuffers.IGeneratedObject {
constructor(
  public overwritePrefab: boolean = false,
  public skinOrPrefabId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const skinOrPrefabId = (this.skinOrPrefabId !== null ? builder.createString(this.skinOrPrefabId!) : 0);

  return clz_Torappu_CharSkinData_BattleSkin.createclz_Torappu_CharSkinData_BattleSkin(builder,
    this.overwritePrefab,
    skinOrPrefabId
  );
}
}
