// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_BuildingData_CustomData_GroupData implements flatbuffers.IUnpackableObject<clz_Torappu_BuildingData_CustomData_GroupDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_BuildingData_CustomData_GroupData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_BuildingData_CustomData_GroupData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_CustomData_GroupData):clz_Torappu_BuildingData_CustomData_GroupData {
  return (obj || new clz_Torappu_BuildingData_CustomData_GroupData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_BuildingData_CustomData_GroupData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_CustomData_GroupData):clz_Torappu_BuildingData_CustomData_GroupData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_BuildingData_CustomData_GroupData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

themeId():string|null
themeId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
themeId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

comfort():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

count():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

furniture(index: number):string
furniture(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
furniture(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

furnitureLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_BuildingData_CustomData_GroupData(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(1, sortId, 0);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, nameOffset, 0);
}

static addThemeId(builder:flatbuffers.Builder, themeIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, themeIdOffset, 0);
}

static addComfort(builder:flatbuffers.Builder, comfort:number) {
  builder.addFieldInt32(4, comfort, 0);
}

static addCount(builder:flatbuffers.Builder, count:number) {
  builder.addFieldInt32(5, count, 0);
}

static addFurniture(builder:flatbuffers.Builder, furnitureOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, furnitureOffset, 0);
}

static createFurnitureVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startFurnitureVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_BuildingData_CustomData_GroupData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_BuildingData_CustomData_GroupData(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset, sortId:number, nameOffset:flatbuffers.Offset, themeIdOffset:flatbuffers.Offset, comfort:number, count:number, furnitureOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_BuildingData_CustomData_GroupData.startclz_Torappu_BuildingData_CustomData_GroupData(builder);
  clz_Torappu_BuildingData_CustomData_GroupData.addId(builder, idOffset);
  clz_Torappu_BuildingData_CustomData_GroupData.addSortId(builder, sortId);
  clz_Torappu_BuildingData_CustomData_GroupData.addName(builder, nameOffset);
  clz_Torappu_BuildingData_CustomData_GroupData.addThemeId(builder, themeIdOffset);
  clz_Torappu_BuildingData_CustomData_GroupData.addComfort(builder, comfort);
  clz_Torappu_BuildingData_CustomData_GroupData.addCount(builder, count);
  clz_Torappu_BuildingData_CustomData_GroupData.addFurniture(builder, furnitureOffset);
  return clz_Torappu_BuildingData_CustomData_GroupData.endclz_Torappu_BuildingData_CustomData_GroupData(builder);
}

unpack(): clz_Torappu_BuildingData_CustomData_GroupDataT {
  return new clz_Torappu_BuildingData_CustomData_GroupDataT(
    this.id(),
    this.sortId(),
    this.name(),
    this.themeId(),
    this.comfort(),
    this.count(),
    this.bb!.createScalarList<string>(this.furniture.bind(this), this.furnitureLength())
  );
}


unpackTo(_o: clz_Torappu_BuildingData_CustomData_GroupDataT): void {
  _o.id = this.id();
  _o.sortId = this.sortId();
  _o.name = this.name();
  _o.themeId = this.themeId();
  _o.comfort = this.comfort();
  _o.count = this.count();
  _o.furniture = this.bb!.createScalarList<string>(this.furniture.bind(this), this.furnitureLength());
}
}

export class clz_Torappu_BuildingData_CustomData_GroupDataT implements flatbuffers.IGeneratedObject {
constructor(
  public id: string|Uint8Array|null = null,
  public sortId: number = 0,
  public name: string|Uint8Array|null = null,
  public themeId: string|Uint8Array|null = null,
  public comfort: number = 0,
  public count: number = 0,
  public furniture: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const id = (this.id !== null ? builder.createString(this.id!) : 0);
  const name = (this.name !== null ? builder.createString(this.name!) : 0);
  const themeId = (this.themeId !== null ? builder.createString(this.themeId!) : 0);
  const furniture = clz_Torappu_BuildingData_CustomData_GroupData.createFurnitureVector(builder, builder.createObjectOffsetList(this.furniture));

  return clz_Torappu_BuildingData_CustomData_GroupData.createclz_Torappu_BuildingData_CustomData_GroupData(builder,
    id,
    this.sortId,
    name,
    themeId,
    this.comfort,
    this.count,
    furniture
  );
}
}
