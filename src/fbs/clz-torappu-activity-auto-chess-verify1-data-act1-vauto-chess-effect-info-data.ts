// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_Act1VAutoChessEffectCounterType } from './enum--torappu-act1-vauto-chess-effect-counter-type.js';
import { enum__Torappu_Act1VAutoChessEffectType } from './enum--torappu-act1-vauto-chess-effect-type.js';


export class clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData implements flatbuffers.IUnpackableObject<clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData):clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData {
  return (obj || new clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData):clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

effectId():string|null
effectId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
effectId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

effectType():enum__Torappu_Act1VAutoChessEffectType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_Act1VAutoChessEffectType.NONE;
}

effectCounterType():enum__Torappu_Act1VAutoChessEffectCounterType {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_Act1VAutoChessEffectCounterType.NONE;
}

continuedRound():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

effectName():string|null
effectName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
effectName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

effectDesc():string|null
effectDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
effectDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

effectDecoIconId():string|null
effectDecoIconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
effectDecoIconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

isMainEnemyEffect():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addEffectId(builder:flatbuffers.Builder, effectIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, effectIdOffset, 0);
}

static addEffectType(builder:flatbuffers.Builder, effectType:enum__Torappu_Act1VAutoChessEffectType) {
  builder.addFieldInt32(1, effectType, enum__Torappu_Act1VAutoChessEffectType.NONE);
}

static addEffectCounterType(builder:flatbuffers.Builder, effectCounterType:enum__Torappu_Act1VAutoChessEffectCounterType) {
  builder.addFieldInt32(2, effectCounterType, enum__Torappu_Act1VAutoChessEffectCounterType.NONE);
}

static addContinuedRound(builder:flatbuffers.Builder, continuedRound:number) {
  builder.addFieldInt32(3, continuedRound, 0);
}

static addEffectName(builder:flatbuffers.Builder, effectNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, effectNameOffset, 0);
}

static addEffectDesc(builder:flatbuffers.Builder, effectDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, effectDescOffset, 0);
}

static addEffectDecoIconId(builder:flatbuffers.Builder, effectDecoIconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, effectDecoIconIdOffset, 0);
}

static addIsMainEnemyEffect(builder:flatbuffers.Builder, isMainEnemyEffect:boolean) {
  builder.addFieldInt8(7, +isMainEnemyEffect, +false);
}

static endclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData(builder:flatbuffers.Builder, effectIdOffset:flatbuffers.Offset, effectType:enum__Torappu_Act1VAutoChessEffectType, effectCounterType:enum__Torappu_Act1VAutoChessEffectCounterType, continuedRound:number, effectNameOffset:flatbuffers.Offset, effectDescOffset:flatbuffers.Offset, effectDecoIconIdOffset:flatbuffers.Offset, isMainEnemyEffect:boolean):flatbuffers.Offset {
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData.startclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData(builder);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData.addEffectId(builder, effectIdOffset);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData.addEffectType(builder, effectType);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData.addEffectCounterType(builder, effectCounterType);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData.addContinuedRound(builder, continuedRound);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData.addEffectName(builder, effectNameOffset);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData.addEffectDesc(builder, effectDescOffset);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData.addEffectDecoIconId(builder, effectDecoIconIdOffset);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData.addIsMainEnemyEffect(builder, isMainEnemyEffect);
  return clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData.endclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData(builder);
}

unpack(): clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoDataT {
  return new clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoDataT(
    this.effectId(),
    this.effectType(),
    this.effectCounterType(),
    this.continuedRound(),
    this.effectName(),
    this.effectDesc(),
    this.effectDecoIconId(),
    this.isMainEnemyEffect()
  );
}


unpackTo(_o: clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoDataT): void {
  _o.effectId = this.effectId();
  _o.effectType = this.effectType();
  _o.effectCounterType = this.effectCounterType();
  _o.continuedRound = this.continuedRound();
  _o.effectName = this.effectName();
  _o.effectDesc = this.effectDesc();
  _o.effectDecoIconId = this.effectDecoIconId();
  _o.isMainEnemyEffect = this.isMainEnemyEffect();
}
}

export class clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoDataT implements flatbuffers.IGeneratedObject {
constructor(
  public effectId: string|Uint8Array|null = null,
  public effectType: enum__Torappu_Act1VAutoChessEffectType = enum__Torappu_Act1VAutoChessEffectType.NONE,
  public effectCounterType: enum__Torappu_Act1VAutoChessEffectCounterType = enum__Torappu_Act1VAutoChessEffectCounterType.NONE,
  public continuedRound: number = 0,
  public effectName: string|Uint8Array|null = null,
  public effectDesc: string|Uint8Array|null = null,
  public effectDecoIconId: string|Uint8Array|null = null,
  public isMainEnemyEffect: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const effectId = (this.effectId !== null ? builder.createString(this.effectId!) : 0);
  const effectName = (this.effectName !== null ? builder.createString(this.effectName!) : 0);
  const effectDesc = (this.effectDesc !== null ? builder.createString(this.effectDesc!) : 0);
  const effectDecoIconId = (this.effectDecoIconId !== null ? builder.createString(this.effectDecoIconId!) : 0);

  return clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData.createclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessEffectInfoData(builder,
    effectId,
    this.effectType,
    this.effectCounterType,
    this.continuedRound,
    effectName,
    effectDesc,
    effectDecoIconId,
    this.isMainEnemyEffect
  );
}
}
