// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SandboxV2TutorialBasicConst implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxV2TutorialBasicConstT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxV2TutorialBasicConst {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxV2TutorialBasicConst(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2TutorialBasicConst):clz_Torappu_SandboxV2TutorialBasicConst {
  return (obj || new clz_Torappu_SandboxV2TutorialBasicConst()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxV2TutorialBasicConst(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2TutorialBasicConst):clz_Torappu_SandboxV2TutorialBasicConst {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxV2TutorialBasicConst()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

trainingQuestList(index: number):string
trainingQuestList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
trainingQuestList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

trainingQuestListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SandboxV2TutorialBasicConst(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addTrainingQuestList(builder:flatbuffers.Builder, trainingQuestListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, trainingQuestListOffset, 0);
}

static createTrainingQuestListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTrainingQuestListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_SandboxV2TutorialBasicConst(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxV2TutorialBasicConst(builder:flatbuffers.Builder, trainingQuestListOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SandboxV2TutorialBasicConst.startclz_Torappu_SandboxV2TutorialBasicConst(builder);
  clz_Torappu_SandboxV2TutorialBasicConst.addTrainingQuestList(builder, trainingQuestListOffset);
  return clz_Torappu_SandboxV2TutorialBasicConst.endclz_Torappu_SandboxV2TutorialBasicConst(builder);
}

unpack(): clz_Torappu_SandboxV2TutorialBasicConstT {
  return new clz_Torappu_SandboxV2TutorialBasicConstT(
    this.bb!.createScalarList<string>(this.trainingQuestList.bind(this), this.trainingQuestListLength())
  );
}


unpackTo(_o: clz_Torappu_SandboxV2TutorialBasicConstT): void {
  _o.trainingQuestList = this.bb!.createScalarList<string>(this.trainingQuestList.bind(this), this.trainingQuestListLength());
}
}

export class clz_Torappu_SandboxV2TutorialBasicConstT implements flatbuffers.IGeneratedObject {
constructor(
  public trainingQuestList: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const trainingQuestList = clz_Torappu_SandboxV2TutorialBasicConst.createTrainingQuestListVector(builder, builder.createObjectOffsetList(this.trainingQuestList));

  return clz_Torappu_SandboxV2TutorialBasicConst.createclz_Torappu_SandboxV2TutorialBasicConst(builder,
    trainingQuestList
  );
}
}
