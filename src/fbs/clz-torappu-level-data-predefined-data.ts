// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_LevelData_PredefinedData_PredefinedCard, clz_Torappu_LevelData_PredefinedData_PredefinedCardT } from './clz-torappu-level-data-predefined-data-predefined-card.js';
import { clz_Torappu_LevelData_PredefinedData_PredefinedCharacter, clz_Torappu_LevelData_PredefinedData_PredefinedCharacterT } from './clz-torappu-level-data-predefined-data-predefined-character.js';
import { clz_Torappu_LevelData_PredefinedData_PredefinedTokenCard, clz_Torappu_LevelData_PredefinedData_PredefinedTokenCardT } from './clz-torappu-level-data-predefined-data-predefined-token-card.js';


export class clz_Torappu_LevelData_PredefinedData implements flatbuffers.IUnpackableObject<clz_Torappu_LevelData_PredefinedDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_LevelData_PredefinedData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_LevelData_PredefinedData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_LevelData_PredefinedData):clz_Torappu_LevelData_PredefinedData {
  return (obj || new clz_Torappu_LevelData_PredefinedData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_LevelData_PredefinedData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_LevelData_PredefinedData):clz_Torappu_LevelData_PredefinedData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_LevelData_PredefinedData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

characterInsts(index: number, obj?:clz_Torappu_LevelData_PredefinedData_PredefinedCharacter):clz_Torappu_LevelData_PredefinedData_PredefinedCharacter|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new clz_Torappu_LevelData_PredefinedData_PredefinedCharacter()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

characterInstsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

tokenInsts(index: number, obj?:clz_Torappu_LevelData_PredefinedData_PredefinedCharacter):clz_Torappu_LevelData_PredefinedData_PredefinedCharacter|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new clz_Torappu_LevelData_PredefinedData_PredefinedCharacter()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

tokenInstsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

characterCards(index: number, obj?:clz_Torappu_LevelData_PredefinedData_PredefinedCard):clz_Torappu_LevelData_PredefinedData_PredefinedCard|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new clz_Torappu_LevelData_PredefinedData_PredefinedCard()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

characterCardsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

tokenCards(index: number, obj?:clz_Torappu_LevelData_PredefinedData_PredefinedTokenCard):clz_Torappu_LevelData_PredefinedData_PredefinedTokenCard|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_Torappu_LevelData_PredefinedData_PredefinedTokenCard()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

tokenCardsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_LevelData_PredefinedData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addCharacterInsts(builder:flatbuffers.Builder, characterInstsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, characterInstsOffset, 0);
}

static createCharacterInstsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCharacterInstsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTokenInsts(builder:flatbuffers.Builder, tokenInstsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, tokenInstsOffset, 0);
}

static createTokenInstsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTokenInstsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCharacterCards(builder:flatbuffers.Builder, characterCardsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, characterCardsOffset, 0);
}

static createCharacterCardsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCharacterCardsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTokenCards(builder:flatbuffers.Builder, tokenCardsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, tokenCardsOffset, 0);
}

static createTokenCardsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTokenCardsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_LevelData_PredefinedData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_LevelData_PredefinedData(builder:flatbuffers.Builder, characterInstsOffset:flatbuffers.Offset, tokenInstsOffset:flatbuffers.Offset, characterCardsOffset:flatbuffers.Offset, tokenCardsOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_LevelData_PredefinedData.startclz_Torappu_LevelData_PredefinedData(builder);
  clz_Torappu_LevelData_PredefinedData.addCharacterInsts(builder, characterInstsOffset);
  clz_Torappu_LevelData_PredefinedData.addTokenInsts(builder, tokenInstsOffset);
  clz_Torappu_LevelData_PredefinedData.addCharacterCards(builder, characterCardsOffset);
  clz_Torappu_LevelData_PredefinedData.addTokenCards(builder, tokenCardsOffset);
  return clz_Torappu_LevelData_PredefinedData.endclz_Torappu_LevelData_PredefinedData(builder);
}

unpack(): clz_Torappu_LevelData_PredefinedDataT {
  return new clz_Torappu_LevelData_PredefinedDataT(
    this.bb!.createObjList<clz_Torappu_LevelData_PredefinedData_PredefinedCharacter, clz_Torappu_LevelData_PredefinedData_PredefinedCharacterT>(this.characterInsts.bind(this), this.characterInstsLength()),
    this.bb!.createObjList<clz_Torappu_LevelData_PredefinedData_PredefinedCharacter, clz_Torappu_LevelData_PredefinedData_PredefinedCharacterT>(this.tokenInsts.bind(this), this.tokenInstsLength()),
    this.bb!.createObjList<clz_Torappu_LevelData_PredefinedData_PredefinedCard, clz_Torappu_LevelData_PredefinedData_PredefinedCardT>(this.characterCards.bind(this), this.characterCardsLength()),
    this.bb!.createObjList<clz_Torappu_LevelData_PredefinedData_PredefinedTokenCard, clz_Torappu_LevelData_PredefinedData_PredefinedTokenCardT>(this.tokenCards.bind(this), this.tokenCardsLength())
  );
}


unpackTo(_o: clz_Torappu_LevelData_PredefinedDataT): void {
  _o.characterInsts = this.bb!.createObjList<clz_Torappu_LevelData_PredefinedData_PredefinedCharacter, clz_Torappu_LevelData_PredefinedData_PredefinedCharacterT>(this.characterInsts.bind(this), this.characterInstsLength());
  _o.tokenInsts = this.bb!.createObjList<clz_Torappu_LevelData_PredefinedData_PredefinedCharacter, clz_Torappu_LevelData_PredefinedData_PredefinedCharacterT>(this.tokenInsts.bind(this), this.tokenInstsLength());
  _o.characterCards = this.bb!.createObjList<clz_Torappu_LevelData_PredefinedData_PredefinedCard, clz_Torappu_LevelData_PredefinedData_PredefinedCardT>(this.characterCards.bind(this), this.characterCardsLength());
  _o.tokenCards = this.bb!.createObjList<clz_Torappu_LevelData_PredefinedData_PredefinedTokenCard, clz_Torappu_LevelData_PredefinedData_PredefinedTokenCardT>(this.tokenCards.bind(this), this.tokenCardsLength());
}
}

export class clz_Torappu_LevelData_PredefinedDataT implements flatbuffers.IGeneratedObject {
constructor(
  public characterInsts: (clz_Torappu_LevelData_PredefinedData_PredefinedCharacterT)[] = [],
  public tokenInsts: (clz_Torappu_LevelData_PredefinedData_PredefinedCharacterT)[] = [],
  public characterCards: (clz_Torappu_LevelData_PredefinedData_PredefinedCardT)[] = [],
  public tokenCards: (clz_Torappu_LevelData_PredefinedData_PredefinedTokenCardT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const characterInsts = clz_Torappu_LevelData_PredefinedData.createCharacterInstsVector(builder, builder.createObjectOffsetList(this.characterInsts));
  const tokenInsts = clz_Torappu_LevelData_PredefinedData.createTokenInstsVector(builder, builder.createObjectOffsetList(this.tokenInsts));
  const characterCards = clz_Torappu_LevelData_PredefinedData.createCharacterCardsVector(builder, builder.createObjectOffsetList(this.characterCards));
  const tokenCards = clz_Torappu_LevelData_PredefinedData.createTokenCardsVector(builder, builder.createObjectOffsetList(this.tokenCards));

  return clz_Torappu_LevelData_PredefinedData.createclz_Torappu_LevelData_PredefinedData(builder,
    characterInsts,
    tokenInsts,
    characterCards,
    tokenCards
  );
}
}
