// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_EvolvePhase } from './enum--torappu-evolve-phase.js';


export class clz_Torappu_ActMultiV3TempCharData implements flatbuffers.IUnpackableObject<clz_Torappu_ActMultiV3TempCharDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActMultiV3TempCharData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActMultiV3TempCharData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActMultiV3TempCharData):clz_Torappu_ActMultiV3TempCharData {
  return (obj || new clz_Torappu_ActMultiV3TempCharData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActMultiV3TempCharData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActMultiV3TempCharData):clz_Torappu_ActMultiV3TempCharData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActMultiV3TempCharData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

charId():string|null
charId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
charId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

level():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

evolvePhase():enum__Torappu_EvolvePhase {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_EvolvePhase.PHASE_0;
}

mainSkillLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

specializeLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

potentialRank():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

favorPoint():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

skinId():string|null
skinId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
skinId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_ActMultiV3TempCharData(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addCharId(builder:flatbuffers.Builder, charIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, charIdOffset, 0);
}

static addLevel(builder:flatbuffers.Builder, level:number) {
  builder.addFieldInt32(1, level, 0);
}

static addEvolvePhase(builder:flatbuffers.Builder, evolvePhase:enum__Torappu_EvolvePhase) {
  builder.addFieldInt32(2, evolvePhase, enum__Torappu_EvolvePhase.PHASE_0);
}

static addMainSkillLevel(builder:flatbuffers.Builder, mainSkillLevel:number) {
  builder.addFieldInt32(3, mainSkillLevel, 0);
}

static addSpecializeLevel(builder:flatbuffers.Builder, specializeLevel:number) {
  builder.addFieldInt32(4, specializeLevel, 0);
}

static addPotentialRank(builder:flatbuffers.Builder, potentialRank:number) {
  builder.addFieldInt32(5, potentialRank, 0);
}

static addFavorPoint(builder:flatbuffers.Builder, favorPoint:number) {
  builder.addFieldInt32(6, favorPoint, 0);
}

static addSkinId(builder:flatbuffers.Builder, skinIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, skinIdOffset, 0);
}

static endclz_Torappu_ActMultiV3TempCharData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActMultiV3TempCharData(builder:flatbuffers.Builder, charIdOffset:flatbuffers.Offset, level:number, evolvePhase:enum__Torappu_EvolvePhase, mainSkillLevel:number, specializeLevel:number, potentialRank:number, favorPoint:number, skinIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActMultiV3TempCharData.startclz_Torappu_ActMultiV3TempCharData(builder);
  clz_Torappu_ActMultiV3TempCharData.addCharId(builder, charIdOffset);
  clz_Torappu_ActMultiV3TempCharData.addLevel(builder, level);
  clz_Torappu_ActMultiV3TempCharData.addEvolvePhase(builder, evolvePhase);
  clz_Torappu_ActMultiV3TempCharData.addMainSkillLevel(builder, mainSkillLevel);
  clz_Torappu_ActMultiV3TempCharData.addSpecializeLevel(builder, specializeLevel);
  clz_Torappu_ActMultiV3TempCharData.addPotentialRank(builder, potentialRank);
  clz_Torappu_ActMultiV3TempCharData.addFavorPoint(builder, favorPoint);
  clz_Torappu_ActMultiV3TempCharData.addSkinId(builder, skinIdOffset);
  return clz_Torappu_ActMultiV3TempCharData.endclz_Torappu_ActMultiV3TempCharData(builder);
}

unpack(): clz_Torappu_ActMultiV3TempCharDataT {
  return new clz_Torappu_ActMultiV3TempCharDataT(
    this.charId(),
    this.level(),
    this.evolvePhase(),
    this.mainSkillLevel(),
    this.specializeLevel(),
    this.potentialRank(),
    this.favorPoint(),
    this.skinId()
  );
}


unpackTo(_o: clz_Torappu_ActMultiV3TempCharDataT): void {
  _o.charId = this.charId();
  _o.level = this.level();
  _o.evolvePhase = this.evolvePhase();
  _o.mainSkillLevel = this.mainSkillLevel();
  _o.specializeLevel = this.specializeLevel();
  _o.potentialRank = this.potentialRank();
  _o.favorPoint = this.favorPoint();
  _o.skinId = this.skinId();
}
}

export class clz_Torappu_ActMultiV3TempCharDataT implements flatbuffers.IGeneratedObject {
constructor(
  public charId: string|Uint8Array|null = null,
  public level: number = 0,
  public evolvePhase: enum__Torappu_EvolvePhase = enum__Torappu_EvolvePhase.PHASE_0,
  public mainSkillLevel: number = 0,
  public specializeLevel: number = 0,
  public potentialRank: number = 0,
  public favorPoint: number = 0,
  public skinId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const charId = (this.charId !== null ? builder.createString(this.charId!) : 0);
  const skinId = (this.skinId !== null ? builder.createString(this.skinId!) : 0);

  return clz_Torappu_ActMultiV3TempCharData.createclz_Torappu_ActMultiV3TempCharData(builder,
    charId,
    this.level,
    this.evolvePhase,
    this.mainSkillLevel,
    this.specializeLevel,
    this.potentialRank,
    this.favorPoint,
    skinId
  );
}
}
