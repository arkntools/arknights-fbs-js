// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SiracusaData_ConstData implements flatbuffers.IUnpackableObject<clz_Torappu_SiracusaData_ConstDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SiracusaData_ConstData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SiracusaData_ConstData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SiracusaData_ConstData):clz_Torappu_SiracusaData_ConstData {
  return (obj || new clz_Torappu_SiracusaData_ConstData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SiracusaData_ConstData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SiracusaData_ConstData):clz_Torappu_SiracusaData_ConstData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SiracusaData_ConstData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

operaDailyNum():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

operaAllUnlockTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

defaultFocusArea():string|null
defaultFocusArea(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
defaultFocusArea(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_SiracusaData_ConstData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addOperaDailyNum(builder:flatbuffers.Builder, operaDailyNum:number) {
  builder.addFieldInt32(0, operaDailyNum, 0);
}

static addOperaAllUnlockTime(builder:flatbuffers.Builder, operaAllUnlockTime:bigint) {
  builder.addFieldInt64(1, operaAllUnlockTime, BigInt('0'));
}

static addDefaultFocusArea(builder:flatbuffers.Builder, defaultFocusAreaOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, defaultFocusAreaOffset, 0);
}

static endclz_Torappu_SiracusaData_ConstData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SiracusaData_ConstData(builder:flatbuffers.Builder, operaDailyNum:number, operaAllUnlockTime:bigint, defaultFocusAreaOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SiracusaData_ConstData.startclz_Torappu_SiracusaData_ConstData(builder);
  clz_Torappu_SiracusaData_ConstData.addOperaDailyNum(builder, operaDailyNum);
  clz_Torappu_SiracusaData_ConstData.addOperaAllUnlockTime(builder, operaAllUnlockTime);
  clz_Torappu_SiracusaData_ConstData.addDefaultFocusArea(builder, defaultFocusAreaOffset);
  return clz_Torappu_SiracusaData_ConstData.endclz_Torappu_SiracusaData_ConstData(builder);
}

unpack(): clz_Torappu_SiracusaData_ConstDataT {
  return new clz_Torappu_SiracusaData_ConstDataT(
    this.operaDailyNum(),
    this.operaAllUnlockTime(),
    this.defaultFocusArea()
  );
}


unpackTo(_o: clz_Torappu_SiracusaData_ConstDataT): void {
  _o.operaDailyNum = this.operaDailyNum();
  _o.operaAllUnlockTime = this.operaAllUnlockTime();
  _o.defaultFocusArea = this.defaultFocusArea();
}
}

export class clz_Torappu_SiracusaData_ConstDataT implements flatbuffers.IGeneratedObject {
constructor(
  public operaDailyNum: number = 0,
  public operaAllUnlockTime: bigint = BigInt('0'),
  public defaultFocusArea: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const defaultFocusArea = (this.defaultFocusArea !== null ? builder.createString(this.defaultFocusArea!) : 0);

  return clz_Torappu_SiracusaData_ConstData.createclz_Torappu_SiracusaData_ConstData(builder,
    this.operaDailyNum,
    this.operaAllUnlockTime,
    defaultFocusArea
  );
}
}
