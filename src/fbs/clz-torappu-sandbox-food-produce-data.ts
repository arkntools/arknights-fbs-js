// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SandboxFoodProduceData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxFoodProduceDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxFoodProduceData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxFoodProduceData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxFoodProduceData):clz_Torappu_SandboxFoodProduceData {
  return (obj || new clz_Torappu_SandboxFoodProduceData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxFoodProduceData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxFoodProduceData):clz_Torappu_SandboxFoodProduceData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxFoodProduceData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

itemId():string|null
itemId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
itemId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

mainMaterialItems(index: number):string
mainMaterialItems(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
mainMaterialItems(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

mainMaterialItemsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

buffId():string|null
buffId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
buffId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

unlockDesc():string|null
unlockDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
unlockDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_SandboxFoodProduceData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addItemId(builder:flatbuffers.Builder, itemIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, itemIdOffset, 0);
}

static addMainMaterialItems(builder:flatbuffers.Builder, mainMaterialItemsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, mainMaterialItemsOffset, 0);
}

static createMainMaterialItemsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startMainMaterialItemsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBuffId(builder:flatbuffers.Builder, buffIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, buffIdOffset, 0);
}

static addUnlockDesc(builder:flatbuffers.Builder, unlockDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, unlockDescOffset, 0);
}

static endclz_Torappu_SandboxFoodProduceData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxFoodProduceData(builder:flatbuffers.Builder, itemIdOffset:flatbuffers.Offset, mainMaterialItemsOffset:flatbuffers.Offset, buffIdOffset:flatbuffers.Offset, unlockDescOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SandboxFoodProduceData.startclz_Torappu_SandboxFoodProduceData(builder);
  clz_Torappu_SandboxFoodProduceData.addItemId(builder, itemIdOffset);
  clz_Torappu_SandboxFoodProduceData.addMainMaterialItems(builder, mainMaterialItemsOffset);
  clz_Torappu_SandboxFoodProduceData.addBuffId(builder, buffIdOffset);
  clz_Torappu_SandboxFoodProduceData.addUnlockDesc(builder, unlockDescOffset);
  return clz_Torappu_SandboxFoodProduceData.endclz_Torappu_SandboxFoodProduceData(builder);
}

unpack(): clz_Torappu_SandboxFoodProduceDataT {
  return new clz_Torappu_SandboxFoodProduceDataT(
    this.itemId(),
    this.bb!.createScalarList<string>(this.mainMaterialItems.bind(this), this.mainMaterialItemsLength()),
    this.buffId(),
    this.unlockDesc()
  );
}


unpackTo(_o: clz_Torappu_SandboxFoodProduceDataT): void {
  _o.itemId = this.itemId();
  _o.mainMaterialItems = this.bb!.createScalarList<string>(this.mainMaterialItems.bind(this), this.mainMaterialItemsLength());
  _o.buffId = this.buffId();
  _o.unlockDesc = this.unlockDesc();
}
}

export class clz_Torappu_SandboxFoodProduceDataT implements flatbuffers.IGeneratedObject {
constructor(
  public itemId: string|Uint8Array|null = null,
  public mainMaterialItems: (string)[] = [],
  public buffId: string|Uint8Array|null = null,
  public unlockDesc: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const itemId = (this.itemId !== null ? builder.createString(this.itemId!) : 0);
  const mainMaterialItems = clz_Torappu_SandboxFoodProduceData.createMainMaterialItemsVector(builder, builder.createObjectOffsetList(this.mainMaterialItems));
  const buffId = (this.buffId !== null ? builder.createString(this.buffId!) : 0);
  const unlockDesc = (this.unlockDesc !== null ? builder.createString(this.unlockDesc!) : 0);

  return clz_Torappu_SandboxFoodProduceData.createclz_Torappu_SandboxFoodProduceData(builder,
    itemId,
    mainMaterialItems,
    buffId,
    unlockDesc
  );
}
}
