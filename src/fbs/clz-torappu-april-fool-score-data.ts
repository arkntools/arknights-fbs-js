// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_AprilFoolScoreData implements flatbuffers.IUnpackableObject<clz_Torappu_AprilFoolScoreDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_AprilFoolScoreData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_AprilFoolScoreData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_AprilFoolScoreData):clz_Torappu_AprilFoolScoreData {
  return (obj || new clz_Torappu_AprilFoolScoreData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_AprilFoolScoreData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_AprilFoolScoreData):clz_Torappu_AprilFoolScoreData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_AprilFoolScoreData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

stageId():string|null
stageId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
stageId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

playerName():string|null
playerName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
playerName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

playerScore():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startclz_Torappu_AprilFoolScoreData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addStageId(builder:flatbuffers.Builder, stageIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, stageIdOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(1, sortId, 0);
}

static addPlayerName(builder:flatbuffers.Builder, playerNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, playerNameOffset, 0);
}

static addPlayerScore(builder:flatbuffers.Builder, playerScore:bigint) {
  builder.addFieldInt64(3, playerScore, BigInt('0'));
}

static endclz_Torappu_AprilFoolScoreData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_AprilFoolScoreData(builder:flatbuffers.Builder, stageIdOffset:flatbuffers.Offset, sortId:number, playerNameOffset:flatbuffers.Offset, playerScore:bigint):flatbuffers.Offset {
  clz_Torappu_AprilFoolScoreData.startclz_Torappu_AprilFoolScoreData(builder);
  clz_Torappu_AprilFoolScoreData.addStageId(builder, stageIdOffset);
  clz_Torappu_AprilFoolScoreData.addSortId(builder, sortId);
  clz_Torappu_AprilFoolScoreData.addPlayerName(builder, playerNameOffset);
  clz_Torappu_AprilFoolScoreData.addPlayerScore(builder, playerScore);
  return clz_Torappu_AprilFoolScoreData.endclz_Torappu_AprilFoolScoreData(builder);
}

unpack(): clz_Torappu_AprilFoolScoreDataT {
  return new clz_Torappu_AprilFoolScoreDataT(
    this.stageId(),
    this.sortId(),
    this.playerName(),
    this.playerScore()
  );
}


unpackTo(_o: clz_Torappu_AprilFoolScoreDataT): void {
  _o.stageId = this.stageId();
  _o.sortId = this.sortId();
  _o.playerName = this.playerName();
  _o.playerScore = this.playerScore();
}
}

export class clz_Torappu_AprilFoolScoreDataT implements flatbuffers.IGeneratedObject {
constructor(
  public stageId: string|Uint8Array|null = null,
  public sortId: number = 0,
  public playerName: string|Uint8Array|null = null,
  public playerScore: bigint = BigInt('0')
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const stageId = (this.stageId !== null ? builder.createString(this.stageId!) : 0);
  const playerName = (this.playerName !== null ? builder.createString(this.playerName!) : 0);

  return clz_Torappu_AprilFoolScoreData.createclz_Torappu_AprilFoolScoreData(builder,
    stageId,
    this.sortId,
    playerName,
    this.playerScore
  );
}
}
