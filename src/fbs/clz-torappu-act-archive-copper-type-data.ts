// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_RoguelikeCopperType } from './enum--torappu-roguelike-copper-type.js';


export class clz_Torappu_ActArchiveCopperTypeData implements flatbuffers.IUnpackableObject<clz_Torappu_ActArchiveCopperTypeDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActArchiveCopperTypeData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActArchiveCopperTypeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActArchiveCopperTypeData):clz_Torappu_ActArchiveCopperTypeData {
  return (obj || new clz_Torappu_ActArchiveCopperTypeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActArchiveCopperTypeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActArchiveCopperTypeData):clz_Torappu_ActArchiveCopperTypeData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActArchiveCopperTypeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

copperType():enum__Torappu_RoguelikeCopperType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_RoguelikeCopperType.NONE;
}

typeName():string|null
typeName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
typeName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

typeIconId():string|null
typeIconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
typeIconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_ActArchiveCopperTypeData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addCopperType(builder:flatbuffers.Builder, copperType:enum__Torappu_RoguelikeCopperType) {
  builder.addFieldInt32(0, copperType, enum__Torappu_RoguelikeCopperType.NONE);
}

static addTypeName(builder:flatbuffers.Builder, typeNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, typeNameOffset, 0);
}

static addTypeIconId(builder:flatbuffers.Builder, typeIconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, typeIconIdOffset, 0);
}

static endclz_Torappu_ActArchiveCopperTypeData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActArchiveCopperTypeData(builder:flatbuffers.Builder, copperType:enum__Torappu_RoguelikeCopperType, typeNameOffset:flatbuffers.Offset, typeIconIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActArchiveCopperTypeData.startclz_Torappu_ActArchiveCopperTypeData(builder);
  clz_Torappu_ActArchiveCopperTypeData.addCopperType(builder, copperType);
  clz_Torappu_ActArchiveCopperTypeData.addTypeName(builder, typeNameOffset);
  clz_Torappu_ActArchiveCopperTypeData.addTypeIconId(builder, typeIconIdOffset);
  return clz_Torappu_ActArchiveCopperTypeData.endclz_Torappu_ActArchiveCopperTypeData(builder);
}

unpack(): clz_Torappu_ActArchiveCopperTypeDataT {
  return new clz_Torappu_ActArchiveCopperTypeDataT(
    this.copperType(),
    this.typeName(),
    this.typeIconId()
  );
}


unpackTo(_o: clz_Torappu_ActArchiveCopperTypeDataT): void {
  _o.copperType = this.copperType();
  _o.typeName = this.typeName();
  _o.typeIconId = this.typeIconId();
}
}

export class clz_Torappu_ActArchiveCopperTypeDataT implements flatbuffers.IGeneratedObject {
constructor(
  public copperType: enum__Torappu_RoguelikeCopperType = enum__Torappu_RoguelikeCopperType.NONE,
  public typeName: string|Uint8Array|null = null,
  public typeIconId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const typeName = (this.typeName !== null ? builder.createString(this.typeName!) : 0);
  const typeIconId = (this.typeIconId !== null ? builder.createString(this.typeIconId!) : 0);

  return clz_Torappu_ActArchiveCopperTypeData.createclz_Torappu_ActArchiveCopperTypeData(builder,
    this.copperType,
    typeName,
    typeIconId
  );
}
}
