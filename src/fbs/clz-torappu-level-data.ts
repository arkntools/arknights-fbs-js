// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_GridPosition, clz_Torappu_GridPositionT } from './clz-torappu-grid-position.js';
import { clz_Torappu_LegacyInLevelRuneData, clz_Torappu_LegacyInLevelRuneDataT } from './clz-torappu-legacy-in-level-rune-data.js';
import { clz_Torappu_LevelData_EnemyData, clz_Torappu_LevelData_EnemyDataT } from './clz-torappu-level-data-enemy-data.js';
import { clz_Torappu_LevelData_EnemyDataDbReference, clz_Torappu_LevelData_EnemyDataDbReferenceT } from './clz-torappu-level-data-enemy-data-db-reference.js';
import { clz_Torappu_LevelData_GlobalBuffData, clz_Torappu_LevelData_GlobalBuffDataT } from './clz-torappu-level-data-global-buff-data.js';
import { clz_Torappu_LevelData_Options, clz_Torappu_LevelData_OptionsT } from './clz-torappu-level-data-options.js';
import { clz_Torappu_LevelData_PredefinedData, clz_Torappu_LevelData_PredefinedDataT } from './clz-torappu-level-data-predefined-data.js';
import { clz_Torappu_LevelData_WaveData, clz_Torappu_LevelData_WaveDataT } from './clz-torappu-level-data-wave-data.js';
import { clz_Torappu_MapData, clz_Torappu_MapDataT } from './clz-torappu-map-data.js';
import { clz_Torappu_RouteData, clz_Torappu_RouteDataT } from './clz-torappu-route-data.js';
import { dict__string__clz_Torappu_LevelData_BranchData, dict__string__clz_Torappu_LevelData_BranchDataT } from './dict--string--clz-torappu-level-data-branch-data.js';
import { dict__string__list_clz_Torappu_LegacyInLevelRuneData, dict__string__list_clz_Torappu_LegacyInLevelRuneDataT } from './dict--string--list-clz-torappu-legacy-in-level-rune-data.js';


export class clz_Torappu_LevelData implements flatbuffers.IUnpackableObject<clz_Torappu_LevelDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_LevelData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_LevelData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_LevelData):clz_Torappu_LevelData {
  return (obj || new clz_Torappu_LevelData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_LevelData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_LevelData):clz_Torappu_LevelData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_LevelData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

options(obj?:clz_Torappu_LevelData_Options):clz_Torappu_LevelData_Options|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new clz_Torappu_LevelData_Options()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

levelId():string|null
levelId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
levelId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

mapId():string|null
mapId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
mapId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

bgmEvent():string|null
bgmEvent(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
bgmEvent(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

environmentSe():string|null
environmentSe(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
environmentSe(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

mapData(obj?:clz_Torappu_MapData):clz_Torappu_MapData|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new clz_Torappu_MapData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

tilesDisallowToLocate(index: number, obj?:clz_Torappu_GridPosition):clz_Torappu_GridPosition|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new clz_Torappu_GridPosition()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

tilesDisallowToLocateLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

runes(index: number, obj?:clz_Torappu_LegacyInLevelRuneData):clz_Torappu_LegacyInLevelRuneData|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new clz_Torappu_LegacyInLevelRuneData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

runesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

optionalRunes(index: number, obj?:dict__string__list_clz_Torappu_LegacyInLevelRuneData):dict__string__list_clz_Torappu_LegacyInLevelRuneData|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? (obj || new dict__string__list_clz_Torappu_LegacyInLevelRuneData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

optionalRunesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

globalBuffs(index: number, obj?:clz_Torappu_LevelData_GlobalBuffData):clz_Torappu_LevelData_GlobalBuffData|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? (obj || new clz_Torappu_LevelData_GlobalBuffData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

globalBuffsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

routes(index: number, obj?:clz_Torappu_RouteData):clz_Torappu_RouteData|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? (obj || new clz_Torappu_RouteData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

routesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

extraRoutes(index: number, obj?:clz_Torappu_RouteData):clz_Torappu_RouteData|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? (obj || new clz_Torappu_RouteData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

extraRoutesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

enemies(index: number, obj?:clz_Torappu_LevelData_EnemyData):clz_Torappu_LevelData_EnemyData|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? (obj || new clz_Torappu_LevelData_EnemyData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

enemiesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

enemyDbRefs(index: number, obj?:clz_Torappu_LevelData_EnemyDataDbReference):clz_Torappu_LevelData_EnemyDataDbReference|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? (obj || new clz_Torappu_LevelData_EnemyDataDbReference()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

enemyDbRefsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

waves(index: number, obj?:clz_Torappu_LevelData_WaveData):clz_Torappu_LevelData_WaveData|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? (obj || new clz_Torappu_LevelData_WaveData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

wavesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

branches(index: number, obj?:dict__string__clz_Torappu_LevelData_BranchData):dict__string__clz_Torappu_LevelData_BranchData|null {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? (obj || new dict__string__clz_Torappu_LevelData_BranchData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

branchesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

predefines(obj?:clz_Torappu_LevelData_PredefinedData):clz_Torappu_LevelData_PredefinedData|null {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? (obj || new clz_Torappu_LevelData_PredefinedData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

hardPredefines(obj?:clz_Torappu_LevelData_PredefinedData):clz_Torappu_LevelData_PredefinedData|null {
  const offset = this.bb!.__offset(this.bb_pos, 38);
  return offset ? (obj || new clz_Torappu_LevelData_PredefinedData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

excludeCharIdList(index: number):string
excludeCharIdList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
excludeCharIdList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

excludeCharIdListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

randomSeed():number {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

operaConfig():string|null
operaConfig(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
operaConfig(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 44);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

cameraPlugin():string|null
cameraPlugin(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
cameraPlugin(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 46);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_LevelData(builder:flatbuffers.Builder) {
  builder.startObject(22);
}

static addOptions(builder:flatbuffers.Builder, optionsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, optionsOffset, 0);
}

static addLevelId(builder:flatbuffers.Builder, levelIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, levelIdOffset, 0);
}

static addMapId(builder:flatbuffers.Builder, mapIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, mapIdOffset, 0);
}

static addBgmEvent(builder:flatbuffers.Builder, bgmEventOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, bgmEventOffset, 0);
}

static addEnvironmentSe(builder:flatbuffers.Builder, environmentSeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, environmentSeOffset, 0);
}

static addMapData(builder:flatbuffers.Builder, mapDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, mapDataOffset, 0);
}

static addTilesDisallowToLocate(builder:flatbuffers.Builder, tilesDisallowToLocateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, tilesDisallowToLocateOffset, 0);
}

static createTilesDisallowToLocateVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTilesDisallowToLocateVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRunes(builder:flatbuffers.Builder, runesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, runesOffset, 0);
}

static createRunesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRunesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addOptionalRunes(builder:flatbuffers.Builder, optionalRunesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, optionalRunesOffset, 0);
}

static createOptionalRunesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startOptionalRunesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addGlobalBuffs(builder:flatbuffers.Builder, globalBuffsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, globalBuffsOffset, 0);
}

static createGlobalBuffsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startGlobalBuffsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRoutes(builder:flatbuffers.Builder, routesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, routesOffset, 0);
}

static createRoutesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRoutesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addExtraRoutes(builder:flatbuffers.Builder, extraRoutesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, extraRoutesOffset, 0);
}

static createExtraRoutesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startExtraRoutesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addEnemies(builder:flatbuffers.Builder, enemiesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, enemiesOffset, 0);
}

static createEnemiesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEnemiesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addEnemyDbRefs(builder:flatbuffers.Builder, enemyDbRefsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, enemyDbRefsOffset, 0);
}

static createEnemyDbRefsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEnemyDbRefsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addWaves(builder:flatbuffers.Builder, wavesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, wavesOffset, 0);
}

static createWavesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startWavesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBranches(builder:flatbuffers.Builder, branchesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(15, branchesOffset, 0);
}

static createBranchesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBranchesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addPredefines(builder:flatbuffers.Builder, predefinesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(16, predefinesOffset, 0);
}

static addHardPredefines(builder:flatbuffers.Builder, hardPredefinesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(17, hardPredefinesOffset, 0);
}

static addExcludeCharIdList(builder:flatbuffers.Builder, excludeCharIdListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(18, excludeCharIdListOffset, 0);
}

static createExcludeCharIdListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startExcludeCharIdListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRandomSeed(builder:flatbuffers.Builder, randomSeed:number) {
  builder.addFieldInt32(19, randomSeed, 0);
}

static addOperaConfig(builder:flatbuffers.Builder, operaConfigOffset:flatbuffers.Offset) {
  builder.addFieldOffset(20, operaConfigOffset, 0);
}

static addCameraPlugin(builder:flatbuffers.Builder, cameraPluginOffset:flatbuffers.Offset) {
  builder.addFieldOffset(21, cameraPluginOffset, 0);
}

static endclz_Torappu_LevelData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishclz_Torappu_LevelDataBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedclz_Torappu_LevelDataBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}


unpack(): clz_Torappu_LevelDataT {
  return new clz_Torappu_LevelDataT(
    (this.options() !== null ? this.options()!.unpack() : null),
    this.levelId(),
    this.mapId(),
    this.bgmEvent(),
    this.environmentSe(),
    (this.mapData() !== null ? this.mapData()!.unpack() : null),
    this.bb!.createObjList<clz_Torappu_GridPosition, clz_Torappu_GridPositionT>(this.tilesDisallowToLocate.bind(this), this.tilesDisallowToLocateLength()),
    this.bb!.createObjList<clz_Torappu_LegacyInLevelRuneData, clz_Torappu_LegacyInLevelRuneDataT>(this.runes.bind(this), this.runesLength()),
    this.bb!.createObjList<dict__string__list_clz_Torappu_LegacyInLevelRuneData, dict__string__list_clz_Torappu_LegacyInLevelRuneDataT>(this.optionalRunes.bind(this), this.optionalRunesLength()),
    this.bb!.createObjList<clz_Torappu_LevelData_GlobalBuffData, clz_Torappu_LevelData_GlobalBuffDataT>(this.globalBuffs.bind(this), this.globalBuffsLength()),
    this.bb!.createObjList<clz_Torappu_RouteData, clz_Torappu_RouteDataT>(this.routes.bind(this), this.routesLength()),
    this.bb!.createObjList<clz_Torappu_RouteData, clz_Torappu_RouteDataT>(this.extraRoutes.bind(this), this.extraRoutesLength()),
    this.bb!.createObjList<clz_Torappu_LevelData_EnemyData, clz_Torappu_LevelData_EnemyDataT>(this.enemies.bind(this), this.enemiesLength()),
    this.bb!.createObjList<clz_Torappu_LevelData_EnemyDataDbReference, clz_Torappu_LevelData_EnemyDataDbReferenceT>(this.enemyDbRefs.bind(this), this.enemyDbRefsLength()),
    this.bb!.createObjList<clz_Torappu_LevelData_WaveData, clz_Torappu_LevelData_WaveDataT>(this.waves.bind(this), this.wavesLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_LevelData_BranchData, dict__string__clz_Torappu_LevelData_BranchDataT>(this.branches.bind(this), this.branchesLength()),
    (this.predefines() !== null ? this.predefines()!.unpack() : null),
    (this.hardPredefines() !== null ? this.hardPredefines()!.unpack() : null),
    this.bb!.createScalarList<string>(this.excludeCharIdList.bind(this), this.excludeCharIdListLength()),
    this.randomSeed(),
    this.operaConfig(),
    this.cameraPlugin()
  );
}


unpackTo(_o: clz_Torappu_LevelDataT): void {
  _o.options = (this.options() !== null ? this.options()!.unpack() : null);
  _o.levelId = this.levelId();
  _o.mapId = this.mapId();
  _o.bgmEvent = this.bgmEvent();
  _o.environmentSe = this.environmentSe();
  _o.mapData = (this.mapData() !== null ? this.mapData()!.unpack() : null);
  _o.tilesDisallowToLocate = this.bb!.createObjList<clz_Torappu_GridPosition, clz_Torappu_GridPositionT>(this.tilesDisallowToLocate.bind(this), this.tilesDisallowToLocateLength());
  _o.runes = this.bb!.createObjList<clz_Torappu_LegacyInLevelRuneData, clz_Torappu_LegacyInLevelRuneDataT>(this.runes.bind(this), this.runesLength());
  _o.optionalRunes = this.bb!.createObjList<dict__string__list_clz_Torappu_LegacyInLevelRuneData, dict__string__list_clz_Torappu_LegacyInLevelRuneDataT>(this.optionalRunes.bind(this), this.optionalRunesLength());
  _o.globalBuffs = this.bb!.createObjList<clz_Torappu_LevelData_GlobalBuffData, clz_Torappu_LevelData_GlobalBuffDataT>(this.globalBuffs.bind(this), this.globalBuffsLength());
  _o.routes = this.bb!.createObjList<clz_Torappu_RouteData, clz_Torappu_RouteDataT>(this.routes.bind(this), this.routesLength());
  _o.extraRoutes = this.bb!.createObjList<clz_Torappu_RouteData, clz_Torappu_RouteDataT>(this.extraRoutes.bind(this), this.extraRoutesLength());
  _o.enemies = this.bb!.createObjList<clz_Torappu_LevelData_EnemyData, clz_Torappu_LevelData_EnemyDataT>(this.enemies.bind(this), this.enemiesLength());
  _o.enemyDbRefs = this.bb!.createObjList<clz_Torappu_LevelData_EnemyDataDbReference, clz_Torappu_LevelData_EnemyDataDbReferenceT>(this.enemyDbRefs.bind(this), this.enemyDbRefsLength());
  _o.waves = this.bb!.createObjList<clz_Torappu_LevelData_WaveData, clz_Torappu_LevelData_WaveDataT>(this.waves.bind(this), this.wavesLength());
  _o.branches = this.bb!.createObjList<dict__string__clz_Torappu_LevelData_BranchData, dict__string__clz_Torappu_LevelData_BranchDataT>(this.branches.bind(this), this.branchesLength());
  _o.predefines = (this.predefines() !== null ? this.predefines()!.unpack() : null);
  _o.hardPredefines = (this.hardPredefines() !== null ? this.hardPredefines()!.unpack() : null);
  _o.excludeCharIdList = this.bb!.createScalarList<string>(this.excludeCharIdList.bind(this), this.excludeCharIdListLength());
  _o.randomSeed = this.randomSeed();
  _o.operaConfig = this.operaConfig();
  _o.cameraPlugin = this.cameraPlugin();
}
}

export class clz_Torappu_LevelDataT implements flatbuffers.IGeneratedObject {
constructor(
  public options: clz_Torappu_LevelData_OptionsT|null = null,
  public levelId: string|Uint8Array|null = null,
  public mapId: string|Uint8Array|null = null,
  public bgmEvent: string|Uint8Array|null = null,
  public environmentSe: string|Uint8Array|null = null,
  public mapData: clz_Torappu_MapDataT|null = null,
  public tilesDisallowToLocate: (clz_Torappu_GridPositionT)[] = [],
  public runes: (clz_Torappu_LegacyInLevelRuneDataT)[] = [],
  public optionalRunes: (dict__string__list_clz_Torappu_LegacyInLevelRuneDataT)[] = [],
  public globalBuffs: (clz_Torappu_LevelData_GlobalBuffDataT)[] = [],
  public routes: (clz_Torappu_RouteDataT)[] = [],
  public extraRoutes: (clz_Torappu_RouteDataT)[] = [],
  public enemies: (clz_Torappu_LevelData_EnemyDataT)[] = [],
  public enemyDbRefs: (clz_Torappu_LevelData_EnemyDataDbReferenceT)[] = [],
  public waves: (clz_Torappu_LevelData_WaveDataT)[] = [],
  public branches: (dict__string__clz_Torappu_LevelData_BranchDataT)[] = [],
  public predefines: clz_Torappu_LevelData_PredefinedDataT|null = null,
  public hardPredefines: clz_Torappu_LevelData_PredefinedDataT|null = null,
  public excludeCharIdList: (string)[] = [],
  public randomSeed: number = 0,
  public operaConfig: string|Uint8Array|null = null,
  public cameraPlugin: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const options = (this.options !== null ? this.options!.pack(builder) : 0);
  const levelId = (this.levelId !== null ? builder.createString(this.levelId!) : 0);
  const mapId = (this.mapId !== null ? builder.createString(this.mapId!) : 0);
  const bgmEvent = (this.bgmEvent !== null ? builder.createString(this.bgmEvent!) : 0);
  const environmentSe = (this.environmentSe !== null ? builder.createString(this.environmentSe!) : 0);
  const mapData = (this.mapData !== null ? this.mapData!.pack(builder) : 0);
  const tilesDisallowToLocate = clz_Torappu_LevelData.createTilesDisallowToLocateVector(builder, builder.createObjectOffsetList(this.tilesDisallowToLocate));
  const runes = clz_Torappu_LevelData.createRunesVector(builder, builder.createObjectOffsetList(this.runes));
  const optionalRunes = clz_Torappu_LevelData.createOptionalRunesVector(builder, builder.createObjectOffsetList(this.optionalRunes));
  const globalBuffs = clz_Torappu_LevelData.createGlobalBuffsVector(builder, builder.createObjectOffsetList(this.globalBuffs));
  const routes = clz_Torappu_LevelData.createRoutesVector(builder, builder.createObjectOffsetList(this.routes));
  const extraRoutes = clz_Torappu_LevelData.createExtraRoutesVector(builder, builder.createObjectOffsetList(this.extraRoutes));
  const enemies = clz_Torappu_LevelData.createEnemiesVector(builder, builder.createObjectOffsetList(this.enemies));
  const enemyDbRefs = clz_Torappu_LevelData.createEnemyDbRefsVector(builder, builder.createObjectOffsetList(this.enemyDbRefs));
  const waves = clz_Torappu_LevelData.createWavesVector(builder, builder.createObjectOffsetList(this.waves));
  const branches = clz_Torappu_LevelData.createBranchesVector(builder, builder.createObjectOffsetList(this.branches));
  const predefines = (this.predefines !== null ? this.predefines!.pack(builder) : 0);
  const hardPredefines = (this.hardPredefines !== null ? this.hardPredefines!.pack(builder) : 0);
  const excludeCharIdList = clz_Torappu_LevelData.createExcludeCharIdListVector(builder, builder.createObjectOffsetList(this.excludeCharIdList));
  const operaConfig = (this.operaConfig !== null ? builder.createString(this.operaConfig!) : 0);
  const cameraPlugin = (this.cameraPlugin !== null ? builder.createString(this.cameraPlugin!) : 0);

  clz_Torappu_LevelData.startclz_Torappu_LevelData(builder);
  clz_Torappu_LevelData.addOptions(builder, options);
  clz_Torappu_LevelData.addLevelId(builder, levelId);
  clz_Torappu_LevelData.addMapId(builder, mapId);
  clz_Torappu_LevelData.addBgmEvent(builder, bgmEvent);
  clz_Torappu_LevelData.addEnvironmentSe(builder, environmentSe);
  clz_Torappu_LevelData.addMapData(builder, mapData);
  clz_Torappu_LevelData.addTilesDisallowToLocate(builder, tilesDisallowToLocate);
  clz_Torappu_LevelData.addRunes(builder, runes);
  clz_Torappu_LevelData.addOptionalRunes(builder, optionalRunes);
  clz_Torappu_LevelData.addGlobalBuffs(builder, globalBuffs);
  clz_Torappu_LevelData.addRoutes(builder, routes);
  clz_Torappu_LevelData.addExtraRoutes(builder, extraRoutes);
  clz_Torappu_LevelData.addEnemies(builder, enemies);
  clz_Torappu_LevelData.addEnemyDbRefs(builder, enemyDbRefs);
  clz_Torappu_LevelData.addWaves(builder, waves);
  clz_Torappu_LevelData.addBranches(builder, branches);
  clz_Torappu_LevelData.addPredefines(builder, predefines);
  clz_Torappu_LevelData.addHardPredefines(builder, hardPredefines);
  clz_Torappu_LevelData.addExcludeCharIdList(builder, excludeCharIdList);
  clz_Torappu_LevelData.addRandomSeed(builder, this.randomSeed);
  clz_Torappu_LevelData.addOperaConfig(builder, operaConfig);
  clz_Torappu_LevelData.addCameraPlugin(builder, cameraPlugin);

  return clz_Torappu_LevelData.endclz_Torappu_LevelData(builder);
}
}
