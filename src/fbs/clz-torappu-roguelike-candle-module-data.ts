// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_RoguelikeCandleModuleConsts, clz_Torappu_RoguelikeCandleModuleConstsT } from './clz-torappu-roguelike-candle-module-consts.js';


export class clz_Torappu_RoguelikeCandleModuleData implements flatbuffers.IUnpackableObject<clz_Torappu_RoguelikeCandleModuleDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RoguelikeCandleModuleData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RoguelikeCandleModuleData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeCandleModuleData):clz_Torappu_RoguelikeCandleModuleData {
  return (obj || new clz_Torappu_RoguelikeCandleModuleData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RoguelikeCandleModuleData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeCandleModuleData):clz_Torappu_RoguelikeCandleModuleData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RoguelikeCandleModuleData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

candleTicketIdList(index: number):string
candleTicketIdList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
candleTicketIdList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

candleTicketIdListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

moduleConsts(obj?:clz_Torappu_RoguelikeCandleModuleConsts):clz_Torappu_RoguelikeCandleModuleConsts|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new clz_Torappu_RoguelikeCandleModuleConsts()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

candleBattleStageIdList(index: number):string
candleBattleStageIdList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
candleBattleStageIdList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

candleBattleStageIdListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_RoguelikeCandleModuleData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addCandleTicketIdList(builder:flatbuffers.Builder, candleTicketIdListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, candleTicketIdListOffset, 0);
}

static createCandleTicketIdListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCandleTicketIdListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addModuleConsts(builder:flatbuffers.Builder, moduleConstsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, moduleConstsOffset, 0);
}

static addCandleBattleStageIdList(builder:flatbuffers.Builder, candleBattleStageIdListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, candleBattleStageIdListOffset, 0);
}

static createCandleBattleStageIdListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCandleBattleStageIdListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_RoguelikeCandleModuleData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_RoguelikeCandleModuleDataT {
  return new clz_Torappu_RoguelikeCandleModuleDataT(
    this.bb!.createScalarList<string>(this.candleTicketIdList.bind(this), this.candleTicketIdListLength()),
    (this.moduleConsts() !== null ? this.moduleConsts()!.unpack() : null),
    this.bb!.createScalarList<string>(this.candleBattleStageIdList.bind(this), this.candleBattleStageIdListLength())
  );
}


unpackTo(_o: clz_Torappu_RoguelikeCandleModuleDataT): void {
  _o.candleTicketIdList = this.bb!.createScalarList<string>(this.candleTicketIdList.bind(this), this.candleTicketIdListLength());
  _o.moduleConsts = (this.moduleConsts() !== null ? this.moduleConsts()!.unpack() : null);
  _o.candleBattleStageIdList = this.bb!.createScalarList<string>(this.candleBattleStageIdList.bind(this), this.candleBattleStageIdListLength());
}
}

export class clz_Torappu_RoguelikeCandleModuleDataT implements flatbuffers.IGeneratedObject {
constructor(
  public candleTicketIdList: (string)[] = [],
  public moduleConsts: clz_Torappu_RoguelikeCandleModuleConstsT|null = null,
  public candleBattleStageIdList: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const candleTicketIdList = clz_Torappu_RoguelikeCandleModuleData.createCandleTicketIdListVector(builder, builder.createObjectOffsetList(this.candleTicketIdList));
  const moduleConsts = (this.moduleConsts !== null ? this.moduleConsts!.pack(builder) : 0);
  const candleBattleStageIdList = clz_Torappu_RoguelikeCandleModuleData.createCandleBattleStageIdListVector(builder, builder.createObjectOffsetList(this.candleBattleStageIdList));

  clz_Torappu_RoguelikeCandleModuleData.startclz_Torappu_RoguelikeCandleModuleData(builder);
  clz_Torappu_RoguelikeCandleModuleData.addCandleTicketIdList(builder, candleTicketIdList);
  clz_Torappu_RoguelikeCandleModuleData.addModuleConsts(builder, moduleConsts);
  clz_Torappu_RoguelikeCandleModuleData.addCandleBattleStageIdList(builder, candleBattleStageIdList);

  return clz_Torappu_RoguelikeCandleModuleData.endclz_Torappu_RoguelikeCandleModuleData(builder);
}
}
