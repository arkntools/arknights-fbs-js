// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_CharWordUnlockParam, clz_Torappu_CharWordUnlockParamT } from './clz-torappu-char-word-unlock-param.js';
import { enum__Torappu_CharWordShowType } from './enum--torappu-char-word-show-type.js';
import { enum__Torappu_CharWordVoiceType } from './enum--torappu-char-word-voice-type.js';
import { enum__Torappu_DataUnlockType } from './enum--torappu-data-unlock-type.js';


export class clz_Torappu_CharWordData implements flatbuffers.IUnpackableObject<clz_Torappu_CharWordDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_CharWordData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_CharWordData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CharWordData):clz_Torappu_CharWordData {
  return (obj || new clz_Torappu_CharWordData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_CharWordData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CharWordData):clz_Torappu_CharWordData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_CharWordData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

charWordId():string|null
charWordId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
charWordId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

wordKey():string|null
wordKey(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
wordKey(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

charId():string|null
charId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
charId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

voiceId():string|null
voiceId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
voiceId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

voiceText():string|null
voiceText(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
voiceText(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

voiceTitle():string|null
voiceTitle(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
voiceTitle(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

voiceIndex():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

voiceType():enum__Torappu_CharWordVoiceType {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_CharWordVoiceType.ONLY_TEXT;
}

unlockType():enum__Torappu_DataUnlockType {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_DataUnlockType.DIRECT;
}

unlockParam(index: number, obj?:clz_Torappu_CharWordUnlockParam):clz_Torappu_CharWordUnlockParam|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? (obj || new clz_Torappu_CharWordUnlockParam()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

unlockParamLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

lockDescription():string|null
lockDescription(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
lockDescription(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

placeType():enum__Torappu_CharWordShowType {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_CharWordShowType.HOME_SHOW;
}

voiceAsset():string|null
voiceAsset(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
voiceAsset(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_CharWordData(builder:flatbuffers.Builder) {
  builder.startObject(13);
}

static addCharWordId(builder:flatbuffers.Builder, charWordIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, charWordIdOffset, 0);
}

static addWordKey(builder:flatbuffers.Builder, wordKeyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, wordKeyOffset, 0);
}

static addCharId(builder:flatbuffers.Builder, charIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, charIdOffset, 0);
}

static addVoiceId(builder:flatbuffers.Builder, voiceIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, voiceIdOffset, 0);
}

static addVoiceText(builder:flatbuffers.Builder, voiceTextOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, voiceTextOffset, 0);
}

static addVoiceTitle(builder:flatbuffers.Builder, voiceTitleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, voiceTitleOffset, 0);
}

static addVoiceIndex(builder:flatbuffers.Builder, voiceIndex:number) {
  builder.addFieldInt32(6, voiceIndex, 0);
}

static addVoiceType(builder:flatbuffers.Builder, voiceType:enum__Torappu_CharWordVoiceType) {
  builder.addFieldInt32(7, voiceType, enum__Torappu_CharWordVoiceType.ONLY_TEXT);
}

static addUnlockType(builder:flatbuffers.Builder, unlockType:enum__Torappu_DataUnlockType) {
  builder.addFieldInt32(8, unlockType, enum__Torappu_DataUnlockType.DIRECT);
}

static addUnlockParam(builder:flatbuffers.Builder, unlockParamOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, unlockParamOffset, 0);
}

static createUnlockParamVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startUnlockParamVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addLockDescription(builder:flatbuffers.Builder, lockDescriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, lockDescriptionOffset, 0);
}

static addPlaceType(builder:flatbuffers.Builder, placeType:enum__Torappu_CharWordShowType) {
  builder.addFieldInt32(11, placeType, enum__Torappu_CharWordShowType.HOME_SHOW);
}

static addVoiceAsset(builder:flatbuffers.Builder, voiceAssetOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, voiceAssetOffset, 0);
}

static endclz_Torappu_CharWordData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_CharWordData(builder:flatbuffers.Builder, charWordIdOffset:flatbuffers.Offset, wordKeyOffset:flatbuffers.Offset, charIdOffset:flatbuffers.Offset, voiceIdOffset:flatbuffers.Offset, voiceTextOffset:flatbuffers.Offset, voiceTitleOffset:flatbuffers.Offset, voiceIndex:number, voiceType:enum__Torappu_CharWordVoiceType, unlockType:enum__Torappu_DataUnlockType, unlockParamOffset:flatbuffers.Offset, lockDescriptionOffset:flatbuffers.Offset, placeType:enum__Torappu_CharWordShowType, voiceAssetOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_CharWordData.startclz_Torappu_CharWordData(builder);
  clz_Torappu_CharWordData.addCharWordId(builder, charWordIdOffset);
  clz_Torappu_CharWordData.addWordKey(builder, wordKeyOffset);
  clz_Torappu_CharWordData.addCharId(builder, charIdOffset);
  clz_Torappu_CharWordData.addVoiceId(builder, voiceIdOffset);
  clz_Torappu_CharWordData.addVoiceText(builder, voiceTextOffset);
  clz_Torappu_CharWordData.addVoiceTitle(builder, voiceTitleOffset);
  clz_Torappu_CharWordData.addVoiceIndex(builder, voiceIndex);
  clz_Torappu_CharWordData.addVoiceType(builder, voiceType);
  clz_Torappu_CharWordData.addUnlockType(builder, unlockType);
  clz_Torappu_CharWordData.addUnlockParam(builder, unlockParamOffset);
  clz_Torappu_CharWordData.addLockDescription(builder, lockDescriptionOffset);
  clz_Torappu_CharWordData.addPlaceType(builder, placeType);
  clz_Torappu_CharWordData.addVoiceAsset(builder, voiceAssetOffset);
  return clz_Torappu_CharWordData.endclz_Torappu_CharWordData(builder);
}

unpack(): clz_Torappu_CharWordDataT {
  return new clz_Torappu_CharWordDataT(
    this.charWordId(),
    this.wordKey(),
    this.charId(),
    this.voiceId(),
    this.voiceText(),
    this.voiceTitle(),
    this.voiceIndex(),
    this.voiceType(),
    this.unlockType(),
    this.bb!.createObjList<clz_Torappu_CharWordUnlockParam, clz_Torappu_CharWordUnlockParamT>(this.unlockParam.bind(this), this.unlockParamLength()),
    this.lockDescription(),
    this.placeType(),
    this.voiceAsset()
  );
}


unpackTo(_o: clz_Torappu_CharWordDataT): void {
  _o.charWordId = this.charWordId();
  _o.wordKey = this.wordKey();
  _o.charId = this.charId();
  _o.voiceId = this.voiceId();
  _o.voiceText = this.voiceText();
  _o.voiceTitle = this.voiceTitle();
  _o.voiceIndex = this.voiceIndex();
  _o.voiceType = this.voiceType();
  _o.unlockType = this.unlockType();
  _o.unlockParam = this.bb!.createObjList<clz_Torappu_CharWordUnlockParam, clz_Torappu_CharWordUnlockParamT>(this.unlockParam.bind(this), this.unlockParamLength());
  _o.lockDescription = this.lockDescription();
  _o.placeType = this.placeType();
  _o.voiceAsset = this.voiceAsset();
}
}

export class clz_Torappu_CharWordDataT implements flatbuffers.IGeneratedObject {
constructor(
  public charWordId: string|Uint8Array|null = null,
  public wordKey: string|Uint8Array|null = null,
  public charId: string|Uint8Array|null = null,
  public voiceId: string|Uint8Array|null = null,
  public voiceText: string|Uint8Array|null = null,
  public voiceTitle: string|Uint8Array|null = null,
  public voiceIndex: number = 0,
  public voiceType: enum__Torappu_CharWordVoiceType = enum__Torappu_CharWordVoiceType.ONLY_TEXT,
  public unlockType: enum__Torappu_DataUnlockType = enum__Torappu_DataUnlockType.DIRECT,
  public unlockParam: (clz_Torappu_CharWordUnlockParamT)[] = [],
  public lockDescription: string|Uint8Array|null = null,
  public placeType: enum__Torappu_CharWordShowType = enum__Torappu_CharWordShowType.HOME_SHOW,
  public voiceAsset: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const charWordId = (this.charWordId !== null ? builder.createString(this.charWordId!) : 0);
  const wordKey = (this.wordKey !== null ? builder.createString(this.wordKey!) : 0);
  const charId = (this.charId !== null ? builder.createString(this.charId!) : 0);
  const voiceId = (this.voiceId !== null ? builder.createString(this.voiceId!) : 0);
  const voiceText = (this.voiceText !== null ? builder.createString(this.voiceText!) : 0);
  const voiceTitle = (this.voiceTitle !== null ? builder.createString(this.voiceTitle!) : 0);
  const unlockParam = clz_Torappu_CharWordData.createUnlockParamVector(builder, builder.createObjectOffsetList(this.unlockParam));
  const lockDescription = (this.lockDescription !== null ? builder.createString(this.lockDescription!) : 0);
  const voiceAsset = (this.voiceAsset !== null ? builder.createString(this.voiceAsset!) : 0);

  return clz_Torappu_CharWordData.createclz_Torappu_CharWordData(builder,
    charWordId,
    wordKey,
    charId,
    voiceId,
    voiceText,
    voiceTitle,
    this.voiceIndex,
    this.voiceType,
    this.unlockType,
    unlockParam,
    lockDescription,
    this.placeType,
    voiceAsset
  );
}
}
