// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_Act6FunConst, clz_Torappu_Act6FunConstT } from './clz-torappu-act6-fun-const.js';
import { dict__string__clz_Torappu_Act6FunAchievementRewardData, dict__string__clz_Torappu_Act6FunAchievementRewardDataT } from './dict--string--clz-torappu-act6-fun-achievement-reward-data.js';
import { dict__string__clz_Torappu_Act6FunStageAdditionData, dict__string__clz_Torappu_Act6FunStageAdditionDataT } from './dict--string--clz-torappu-act6-fun-stage-addition-data.js';
import { dict__string__list_clz_Torappu_Act6FunAchievementData, dict__string__list_clz_Torappu_Act6FunAchievementDataT } from './dict--string--list-clz-torappu-act6-fun-achievement-data.js';


export class clz_Torappu_Act6FunData implements flatbuffers.IUnpackableObject<clz_Torappu_Act6FunDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Act6FunData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Act6FunData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act6FunData):clz_Torappu_Act6FunData {
  return (obj || new clz_Torappu_Act6FunData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Act6FunData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act6FunData):clz_Torappu_Act6FunData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Act6FunData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

stageAdditionMap(index: number, obj?:dict__string__clz_Torappu_Act6FunStageAdditionData):dict__string__clz_Torappu_Act6FunStageAdditionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new dict__string__clz_Torappu_Act6FunStageAdditionData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

stageAdditionMapLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

stageAchievementMap(index: number, obj?:dict__string__list_clz_Torappu_Act6FunAchievementData):dict__string__list_clz_Torappu_Act6FunAchievementData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new dict__string__list_clz_Torappu_Act6FunAchievementData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

stageAchievementMapLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

achievementRewardList(index: number, obj?:dict__string__clz_Torappu_Act6FunAchievementRewardData):dict__string__clz_Torappu_Act6FunAchievementRewardData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new dict__string__clz_Torappu_Act6FunAchievementRewardData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

achievementRewardListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

constData(obj?:clz_Torappu_Act6FunConst):clz_Torappu_Act6FunConst|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_Torappu_Act6FunConst()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startclz_Torappu_Act6FunData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addStageAdditionMap(builder:flatbuffers.Builder, stageAdditionMapOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, stageAdditionMapOffset, 0);
}

static createStageAdditionMapVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startStageAdditionMapVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addStageAchievementMap(builder:flatbuffers.Builder, stageAchievementMapOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, stageAchievementMapOffset, 0);
}

static createStageAchievementMapVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startStageAchievementMapVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addAchievementRewardList(builder:flatbuffers.Builder, achievementRewardListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, achievementRewardListOffset, 0);
}

static createAchievementRewardListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startAchievementRewardListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addConstData(builder:flatbuffers.Builder, constDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, constDataOffset, 0);
}

static endclz_Torappu_Act6FunData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_Act6FunDataT {
  return new clz_Torappu_Act6FunDataT(
    this.bb!.createObjList<dict__string__clz_Torappu_Act6FunStageAdditionData, dict__string__clz_Torappu_Act6FunStageAdditionDataT>(this.stageAdditionMap.bind(this), this.stageAdditionMapLength()),
    this.bb!.createObjList<dict__string__list_clz_Torappu_Act6FunAchievementData, dict__string__list_clz_Torappu_Act6FunAchievementDataT>(this.stageAchievementMap.bind(this), this.stageAchievementMapLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_Act6FunAchievementRewardData, dict__string__clz_Torappu_Act6FunAchievementRewardDataT>(this.achievementRewardList.bind(this), this.achievementRewardListLength()),
    (this.constData() !== null ? this.constData()!.unpack() : null)
  );
}


unpackTo(_o: clz_Torappu_Act6FunDataT): void {
  _o.stageAdditionMap = this.bb!.createObjList<dict__string__clz_Torappu_Act6FunStageAdditionData, dict__string__clz_Torappu_Act6FunStageAdditionDataT>(this.stageAdditionMap.bind(this), this.stageAdditionMapLength());
  _o.stageAchievementMap = this.bb!.createObjList<dict__string__list_clz_Torappu_Act6FunAchievementData, dict__string__list_clz_Torappu_Act6FunAchievementDataT>(this.stageAchievementMap.bind(this), this.stageAchievementMapLength());
  _o.achievementRewardList = this.bb!.createObjList<dict__string__clz_Torappu_Act6FunAchievementRewardData, dict__string__clz_Torappu_Act6FunAchievementRewardDataT>(this.achievementRewardList.bind(this), this.achievementRewardListLength());
  _o.constData = (this.constData() !== null ? this.constData()!.unpack() : null);
}
}

export class clz_Torappu_Act6FunDataT implements flatbuffers.IGeneratedObject {
constructor(
  public stageAdditionMap: (dict__string__clz_Torappu_Act6FunStageAdditionDataT)[] = [],
  public stageAchievementMap: (dict__string__list_clz_Torappu_Act6FunAchievementDataT)[] = [],
  public achievementRewardList: (dict__string__clz_Torappu_Act6FunAchievementRewardDataT)[] = [],
  public constData: clz_Torappu_Act6FunConstT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const stageAdditionMap = clz_Torappu_Act6FunData.createStageAdditionMapVector(builder, builder.createObjectOffsetList(this.stageAdditionMap));
  const stageAchievementMap = clz_Torappu_Act6FunData.createStageAchievementMapVector(builder, builder.createObjectOffsetList(this.stageAchievementMap));
  const achievementRewardList = clz_Torappu_Act6FunData.createAchievementRewardListVector(builder, builder.createObjectOffsetList(this.achievementRewardList));
  const constData = (this.constData !== null ? this.constData!.pack(builder) : 0);

  clz_Torappu_Act6FunData.startclz_Torappu_Act6FunData(builder);
  clz_Torappu_Act6FunData.addStageAdditionMap(builder, stageAdditionMap);
  clz_Torappu_Act6FunData.addStageAchievementMap(builder, stageAchievementMap);
  clz_Torappu_Act6FunData.addAchievementRewardList(builder, achievementRewardList);
  clz_Torappu_Act6FunData.addConstData(builder, constData);

  return clz_Torappu_Act6FunData.endclz_Torappu_Act6FunData(builder);
}
}
