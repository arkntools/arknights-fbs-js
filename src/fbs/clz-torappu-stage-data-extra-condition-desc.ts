// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_StageData_ExtraConditionDesc implements flatbuffers.IUnpackableObject<clz_Torappu_StageData_ExtraConditionDescT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_StageData_ExtraConditionDesc {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_StageData_ExtraConditionDesc(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_StageData_ExtraConditionDesc):clz_Torappu_StageData_ExtraConditionDesc {
  return (obj || new clz_Torappu_StageData_ExtraConditionDesc()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_StageData_ExtraConditionDesc(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_StageData_ExtraConditionDesc):clz_Torappu_StageData_ExtraConditionDesc {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_StageData_ExtraConditionDesc()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

index():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

template():string|null
template(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
template(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

unlockParam(index: number):string
unlockParam(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
unlockParam(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

unlockParamLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_StageData_ExtraConditionDesc(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addIndex(builder:flatbuffers.Builder, index:number) {
  builder.addFieldInt32(0, index, 0);
}

static addTemplate(builder:flatbuffers.Builder, templateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, templateOffset, 0);
}

static addUnlockParam(builder:flatbuffers.Builder, unlockParamOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, unlockParamOffset, 0);
}

static createUnlockParamVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startUnlockParamVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_StageData_ExtraConditionDesc(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_StageData_ExtraConditionDesc(builder:flatbuffers.Builder, index:number, templateOffset:flatbuffers.Offset, unlockParamOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_StageData_ExtraConditionDesc.startclz_Torappu_StageData_ExtraConditionDesc(builder);
  clz_Torappu_StageData_ExtraConditionDesc.addIndex(builder, index);
  clz_Torappu_StageData_ExtraConditionDesc.addTemplate(builder, templateOffset);
  clz_Torappu_StageData_ExtraConditionDesc.addUnlockParam(builder, unlockParamOffset);
  return clz_Torappu_StageData_ExtraConditionDesc.endclz_Torappu_StageData_ExtraConditionDesc(builder);
}

unpack(): clz_Torappu_StageData_ExtraConditionDescT {
  return new clz_Torappu_StageData_ExtraConditionDescT(
    this.index(),
    this.template(),
    this.bb!.createScalarList<string>(this.unlockParam.bind(this), this.unlockParamLength())
  );
}


unpackTo(_o: clz_Torappu_StageData_ExtraConditionDescT): void {
  _o.index = this.index();
  _o.template = this.template();
  _o.unlockParam = this.bb!.createScalarList<string>(this.unlockParam.bind(this), this.unlockParamLength());
}
}

export class clz_Torappu_StageData_ExtraConditionDescT implements flatbuffers.IGeneratedObject {
constructor(
  public index: number = 0,
  public template: string|Uint8Array|null = null,
  public unlockParam: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const template = (this.template !== null ? builder.createString(this.template!) : 0);
  const unlockParam = clz_Torappu_StageData_ExtraConditionDesc.createUnlockParamVector(builder, builder.createObjectOffsetList(this.unlockParam));

  return clz_Torappu_StageData_ExtraConditionDesc.createclz_Torappu_StageData_ExtraConditionDesc(builder,
    this.index,
    template,
    unlockParam
  );
}
}
