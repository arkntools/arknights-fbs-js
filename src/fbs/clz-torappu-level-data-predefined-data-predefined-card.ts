// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT } from './clz-torappu-blackboard-data-pair.js';
import { clz_Torappu_CharacterData_MasterInfo, clz_Torappu_CharacterData_MasterInfoT } from './clz-torappu-character-data-master-info.js';
import { clz_Torappu_CharacterData_UniqueEquipPair, clz_Torappu_CharacterData_UniqueEquipPairT } from './clz-torappu-character-data-unique-equip-pair.js';
import { clz_Torappu_CharacterInst_Metadata, clz_Torappu_CharacterInst_MetadataT } from './clz-torappu-character-inst-metadata.js';


export class clz_Torappu_LevelData_PredefinedData_PredefinedCard implements flatbuffers.IUnpackableObject<clz_Torappu_LevelData_PredefinedData_PredefinedCardT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_LevelData_PredefinedData_PredefinedCard {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_LevelData_PredefinedData_PredefinedCard(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_LevelData_PredefinedData_PredefinedCard):clz_Torappu_LevelData_PredefinedData_PredefinedCard {
  return (obj || new clz_Torappu_LevelData_PredefinedData_PredefinedCard()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_LevelData_PredefinedData_PredefinedCard(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_LevelData_PredefinedData_PredefinedCard):clz_Torappu_LevelData_PredefinedData_PredefinedCard {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_LevelData_PredefinedData_PredefinedCard()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

hidden():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

alias():string|null
alias(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
alias(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

uniEquipIds(index: number, obj?:clz_Torappu_CharacterData_UniqueEquipPair):clz_Torappu_CharacterData_UniqueEquipPair|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new clz_Torappu_CharacterData_UniqueEquipPair()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

uniEquipIdsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

showSpIllust():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

masterInfos(index: number, obj?:clz_Torappu_CharacterData_MasterInfo):clz_Torappu_CharacterData_MasterInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new clz_Torappu_CharacterData_MasterInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

masterInfosLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

inst(obj?:clz_Torappu_CharacterInst_Metadata):clz_Torappu_CharacterInst_Metadata|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new clz_Torappu_CharacterInst_Metadata()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

skillIndex():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

mainSkillLvl():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

skinId():string|null
skinId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
skinId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

tmplId():string|null
tmplId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
tmplId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

overrideSkillBlackboard(index: number, obj?:clz_Torappu_Blackboard_DataPair):clz_Torappu_Blackboard_DataPair|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? (obj || new clz_Torappu_Blackboard_DataPair()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

overrideSkillBlackboardLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_LevelData_PredefinedData_PredefinedCard(builder:flatbuffers.Builder) {
  builder.startObject(11);
}

static addHidden(builder:flatbuffers.Builder, hidden:boolean) {
  builder.addFieldInt8(0, +hidden, +false);
}

static addAlias(builder:flatbuffers.Builder, aliasOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, aliasOffset, 0);
}

static addUniEquipIds(builder:flatbuffers.Builder, uniEquipIdsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, uniEquipIdsOffset, 0);
}

static createUniEquipIdsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startUniEquipIdsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addShowSpIllust(builder:flatbuffers.Builder, showSpIllust:boolean) {
  builder.addFieldInt8(3, +showSpIllust, +false);
}

static addMasterInfos(builder:flatbuffers.Builder, masterInfosOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, masterInfosOffset, 0);
}

static createMasterInfosVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startMasterInfosVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addInst(builder:flatbuffers.Builder, instOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, instOffset, 0);
}

static addSkillIndex(builder:flatbuffers.Builder, skillIndex:number) {
  builder.addFieldInt32(6, skillIndex, 0);
}

static addMainSkillLvl(builder:flatbuffers.Builder, mainSkillLvl:number) {
  builder.addFieldInt32(7, mainSkillLvl, 0);
}

static addSkinId(builder:flatbuffers.Builder, skinIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, skinIdOffset, 0);
}

static addTmplId(builder:flatbuffers.Builder, tmplIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, tmplIdOffset, 0);
}

static addOverrideSkillBlackboard(builder:flatbuffers.Builder, overrideSkillBlackboardOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, overrideSkillBlackboardOffset, 0);
}

static createOverrideSkillBlackboardVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startOverrideSkillBlackboardVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_LevelData_PredefinedData_PredefinedCard(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_LevelData_PredefinedData_PredefinedCardT {
  return new clz_Torappu_LevelData_PredefinedData_PredefinedCardT(
    this.hidden(),
    this.alias(),
    this.bb!.createObjList<clz_Torappu_CharacterData_UniqueEquipPair, clz_Torappu_CharacterData_UniqueEquipPairT>(this.uniEquipIds.bind(this), this.uniEquipIdsLength()),
    this.showSpIllust(),
    this.bb!.createObjList<clz_Torappu_CharacterData_MasterInfo, clz_Torappu_CharacterData_MasterInfoT>(this.masterInfos.bind(this), this.masterInfosLength()),
    (this.inst() !== null ? this.inst()!.unpack() : null),
    this.skillIndex(),
    this.mainSkillLvl(),
    this.skinId(),
    this.tmplId(),
    this.bb!.createObjList<clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT>(this.overrideSkillBlackboard.bind(this), this.overrideSkillBlackboardLength())
  );
}


unpackTo(_o: clz_Torappu_LevelData_PredefinedData_PredefinedCardT): void {
  _o.hidden = this.hidden();
  _o.alias = this.alias();
  _o.uniEquipIds = this.bb!.createObjList<clz_Torappu_CharacterData_UniqueEquipPair, clz_Torappu_CharacterData_UniqueEquipPairT>(this.uniEquipIds.bind(this), this.uniEquipIdsLength());
  _o.showSpIllust = this.showSpIllust();
  _o.masterInfos = this.bb!.createObjList<clz_Torappu_CharacterData_MasterInfo, clz_Torappu_CharacterData_MasterInfoT>(this.masterInfos.bind(this), this.masterInfosLength());
  _o.inst = (this.inst() !== null ? this.inst()!.unpack() : null);
  _o.skillIndex = this.skillIndex();
  _o.mainSkillLvl = this.mainSkillLvl();
  _o.skinId = this.skinId();
  _o.tmplId = this.tmplId();
  _o.overrideSkillBlackboard = this.bb!.createObjList<clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT>(this.overrideSkillBlackboard.bind(this), this.overrideSkillBlackboardLength());
}
}

export class clz_Torappu_LevelData_PredefinedData_PredefinedCardT implements flatbuffers.IGeneratedObject {
constructor(
  public hidden: boolean = false,
  public alias: string|Uint8Array|null = null,
  public uniEquipIds: (clz_Torappu_CharacterData_UniqueEquipPairT)[] = [],
  public showSpIllust: boolean = false,
  public masterInfos: (clz_Torappu_CharacterData_MasterInfoT)[] = [],
  public inst: clz_Torappu_CharacterInst_MetadataT|null = null,
  public skillIndex: number = 0,
  public mainSkillLvl: number = 0,
  public skinId: string|Uint8Array|null = null,
  public tmplId: string|Uint8Array|null = null,
  public overrideSkillBlackboard: (clz_Torappu_Blackboard_DataPairT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const alias = (this.alias !== null ? builder.createString(this.alias!) : 0);
  const uniEquipIds = clz_Torappu_LevelData_PredefinedData_PredefinedCard.createUniEquipIdsVector(builder, builder.createObjectOffsetList(this.uniEquipIds));
  const masterInfos = clz_Torappu_LevelData_PredefinedData_PredefinedCard.createMasterInfosVector(builder, builder.createObjectOffsetList(this.masterInfos));
  const inst = (this.inst !== null ? this.inst!.pack(builder) : 0);
  const skinId = (this.skinId !== null ? builder.createString(this.skinId!) : 0);
  const tmplId = (this.tmplId !== null ? builder.createString(this.tmplId!) : 0);
  const overrideSkillBlackboard = clz_Torappu_LevelData_PredefinedData_PredefinedCard.createOverrideSkillBlackboardVector(builder, builder.createObjectOffsetList(this.overrideSkillBlackboard));

  clz_Torappu_LevelData_PredefinedData_PredefinedCard.startclz_Torappu_LevelData_PredefinedData_PredefinedCard(builder);
  clz_Torappu_LevelData_PredefinedData_PredefinedCard.addHidden(builder, this.hidden);
  clz_Torappu_LevelData_PredefinedData_PredefinedCard.addAlias(builder, alias);
  clz_Torappu_LevelData_PredefinedData_PredefinedCard.addUniEquipIds(builder, uniEquipIds);
  clz_Torappu_LevelData_PredefinedData_PredefinedCard.addShowSpIllust(builder, this.showSpIllust);
  clz_Torappu_LevelData_PredefinedData_PredefinedCard.addMasterInfos(builder, masterInfos);
  clz_Torappu_LevelData_PredefinedData_PredefinedCard.addInst(builder, inst);
  clz_Torappu_LevelData_PredefinedData_PredefinedCard.addSkillIndex(builder, this.skillIndex);
  clz_Torappu_LevelData_PredefinedData_PredefinedCard.addMainSkillLvl(builder, this.mainSkillLvl);
  clz_Torappu_LevelData_PredefinedData_PredefinedCard.addSkinId(builder, skinId);
  clz_Torappu_LevelData_PredefinedData_PredefinedCard.addTmplId(builder, tmplId);
  clz_Torappu_LevelData_PredefinedData_PredefinedCard.addOverrideSkillBlackboard(builder, overrideSkillBlackboard);

  return clz_Torappu_LevelData_PredefinedData_PredefinedCard.endclz_Torappu_LevelData_PredefinedData_PredefinedCard(builder);
}
}
