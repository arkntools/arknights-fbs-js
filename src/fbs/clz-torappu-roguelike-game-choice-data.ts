// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_RoguelikeChoiceDisplayData, clz_Torappu_RoguelikeChoiceDisplayDataT } from './clz-torappu-roguelike-choice-display-data.js';
import { enum__Torappu_RoguelikeChoiceLeftDecoType } from './enum--torappu-roguelike-choice-left-deco-type.js';
import { enum__Torappu_RoguelikeGameChoiceType } from './enum--torappu-roguelike-game-choice-type.js';


export class clz_Torappu_RoguelikeGameChoiceData implements flatbuffers.IUnpackableObject<clz_Torappu_RoguelikeGameChoiceDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RoguelikeGameChoiceData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RoguelikeGameChoiceData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeGameChoiceData):clz_Torappu_RoguelikeGameChoiceData {
  return (obj || new clz_Torappu_RoguelikeGameChoiceData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RoguelikeGameChoiceData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeGameChoiceData):clz_Torappu_RoguelikeGameChoiceData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RoguelikeGameChoiceData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

title():string|null
title(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
title(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

description():string|null
description(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
description(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

lockedCoverDesc():string|null
lockedCoverDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
lockedCoverDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

type():enum__Torappu_RoguelikeGameChoiceType {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_RoguelikeGameChoiceType.NONE;
}

leftDecoType():enum__Torappu_RoguelikeChoiceLeftDecoType {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_RoguelikeChoiceLeftDecoType.NONE;
}

nextSceneId():string|null
nextSceneId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
nextSceneId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

icon():string|null
icon(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
icon(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

displayData(obj?:clz_Torappu_RoguelikeChoiceDisplayData):clz_Torappu_RoguelikeChoiceDisplayData|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? (obj || new clz_Torappu_RoguelikeChoiceDisplayData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

forceShowWhenOnlyLeave():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startclz_Torappu_RoguelikeGameChoiceData(builder:flatbuffers.Builder) {
  builder.startObject(10);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addTitle(builder:flatbuffers.Builder, titleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, titleOffset, 0);
}

static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, descriptionOffset, 0);
}

static addLockedCoverDesc(builder:flatbuffers.Builder, lockedCoverDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, lockedCoverDescOffset, 0);
}

static addType(builder:flatbuffers.Builder, type:enum__Torappu_RoguelikeGameChoiceType) {
  builder.addFieldInt32(4, type, enum__Torappu_RoguelikeGameChoiceType.NONE);
}

static addLeftDecoType(builder:flatbuffers.Builder, leftDecoType:enum__Torappu_RoguelikeChoiceLeftDecoType) {
  builder.addFieldInt32(5, leftDecoType, enum__Torappu_RoguelikeChoiceLeftDecoType.NONE);
}

static addNextSceneId(builder:flatbuffers.Builder, nextSceneIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, nextSceneIdOffset, 0);
}

static addIcon(builder:flatbuffers.Builder, iconOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, iconOffset, 0);
}

static addDisplayData(builder:flatbuffers.Builder, displayDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, displayDataOffset, 0);
}

static addForceShowWhenOnlyLeave(builder:flatbuffers.Builder, forceShowWhenOnlyLeave:boolean) {
  builder.addFieldInt8(9, +forceShowWhenOnlyLeave, +false);
}

static endclz_Torappu_RoguelikeGameChoiceData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_RoguelikeGameChoiceDataT {
  return new clz_Torappu_RoguelikeGameChoiceDataT(
    this.id(),
    this.title(),
    this.description(),
    this.lockedCoverDesc(),
    this.type(),
    this.leftDecoType(),
    this.nextSceneId(),
    this.icon(),
    (this.displayData() !== null ? this.displayData()!.unpack() : null),
    this.forceShowWhenOnlyLeave()
  );
}


unpackTo(_o: clz_Torappu_RoguelikeGameChoiceDataT): void {
  _o.id = this.id();
  _o.title = this.title();
  _o.description = this.description();
  _o.lockedCoverDesc = this.lockedCoverDesc();
  _o.type = this.type();
  _o.leftDecoType = this.leftDecoType();
  _o.nextSceneId = this.nextSceneId();
  _o.icon = this.icon();
  _o.displayData = (this.displayData() !== null ? this.displayData()!.unpack() : null);
  _o.forceShowWhenOnlyLeave = this.forceShowWhenOnlyLeave();
}
}

export class clz_Torappu_RoguelikeGameChoiceDataT implements flatbuffers.IGeneratedObject {
constructor(
  public id: string|Uint8Array|null = null,
  public title: string|Uint8Array|null = null,
  public description: string|Uint8Array|null = null,
  public lockedCoverDesc: string|Uint8Array|null = null,
  public type: enum__Torappu_RoguelikeGameChoiceType = enum__Torappu_RoguelikeGameChoiceType.NONE,
  public leftDecoType: enum__Torappu_RoguelikeChoiceLeftDecoType = enum__Torappu_RoguelikeChoiceLeftDecoType.NONE,
  public nextSceneId: string|Uint8Array|null = null,
  public icon: string|Uint8Array|null = null,
  public displayData: clz_Torappu_RoguelikeChoiceDisplayDataT|null = null,
  public forceShowWhenOnlyLeave: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const id = (this.id !== null ? builder.createString(this.id!) : 0);
  const title = (this.title !== null ? builder.createString(this.title!) : 0);
  const description = (this.description !== null ? builder.createString(this.description!) : 0);
  const lockedCoverDesc = (this.lockedCoverDesc !== null ? builder.createString(this.lockedCoverDesc!) : 0);
  const nextSceneId = (this.nextSceneId !== null ? builder.createString(this.nextSceneId!) : 0);
  const icon = (this.icon !== null ? builder.createString(this.icon!) : 0);
  const displayData = (this.displayData !== null ? this.displayData!.pack(builder) : 0);

  clz_Torappu_RoguelikeGameChoiceData.startclz_Torappu_RoguelikeGameChoiceData(builder);
  clz_Torappu_RoguelikeGameChoiceData.addId(builder, id);
  clz_Torappu_RoguelikeGameChoiceData.addTitle(builder, title);
  clz_Torappu_RoguelikeGameChoiceData.addDescription(builder, description);
  clz_Torappu_RoguelikeGameChoiceData.addLockedCoverDesc(builder, lockedCoverDesc);
  clz_Torappu_RoguelikeGameChoiceData.addType(builder, this.type);
  clz_Torappu_RoguelikeGameChoiceData.addLeftDecoType(builder, this.leftDecoType);
  clz_Torappu_RoguelikeGameChoiceData.addNextSceneId(builder, nextSceneId);
  clz_Torappu_RoguelikeGameChoiceData.addIcon(builder, icon);
  clz_Torappu_RoguelikeGameChoiceData.addDisplayData(builder, displayData);
  clz_Torappu_RoguelikeGameChoiceData.addForceShowWhenOnlyLeave(builder, this.forceShowWhenOnlyLeave);

  return clz_Torappu_RoguelikeGameChoiceData.endclz_Torappu_RoguelikeGameChoiceData(builder);
}
}
