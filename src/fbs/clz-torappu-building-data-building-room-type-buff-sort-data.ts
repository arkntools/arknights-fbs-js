// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { dict__string__clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData_buffGroupInfo, dict__string__clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData_buffGroupInfoT } from './dict--string--clz-torappu-building-data-building-room-type-buff-sort-data-buff-group-info.js';


export class clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData implements flatbuffers.IUnpackableObject<clz_Torappu_BuildingData_BuildingRoomTypeBuffSortDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_BuildingData_BuildingRoomTypeBuffSortData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData):clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData {
  return (obj || new clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_BuildingData_BuildingRoomTypeBuffSortData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData):clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

hasEfficiencySort():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

defaultGroupSortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

efficiencyTargetDict(index: number, obj?:dict__string__clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData_buffGroupInfo):dict__string__clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData_buffGroupInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new dict__string__clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData_buffGroupInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

efficiencyTargetDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_BuildingData_BuildingRoomTypeBuffSortData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addHasEfficiencySort(builder:flatbuffers.Builder, hasEfficiencySort:boolean) {
  builder.addFieldInt8(0, +hasEfficiencySort, +false);
}

static addDefaultGroupSortId(builder:flatbuffers.Builder, defaultGroupSortId:number) {
  builder.addFieldInt32(1, defaultGroupSortId, 0);
}

static addEfficiencyTargetDict(builder:flatbuffers.Builder, efficiencyTargetDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, efficiencyTargetDictOffset, 0);
}

static createEfficiencyTargetDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEfficiencyTargetDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_BuildingData_BuildingRoomTypeBuffSortData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_BuildingData_BuildingRoomTypeBuffSortData(builder:flatbuffers.Builder, hasEfficiencySort:boolean, defaultGroupSortId:number, efficiencyTargetDictOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData.startclz_Torappu_BuildingData_BuildingRoomTypeBuffSortData(builder);
  clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData.addHasEfficiencySort(builder, hasEfficiencySort);
  clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData.addDefaultGroupSortId(builder, defaultGroupSortId);
  clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData.addEfficiencyTargetDict(builder, efficiencyTargetDictOffset);
  return clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData.endclz_Torappu_BuildingData_BuildingRoomTypeBuffSortData(builder);
}

unpack(): clz_Torappu_BuildingData_BuildingRoomTypeBuffSortDataT {
  return new clz_Torappu_BuildingData_BuildingRoomTypeBuffSortDataT(
    this.hasEfficiencySort(),
    this.defaultGroupSortId(),
    this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData_buffGroupInfo, dict__string__clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData_buffGroupInfoT>(this.efficiencyTargetDict.bind(this), this.efficiencyTargetDictLength())
  );
}


unpackTo(_o: clz_Torappu_BuildingData_BuildingRoomTypeBuffSortDataT): void {
  _o.hasEfficiencySort = this.hasEfficiencySort();
  _o.defaultGroupSortId = this.defaultGroupSortId();
  _o.efficiencyTargetDict = this.bb!.createObjList<dict__string__clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData_buffGroupInfo, dict__string__clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData_buffGroupInfoT>(this.efficiencyTargetDict.bind(this), this.efficiencyTargetDictLength());
}
}

export class clz_Torappu_BuildingData_BuildingRoomTypeBuffSortDataT implements flatbuffers.IGeneratedObject {
constructor(
  public hasEfficiencySort: boolean = false,
  public defaultGroupSortId: number = 0,
  public efficiencyTargetDict: (dict__string__clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData_buffGroupInfoT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const efficiencyTargetDict = clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData.createEfficiencyTargetDictVector(builder, builder.createObjectOffsetList(this.efficiencyTargetDict));

  return clz_Torappu_BuildingData_BuildingRoomTypeBuffSortData.createclz_Torappu_BuildingData_BuildingRoomTypeBuffSortData(builder,
    this.hasEfficiencySort,
    this.defaultGroupSortId,
    efficiencyTargetDict
  );
}
}
