// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT } from './clz-torappu-blackboard-data-pair.js';
import { enum__Torappu_PlayerSideMask } from './enum--torappu-player-side-mask.js';
import { enum__Torappu_ProfessionCategory } from './enum--torappu-profession-category.js';


export class clz_Torappu_LevelData_GlobalBuffData implements flatbuffers.IUnpackableObject<clz_Torappu_LevelData_GlobalBuffDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_LevelData_GlobalBuffData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_LevelData_GlobalBuffData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_LevelData_GlobalBuffData):clz_Torappu_LevelData_GlobalBuffData {
  return (obj || new clz_Torappu_LevelData_GlobalBuffData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_LevelData_GlobalBuffData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_LevelData_GlobalBuffData):clz_Torappu_LevelData_GlobalBuffData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_LevelData_GlobalBuffData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

prefabKey():string|null
prefabKey(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
prefabKey(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

blackboard(index: number, obj?:clz_Torappu_Blackboard_DataPair):clz_Torappu_Blackboard_DataPair|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new clz_Torappu_Blackboard_DataPair()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

blackboardLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

overrideCameraEffect():string|null
overrideCameraEffect(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
overrideCameraEffect(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

passProfessionMaskFlag():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

professionMask():enum__Torappu_ProfessionCategory {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_ProfessionCategory.NONE;
}

playerSideMask():enum__Torappu_PlayerSideMask {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : enum__Torappu_PlayerSideMask.ALL;
}

static startclz_Torappu_LevelData_GlobalBuffData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addPrefabKey(builder:flatbuffers.Builder, prefabKeyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, prefabKeyOffset, 0);
}

static addBlackboard(builder:flatbuffers.Builder, blackboardOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, blackboardOffset, 0);
}

static createBlackboardVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBlackboardVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addOverrideCameraEffect(builder:flatbuffers.Builder, overrideCameraEffectOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, overrideCameraEffectOffset, 0);
}

static addPassProfessionMaskFlag(builder:flatbuffers.Builder, passProfessionMaskFlag:boolean) {
  builder.addFieldInt8(3, +passProfessionMaskFlag, +false);
}

static addProfessionMask(builder:flatbuffers.Builder, professionMask:enum__Torappu_ProfessionCategory) {
  builder.addFieldInt32(4, professionMask, enum__Torappu_ProfessionCategory.NONE);
}

static addPlayerSideMask(builder:flatbuffers.Builder, playerSideMask:enum__Torappu_PlayerSideMask) {
  builder.addFieldInt8(5, playerSideMask, enum__Torappu_PlayerSideMask.ALL);
}

static endclz_Torappu_LevelData_GlobalBuffData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_LevelData_GlobalBuffData(builder:flatbuffers.Builder, prefabKeyOffset:flatbuffers.Offset, blackboardOffset:flatbuffers.Offset, overrideCameraEffectOffset:flatbuffers.Offset, passProfessionMaskFlag:boolean, professionMask:enum__Torappu_ProfessionCategory, playerSideMask:enum__Torappu_PlayerSideMask):flatbuffers.Offset {
  clz_Torappu_LevelData_GlobalBuffData.startclz_Torappu_LevelData_GlobalBuffData(builder);
  clz_Torappu_LevelData_GlobalBuffData.addPrefabKey(builder, prefabKeyOffset);
  clz_Torappu_LevelData_GlobalBuffData.addBlackboard(builder, blackboardOffset);
  clz_Torappu_LevelData_GlobalBuffData.addOverrideCameraEffect(builder, overrideCameraEffectOffset);
  clz_Torappu_LevelData_GlobalBuffData.addPassProfessionMaskFlag(builder, passProfessionMaskFlag);
  clz_Torappu_LevelData_GlobalBuffData.addProfessionMask(builder, professionMask);
  clz_Torappu_LevelData_GlobalBuffData.addPlayerSideMask(builder, playerSideMask);
  return clz_Torappu_LevelData_GlobalBuffData.endclz_Torappu_LevelData_GlobalBuffData(builder);
}

unpack(): clz_Torappu_LevelData_GlobalBuffDataT {
  return new clz_Torappu_LevelData_GlobalBuffDataT(
    this.prefabKey(),
    this.bb!.createObjList<clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT>(this.blackboard.bind(this), this.blackboardLength()),
    this.overrideCameraEffect(),
    this.passProfessionMaskFlag(),
    this.professionMask(),
    this.playerSideMask()
  );
}


unpackTo(_o: clz_Torappu_LevelData_GlobalBuffDataT): void {
  _o.prefabKey = this.prefabKey();
  _o.blackboard = this.bb!.createObjList<clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT>(this.blackboard.bind(this), this.blackboardLength());
  _o.overrideCameraEffect = this.overrideCameraEffect();
  _o.passProfessionMaskFlag = this.passProfessionMaskFlag();
  _o.professionMask = this.professionMask();
  _o.playerSideMask = this.playerSideMask();
}
}

export class clz_Torappu_LevelData_GlobalBuffDataT implements flatbuffers.IGeneratedObject {
constructor(
  public prefabKey: string|Uint8Array|null = null,
  public blackboard: (clz_Torappu_Blackboard_DataPairT)[] = [],
  public overrideCameraEffect: string|Uint8Array|null = null,
  public passProfessionMaskFlag: boolean = false,
  public professionMask: enum__Torappu_ProfessionCategory = enum__Torappu_ProfessionCategory.NONE,
  public playerSideMask: enum__Torappu_PlayerSideMask = enum__Torappu_PlayerSideMask.ALL
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const prefabKey = (this.prefabKey !== null ? builder.createString(this.prefabKey!) : 0);
  const blackboard = clz_Torappu_LevelData_GlobalBuffData.createBlackboardVector(builder, builder.createObjectOffsetList(this.blackboard));
  const overrideCameraEffect = (this.overrideCameraEffect !== null ? builder.createString(this.overrideCameraEffect!) : 0);

  return clz_Torappu_LevelData_GlobalBuffData.createclz_Torappu_LevelData_GlobalBuffData(builder,
    prefabKey,
    blackboard,
    overrideCameraEffect,
    this.passProfessionMaskFlag,
    this.professionMask,
    this.playerSideMask
  );
}
}
