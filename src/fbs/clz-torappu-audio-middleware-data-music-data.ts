// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_Audio_Middleware_Data_MusicData implements flatbuffers.IUnpackableObject<clz_Torappu_Audio_Middleware_Data_MusicDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Audio_Middleware_Data_MusicData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Audio_Middleware_Data_MusicData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Audio_Middleware_Data_MusicData):clz_Torappu_Audio_Middleware_Data_MusicData {
  return (obj || new clz_Torappu_Audio_Middleware_Data_MusicData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Audio_Middleware_Data_MusicData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Audio_Middleware_Data_MusicData):clz_Torappu_Audio_Middleware_Data_MusicData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Audio_Middleware_Data_MusicData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

bank():string|null
bank(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
bank(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_Audio_Middleware_Data_MusicData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nameOffset, 0);
}

static addBank(builder:flatbuffers.Builder, bankOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, bankOffset, 0);
}

static endclz_Torappu_Audio_Middleware_Data_MusicData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Audio_Middleware_Data_MusicData(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset, nameOffset:flatbuffers.Offset, bankOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_Audio_Middleware_Data_MusicData.startclz_Torappu_Audio_Middleware_Data_MusicData(builder);
  clz_Torappu_Audio_Middleware_Data_MusicData.addId(builder, idOffset);
  clz_Torappu_Audio_Middleware_Data_MusicData.addName(builder, nameOffset);
  clz_Torappu_Audio_Middleware_Data_MusicData.addBank(builder, bankOffset);
  return clz_Torappu_Audio_Middleware_Data_MusicData.endclz_Torappu_Audio_Middleware_Data_MusicData(builder);
}

unpack(): clz_Torappu_Audio_Middleware_Data_MusicDataT {
  return new clz_Torappu_Audio_Middleware_Data_MusicDataT(
    this.id(),
    this.name(),
    this.bank()
  );
}


unpackTo(_o: clz_Torappu_Audio_Middleware_Data_MusicDataT): void {
  _o.id = this.id();
  _o.name = this.name();
  _o.bank = this.bank();
}
}

export class clz_Torappu_Audio_Middleware_Data_MusicDataT implements flatbuffers.IGeneratedObject {
constructor(
  public id: string|Uint8Array|null = null,
  public name: string|Uint8Array|null = null,
  public bank: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const id = (this.id !== null ? builder.createString(this.id!) : 0);
  const name = (this.name !== null ? builder.createString(this.name!) : 0);
  const bank = (this.bank !== null ? builder.createString(this.bank!) : 0);

  return clz_Torappu_Audio_Middleware_Data_MusicData.createclz_Torappu_Audio_Middleware_Data_MusicData(builder,
    id,
    name,
    bank
  );
}
}
