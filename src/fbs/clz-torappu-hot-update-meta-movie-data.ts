// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_HotUpdateMetaMovieData implements flatbuffers.IUnpackableObject<clz_Torappu_HotUpdateMetaMovieDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_HotUpdateMetaMovieData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_HotUpdateMetaMovieData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_HotUpdateMetaMovieData):clz_Torappu_HotUpdateMetaMovieData {
  return (obj || new clz_Torappu_HotUpdateMetaMovieData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_HotUpdateMetaMovieData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_HotUpdateMetaMovieData):clz_Torappu_HotUpdateMetaMovieData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_HotUpdateMetaMovieData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

videoId():string|null
videoId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
videoId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

videoPath():string|null
videoPath(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
videoPath(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

endTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_HotUpdateMetaMovieData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addVideoId(builder:flatbuffers.Builder, videoIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, videoIdOffset, 0);
}

static addVideoPath(builder:flatbuffers.Builder, videoPathOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, videoPathOffset, 0);
}

static addEndTime(builder:flatbuffers.Builder, endTime:bigint) {
  builder.addFieldInt64(2, endTime, BigInt('0'));
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(3, sortId, 0);
}

static endclz_Torappu_HotUpdateMetaMovieData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_HotUpdateMetaMovieData(builder:flatbuffers.Builder, videoIdOffset:flatbuffers.Offset, videoPathOffset:flatbuffers.Offset, endTime:bigint, sortId:number):flatbuffers.Offset {
  clz_Torappu_HotUpdateMetaMovieData.startclz_Torappu_HotUpdateMetaMovieData(builder);
  clz_Torappu_HotUpdateMetaMovieData.addVideoId(builder, videoIdOffset);
  clz_Torappu_HotUpdateMetaMovieData.addVideoPath(builder, videoPathOffset);
  clz_Torappu_HotUpdateMetaMovieData.addEndTime(builder, endTime);
  clz_Torappu_HotUpdateMetaMovieData.addSortId(builder, sortId);
  return clz_Torappu_HotUpdateMetaMovieData.endclz_Torappu_HotUpdateMetaMovieData(builder);
}

unpack(): clz_Torappu_HotUpdateMetaMovieDataT {
  return new clz_Torappu_HotUpdateMetaMovieDataT(
    this.videoId(),
    this.videoPath(),
    this.endTime(),
    this.sortId()
  );
}


unpackTo(_o: clz_Torappu_HotUpdateMetaMovieDataT): void {
  _o.videoId = this.videoId();
  _o.videoPath = this.videoPath();
  _o.endTime = this.endTime();
  _o.sortId = this.sortId();
}
}

export class clz_Torappu_HotUpdateMetaMovieDataT implements flatbuffers.IGeneratedObject {
constructor(
  public videoId: string|Uint8Array|null = null,
  public videoPath: string|Uint8Array|null = null,
  public endTime: bigint = BigInt('0'),
  public sortId: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const videoId = (this.videoId !== null ? builder.createString(this.videoId!) : 0);
  const videoPath = (this.videoPath !== null ? builder.createString(this.videoPath!) : 0);

  return clz_Torappu_HotUpdateMetaMovieData.createclz_Torappu_HotUpdateMetaMovieData(builder,
    videoId,
    videoPath,
    this.endTime,
    this.sortId
  );
}
}
