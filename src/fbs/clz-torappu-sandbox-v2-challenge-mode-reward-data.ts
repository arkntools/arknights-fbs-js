// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT } from './clz-torappu-item-bundle.js';


export class clz_Torappu_SandboxV2ChallengeModeRewardData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxV2ChallengeModeRewardDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxV2ChallengeModeRewardData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxV2ChallengeModeRewardData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2ChallengeModeRewardData):clz_Torappu_SandboxV2ChallengeModeRewardData {
  return (obj || new clz_Torappu_SandboxV2ChallengeModeRewardData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxV2ChallengeModeRewardData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2ChallengeModeRewardData):clz_Torappu_SandboxV2ChallengeModeRewardData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxV2ChallengeModeRewardData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

rewardId():string|null
rewardId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
rewardId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

rewardDay():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

rewardItemList(index: number, obj?:clz_Torappu_ItemBundle):clz_Torappu_ItemBundle|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_Torappu_ItemBundle()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

rewardItemListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SandboxV2ChallengeModeRewardData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addRewardId(builder:flatbuffers.Builder, rewardIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, rewardIdOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(1, sortId, 0);
}

static addRewardDay(builder:flatbuffers.Builder, rewardDay:number) {
  builder.addFieldInt32(2, rewardDay, 0);
}

static addRewardItemList(builder:flatbuffers.Builder, rewardItemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, rewardItemListOffset, 0);
}

static createRewardItemListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRewardItemListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_SandboxV2ChallengeModeRewardData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxV2ChallengeModeRewardData(builder:flatbuffers.Builder, rewardIdOffset:flatbuffers.Offset, sortId:number, rewardDay:number, rewardItemListOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SandboxV2ChallengeModeRewardData.startclz_Torappu_SandboxV2ChallengeModeRewardData(builder);
  clz_Torappu_SandboxV2ChallengeModeRewardData.addRewardId(builder, rewardIdOffset);
  clz_Torappu_SandboxV2ChallengeModeRewardData.addSortId(builder, sortId);
  clz_Torappu_SandboxV2ChallengeModeRewardData.addRewardDay(builder, rewardDay);
  clz_Torappu_SandboxV2ChallengeModeRewardData.addRewardItemList(builder, rewardItemListOffset);
  return clz_Torappu_SandboxV2ChallengeModeRewardData.endclz_Torappu_SandboxV2ChallengeModeRewardData(builder);
}

unpack(): clz_Torappu_SandboxV2ChallengeModeRewardDataT {
  return new clz_Torappu_SandboxV2ChallengeModeRewardDataT(
    this.rewardId(),
    this.sortId(),
    this.rewardDay(),
    this.bb!.createObjList<clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT>(this.rewardItemList.bind(this), this.rewardItemListLength())
  );
}


unpackTo(_o: clz_Torappu_SandboxV2ChallengeModeRewardDataT): void {
  _o.rewardId = this.rewardId();
  _o.sortId = this.sortId();
  _o.rewardDay = this.rewardDay();
  _o.rewardItemList = this.bb!.createObjList<clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT>(this.rewardItemList.bind(this), this.rewardItemListLength());
}
}

export class clz_Torappu_SandboxV2ChallengeModeRewardDataT implements flatbuffers.IGeneratedObject {
constructor(
  public rewardId: string|Uint8Array|null = null,
  public sortId: number = 0,
  public rewardDay: number = 0,
  public rewardItemList: (clz_Torappu_ItemBundleT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const rewardId = (this.rewardId !== null ? builder.createString(this.rewardId!) : 0);
  const rewardItemList = clz_Torappu_SandboxV2ChallengeModeRewardData.createRewardItemListVector(builder, builder.createObjectOffsetList(this.rewardItemList));

  return clz_Torappu_SandboxV2ChallengeModeRewardData.createclz_Torappu_SandboxV2ChallengeModeRewardData(builder,
    rewardId,
    this.sortId,
    this.rewardDay,
    rewardItemList
  );
}
}
