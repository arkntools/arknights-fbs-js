// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_ChainLoginData, clz_Torappu_ChainLoginDataT } from './clz-torappu-chain-login-data.js';
import { clz_Torappu_MissionData, clz_Torappu_MissionDataT } from './clz-torappu-mission-data.js';
import { clz_Torappu_MissionGroup, clz_Torappu_MissionGroupT } from './clz-torappu-mission-group.js';
import { clz_Torappu_TotalCheckinData, clz_Torappu_TotalCheckinDataT } from './clz-torappu-total-checkin-data.js';


export class clz_Torappu_OpenServerData implements flatbuffers.IUnpackableObject<clz_Torappu_OpenServerDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_OpenServerData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_OpenServerData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_OpenServerData):clz_Torappu_OpenServerData {
  return (obj || new clz_Torappu_OpenServerData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_OpenServerData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_OpenServerData):clz_Torappu_OpenServerData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_OpenServerData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

openServerMissionGroup(obj?:clz_Torappu_MissionGroup):clz_Torappu_MissionGroup|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new clz_Torappu_MissionGroup()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

openServerMissionData(index: number, obj?:clz_Torappu_MissionData):clz_Torappu_MissionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new clz_Torappu_MissionData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

openServerMissionDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

checkInData(index: number, obj?:clz_Torappu_TotalCheckinData):clz_Torappu_TotalCheckinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new clz_Torappu_TotalCheckinData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

checkInDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

chainLoginData(index: number, obj?:clz_Torappu_ChainLoginData):clz_Torappu_ChainLoginData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_Torappu_ChainLoginData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

chainLoginDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

totalCheckinCharData(index: number):string
totalCheckinCharData(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
totalCheckinCharData(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

totalCheckinCharDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

chainLoginCharData(index: number):string
chainLoginCharData(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
chainLoginCharData(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

chainLoginCharDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_OpenServerData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addOpenServerMissionGroup(builder:flatbuffers.Builder, openServerMissionGroupOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, openServerMissionGroupOffset, 0);
}

static addOpenServerMissionData(builder:flatbuffers.Builder, openServerMissionDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, openServerMissionDataOffset, 0);
}

static createOpenServerMissionDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startOpenServerMissionDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCheckInData(builder:flatbuffers.Builder, checkInDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, checkInDataOffset, 0);
}

static createCheckInDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCheckInDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addChainLoginData(builder:flatbuffers.Builder, chainLoginDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, chainLoginDataOffset, 0);
}

static createChainLoginDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startChainLoginDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTotalCheckinCharData(builder:flatbuffers.Builder, totalCheckinCharDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, totalCheckinCharDataOffset, 0);
}

static createTotalCheckinCharDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTotalCheckinCharDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addChainLoginCharData(builder:flatbuffers.Builder, chainLoginCharDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, chainLoginCharDataOffset, 0);
}

static createChainLoginCharDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startChainLoginCharDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_OpenServerData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_OpenServerData(builder:flatbuffers.Builder, openServerMissionGroupOffset:flatbuffers.Offset, openServerMissionDataOffset:flatbuffers.Offset, checkInDataOffset:flatbuffers.Offset, chainLoginDataOffset:flatbuffers.Offset, totalCheckinCharDataOffset:flatbuffers.Offset, chainLoginCharDataOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_OpenServerData.startclz_Torappu_OpenServerData(builder);
  clz_Torappu_OpenServerData.addOpenServerMissionGroup(builder, openServerMissionGroupOffset);
  clz_Torappu_OpenServerData.addOpenServerMissionData(builder, openServerMissionDataOffset);
  clz_Torappu_OpenServerData.addCheckInData(builder, checkInDataOffset);
  clz_Torappu_OpenServerData.addChainLoginData(builder, chainLoginDataOffset);
  clz_Torappu_OpenServerData.addTotalCheckinCharData(builder, totalCheckinCharDataOffset);
  clz_Torappu_OpenServerData.addChainLoginCharData(builder, chainLoginCharDataOffset);
  return clz_Torappu_OpenServerData.endclz_Torappu_OpenServerData(builder);
}

unpack(): clz_Torappu_OpenServerDataT {
  return new clz_Torappu_OpenServerDataT(
    (this.openServerMissionGroup() !== null ? this.openServerMissionGroup()!.unpack() : null),
    this.bb!.createObjList<clz_Torappu_MissionData, clz_Torappu_MissionDataT>(this.openServerMissionData.bind(this), this.openServerMissionDataLength()),
    this.bb!.createObjList<clz_Torappu_TotalCheckinData, clz_Torappu_TotalCheckinDataT>(this.checkInData.bind(this), this.checkInDataLength()),
    this.bb!.createObjList<clz_Torappu_ChainLoginData, clz_Torappu_ChainLoginDataT>(this.chainLoginData.bind(this), this.chainLoginDataLength()),
    this.bb!.createScalarList<string>(this.totalCheckinCharData.bind(this), this.totalCheckinCharDataLength()),
    this.bb!.createScalarList<string>(this.chainLoginCharData.bind(this), this.chainLoginCharDataLength())
  );
}


unpackTo(_o: clz_Torappu_OpenServerDataT): void {
  _o.openServerMissionGroup = (this.openServerMissionGroup() !== null ? this.openServerMissionGroup()!.unpack() : null);
  _o.openServerMissionData = this.bb!.createObjList<clz_Torappu_MissionData, clz_Torappu_MissionDataT>(this.openServerMissionData.bind(this), this.openServerMissionDataLength());
  _o.checkInData = this.bb!.createObjList<clz_Torappu_TotalCheckinData, clz_Torappu_TotalCheckinDataT>(this.checkInData.bind(this), this.checkInDataLength());
  _o.chainLoginData = this.bb!.createObjList<clz_Torappu_ChainLoginData, clz_Torappu_ChainLoginDataT>(this.chainLoginData.bind(this), this.chainLoginDataLength());
  _o.totalCheckinCharData = this.bb!.createScalarList<string>(this.totalCheckinCharData.bind(this), this.totalCheckinCharDataLength());
  _o.chainLoginCharData = this.bb!.createScalarList<string>(this.chainLoginCharData.bind(this), this.chainLoginCharDataLength());
}
}

export class clz_Torappu_OpenServerDataT implements flatbuffers.IGeneratedObject {
constructor(
  public openServerMissionGroup: clz_Torappu_MissionGroupT|null = null,
  public openServerMissionData: (clz_Torappu_MissionDataT)[] = [],
  public checkInData: (clz_Torappu_TotalCheckinDataT)[] = [],
  public chainLoginData: (clz_Torappu_ChainLoginDataT)[] = [],
  public totalCheckinCharData: (string)[] = [],
  public chainLoginCharData: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const openServerMissionGroup = (this.openServerMissionGroup !== null ? this.openServerMissionGroup!.pack(builder) : 0);
  const openServerMissionData = clz_Torappu_OpenServerData.createOpenServerMissionDataVector(builder, builder.createObjectOffsetList(this.openServerMissionData));
  const checkInData = clz_Torappu_OpenServerData.createCheckInDataVector(builder, builder.createObjectOffsetList(this.checkInData));
  const chainLoginData = clz_Torappu_OpenServerData.createChainLoginDataVector(builder, builder.createObjectOffsetList(this.chainLoginData));
  const totalCheckinCharData = clz_Torappu_OpenServerData.createTotalCheckinCharDataVector(builder, builder.createObjectOffsetList(this.totalCheckinCharData));
  const chainLoginCharData = clz_Torappu_OpenServerData.createChainLoginCharDataVector(builder, builder.createObjectOffsetList(this.chainLoginCharData));

  return clz_Torappu_OpenServerData.createclz_Torappu_OpenServerData(builder,
    openServerMissionGroup,
    openServerMissionData,
    checkInData,
    chainLoginData,
    totalCheckinCharData,
    chainLoginCharData
  );
}
}
