// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_ClimbTowerTaticalBuffType } from './enum--torappu-climb-tower-tatical-buff-type.js';
import { enum__Torappu_ProfessionCategory } from './enum--torappu-profession-category.js';


export class clz_Torappu_ClimbTowerTacticalBuffData implements flatbuffers.IUnpackableObject<clz_Torappu_ClimbTowerTacticalBuffDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ClimbTowerTacticalBuffData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ClimbTowerTacticalBuffData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ClimbTowerTacticalBuffData):clz_Torappu_ClimbTowerTacticalBuffData {
  return (obj || new clz_Torappu_ClimbTowerTacticalBuffData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ClimbTowerTacticalBuffData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ClimbTowerTacticalBuffData):clz_Torappu_ClimbTowerTacticalBuffData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ClimbTowerTacticalBuffData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

desc():string|null
desc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
desc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

profession():enum__Torappu_ProfessionCategory {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_ProfessionCategory.NONE;
}

isDefaultActive():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

buffType():enum__Torappu_ClimbTowerTaticalBuffType {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_ClimbTowerTaticalBuffType.A;
}

static startclz_Torappu_ClimbTowerTacticalBuffData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addDesc(builder:flatbuffers.Builder, descOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, descOffset, 0);
}

static addProfession(builder:flatbuffers.Builder, profession:enum__Torappu_ProfessionCategory) {
  builder.addFieldInt32(2, profession, enum__Torappu_ProfessionCategory.NONE);
}

static addIsDefaultActive(builder:flatbuffers.Builder, isDefaultActive:boolean) {
  builder.addFieldInt8(3, +isDefaultActive, +false);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(4, sortId, 0);
}

static addBuffType(builder:flatbuffers.Builder, buffType:enum__Torappu_ClimbTowerTaticalBuffType) {
  builder.addFieldInt32(5, buffType, enum__Torappu_ClimbTowerTaticalBuffType.A);
}

static endclz_Torappu_ClimbTowerTacticalBuffData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ClimbTowerTacticalBuffData(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset, descOffset:flatbuffers.Offset, profession:enum__Torappu_ProfessionCategory, isDefaultActive:boolean, sortId:number, buffType:enum__Torappu_ClimbTowerTaticalBuffType):flatbuffers.Offset {
  clz_Torappu_ClimbTowerTacticalBuffData.startclz_Torappu_ClimbTowerTacticalBuffData(builder);
  clz_Torappu_ClimbTowerTacticalBuffData.addId(builder, idOffset);
  clz_Torappu_ClimbTowerTacticalBuffData.addDesc(builder, descOffset);
  clz_Torappu_ClimbTowerTacticalBuffData.addProfession(builder, profession);
  clz_Torappu_ClimbTowerTacticalBuffData.addIsDefaultActive(builder, isDefaultActive);
  clz_Torappu_ClimbTowerTacticalBuffData.addSortId(builder, sortId);
  clz_Torappu_ClimbTowerTacticalBuffData.addBuffType(builder, buffType);
  return clz_Torappu_ClimbTowerTacticalBuffData.endclz_Torappu_ClimbTowerTacticalBuffData(builder);
}

unpack(): clz_Torappu_ClimbTowerTacticalBuffDataT {
  return new clz_Torappu_ClimbTowerTacticalBuffDataT(
    this.id(),
    this.desc(),
    this.profession(),
    this.isDefaultActive(),
    this.sortId(),
    this.buffType()
  );
}


unpackTo(_o: clz_Torappu_ClimbTowerTacticalBuffDataT): void {
  _o.id = this.id();
  _o.desc = this.desc();
  _o.profession = this.profession();
  _o.isDefaultActive = this.isDefaultActive();
  _o.sortId = this.sortId();
  _o.buffType = this.buffType();
}
}

export class clz_Torappu_ClimbTowerTacticalBuffDataT implements flatbuffers.IGeneratedObject {
constructor(
  public id: string|Uint8Array|null = null,
  public desc: string|Uint8Array|null = null,
  public profession: enum__Torappu_ProfessionCategory = enum__Torappu_ProfessionCategory.NONE,
  public isDefaultActive: boolean = false,
  public sortId: number = 0,
  public buffType: enum__Torappu_ClimbTowerTaticalBuffType = enum__Torappu_ClimbTowerTaticalBuffType.A
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const id = (this.id !== null ? builder.createString(this.id!) : 0);
  const desc = (this.desc !== null ? builder.createString(this.desc!) : 0);

  return clz_Torappu_ClimbTowerTacticalBuffData.createclz_Torappu_ClimbTowerTacticalBuffData(builder,
    id,
    desc,
    this.profession,
    this.isDefaultActive,
    this.sortId,
    this.buffType
  );
}
}
