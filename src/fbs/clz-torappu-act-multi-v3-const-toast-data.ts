// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActMultiV3ConstToastData implements flatbuffers.IUnpackableObject<clz_Torappu_ActMultiV3ConstToastDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActMultiV3ConstToastData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActMultiV3ConstToastData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActMultiV3ConstToastData):clz_Torappu_ActMultiV3ConstToastData {
  return (obj || new clz_Torappu_ActMultiV3ConstToastData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActMultiV3ConstToastData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActMultiV3ConstToastData):clz_Torappu_ActMultiV3ConstToastData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActMultiV3ConstToastData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

noRoom():string|null
noRoom(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
noRoom(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

fullRoom():string|null
fullRoom(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
fullRoom(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

roomIdFormatError():string|null
roomIdFormatError(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
roomIdFormatError(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

roomIdCopySuccess():string|null
roomIdCopySuccess(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
roomIdCopySuccess(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

banned():string|null
banned(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
banned(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

serverOverload():string|null
serverOverload(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
serverOverload(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

matchAliveFailed():string|null
matchAliveFailed(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
matchAliveFailed(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

createRoomAliveFailed():string|null
createRoomAliveFailed(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
createRoomAliveFailed(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

joinRoomAliveFailed():string|null
joinRoomAliveFailed(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
joinRoomAliveFailed(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

roomOwnerReviseMap():string|null
roomOwnerReviseMap(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
roomOwnerReviseMap(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

roomCollaboratorReviseMap():string|null
roomCollaboratorReviseMap(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
roomCollaboratorReviseMap(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

roomCollaboratorJoinRoom():string|null
roomCollaboratorJoinRoom(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
roomCollaboratorJoinRoom(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

roomCollaboratorExitRoom():string|null
roomCollaboratorExitRoom(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
roomCollaboratorExitRoom(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

roomOwnerReviseMode():string|null
roomOwnerReviseMode(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
roomOwnerReviseMode(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

roomCollaboratorReviseMode():string|null
roomCollaboratorReviseMode(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
roomCollaboratorReviseMode(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

continuousClicks():string|null
continuousClicks(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
continuousClicks(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

matchNoProject():string|null
matchNoProject(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
matchNoProject(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

otherModeTrainingLock():string|null
otherModeTrainingLock(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
otherModeTrainingLock(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 38);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

teamLock():string|null
teamLock(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamLock(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

mentorLockTips():string|null
mentorLockTips(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
mentorLockTips(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

unlockMentorInMatch():string|null
unlockMentorInMatch(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
unlockMentorInMatch(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 44);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

unlockInverseMode():string|null
unlockInverseMode(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
unlockInverseMode(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 46);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

unlockNewMapType():string|null
unlockNewMapType(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
unlockNewMapType(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 48);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

teamFullLow():string|null
teamFullLow(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamFullLow(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 50);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

teamFullHigh():string|null
teamFullHigh(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamFullHigh(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 52);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

difficultUnlock():string|null
difficultUnlock(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
difficultUnlock(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 54);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

weeklyAlbumTimeUnlock():string|null
weeklyAlbumTimeUnlock(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
weeklyAlbumTimeUnlock(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 56);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

weeklyAlbumCommitUnlock():string|null
weeklyAlbumCommitUnlock(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
weeklyAlbumCommitUnlock(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 58);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

squadLockHint():string|null
squadLockHint(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
squadLockHint(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 60);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

squadEffectEditHint():string|null
squadEffectEditHint(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
squadEffectEditHint(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 62);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

inverseModeUnlockHint():string|null
inverseModeUnlockHint(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
inverseModeUnlockHint(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 64);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

noPhotoInTemplateHint():string|null
noPhotoInTemplateHint(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
noPhotoInTemplateHint(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 66);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

cannotResubmitHint():string|null
cannotResubmitHint(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
cannotResubmitHint(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 68);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

cannotSaveTitleChange():string|null
cannotSaveTitleChange(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
cannotSaveTitleChange(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 70);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

matchPrepareRoomClose():string|null
matchPrepareRoomClose(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
matchPrepareRoomClose(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 72);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

stageListViewTimeLockToast():string|null
stageListViewTimeLockToast(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
stageListViewTimeLockToast(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 74);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_ActMultiV3ConstToastData(builder:flatbuffers.Builder) {
  builder.startObject(36);
}

static addNoRoom(builder:flatbuffers.Builder, noRoomOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, noRoomOffset, 0);
}

static addFullRoom(builder:flatbuffers.Builder, fullRoomOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, fullRoomOffset, 0);
}

static addRoomIdFormatError(builder:flatbuffers.Builder, roomIdFormatErrorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, roomIdFormatErrorOffset, 0);
}

static addRoomIdCopySuccess(builder:flatbuffers.Builder, roomIdCopySuccessOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, roomIdCopySuccessOffset, 0);
}

static addBanned(builder:flatbuffers.Builder, bannedOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, bannedOffset, 0);
}

static addServerOverload(builder:flatbuffers.Builder, serverOverloadOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, serverOverloadOffset, 0);
}

static addMatchAliveFailed(builder:flatbuffers.Builder, matchAliveFailedOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, matchAliveFailedOffset, 0);
}

static addCreateRoomAliveFailed(builder:flatbuffers.Builder, createRoomAliveFailedOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, createRoomAliveFailedOffset, 0);
}

static addJoinRoomAliveFailed(builder:flatbuffers.Builder, joinRoomAliveFailedOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, joinRoomAliveFailedOffset, 0);
}

static addRoomOwnerReviseMap(builder:flatbuffers.Builder, roomOwnerReviseMapOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, roomOwnerReviseMapOffset, 0);
}

static addRoomCollaboratorReviseMap(builder:flatbuffers.Builder, roomCollaboratorReviseMapOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, roomCollaboratorReviseMapOffset, 0);
}

static addRoomCollaboratorJoinRoom(builder:flatbuffers.Builder, roomCollaboratorJoinRoomOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, roomCollaboratorJoinRoomOffset, 0);
}

static addRoomCollaboratorExitRoom(builder:flatbuffers.Builder, roomCollaboratorExitRoomOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, roomCollaboratorExitRoomOffset, 0);
}

static addRoomOwnerReviseMode(builder:flatbuffers.Builder, roomOwnerReviseModeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, roomOwnerReviseModeOffset, 0);
}

static addRoomCollaboratorReviseMode(builder:flatbuffers.Builder, roomCollaboratorReviseModeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, roomCollaboratorReviseModeOffset, 0);
}

static addContinuousClicks(builder:flatbuffers.Builder, continuousClicksOffset:flatbuffers.Offset) {
  builder.addFieldOffset(15, continuousClicksOffset, 0);
}

static addMatchNoProject(builder:flatbuffers.Builder, matchNoProjectOffset:flatbuffers.Offset) {
  builder.addFieldOffset(16, matchNoProjectOffset, 0);
}

static addOtherModeTrainingLock(builder:flatbuffers.Builder, otherModeTrainingLockOffset:flatbuffers.Offset) {
  builder.addFieldOffset(17, otherModeTrainingLockOffset, 0);
}

static addTeamLock(builder:flatbuffers.Builder, teamLockOffset:flatbuffers.Offset) {
  builder.addFieldOffset(18, teamLockOffset, 0);
}

static addMentorLockTips(builder:flatbuffers.Builder, mentorLockTipsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(19, mentorLockTipsOffset, 0);
}

static addUnlockMentorInMatch(builder:flatbuffers.Builder, unlockMentorInMatchOffset:flatbuffers.Offset) {
  builder.addFieldOffset(20, unlockMentorInMatchOffset, 0);
}

static addUnlockInverseMode(builder:flatbuffers.Builder, unlockInverseModeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(21, unlockInverseModeOffset, 0);
}

static addUnlockNewMapType(builder:flatbuffers.Builder, unlockNewMapTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(22, unlockNewMapTypeOffset, 0);
}

static addTeamFullLow(builder:flatbuffers.Builder, teamFullLowOffset:flatbuffers.Offset) {
  builder.addFieldOffset(23, teamFullLowOffset, 0);
}

static addTeamFullHigh(builder:flatbuffers.Builder, teamFullHighOffset:flatbuffers.Offset) {
  builder.addFieldOffset(24, teamFullHighOffset, 0);
}

static addDifficultUnlock(builder:flatbuffers.Builder, difficultUnlockOffset:flatbuffers.Offset) {
  builder.addFieldOffset(25, difficultUnlockOffset, 0);
}

static addWeeklyAlbumTimeUnlock(builder:flatbuffers.Builder, weeklyAlbumTimeUnlockOffset:flatbuffers.Offset) {
  builder.addFieldOffset(26, weeklyAlbumTimeUnlockOffset, 0);
}

static addWeeklyAlbumCommitUnlock(builder:flatbuffers.Builder, weeklyAlbumCommitUnlockOffset:flatbuffers.Offset) {
  builder.addFieldOffset(27, weeklyAlbumCommitUnlockOffset, 0);
}

static addSquadLockHint(builder:flatbuffers.Builder, squadLockHintOffset:flatbuffers.Offset) {
  builder.addFieldOffset(28, squadLockHintOffset, 0);
}

static addSquadEffectEditHint(builder:flatbuffers.Builder, squadEffectEditHintOffset:flatbuffers.Offset) {
  builder.addFieldOffset(29, squadEffectEditHintOffset, 0);
}

static addInverseModeUnlockHint(builder:flatbuffers.Builder, inverseModeUnlockHintOffset:flatbuffers.Offset) {
  builder.addFieldOffset(30, inverseModeUnlockHintOffset, 0);
}

static addNoPhotoInTemplateHint(builder:flatbuffers.Builder, noPhotoInTemplateHintOffset:flatbuffers.Offset) {
  builder.addFieldOffset(31, noPhotoInTemplateHintOffset, 0);
}

static addCannotResubmitHint(builder:flatbuffers.Builder, cannotResubmitHintOffset:flatbuffers.Offset) {
  builder.addFieldOffset(32, cannotResubmitHintOffset, 0);
}

static addCannotSaveTitleChange(builder:flatbuffers.Builder, cannotSaveTitleChangeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(33, cannotSaveTitleChangeOffset, 0);
}

static addMatchPrepareRoomClose(builder:flatbuffers.Builder, matchPrepareRoomCloseOffset:flatbuffers.Offset) {
  builder.addFieldOffset(34, matchPrepareRoomCloseOffset, 0);
}

static addStageListViewTimeLockToast(builder:flatbuffers.Builder, stageListViewTimeLockToastOffset:flatbuffers.Offset) {
  builder.addFieldOffset(35, stageListViewTimeLockToastOffset, 0);
}

static endclz_Torappu_ActMultiV3ConstToastData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActMultiV3ConstToastData(builder:flatbuffers.Builder, noRoomOffset:flatbuffers.Offset, fullRoomOffset:flatbuffers.Offset, roomIdFormatErrorOffset:flatbuffers.Offset, roomIdCopySuccessOffset:flatbuffers.Offset, bannedOffset:flatbuffers.Offset, serverOverloadOffset:flatbuffers.Offset, matchAliveFailedOffset:flatbuffers.Offset, createRoomAliveFailedOffset:flatbuffers.Offset, joinRoomAliveFailedOffset:flatbuffers.Offset, roomOwnerReviseMapOffset:flatbuffers.Offset, roomCollaboratorReviseMapOffset:flatbuffers.Offset, roomCollaboratorJoinRoomOffset:flatbuffers.Offset, roomCollaboratorExitRoomOffset:flatbuffers.Offset, roomOwnerReviseModeOffset:flatbuffers.Offset, roomCollaboratorReviseModeOffset:flatbuffers.Offset, continuousClicksOffset:flatbuffers.Offset, matchNoProjectOffset:flatbuffers.Offset, otherModeTrainingLockOffset:flatbuffers.Offset, teamLockOffset:flatbuffers.Offset, mentorLockTipsOffset:flatbuffers.Offset, unlockMentorInMatchOffset:flatbuffers.Offset, unlockInverseModeOffset:flatbuffers.Offset, unlockNewMapTypeOffset:flatbuffers.Offset, teamFullLowOffset:flatbuffers.Offset, teamFullHighOffset:flatbuffers.Offset, difficultUnlockOffset:flatbuffers.Offset, weeklyAlbumTimeUnlockOffset:flatbuffers.Offset, weeklyAlbumCommitUnlockOffset:flatbuffers.Offset, squadLockHintOffset:flatbuffers.Offset, squadEffectEditHintOffset:flatbuffers.Offset, inverseModeUnlockHintOffset:flatbuffers.Offset, noPhotoInTemplateHintOffset:flatbuffers.Offset, cannotResubmitHintOffset:flatbuffers.Offset, cannotSaveTitleChangeOffset:flatbuffers.Offset, matchPrepareRoomCloseOffset:flatbuffers.Offset, stageListViewTimeLockToastOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActMultiV3ConstToastData.startclz_Torappu_ActMultiV3ConstToastData(builder);
  clz_Torappu_ActMultiV3ConstToastData.addNoRoom(builder, noRoomOffset);
  clz_Torappu_ActMultiV3ConstToastData.addFullRoom(builder, fullRoomOffset);
  clz_Torappu_ActMultiV3ConstToastData.addRoomIdFormatError(builder, roomIdFormatErrorOffset);
  clz_Torappu_ActMultiV3ConstToastData.addRoomIdCopySuccess(builder, roomIdCopySuccessOffset);
  clz_Torappu_ActMultiV3ConstToastData.addBanned(builder, bannedOffset);
  clz_Torappu_ActMultiV3ConstToastData.addServerOverload(builder, serverOverloadOffset);
  clz_Torappu_ActMultiV3ConstToastData.addMatchAliveFailed(builder, matchAliveFailedOffset);
  clz_Torappu_ActMultiV3ConstToastData.addCreateRoomAliveFailed(builder, createRoomAliveFailedOffset);
  clz_Torappu_ActMultiV3ConstToastData.addJoinRoomAliveFailed(builder, joinRoomAliveFailedOffset);
  clz_Torappu_ActMultiV3ConstToastData.addRoomOwnerReviseMap(builder, roomOwnerReviseMapOffset);
  clz_Torappu_ActMultiV3ConstToastData.addRoomCollaboratorReviseMap(builder, roomCollaboratorReviseMapOffset);
  clz_Torappu_ActMultiV3ConstToastData.addRoomCollaboratorJoinRoom(builder, roomCollaboratorJoinRoomOffset);
  clz_Torappu_ActMultiV3ConstToastData.addRoomCollaboratorExitRoom(builder, roomCollaboratorExitRoomOffset);
  clz_Torappu_ActMultiV3ConstToastData.addRoomOwnerReviseMode(builder, roomOwnerReviseModeOffset);
  clz_Torappu_ActMultiV3ConstToastData.addRoomCollaboratorReviseMode(builder, roomCollaboratorReviseModeOffset);
  clz_Torappu_ActMultiV3ConstToastData.addContinuousClicks(builder, continuousClicksOffset);
  clz_Torappu_ActMultiV3ConstToastData.addMatchNoProject(builder, matchNoProjectOffset);
  clz_Torappu_ActMultiV3ConstToastData.addOtherModeTrainingLock(builder, otherModeTrainingLockOffset);
  clz_Torappu_ActMultiV3ConstToastData.addTeamLock(builder, teamLockOffset);
  clz_Torappu_ActMultiV3ConstToastData.addMentorLockTips(builder, mentorLockTipsOffset);
  clz_Torappu_ActMultiV3ConstToastData.addUnlockMentorInMatch(builder, unlockMentorInMatchOffset);
  clz_Torappu_ActMultiV3ConstToastData.addUnlockInverseMode(builder, unlockInverseModeOffset);
  clz_Torappu_ActMultiV3ConstToastData.addUnlockNewMapType(builder, unlockNewMapTypeOffset);
  clz_Torappu_ActMultiV3ConstToastData.addTeamFullLow(builder, teamFullLowOffset);
  clz_Torappu_ActMultiV3ConstToastData.addTeamFullHigh(builder, teamFullHighOffset);
  clz_Torappu_ActMultiV3ConstToastData.addDifficultUnlock(builder, difficultUnlockOffset);
  clz_Torappu_ActMultiV3ConstToastData.addWeeklyAlbumTimeUnlock(builder, weeklyAlbumTimeUnlockOffset);
  clz_Torappu_ActMultiV3ConstToastData.addWeeklyAlbumCommitUnlock(builder, weeklyAlbumCommitUnlockOffset);
  clz_Torappu_ActMultiV3ConstToastData.addSquadLockHint(builder, squadLockHintOffset);
  clz_Torappu_ActMultiV3ConstToastData.addSquadEffectEditHint(builder, squadEffectEditHintOffset);
  clz_Torappu_ActMultiV3ConstToastData.addInverseModeUnlockHint(builder, inverseModeUnlockHintOffset);
  clz_Torappu_ActMultiV3ConstToastData.addNoPhotoInTemplateHint(builder, noPhotoInTemplateHintOffset);
  clz_Torappu_ActMultiV3ConstToastData.addCannotResubmitHint(builder, cannotResubmitHintOffset);
  clz_Torappu_ActMultiV3ConstToastData.addCannotSaveTitleChange(builder, cannotSaveTitleChangeOffset);
  clz_Torappu_ActMultiV3ConstToastData.addMatchPrepareRoomClose(builder, matchPrepareRoomCloseOffset);
  clz_Torappu_ActMultiV3ConstToastData.addStageListViewTimeLockToast(builder, stageListViewTimeLockToastOffset);
  return clz_Torappu_ActMultiV3ConstToastData.endclz_Torappu_ActMultiV3ConstToastData(builder);
}

unpack(): clz_Torappu_ActMultiV3ConstToastDataT {
  return new clz_Torappu_ActMultiV3ConstToastDataT(
    this.noRoom(),
    this.fullRoom(),
    this.roomIdFormatError(),
    this.roomIdCopySuccess(),
    this.banned(),
    this.serverOverload(),
    this.matchAliveFailed(),
    this.createRoomAliveFailed(),
    this.joinRoomAliveFailed(),
    this.roomOwnerReviseMap(),
    this.roomCollaboratorReviseMap(),
    this.roomCollaboratorJoinRoom(),
    this.roomCollaboratorExitRoom(),
    this.roomOwnerReviseMode(),
    this.roomCollaboratorReviseMode(),
    this.continuousClicks(),
    this.matchNoProject(),
    this.otherModeTrainingLock(),
    this.teamLock(),
    this.mentorLockTips(),
    this.unlockMentorInMatch(),
    this.unlockInverseMode(),
    this.unlockNewMapType(),
    this.teamFullLow(),
    this.teamFullHigh(),
    this.difficultUnlock(),
    this.weeklyAlbumTimeUnlock(),
    this.weeklyAlbumCommitUnlock(),
    this.squadLockHint(),
    this.squadEffectEditHint(),
    this.inverseModeUnlockHint(),
    this.noPhotoInTemplateHint(),
    this.cannotResubmitHint(),
    this.cannotSaveTitleChange(),
    this.matchPrepareRoomClose(),
    this.stageListViewTimeLockToast()
  );
}


unpackTo(_o: clz_Torappu_ActMultiV3ConstToastDataT): void {
  _o.noRoom = this.noRoom();
  _o.fullRoom = this.fullRoom();
  _o.roomIdFormatError = this.roomIdFormatError();
  _o.roomIdCopySuccess = this.roomIdCopySuccess();
  _o.banned = this.banned();
  _o.serverOverload = this.serverOverload();
  _o.matchAliveFailed = this.matchAliveFailed();
  _o.createRoomAliveFailed = this.createRoomAliveFailed();
  _o.joinRoomAliveFailed = this.joinRoomAliveFailed();
  _o.roomOwnerReviseMap = this.roomOwnerReviseMap();
  _o.roomCollaboratorReviseMap = this.roomCollaboratorReviseMap();
  _o.roomCollaboratorJoinRoom = this.roomCollaboratorJoinRoom();
  _o.roomCollaboratorExitRoom = this.roomCollaboratorExitRoom();
  _o.roomOwnerReviseMode = this.roomOwnerReviseMode();
  _o.roomCollaboratorReviseMode = this.roomCollaboratorReviseMode();
  _o.continuousClicks = this.continuousClicks();
  _o.matchNoProject = this.matchNoProject();
  _o.otherModeTrainingLock = this.otherModeTrainingLock();
  _o.teamLock = this.teamLock();
  _o.mentorLockTips = this.mentorLockTips();
  _o.unlockMentorInMatch = this.unlockMentorInMatch();
  _o.unlockInverseMode = this.unlockInverseMode();
  _o.unlockNewMapType = this.unlockNewMapType();
  _o.teamFullLow = this.teamFullLow();
  _o.teamFullHigh = this.teamFullHigh();
  _o.difficultUnlock = this.difficultUnlock();
  _o.weeklyAlbumTimeUnlock = this.weeklyAlbumTimeUnlock();
  _o.weeklyAlbumCommitUnlock = this.weeklyAlbumCommitUnlock();
  _o.squadLockHint = this.squadLockHint();
  _o.squadEffectEditHint = this.squadEffectEditHint();
  _o.inverseModeUnlockHint = this.inverseModeUnlockHint();
  _o.noPhotoInTemplateHint = this.noPhotoInTemplateHint();
  _o.cannotResubmitHint = this.cannotResubmitHint();
  _o.cannotSaveTitleChange = this.cannotSaveTitleChange();
  _o.matchPrepareRoomClose = this.matchPrepareRoomClose();
  _o.stageListViewTimeLockToast = this.stageListViewTimeLockToast();
}
}

export class clz_Torappu_ActMultiV3ConstToastDataT implements flatbuffers.IGeneratedObject {
constructor(
  public noRoom: string|Uint8Array|null = null,
  public fullRoom: string|Uint8Array|null = null,
  public roomIdFormatError: string|Uint8Array|null = null,
  public roomIdCopySuccess: string|Uint8Array|null = null,
  public banned: string|Uint8Array|null = null,
  public serverOverload: string|Uint8Array|null = null,
  public matchAliveFailed: string|Uint8Array|null = null,
  public createRoomAliveFailed: string|Uint8Array|null = null,
  public joinRoomAliveFailed: string|Uint8Array|null = null,
  public roomOwnerReviseMap: string|Uint8Array|null = null,
  public roomCollaboratorReviseMap: string|Uint8Array|null = null,
  public roomCollaboratorJoinRoom: string|Uint8Array|null = null,
  public roomCollaboratorExitRoom: string|Uint8Array|null = null,
  public roomOwnerReviseMode: string|Uint8Array|null = null,
  public roomCollaboratorReviseMode: string|Uint8Array|null = null,
  public continuousClicks: string|Uint8Array|null = null,
  public matchNoProject: string|Uint8Array|null = null,
  public otherModeTrainingLock: string|Uint8Array|null = null,
  public teamLock: string|Uint8Array|null = null,
  public mentorLockTips: string|Uint8Array|null = null,
  public unlockMentorInMatch: string|Uint8Array|null = null,
  public unlockInverseMode: string|Uint8Array|null = null,
  public unlockNewMapType: string|Uint8Array|null = null,
  public teamFullLow: string|Uint8Array|null = null,
  public teamFullHigh: string|Uint8Array|null = null,
  public difficultUnlock: string|Uint8Array|null = null,
  public weeklyAlbumTimeUnlock: string|Uint8Array|null = null,
  public weeklyAlbumCommitUnlock: string|Uint8Array|null = null,
  public squadLockHint: string|Uint8Array|null = null,
  public squadEffectEditHint: string|Uint8Array|null = null,
  public inverseModeUnlockHint: string|Uint8Array|null = null,
  public noPhotoInTemplateHint: string|Uint8Array|null = null,
  public cannotResubmitHint: string|Uint8Array|null = null,
  public cannotSaveTitleChange: string|Uint8Array|null = null,
  public matchPrepareRoomClose: string|Uint8Array|null = null,
  public stageListViewTimeLockToast: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const noRoom = (this.noRoom !== null ? builder.createString(this.noRoom!) : 0);
  const fullRoom = (this.fullRoom !== null ? builder.createString(this.fullRoom!) : 0);
  const roomIdFormatError = (this.roomIdFormatError !== null ? builder.createString(this.roomIdFormatError!) : 0);
  const roomIdCopySuccess = (this.roomIdCopySuccess !== null ? builder.createString(this.roomIdCopySuccess!) : 0);
  const banned = (this.banned !== null ? builder.createString(this.banned!) : 0);
  const serverOverload = (this.serverOverload !== null ? builder.createString(this.serverOverload!) : 0);
  const matchAliveFailed = (this.matchAliveFailed !== null ? builder.createString(this.matchAliveFailed!) : 0);
  const createRoomAliveFailed = (this.createRoomAliveFailed !== null ? builder.createString(this.createRoomAliveFailed!) : 0);
  const joinRoomAliveFailed = (this.joinRoomAliveFailed !== null ? builder.createString(this.joinRoomAliveFailed!) : 0);
  const roomOwnerReviseMap = (this.roomOwnerReviseMap !== null ? builder.createString(this.roomOwnerReviseMap!) : 0);
  const roomCollaboratorReviseMap = (this.roomCollaboratorReviseMap !== null ? builder.createString(this.roomCollaboratorReviseMap!) : 0);
  const roomCollaboratorJoinRoom = (this.roomCollaboratorJoinRoom !== null ? builder.createString(this.roomCollaboratorJoinRoom!) : 0);
  const roomCollaboratorExitRoom = (this.roomCollaboratorExitRoom !== null ? builder.createString(this.roomCollaboratorExitRoom!) : 0);
  const roomOwnerReviseMode = (this.roomOwnerReviseMode !== null ? builder.createString(this.roomOwnerReviseMode!) : 0);
  const roomCollaboratorReviseMode = (this.roomCollaboratorReviseMode !== null ? builder.createString(this.roomCollaboratorReviseMode!) : 0);
  const continuousClicks = (this.continuousClicks !== null ? builder.createString(this.continuousClicks!) : 0);
  const matchNoProject = (this.matchNoProject !== null ? builder.createString(this.matchNoProject!) : 0);
  const otherModeTrainingLock = (this.otherModeTrainingLock !== null ? builder.createString(this.otherModeTrainingLock!) : 0);
  const teamLock = (this.teamLock !== null ? builder.createString(this.teamLock!) : 0);
  const mentorLockTips = (this.mentorLockTips !== null ? builder.createString(this.mentorLockTips!) : 0);
  const unlockMentorInMatch = (this.unlockMentorInMatch !== null ? builder.createString(this.unlockMentorInMatch!) : 0);
  const unlockInverseMode = (this.unlockInverseMode !== null ? builder.createString(this.unlockInverseMode!) : 0);
  const unlockNewMapType = (this.unlockNewMapType !== null ? builder.createString(this.unlockNewMapType!) : 0);
  const teamFullLow = (this.teamFullLow !== null ? builder.createString(this.teamFullLow!) : 0);
  const teamFullHigh = (this.teamFullHigh !== null ? builder.createString(this.teamFullHigh!) : 0);
  const difficultUnlock = (this.difficultUnlock !== null ? builder.createString(this.difficultUnlock!) : 0);
  const weeklyAlbumTimeUnlock = (this.weeklyAlbumTimeUnlock !== null ? builder.createString(this.weeklyAlbumTimeUnlock!) : 0);
  const weeklyAlbumCommitUnlock = (this.weeklyAlbumCommitUnlock !== null ? builder.createString(this.weeklyAlbumCommitUnlock!) : 0);
  const squadLockHint = (this.squadLockHint !== null ? builder.createString(this.squadLockHint!) : 0);
  const squadEffectEditHint = (this.squadEffectEditHint !== null ? builder.createString(this.squadEffectEditHint!) : 0);
  const inverseModeUnlockHint = (this.inverseModeUnlockHint !== null ? builder.createString(this.inverseModeUnlockHint!) : 0);
  const noPhotoInTemplateHint = (this.noPhotoInTemplateHint !== null ? builder.createString(this.noPhotoInTemplateHint!) : 0);
  const cannotResubmitHint = (this.cannotResubmitHint !== null ? builder.createString(this.cannotResubmitHint!) : 0);
  const cannotSaveTitleChange = (this.cannotSaveTitleChange !== null ? builder.createString(this.cannotSaveTitleChange!) : 0);
  const matchPrepareRoomClose = (this.matchPrepareRoomClose !== null ? builder.createString(this.matchPrepareRoomClose!) : 0);
  const stageListViewTimeLockToast = (this.stageListViewTimeLockToast !== null ? builder.createString(this.stageListViewTimeLockToast!) : 0);

  return clz_Torappu_ActMultiV3ConstToastData.createclz_Torappu_ActMultiV3ConstToastData(builder,
    noRoom,
    fullRoom,
    roomIdFormatError,
    roomIdCopySuccess,
    banned,
    serverOverload,
    matchAliveFailed,
    createRoomAliveFailed,
    joinRoomAliveFailed,
    roomOwnerReviseMap,
    roomCollaboratorReviseMap,
    roomCollaboratorJoinRoom,
    roomCollaboratorExitRoom,
    roomOwnerReviseMode,
    roomCollaboratorReviseMode,
    continuousClicks,
    matchNoProject,
    otherModeTrainingLock,
    teamLock,
    mentorLockTips,
    unlockMentorInMatch,
    unlockInverseMode,
    unlockNewMapType,
    teamFullLow,
    teamFullHigh,
    difficultUnlock,
    weeklyAlbumTimeUnlock,
    weeklyAlbumCommitUnlock,
    squadLockHint,
    squadEffectEditHint,
    inverseModeUnlockHint,
    noPhotoInTemplateHint,
    cannotResubmitHint,
    cannotSaveTitleChange,
    matchPrepareRoomClose,
    stageListViewTimeLockToast
  );
}
}
