// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_MissionArchiveVoiceClipData, clz_Torappu_MissionArchiveVoiceClipDataT } from './clz-torappu-mission-archive-voice-clip-data.js';


export class clz_Torappu_MissionArchiveNodeData implements flatbuffers.IUnpackableObject<clz_Torappu_MissionArchiveNodeDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_MissionArchiveNodeData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_MissionArchiveNodeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_MissionArchiveNodeData):clz_Torappu_MissionArchiveNodeData {
  return (obj || new clz_Torappu_MissionArchiveNodeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_MissionArchiveNodeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_MissionArchiveNodeData):clz_Torappu_MissionArchiveNodeData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_MissionArchiveNodeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

nodeId():string|null
nodeId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
nodeId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

title():string|null
title(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
title(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

unlockDesc():string|null
unlockDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
unlockDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

clips(index: number, obj?:clz_Torappu_MissionArchiveVoiceClipData):clz_Torappu_MissionArchiveVoiceClipData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_Torappu_MissionArchiveVoiceClipData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

clipsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_MissionArchiveNodeData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addNodeId(builder:flatbuffers.Builder, nodeIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, nodeIdOffset, 0);
}

static addTitle(builder:flatbuffers.Builder, titleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, titleOffset, 0);
}

static addUnlockDesc(builder:flatbuffers.Builder, unlockDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, unlockDescOffset, 0);
}

static addClips(builder:flatbuffers.Builder, clipsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, clipsOffset, 0);
}

static createClipsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startClipsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_MissionArchiveNodeData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_MissionArchiveNodeData(builder:flatbuffers.Builder, nodeIdOffset:flatbuffers.Offset, titleOffset:flatbuffers.Offset, unlockDescOffset:flatbuffers.Offset, clipsOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_MissionArchiveNodeData.startclz_Torappu_MissionArchiveNodeData(builder);
  clz_Torappu_MissionArchiveNodeData.addNodeId(builder, nodeIdOffset);
  clz_Torappu_MissionArchiveNodeData.addTitle(builder, titleOffset);
  clz_Torappu_MissionArchiveNodeData.addUnlockDesc(builder, unlockDescOffset);
  clz_Torappu_MissionArchiveNodeData.addClips(builder, clipsOffset);
  return clz_Torappu_MissionArchiveNodeData.endclz_Torappu_MissionArchiveNodeData(builder);
}

unpack(): clz_Torappu_MissionArchiveNodeDataT {
  return new clz_Torappu_MissionArchiveNodeDataT(
    this.nodeId(),
    this.title(),
    this.unlockDesc(),
    this.bb!.createObjList<clz_Torappu_MissionArchiveVoiceClipData, clz_Torappu_MissionArchiveVoiceClipDataT>(this.clips.bind(this), this.clipsLength())
  );
}


unpackTo(_o: clz_Torappu_MissionArchiveNodeDataT): void {
  _o.nodeId = this.nodeId();
  _o.title = this.title();
  _o.unlockDesc = this.unlockDesc();
  _o.clips = this.bb!.createObjList<clz_Torappu_MissionArchiveVoiceClipData, clz_Torappu_MissionArchiveVoiceClipDataT>(this.clips.bind(this), this.clipsLength());
}
}

export class clz_Torappu_MissionArchiveNodeDataT implements flatbuffers.IGeneratedObject {
constructor(
  public nodeId: string|Uint8Array|null = null,
  public title: string|Uint8Array|null = null,
  public unlockDesc: string|Uint8Array|null = null,
  public clips: (clz_Torappu_MissionArchiveVoiceClipDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const nodeId = (this.nodeId !== null ? builder.createString(this.nodeId!) : 0);
  const title = (this.title !== null ? builder.createString(this.title!) : 0);
  const unlockDesc = (this.unlockDesc !== null ? builder.createString(this.unlockDesc!) : 0);
  const clips = clz_Torappu_MissionArchiveNodeData.createClipsVector(builder, builder.createObjectOffsetList(this.clips));

  return clz_Torappu_MissionArchiveNodeData.createclz_Torappu_MissionArchiveNodeData(builder,
    nodeId,
    title,
    unlockDesc,
    clips
  );
}
}
