// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActArchivePicItemData implements flatbuffers.IUnpackableObject<clz_Torappu_ActArchivePicItemDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActArchivePicItemData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActArchivePicItemData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActArchivePicItemData):clz_Torappu_ActArchivePicItemData {
  return (obj || new clz_Torappu_ActArchivePicItemData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActArchivePicItemData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActArchivePicItemData):clz_Torappu_ActArchivePicItemData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActArchivePicItemData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

picId():string|null
picId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
picId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

picSortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_ActArchivePicItemData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addPicId(builder:flatbuffers.Builder, picIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, picIdOffset, 0);
}

static addPicSortId(builder:flatbuffers.Builder, picSortId:number) {
  builder.addFieldInt32(1, picSortId, 0);
}

static endclz_Torappu_ActArchivePicItemData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActArchivePicItemData(builder:flatbuffers.Builder, picIdOffset:flatbuffers.Offset, picSortId:number):flatbuffers.Offset {
  clz_Torappu_ActArchivePicItemData.startclz_Torappu_ActArchivePicItemData(builder);
  clz_Torappu_ActArchivePicItemData.addPicId(builder, picIdOffset);
  clz_Torappu_ActArchivePicItemData.addPicSortId(builder, picSortId);
  return clz_Torappu_ActArchivePicItemData.endclz_Torappu_ActArchivePicItemData(builder);
}

unpack(): clz_Torappu_ActArchivePicItemDataT {
  return new clz_Torappu_ActArchivePicItemDataT(
    this.picId(),
    this.picSortId()
  );
}


unpackTo(_o: clz_Torappu_ActArchivePicItemDataT): void {
  _o.picId = this.picId();
  _o.picSortId = this.picSortId();
}
}

export class clz_Torappu_ActArchivePicItemDataT implements flatbuffers.IGeneratedObject {
constructor(
  public picId: string|Uint8Array|null = null,
  public picSortId: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const picId = (this.picId !== null ? builder.createString(this.picId!) : 0);

  return clz_Torappu_ActArchivePicItemData.createclz_Torappu_ActArchivePicItemData(builder,
    picId,
    this.picSortId
  );
}
}
