// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT } from './clz-torappu-item-bundle.js';


export class clz_Torappu_MiniActTrialData_MiniActTrialRewardData implements flatbuffers.IUnpackableObject<clz_Torappu_MiniActTrialData_MiniActTrialRewardDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_MiniActTrialData_MiniActTrialRewardData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_MiniActTrialData_MiniActTrialRewardData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_MiniActTrialData_MiniActTrialRewardData):clz_Torappu_MiniActTrialData_MiniActTrialRewardData {
  return (obj || new clz_Torappu_MiniActTrialData_MiniActTrialRewardData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_MiniActTrialData_MiniActTrialRewardData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_MiniActTrialData_MiniActTrialRewardData):clz_Torappu_MiniActTrialData_MiniActTrialRewardData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_MiniActTrialData_MiniActTrialRewardData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

trialRewardId():string|null
trialRewardId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
trialRewardId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

orderId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

actId():string|null
actId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
actId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

targetStoryCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

item(obj?:clz_Torappu_ItemBundle):clz_Torappu_ItemBundle|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new clz_Torappu_ItemBundle()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startclz_Torappu_MiniActTrialData_MiniActTrialRewardData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addTrialRewardId(builder:flatbuffers.Builder, trialRewardIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, trialRewardIdOffset, 0);
}

static addOrderId(builder:flatbuffers.Builder, orderId:number) {
  builder.addFieldInt32(1, orderId, 0);
}

static addActId(builder:flatbuffers.Builder, actIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, actIdOffset, 0);
}

static addTargetStoryCount(builder:flatbuffers.Builder, targetStoryCount:number) {
  builder.addFieldInt32(3, targetStoryCount, 0);
}

static addItem(builder:flatbuffers.Builder, itemOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, itemOffset, 0);
}

static endclz_Torappu_MiniActTrialData_MiniActTrialRewardData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_MiniActTrialData_MiniActTrialRewardDataT {
  return new clz_Torappu_MiniActTrialData_MiniActTrialRewardDataT(
    this.trialRewardId(),
    this.orderId(),
    this.actId(),
    this.targetStoryCount(),
    (this.item() !== null ? this.item()!.unpack() : null)
  );
}


unpackTo(_o: clz_Torappu_MiniActTrialData_MiniActTrialRewardDataT): void {
  _o.trialRewardId = this.trialRewardId();
  _o.orderId = this.orderId();
  _o.actId = this.actId();
  _o.targetStoryCount = this.targetStoryCount();
  _o.item = (this.item() !== null ? this.item()!.unpack() : null);
}
}

export class clz_Torappu_MiniActTrialData_MiniActTrialRewardDataT implements flatbuffers.IGeneratedObject {
constructor(
  public trialRewardId: string|Uint8Array|null = null,
  public orderId: number = 0,
  public actId: string|Uint8Array|null = null,
  public targetStoryCount: number = 0,
  public item: clz_Torappu_ItemBundleT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const trialRewardId = (this.trialRewardId !== null ? builder.createString(this.trialRewardId!) : 0);
  const actId = (this.actId !== null ? builder.createString(this.actId!) : 0);
  const item = (this.item !== null ? this.item!.pack(builder) : 0);

  clz_Torappu_MiniActTrialData_MiniActTrialRewardData.startclz_Torappu_MiniActTrialData_MiniActTrialRewardData(builder);
  clz_Torappu_MiniActTrialData_MiniActTrialRewardData.addTrialRewardId(builder, trialRewardId);
  clz_Torappu_MiniActTrialData_MiniActTrialRewardData.addOrderId(builder, this.orderId);
  clz_Torappu_MiniActTrialData_MiniActTrialRewardData.addActId(builder, actId);
  clz_Torappu_MiniActTrialData_MiniActTrialRewardData.addTargetStoryCount(builder, this.targetStoryCount);
  clz_Torappu_MiniActTrialData_MiniActTrialRewardData.addItem(builder, item);

  return clz_Torappu_MiniActTrialData_MiniActTrialRewardData.endclz_Torappu_MiniActTrialData_MiniActTrialRewardData(builder);
}
}
