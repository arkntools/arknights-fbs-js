// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SandboxItemTrapData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxItemTrapDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxItemTrapData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxItemTrapData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxItemTrapData):clz_Torappu_SandboxItemTrapData {
  return (obj || new clz_Torappu_SandboxItemTrapData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxItemTrapData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxItemTrapData):clz_Torappu_SandboxItemTrapData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxItemTrapData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

itemId():string|null
itemId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
itemId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

trapId():string|null
trapId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
trapId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

trapPhase():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

trapLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

skillIndex():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

skillLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SandboxItemTrapData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addItemId(builder:flatbuffers.Builder, itemIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, itemIdOffset, 0);
}

static addTrapId(builder:flatbuffers.Builder, trapIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, trapIdOffset, 0);
}

static addTrapPhase(builder:flatbuffers.Builder, trapPhase:number) {
  builder.addFieldInt32(2, trapPhase, 0);
}

static addTrapLevel(builder:flatbuffers.Builder, trapLevel:number) {
  builder.addFieldInt32(3, trapLevel, 0);
}

static addSkillIndex(builder:flatbuffers.Builder, skillIndex:number) {
  builder.addFieldInt32(4, skillIndex, 0);
}

static addSkillLevel(builder:flatbuffers.Builder, skillLevel:number) {
  builder.addFieldInt32(5, skillLevel, 0);
}

static endclz_Torappu_SandboxItemTrapData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxItemTrapData(builder:flatbuffers.Builder, itemIdOffset:flatbuffers.Offset, trapIdOffset:flatbuffers.Offset, trapPhase:number, trapLevel:number, skillIndex:number, skillLevel:number):flatbuffers.Offset {
  clz_Torappu_SandboxItemTrapData.startclz_Torappu_SandboxItemTrapData(builder);
  clz_Torappu_SandboxItemTrapData.addItemId(builder, itemIdOffset);
  clz_Torappu_SandboxItemTrapData.addTrapId(builder, trapIdOffset);
  clz_Torappu_SandboxItemTrapData.addTrapPhase(builder, trapPhase);
  clz_Torappu_SandboxItemTrapData.addTrapLevel(builder, trapLevel);
  clz_Torappu_SandboxItemTrapData.addSkillIndex(builder, skillIndex);
  clz_Torappu_SandboxItemTrapData.addSkillLevel(builder, skillLevel);
  return clz_Torappu_SandboxItemTrapData.endclz_Torappu_SandboxItemTrapData(builder);
}

unpack(): clz_Torappu_SandboxItemTrapDataT {
  return new clz_Torappu_SandboxItemTrapDataT(
    this.itemId(),
    this.trapId(),
    this.trapPhase(),
    this.trapLevel(),
    this.skillIndex(),
    this.skillLevel()
  );
}


unpackTo(_o: clz_Torappu_SandboxItemTrapDataT): void {
  _o.itemId = this.itemId();
  _o.trapId = this.trapId();
  _o.trapPhase = this.trapPhase();
  _o.trapLevel = this.trapLevel();
  _o.skillIndex = this.skillIndex();
  _o.skillLevel = this.skillLevel();
}
}

export class clz_Torappu_SandboxItemTrapDataT implements flatbuffers.IGeneratedObject {
constructor(
  public itemId: string|Uint8Array|null = null,
  public trapId: string|Uint8Array|null = null,
  public trapPhase: number = 0,
  public trapLevel: number = 0,
  public skillIndex: number = 0,
  public skillLevel: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const itemId = (this.itemId !== null ? builder.createString(this.itemId!) : 0);
  const trapId = (this.trapId !== null ? builder.createString(this.trapId!) : 0);

  return clz_Torappu_SandboxItemTrapData.createclz_Torappu_SandboxItemTrapData(builder,
    itemId,
    trapId,
    this.trapPhase,
    this.trapLevel,
    this.skillIndex,
    this.skillLevel
  );
}
}
