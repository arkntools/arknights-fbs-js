// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_BuildingData_StationManageConstData implements flatbuffers.IUnpackableObject<clz_Torappu_BuildingData_StationManageConstDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_BuildingData_StationManageConstData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_BuildingData_StationManageConstData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_StationManageConstData):clz_Torappu_BuildingData_StationManageConstData {
  return (obj || new clz_Torappu_BuildingData_StationManageConstData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_BuildingData_StationManageConstData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_StationManageConstData):clz_Torappu_BuildingData_StationManageConstData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_BuildingData_StationManageConstData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

cantWorkToastNoTiredChar():string|null
cantWorkToastNoTiredChar(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
cantWorkToastNoTiredChar(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

cantWorkToastNoAvailQueue():string|null
cantWorkToastNoAvailQueue(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
cantWorkToastNoAvailQueue(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

cantWorkToastNoNeed():string|null
cantWorkToastNoNeed(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
cantWorkToastNoNeed(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

cantRestToastNoTiredChar():string|null
cantRestToastNoTiredChar(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
cantRestToastNoTiredChar(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

cantRestToastNoAvailDorm():string|null
cantRestToastNoAvailDorm(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
cantRestToastNoAvailDorm(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

workBatchToast():string|null
workBatchToast(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
workBatchToast(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

restBatchToast():string|null
restBatchToast(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
restBatchToast(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

roomNoAvailQueueToast():string|null
roomNoAvailQueueToast(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
roomNoAvailQueueToast(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

cantUseNoPerson():string|null
cantUseNoPerson(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
cantUseNoPerson(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

cantUseWorking():string|null
cantUseWorking(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
cantUseWorking(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

queueCleared():string|null
queueCleared(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
queueCleared(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

updateTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

dormLockUpdateTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startclz_Torappu_BuildingData_StationManageConstData(builder:flatbuffers.Builder) {
  builder.startObject(13);
}

static addCantWorkToastNoTiredChar(builder:flatbuffers.Builder, cantWorkToastNoTiredCharOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, cantWorkToastNoTiredCharOffset, 0);
}

static addCantWorkToastNoAvailQueue(builder:flatbuffers.Builder, cantWorkToastNoAvailQueueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, cantWorkToastNoAvailQueueOffset, 0);
}

static addCantWorkToastNoNeed(builder:flatbuffers.Builder, cantWorkToastNoNeedOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, cantWorkToastNoNeedOffset, 0);
}

static addCantRestToastNoTiredChar(builder:flatbuffers.Builder, cantRestToastNoTiredCharOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, cantRestToastNoTiredCharOffset, 0);
}

static addCantRestToastNoAvailDorm(builder:flatbuffers.Builder, cantRestToastNoAvailDormOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, cantRestToastNoAvailDormOffset, 0);
}

static addWorkBatchToast(builder:flatbuffers.Builder, workBatchToastOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, workBatchToastOffset, 0);
}

static addRestBatchToast(builder:flatbuffers.Builder, restBatchToastOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, restBatchToastOffset, 0);
}

static addRoomNoAvailQueueToast(builder:flatbuffers.Builder, roomNoAvailQueueToastOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, roomNoAvailQueueToastOffset, 0);
}

static addCantUseNoPerson(builder:flatbuffers.Builder, cantUseNoPersonOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, cantUseNoPersonOffset, 0);
}

static addCantUseWorking(builder:flatbuffers.Builder, cantUseWorkingOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, cantUseWorkingOffset, 0);
}

static addQueueCleared(builder:flatbuffers.Builder, queueClearedOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, queueClearedOffset, 0);
}

static addUpdateTime(builder:flatbuffers.Builder, updateTime:bigint) {
  builder.addFieldInt64(11, updateTime, BigInt('0'));
}

static addDormLockUpdateTime(builder:flatbuffers.Builder, dormLockUpdateTime:bigint) {
  builder.addFieldInt64(12, dormLockUpdateTime, BigInt('0'));
}

static endclz_Torappu_BuildingData_StationManageConstData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_BuildingData_StationManageConstData(builder:flatbuffers.Builder, cantWorkToastNoTiredCharOffset:flatbuffers.Offset, cantWorkToastNoAvailQueueOffset:flatbuffers.Offset, cantWorkToastNoNeedOffset:flatbuffers.Offset, cantRestToastNoTiredCharOffset:flatbuffers.Offset, cantRestToastNoAvailDormOffset:flatbuffers.Offset, workBatchToastOffset:flatbuffers.Offset, restBatchToastOffset:flatbuffers.Offset, roomNoAvailQueueToastOffset:flatbuffers.Offset, cantUseNoPersonOffset:flatbuffers.Offset, cantUseWorkingOffset:flatbuffers.Offset, queueClearedOffset:flatbuffers.Offset, updateTime:bigint, dormLockUpdateTime:bigint):flatbuffers.Offset {
  clz_Torappu_BuildingData_StationManageConstData.startclz_Torappu_BuildingData_StationManageConstData(builder);
  clz_Torappu_BuildingData_StationManageConstData.addCantWorkToastNoTiredChar(builder, cantWorkToastNoTiredCharOffset);
  clz_Torappu_BuildingData_StationManageConstData.addCantWorkToastNoAvailQueue(builder, cantWorkToastNoAvailQueueOffset);
  clz_Torappu_BuildingData_StationManageConstData.addCantWorkToastNoNeed(builder, cantWorkToastNoNeedOffset);
  clz_Torappu_BuildingData_StationManageConstData.addCantRestToastNoTiredChar(builder, cantRestToastNoTiredCharOffset);
  clz_Torappu_BuildingData_StationManageConstData.addCantRestToastNoAvailDorm(builder, cantRestToastNoAvailDormOffset);
  clz_Torappu_BuildingData_StationManageConstData.addWorkBatchToast(builder, workBatchToastOffset);
  clz_Torappu_BuildingData_StationManageConstData.addRestBatchToast(builder, restBatchToastOffset);
  clz_Torappu_BuildingData_StationManageConstData.addRoomNoAvailQueueToast(builder, roomNoAvailQueueToastOffset);
  clz_Torappu_BuildingData_StationManageConstData.addCantUseNoPerson(builder, cantUseNoPersonOffset);
  clz_Torappu_BuildingData_StationManageConstData.addCantUseWorking(builder, cantUseWorkingOffset);
  clz_Torappu_BuildingData_StationManageConstData.addQueueCleared(builder, queueClearedOffset);
  clz_Torappu_BuildingData_StationManageConstData.addUpdateTime(builder, updateTime);
  clz_Torappu_BuildingData_StationManageConstData.addDormLockUpdateTime(builder, dormLockUpdateTime);
  return clz_Torappu_BuildingData_StationManageConstData.endclz_Torappu_BuildingData_StationManageConstData(builder);
}

unpack(): clz_Torappu_BuildingData_StationManageConstDataT {
  return new clz_Torappu_BuildingData_StationManageConstDataT(
    this.cantWorkToastNoTiredChar(),
    this.cantWorkToastNoAvailQueue(),
    this.cantWorkToastNoNeed(),
    this.cantRestToastNoTiredChar(),
    this.cantRestToastNoAvailDorm(),
    this.workBatchToast(),
    this.restBatchToast(),
    this.roomNoAvailQueueToast(),
    this.cantUseNoPerson(),
    this.cantUseWorking(),
    this.queueCleared(),
    this.updateTime(),
    this.dormLockUpdateTime()
  );
}


unpackTo(_o: clz_Torappu_BuildingData_StationManageConstDataT): void {
  _o.cantWorkToastNoTiredChar = this.cantWorkToastNoTiredChar();
  _o.cantWorkToastNoAvailQueue = this.cantWorkToastNoAvailQueue();
  _o.cantWorkToastNoNeed = this.cantWorkToastNoNeed();
  _o.cantRestToastNoTiredChar = this.cantRestToastNoTiredChar();
  _o.cantRestToastNoAvailDorm = this.cantRestToastNoAvailDorm();
  _o.workBatchToast = this.workBatchToast();
  _o.restBatchToast = this.restBatchToast();
  _o.roomNoAvailQueueToast = this.roomNoAvailQueueToast();
  _o.cantUseNoPerson = this.cantUseNoPerson();
  _o.cantUseWorking = this.cantUseWorking();
  _o.queueCleared = this.queueCleared();
  _o.updateTime = this.updateTime();
  _o.dormLockUpdateTime = this.dormLockUpdateTime();
}
}

export class clz_Torappu_BuildingData_StationManageConstDataT implements flatbuffers.IGeneratedObject {
constructor(
  public cantWorkToastNoTiredChar: string|Uint8Array|null = null,
  public cantWorkToastNoAvailQueue: string|Uint8Array|null = null,
  public cantWorkToastNoNeed: string|Uint8Array|null = null,
  public cantRestToastNoTiredChar: string|Uint8Array|null = null,
  public cantRestToastNoAvailDorm: string|Uint8Array|null = null,
  public workBatchToast: string|Uint8Array|null = null,
  public restBatchToast: string|Uint8Array|null = null,
  public roomNoAvailQueueToast: string|Uint8Array|null = null,
  public cantUseNoPerson: string|Uint8Array|null = null,
  public cantUseWorking: string|Uint8Array|null = null,
  public queueCleared: string|Uint8Array|null = null,
  public updateTime: bigint = BigInt('0'),
  public dormLockUpdateTime: bigint = BigInt('0')
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const cantWorkToastNoTiredChar = (this.cantWorkToastNoTiredChar !== null ? builder.createString(this.cantWorkToastNoTiredChar!) : 0);
  const cantWorkToastNoAvailQueue = (this.cantWorkToastNoAvailQueue !== null ? builder.createString(this.cantWorkToastNoAvailQueue!) : 0);
  const cantWorkToastNoNeed = (this.cantWorkToastNoNeed !== null ? builder.createString(this.cantWorkToastNoNeed!) : 0);
  const cantRestToastNoTiredChar = (this.cantRestToastNoTiredChar !== null ? builder.createString(this.cantRestToastNoTiredChar!) : 0);
  const cantRestToastNoAvailDorm = (this.cantRestToastNoAvailDorm !== null ? builder.createString(this.cantRestToastNoAvailDorm!) : 0);
  const workBatchToast = (this.workBatchToast !== null ? builder.createString(this.workBatchToast!) : 0);
  const restBatchToast = (this.restBatchToast !== null ? builder.createString(this.restBatchToast!) : 0);
  const roomNoAvailQueueToast = (this.roomNoAvailQueueToast !== null ? builder.createString(this.roomNoAvailQueueToast!) : 0);
  const cantUseNoPerson = (this.cantUseNoPerson !== null ? builder.createString(this.cantUseNoPerson!) : 0);
  const cantUseWorking = (this.cantUseWorking !== null ? builder.createString(this.cantUseWorking!) : 0);
  const queueCleared = (this.queueCleared !== null ? builder.createString(this.queueCleared!) : 0);

  return clz_Torappu_BuildingData_StationManageConstData.createclz_Torappu_BuildingData_StationManageConstData(builder,
    cantWorkToastNoTiredChar,
    cantWorkToastNoAvailQueue,
    cantWorkToastNoNeed,
    cantRestToastNoTiredChar,
    cantRestToastNoAvailDorm,
    workBatchToast,
    restBatchToast,
    roomNoAvailQueueToast,
    cantUseNoPerson,
    cantUseWorking,
    queueCleared,
    this.updateTime,
    this.dormLockUpdateTime
  );
}
}
