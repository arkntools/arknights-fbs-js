// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_AttributeModifierData_AttributeModifier, clz_Torappu_AttributeModifierData_AttributeModifierT } from './clz-torappu-attribute-modifier-data-attribute-modifier.js';
import { enum__Torappu_AbnormalCombo } from './enum--torappu-abnormal-combo.js';
import { enum__Torappu_AbnormalFlag } from './enum--torappu-abnormal-flag.js';


export class clz_Torappu_AttributeModifierData implements flatbuffers.IUnpackableObject<clz_Torappu_AttributeModifierDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_AttributeModifierData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_AttributeModifierData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_AttributeModifierData):clz_Torappu_AttributeModifierData {
  return (obj || new clz_Torappu_AttributeModifierData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_AttributeModifierData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_AttributeModifierData):clz_Torappu_AttributeModifierData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_AttributeModifierData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

abnormalFlags(index: number):enum__Torappu_AbnormalFlag|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : null;
}

abnormalFlagsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

abnormalFlagsArray():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

abnormalImmunes(index: number):enum__Torappu_AbnormalFlag|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : null;
}

abnormalImmunesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

abnormalImmunesArray():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

abnormalAntis(index: number):enum__Torappu_AbnormalFlag|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : null;
}

abnormalAntisLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

abnormalAntisArray():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

abnormalCombos(index: number):enum__Torappu_AbnormalCombo|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : null;
}

abnormalCombosLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

abnormalCombosArray():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

abnormalComboImmunes(index: number):enum__Torappu_AbnormalCombo|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : null;
}

abnormalComboImmunesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

abnormalComboImmunesArray():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

attributeModifiers(index: number, obj?:clz_Torappu_AttributeModifierData_AttributeModifier):clz_Torappu_AttributeModifierData_AttributeModifier|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new clz_Torappu_AttributeModifierData_AttributeModifier()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

attributeModifiersLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_AttributeModifierData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addAbnormalFlags(builder:flatbuffers.Builder, abnormalFlagsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, abnormalFlagsOffset, 0);
}

static createAbnormalFlagsVector(builder:flatbuffers.Builder, data:enum__Torappu_AbnormalFlag[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static startAbnormalFlagsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addAbnormalImmunes(builder:flatbuffers.Builder, abnormalImmunesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, abnormalImmunesOffset, 0);
}

static createAbnormalImmunesVector(builder:flatbuffers.Builder, data:enum__Torappu_AbnormalFlag[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static startAbnormalImmunesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addAbnormalAntis(builder:flatbuffers.Builder, abnormalAntisOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, abnormalAntisOffset, 0);
}

static createAbnormalAntisVector(builder:flatbuffers.Builder, data:enum__Torappu_AbnormalFlag[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static startAbnormalAntisVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addAbnormalCombos(builder:flatbuffers.Builder, abnormalCombosOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, abnormalCombosOffset, 0);
}

static createAbnormalCombosVector(builder:flatbuffers.Builder, data:enum__Torappu_AbnormalCombo[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static startAbnormalCombosVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addAbnormalComboImmunes(builder:flatbuffers.Builder, abnormalComboImmunesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, abnormalComboImmunesOffset, 0);
}

static createAbnormalComboImmunesVector(builder:flatbuffers.Builder, data:enum__Torappu_AbnormalCombo[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static startAbnormalComboImmunesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addAttributeModifiers(builder:flatbuffers.Builder, attributeModifiersOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, attributeModifiersOffset, 0);
}

static createAttributeModifiersVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startAttributeModifiersVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_AttributeModifierData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_AttributeModifierData(builder:flatbuffers.Builder, abnormalFlagsOffset:flatbuffers.Offset, abnormalImmunesOffset:flatbuffers.Offset, abnormalAntisOffset:flatbuffers.Offset, abnormalCombosOffset:flatbuffers.Offset, abnormalComboImmunesOffset:flatbuffers.Offset, attributeModifiersOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_AttributeModifierData.startclz_Torappu_AttributeModifierData(builder);
  clz_Torappu_AttributeModifierData.addAbnormalFlags(builder, abnormalFlagsOffset);
  clz_Torappu_AttributeModifierData.addAbnormalImmunes(builder, abnormalImmunesOffset);
  clz_Torappu_AttributeModifierData.addAbnormalAntis(builder, abnormalAntisOffset);
  clz_Torappu_AttributeModifierData.addAbnormalCombos(builder, abnormalCombosOffset);
  clz_Torappu_AttributeModifierData.addAbnormalComboImmunes(builder, abnormalComboImmunesOffset);
  clz_Torappu_AttributeModifierData.addAttributeModifiers(builder, attributeModifiersOffset);
  return clz_Torappu_AttributeModifierData.endclz_Torappu_AttributeModifierData(builder);
}

unpack(): clz_Torappu_AttributeModifierDataT {
  return new clz_Torappu_AttributeModifierDataT(
    this.bb!.createScalarList<enum__Torappu_AbnormalFlag>(this.abnormalFlags.bind(this), this.abnormalFlagsLength()),
    this.bb!.createScalarList<enum__Torappu_AbnormalFlag>(this.abnormalImmunes.bind(this), this.abnormalImmunesLength()),
    this.bb!.createScalarList<enum__Torappu_AbnormalFlag>(this.abnormalAntis.bind(this), this.abnormalAntisLength()),
    this.bb!.createScalarList<enum__Torappu_AbnormalCombo>(this.abnormalCombos.bind(this), this.abnormalCombosLength()),
    this.bb!.createScalarList<enum__Torappu_AbnormalCombo>(this.abnormalComboImmunes.bind(this), this.abnormalComboImmunesLength()),
    this.bb!.createObjList<clz_Torappu_AttributeModifierData_AttributeModifier, clz_Torappu_AttributeModifierData_AttributeModifierT>(this.attributeModifiers.bind(this), this.attributeModifiersLength())
  );
}


unpackTo(_o: clz_Torappu_AttributeModifierDataT): void {
  _o.abnormalFlags = this.bb!.createScalarList<enum__Torappu_AbnormalFlag>(this.abnormalFlags.bind(this), this.abnormalFlagsLength());
  _o.abnormalImmunes = this.bb!.createScalarList<enum__Torappu_AbnormalFlag>(this.abnormalImmunes.bind(this), this.abnormalImmunesLength());
  _o.abnormalAntis = this.bb!.createScalarList<enum__Torappu_AbnormalFlag>(this.abnormalAntis.bind(this), this.abnormalAntisLength());
  _o.abnormalCombos = this.bb!.createScalarList<enum__Torappu_AbnormalCombo>(this.abnormalCombos.bind(this), this.abnormalCombosLength());
  _o.abnormalComboImmunes = this.bb!.createScalarList<enum__Torappu_AbnormalCombo>(this.abnormalComboImmunes.bind(this), this.abnormalComboImmunesLength());
  _o.attributeModifiers = this.bb!.createObjList<clz_Torappu_AttributeModifierData_AttributeModifier, clz_Torappu_AttributeModifierData_AttributeModifierT>(this.attributeModifiers.bind(this), this.attributeModifiersLength());
}
}

export class clz_Torappu_AttributeModifierDataT implements flatbuffers.IGeneratedObject {
constructor(
  public abnormalFlags: (enum__Torappu_AbnormalFlag)[] = [],
  public abnormalImmunes: (enum__Torappu_AbnormalFlag)[] = [],
  public abnormalAntis: (enum__Torappu_AbnormalFlag)[] = [],
  public abnormalCombos: (enum__Torappu_AbnormalCombo)[] = [],
  public abnormalComboImmunes: (enum__Torappu_AbnormalCombo)[] = [],
  public attributeModifiers: (clz_Torappu_AttributeModifierData_AttributeModifierT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const abnormalFlags = clz_Torappu_AttributeModifierData.createAbnormalFlagsVector(builder, this.abnormalFlags);
  const abnormalImmunes = clz_Torappu_AttributeModifierData.createAbnormalImmunesVector(builder, this.abnormalImmunes);
  const abnormalAntis = clz_Torappu_AttributeModifierData.createAbnormalAntisVector(builder, this.abnormalAntis);
  const abnormalCombos = clz_Torappu_AttributeModifierData.createAbnormalCombosVector(builder, this.abnormalCombos);
  const abnormalComboImmunes = clz_Torappu_AttributeModifierData.createAbnormalComboImmunesVector(builder, this.abnormalComboImmunes);
  const attributeModifiers = clz_Torappu_AttributeModifierData.createAttributeModifiersVector(builder, builder.createObjectOffsetList(this.attributeModifiers));

  return clz_Torappu_AttributeModifierData.createclz_Torappu_AttributeModifierData(builder,
    abnormalFlags,
    abnormalImmunes,
    abnormalAntis,
    abnormalCombos,
    abnormalComboImmunes,
    attributeModifiers
  );
}
}
