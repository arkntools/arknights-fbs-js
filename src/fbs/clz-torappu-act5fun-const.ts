// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_Act5funConst implements flatbuffers.IUnpackableObject<clz_Torappu_Act5funConstT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Act5funConst {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Act5funConst(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act5funConst):clz_Torappu_Act5funConst {
  return (obj || new clz_Torappu_Act5funConst()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Act5funConst(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act5funConst):clz_Torappu_Act5funConst {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Act5funConst()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

storyStageId():string|null
storyStageId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
storyStageId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

betStageId():string|null
betStageId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
betStageId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

storyRoundnumber():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

betRoundnumber():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

initialFundStory():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

initialFundBet():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

minFundDrop():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

maxFund():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

selectTime():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

npcCountInRound():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

selectDescription():string|null
selectDescription(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
selectDescription(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

selectLeftDescription():string|null
selectLeftDescription(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
selectLeftDescription(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

selectRightDescription():string|null
selectRightDescription(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
selectRightDescription(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

fundDescription():string|null
fundDescription(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
fundDescription(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

confirmDescription():string|null
confirmDescription(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
confirmDescription(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

loadingDescription():string|null
loadingDescription(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
loadingDescription(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_Act5funConst(builder:flatbuffers.Builder) {
  builder.startObject(16);
}

static addStoryStageId(builder:flatbuffers.Builder, storyStageIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, storyStageIdOffset, 0);
}

static addBetStageId(builder:flatbuffers.Builder, betStageIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, betStageIdOffset, 0);
}

static addStoryRoundnumber(builder:flatbuffers.Builder, storyRoundnumber:number) {
  builder.addFieldInt32(2, storyRoundnumber, 0);
}

static addBetRoundnumber(builder:flatbuffers.Builder, betRoundnumber:number) {
  builder.addFieldInt32(3, betRoundnumber, 0);
}

static addInitialFundStory(builder:flatbuffers.Builder, initialFundStory:number) {
  builder.addFieldInt32(4, initialFundStory, 0);
}

static addInitialFundBet(builder:flatbuffers.Builder, initialFundBet:number) {
  builder.addFieldInt32(5, initialFundBet, 0);
}

static addMinFundDrop(builder:flatbuffers.Builder, minFundDrop:number) {
  builder.addFieldInt32(6, minFundDrop, 0);
}

static addMaxFund(builder:flatbuffers.Builder, maxFund:bigint) {
  builder.addFieldInt64(7, maxFund, BigInt('0'));
}

static addSelectTime(builder:flatbuffers.Builder, selectTime:number) {
  builder.addFieldFloat32(8, selectTime, 0.0);
}

static addNpcCountInRound(builder:flatbuffers.Builder, npcCountInRound:number) {
  builder.addFieldInt32(9, npcCountInRound, 0);
}

static addSelectDescription(builder:flatbuffers.Builder, selectDescriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, selectDescriptionOffset, 0);
}

static addSelectLeftDescription(builder:flatbuffers.Builder, selectLeftDescriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, selectLeftDescriptionOffset, 0);
}

static addSelectRightDescription(builder:flatbuffers.Builder, selectRightDescriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, selectRightDescriptionOffset, 0);
}

static addFundDescription(builder:flatbuffers.Builder, fundDescriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, fundDescriptionOffset, 0);
}

static addConfirmDescription(builder:flatbuffers.Builder, confirmDescriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, confirmDescriptionOffset, 0);
}

static addLoadingDescription(builder:flatbuffers.Builder, loadingDescriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(15, loadingDescriptionOffset, 0);
}

static endclz_Torappu_Act5funConst(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Act5funConst(builder:flatbuffers.Builder, storyStageIdOffset:flatbuffers.Offset, betStageIdOffset:flatbuffers.Offset, storyRoundnumber:number, betRoundnumber:number, initialFundStory:number, initialFundBet:number, minFundDrop:number, maxFund:bigint, selectTime:number, npcCountInRound:number, selectDescriptionOffset:flatbuffers.Offset, selectLeftDescriptionOffset:flatbuffers.Offset, selectRightDescriptionOffset:flatbuffers.Offset, fundDescriptionOffset:flatbuffers.Offset, confirmDescriptionOffset:flatbuffers.Offset, loadingDescriptionOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_Act5funConst.startclz_Torappu_Act5funConst(builder);
  clz_Torappu_Act5funConst.addStoryStageId(builder, storyStageIdOffset);
  clz_Torappu_Act5funConst.addBetStageId(builder, betStageIdOffset);
  clz_Torappu_Act5funConst.addStoryRoundnumber(builder, storyRoundnumber);
  clz_Torappu_Act5funConst.addBetRoundnumber(builder, betRoundnumber);
  clz_Torappu_Act5funConst.addInitialFundStory(builder, initialFundStory);
  clz_Torappu_Act5funConst.addInitialFundBet(builder, initialFundBet);
  clz_Torappu_Act5funConst.addMinFundDrop(builder, minFundDrop);
  clz_Torappu_Act5funConst.addMaxFund(builder, maxFund);
  clz_Torappu_Act5funConst.addSelectTime(builder, selectTime);
  clz_Torappu_Act5funConst.addNpcCountInRound(builder, npcCountInRound);
  clz_Torappu_Act5funConst.addSelectDescription(builder, selectDescriptionOffset);
  clz_Torappu_Act5funConst.addSelectLeftDescription(builder, selectLeftDescriptionOffset);
  clz_Torappu_Act5funConst.addSelectRightDescription(builder, selectRightDescriptionOffset);
  clz_Torappu_Act5funConst.addFundDescription(builder, fundDescriptionOffset);
  clz_Torappu_Act5funConst.addConfirmDescription(builder, confirmDescriptionOffset);
  clz_Torappu_Act5funConst.addLoadingDescription(builder, loadingDescriptionOffset);
  return clz_Torappu_Act5funConst.endclz_Torappu_Act5funConst(builder);
}

unpack(): clz_Torappu_Act5funConstT {
  return new clz_Torappu_Act5funConstT(
    this.storyStageId(),
    this.betStageId(),
    this.storyRoundnumber(),
    this.betRoundnumber(),
    this.initialFundStory(),
    this.initialFundBet(),
    this.minFundDrop(),
    this.maxFund(),
    this.selectTime(),
    this.npcCountInRound(),
    this.selectDescription(),
    this.selectLeftDescription(),
    this.selectRightDescription(),
    this.fundDescription(),
    this.confirmDescription(),
    this.loadingDescription()
  );
}


unpackTo(_o: clz_Torappu_Act5funConstT): void {
  _o.storyStageId = this.storyStageId();
  _o.betStageId = this.betStageId();
  _o.storyRoundnumber = this.storyRoundnumber();
  _o.betRoundnumber = this.betRoundnumber();
  _o.initialFundStory = this.initialFundStory();
  _o.initialFundBet = this.initialFundBet();
  _o.minFundDrop = this.minFundDrop();
  _o.maxFund = this.maxFund();
  _o.selectTime = this.selectTime();
  _o.npcCountInRound = this.npcCountInRound();
  _o.selectDescription = this.selectDescription();
  _o.selectLeftDescription = this.selectLeftDescription();
  _o.selectRightDescription = this.selectRightDescription();
  _o.fundDescription = this.fundDescription();
  _o.confirmDescription = this.confirmDescription();
  _o.loadingDescription = this.loadingDescription();
}
}

export class clz_Torappu_Act5funConstT implements flatbuffers.IGeneratedObject {
constructor(
  public storyStageId: string|Uint8Array|null = null,
  public betStageId: string|Uint8Array|null = null,
  public storyRoundnumber: number = 0,
  public betRoundnumber: number = 0,
  public initialFundStory: number = 0,
  public initialFundBet: number = 0,
  public minFundDrop: number = 0,
  public maxFund: bigint = BigInt('0'),
  public selectTime: number = 0.0,
  public npcCountInRound: number = 0,
  public selectDescription: string|Uint8Array|null = null,
  public selectLeftDescription: string|Uint8Array|null = null,
  public selectRightDescription: string|Uint8Array|null = null,
  public fundDescription: string|Uint8Array|null = null,
  public confirmDescription: string|Uint8Array|null = null,
  public loadingDescription: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const storyStageId = (this.storyStageId !== null ? builder.createString(this.storyStageId!) : 0);
  const betStageId = (this.betStageId !== null ? builder.createString(this.betStageId!) : 0);
  const selectDescription = (this.selectDescription !== null ? builder.createString(this.selectDescription!) : 0);
  const selectLeftDescription = (this.selectLeftDescription !== null ? builder.createString(this.selectLeftDescription!) : 0);
  const selectRightDescription = (this.selectRightDescription !== null ? builder.createString(this.selectRightDescription!) : 0);
  const fundDescription = (this.fundDescription !== null ? builder.createString(this.fundDescription!) : 0);
  const confirmDescription = (this.confirmDescription !== null ? builder.createString(this.confirmDescription!) : 0);
  const loadingDescription = (this.loadingDescription !== null ? builder.createString(this.loadingDescription!) : 0);

  return clz_Torappu_Act5funConst.createclz_Torappu_Act5funConst(builder,
    storyStageId,
    betStageId,
    this.storyRoundnumber,
    this.betRoundnumber,
    this.initialFundStory,
    this.initialFundBet,
    this.minFundDrop,
    this.maxFund,
    this.selectTime,
    this.npcCountInRound,
    selectDescription,
    selectLeftDescription,
    selectRightDescription,
    fundDescription,
    confirmDescription,
    loadingDescription
  );
}
}
