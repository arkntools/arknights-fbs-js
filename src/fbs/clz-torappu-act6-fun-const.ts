// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_Act6FunConst implements flatbuffers.IUnpackableObject<clz_Torappu_Act6FunConstT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Act6FunConst {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Act6FunConst(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act6FunConst):clz_Torappu_Act6FunConst {
  return (obj || new clz_Torappu_Act6FunConst()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Act6FunConst(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act6FunConst):clz_Torappu_Act6FunConst {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Act6FunConst()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

defaultStage():string|null
defaultStage(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
defaultStage(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

achievementMaxNumber():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

specialNumber():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

characterTipToast():string|null
characterTipToast(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
characterTipToast(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

functionToastList(index: number):string
functionToastList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
functionToastList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

functionToastListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_Act6FunConst(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addDefaultStage(builder:flatbuffers.Builder, defaultStageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, defaultStageOffset, 0);
}

static addAchievementMaxNumber(builder:flatbuffers.Builder, achievementMaxNumber:number) {
  builder.addFieldInt32(1, achievementMaxNumber, 0);
}

static addSpecialNumber(builder:flatbuffers.Builder, specialNumber:number) {
  builder.addFieldInt32(2, specialNumber, 0);
}

static addCharacterTipToast(builder:flatbuffers.Builder, characterTipToastOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, characterTipToastOffset, 0);
}

static addFunctionToastList(builder:flatbuffers.Builder, functionToastListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, functionToastListOffset, 0);
}

static createFunctionToastListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startFunctionToastListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_Act6FunConst(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Act6FunConst(builder:flatbuffers.Builder, defaultStageOffset:flatbuffers.Offset, achievementMaxNumber:number, specialNumber:number, characterTipToastOffset:flatbuffers.Offset, functionToastListOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_Act6FunConst.startclz_Torappu_Act6FunConst(builder);
  clz_Torappu_Act6FunConst.addDefaultStage(builder, defaultStageOffset);
  clz_Torappu_Act6FunConst.addAchievementMaxNumber(builder, achievementMaxNumber);
  clz_Torappu_Act6FunConst.addSpecialNumber(builder, specialNumber);
  clz_Torappu_Act6FunConst.addCharacterTipToast(builder, characterTipToastOffset);
  clz_Torappu_Act6FunConst.addFunctionToastList(builder, functionToastListOffset);
  return clz_Torappu_Act6FunConst.endclz_Torappu_Act6FunConst(builder);
}

unpack(): clz_Torappu_Act6FunConstT {
  return new clz_Torappu_Act6FunConstT(
    this.defaultStage(),
    this.achievementMaxNumber(),
    this.specialNumber(),
    this.characterTipToast(),
    this.bb!.createScalarList<string>(this.functionToastList.bind(this), this.functionToastListLength())
  );
}


unpackTo(_o: clz_Torappu_Act6FunConstT): void {
  _o.defaultStage = this.defaultStage();
  _o.achievementMaxNumber = this.achievementMaxNumber();
  _o.specialNumber = this.specialNumber();
  _o.characterTipToast = this.characterTipToast();
  _o.functionToastList = this.bb!.createScalarList<string>(this.functionToastList.bind(this), this.functionToastListLength());
}
}

export class clz_Torappu_Act6FunConstT implements flatbuffers.IGeneratedObject {
constructor(
  public defaultStage: string|Uint8Array|null = null,
  public achievementMaxNumber: number = 0,
  public specialNumber: number = 0,
  public characterTipToast: string|Uint8Array|null = null,
  public functionToastList: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const defaultStage = (this.defaultStage !== null ? builder.createString(this.defaultStage!) : 0);
  const characterTipToast = (this.characterTipToast !== null ? builder.createString(this.characterTipToast!) : 0);
  const functionToastList = clz_Torappu_Act6FunConst.createFunctionToastListVector(builder, builder.createObjectOffsetList(this.functionToastList));

  return clz_Torappu_Act6FunConst.createclz_Torappu_Act6FunConst(builder,
    defaultStage,
    this.achievementMaxNumber,
    this.specialNumber,
    characterTipToast,
    functionToastList
  );
}
}
