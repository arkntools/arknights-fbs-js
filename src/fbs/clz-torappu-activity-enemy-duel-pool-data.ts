// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActivityEnemyDuelPoolData implements flatbuffers.IUnpackableObject<clz_Torappu_ActivityEnemyDuelPoolDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActivityEnemyDuelPoolData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActivityEnemyDuelPoolData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityEnemyDuelPoolData):clz_Torappu_ActivityEnemyDuelPoolData {
  return (obj || new clz_Torappu_ActivityEnemyDuelPoolData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActivityEnemyDuelPoolData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityEnemyDuelPoolData):clz_Torappu_ActivityEnemyDuelPoolData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActivityEnemyDuelPoolData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

enemyId():string|null
enemyId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
enemyId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

poolNormal():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

poolSmallEnemy():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

poolBoss():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

poolMusic():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

poolNoSurpriseEnemy():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

static startclz_Torappu_ActivityEnemyDuelPoolData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addEnemyId(builder:flatbuffers.Builder, enemyIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, enemyIdOffset, 0);
}

static addPoolNormal(builder:flatbuffers.Builder, poolNormal:number) {
  builder.addFieldFloat32(1, poolNormal, 0.0);
}

static addPoolSmallEnemy(builder:flatbuffers.Builder, poolSmallEnemy:number) {
  builder.addFieldFloat32(2, poolSmallEnemy, 0.0);
}

static addPoolBoss(builder:flatbuffers.Builder, poolBoss:number) {
  builder.addFieldFloat32(3, poolBoss, 0.0);
}

static addPoolMusic(builder:flatbuffers.Builder, poolMusic:number) {
  builder.addFieldFloat32(4, poolMusic, 0.0);
}

static addPoolNoSurpriseEnemy(builder:flatbuffers.Builder, poolNoSurpriseEnemy:number) {
  builder.addFieldFloat32(5, poolNoSurpriseEnemy, 0.0);
}

static endclz_Torappu_ActivityEnemyDuelPoolData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActivityEnemyDuelPoolData(builder:flatbuffers.Builder, enemyIdOffset:flatbuffers.Offset, poolNormal:number, poolSmallEnemy:number, poolBoss:number, poolMusic:number, poolNoSurpriseEnemy:number):flatbuffers.Offset {
  clz_Torappu_ActivityEnemyDuelPoolData.startclz_Torappu_ActivityEnemyDuelPoolData(builder);
  clz_Torappu_ActivityEnemyDuelPoolData.addEnemyId(builder, enemyIdOffset);
  clz_Torappu_ActivityEnemyDuelPoolData.addPoolNormal(builder, poolNormal);
  clz_Torappu_ActivityEnemyDuelPoolData.addPoolSmallEnemy(builder, poolSmallEnemy);
  clz_Torappu_ActivityEnemyDuelPoolData.addPoolBoss(builder, poolBoss);
  clz_Torappu_ActivityEnemyDuelPoolData.addPoolMusic(builder, poolMusic);
  clz_Torappu_ActivityEnemyDuelPoolData.addPoolNoSurpriseEnemy(builder, poolNoSurpriseEnemy);
  return clz_Torappu_ActivityEnemyDuelPoolData.endclz_Torappu_ActivityEnemyDuelPoolData(builder);
}

unpack(): clz_Torappu_ActivityEnemyDuelPoolDataT {
  return new clz_Torappu_ActivityEnemyDuelPoolDataT(
    this.enemyId(),
    this.poolNormal(),
    this.poolSmallEnemy(),
    this.poolBoss(),
    this.poolMusic(),
    this.poolNoSurpriseEnemy()
  );
}


unpackTo(_o: clz_Torappu_ActivityEnemyDuelPoolDataT): void {
  _o.enemyId = this.enemyId();
  _o.poolNormal = this.poolNormal();
  _o.poolSmallEnemy = this.poolSmallEnemy();
  _o.poolBoss = this.poolBoss();
  _o.poolMusic = this.poolMusic();
  _o.poolNoSurpriseEnemy = this.poolNoSurpriseEnemy();
}
}

export class clz_Torappu_ActivityEnemyDuelPoolDataT implements flatbuffers.IGeneratedObject {
constructor(
  public enemyId: string|Uint8Array|null = null,
  public poolNormal: number = 0.0,
  public poolSmallEnemy: number = 0.0,
  public poolBoss: number = 0.0,
  public poolMusic: number = 0.0,
  public poolNoSurpriseEnemy: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const enemyId = (this.enemyId !== null ? builder.createString(this.enemyId!) : 0);

  return clz_Torappu_ActivityEnemyDuelPoolData.createclz_Torappu_ActivityEnemyDuelPoolData(builder,
    enemyId,
    this.poolNormal,
    this.poolSmallEnemy,
    this.poolBoss,
    this.poolMusic,
    this.poolNoSurpriseEnemy
  );
}
}
