// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_CommonAvailCheck, clz_Torappu_CommonAvailCheckT } from './clz-torappu-common-avail-check.js';


export class clz_Torappu_BattleFinishDisplayMetaItem implements flatbuffers.IUnpackableObject<clz_Torappu_BattleFinishDisplayMetaItemT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_BattleFinishDisplayMetaItem {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_BattleFinishDisplayMetaItem(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BattleFinishDisplayMetaItem):clz_Torappu_BattleFinishDisplayMetaItem {
  return (obj || new clz_Torappu_BattleFinishDisplayMetaItem()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_BattleFinishDisplayMetaItem(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BattleFinishDisplayMetaItem):clz_Torappu_BattleFinishDisplayMetaItem {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_BattleFinishDisplayMetaItem()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

battleFinishDisplayKey():string|null
battleFinishDisplayKey(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
battleFinishDisplayKey(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

isAllStageActive():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

stageIdList(index: number):string
stageIdList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
stageIdList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

stageIdListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

availCheck(obj?:clz_Torappu_CommonAvailCheck):clz_Torappu_CommonAvailCheck|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_Torappu_CommonAvailCheck()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

relateActId():string|null
relateActId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
relateActId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

overrideStageName():string|null
overrideStageName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
overrideStageName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

signal():string|null
signal(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
signal(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

overrideCharWord():string|null
overrideCharWord(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
overrideCharWord(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_BattleFinishDisplayMetaItem(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addBattleFinishDisplayKey(builder:flatbuffers.Builder, battleFinishDisplayKeyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, battleFinishDisplayKeyOffset, 0);
}

static addIsAllStageActive(builder:flatbuffers.Builder, isAllStageActive:boolean) {
  builder.addFieldInt8(1, +isAllStageActive, +false);
}

static addStageIdList(builder:flatbuffers.Builder, stageIdListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, stageIdListOffset, 0);
}

static createStageIdListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startStageIdListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addAvailCheck(builder:flatbuffers.Builder, availCheckOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, availCheckOffset, 0);
}

static addRelateActId(builder:flatbuffers.Builder, relateActIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, relateActIdOffset, 0);
}

static addOverrideStageName(builder:flatbuffers.Builder, overrideStageNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, overrideStageNameOffset, 0);
}

static addSignal(builder:flatbuffers.Builder, signalOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, signalOffset, 0);
}

static addOverrideCharWord(builder:flatbuffers.Builder, overrideCharWordOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, overrideCharWordOffset, 0);
}

static endclz_Torappu_BattleFinishDisplayMetaItem(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_BattleFinishDisplayMetaItemT {
  return new clz_Torappu_BattleFinishDisplayMetaItemT(
    this.battleFinishDisplayKey(),
    this.isAllStageActive(),
    this.bb!.createScalarList<string>(this.stageIdList.bind(this), this.stageIdListLength()),
    (this.availCheck() !== null ? this.availCheck()!.unpack() : null),
    this.relateActId(),
    this.overrideStageName(),
    this.signal(),
    this.overrideCharWord()
  );
}


unpackTo(_o: clz_Torappu_BattleFinishDisplayMetaItemT): void {
  _o.battleFinishDisplayKey = this.battleFinishDisplayKey();
  _o.isAllStageActive = this.isAllStageActive();
  _o.stageIdList = this.bb!.createScalarList<string>(this.stageIdList.bind(this), this.stageIdListLength());
  _o.availCheck = (this.availCheck() !== null ? this.availCheck()!.unpack() : null);
  _o.relateActId = this.relateActId();
  _o.overrideStageName = this.overrideStageName();
  _o.signal = this.signal();
  _o.overrideCharWord = this.overrideCharWord();
}
}

export class clz_Torappu_BattleFinishDisplayMetaItemT implements flatbuffers.IGeneratedObject {
constructor(
  public battleFinishDisplayKey: string|Uint8Array|null = null,
  public isAllStageActive: boolean = false,
  public stageIdList: (string)[] = [],
  public availCheck: clz_Torappu_CommonAvailCheckT|null = null,
  public relateActId: string|Uint8Array|null = null,
  public overrideStageName: string|Uint8Array|null = null,
  public signal: string|Uint8Array|null = null,
  public overrideCharWord: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const battleFinishDisplayKey = (this.battleFinishDisplayKey !== null ? builder.createString(this.battleFinishDisplayKey!) : 0);
  const stageIdList = clz_Torappu_BattleFinishDisplayMetaItem.createStageIdListVector(builder, builder.createObjectOffsetList(this.stageIdList));
  const availCheck = (this.availCheck !== null ? this.availCheck!.pack(builder) : 0);
  const relateActId = (this.relateActId !== null ? builder.createString(this.relateActId!) : 0);
  const overrideStageName = (this.overrideStageName !== null ? builder.createString(this.overrideStageName!) : 0);
  const signal = (this.signal !== null ? builder.createString(this.signal!) : 0);
  const overrideCharWord = (this.overrideCharWord !== null ? builder.createString(this.overrideCharWord!) : 0);

  clz_Torappu_BattleFinishDisplayMetaItem.startclz_Torappu_BattleFinishDisplayMetaItem(builder);
  clz_Torappu_BattleFinishDisplayMetaItem.addBattleFinishDisplayKey(builder, battleFinishDisplayKey);
  clz_Torappu_BattleFinishDisplayMetaItem.addIsAllStageActive(builder, this.isAllStageActive);
  clz_Torappu_BattleFinishDisplayMetaItem.addStageIdList(builder, stageIdList);
  clz_Torappu_BattleFinishDisplayMetaItem.addAvailCheck(builder, availCheck);
  clz_Torappu_BattleFinishDisplayMetaItem.addRelateActId(builder, relateActId);
  clz_Torappu_BattleFinishDisplayMetaItem.addOverrideStageName(builder, overrideStageName);
  clz_Torappu_BattleFinishDisplayMetaItem.addSignal(builder, signal);
  clz_Torappu_BattleFinishDisplayMetaItem.addOverrideCharWord(builder, overrideCharWord);

  return clz_Torappu_BattleFinishDisplayMetaItem.endclz_Torappu_BattleFinishDisplayMetaItem(builder);
}
}
