// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SandboxV2BaseUpdateCondition implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxV2BaseUpdateConditionT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxV2BaseUpdateCondition {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxV2BaseUpdateCondition(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2BaseUpdateCondition):clz_Torappu_SandboxV2BaseUpdateCondition {
  return (obj || new clz_Torappu_SandboxV2BaseUpdateCondition()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxV2BaseUpdateCondition(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2BaseUpdateCondition):clz_Torappu_SandboxV2BaseUpdateCondition {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxV2BaseUpdateCondition()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

desc():string|null
desc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
desc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

limitCond():string|null
limitCond(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
limitCond(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

param(index: number):string
param(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
param(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

paramLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SandboxV2BaseUpdateCondition(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addDesc(builder:flatbuffers.Builder, descOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, descOffset, 0);
}

static addLimitCond(builder:flatbuffers.Builder, limitCondOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, limitCondOffset, 0);
}

static addParam(builder:flatbuffers.Builder, paramOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, paramOffset, 0);
}

static createParamVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startParamVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_SandboxV2BaseUpdateCondition(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxV2BaseUpdateCondition(builder:flatbuffers.Builder, descOffset:flatbuffers.Offset, limitCondOffset:flatbuffers.Offset, paramOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SandboxV2BaseUpdateCondition.startclz_Torappu_SandboxV2BaseUpdateCondition(builder);
  clz_Torappu_SandboxV2BaseUpdateCondition.addDesc(builder, descOffset);
  clz_Torappu_SandboxV2BaseUpdateCondition.addLimitCond(builder, limitCondOffset);
  clz_Torappu_SandboxV2BaseUpdateCondition.addParam(builder, paramOffset);
  return clz_Torappu_SandboxV2BaseUpdateCondition.endclz_Torappu_SandboxV2BaseUpdateCondition(builder);
}

unpack(): clz_Torappu_SandboxV2BaseUpdateConditionT {
  return new clz_Torappu_SandboxV2BaseUpdateConditionT(
    this.desc(),
    this.limitCond(),
    this.bb!.createScalarList<string>(this.param.bind(this), this.paramLength())
  );
}


unpackTo(_o: clz_Torappu_SandboxV2BaseUpdateConditionT): void {
  _o.desc = this.desc();
  _o.limitCond = this.limitCond();
  _o.param = this.bb!.createScalarList<string>(this.param.bind(this), this.paramLength());
}
}

export class clz_Torappu_SandboxV2BaseUpdateConditionT implements flatbuffers.IGeneratedObject {
constructor(
  public desc: string|Uint8Array|null = null,
  public limitCond: string|Uint8Array|null = null,
  public param: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const desc = (this.desc !== null ? builder.createString(this.desc!) : 0);
  const limitCond = (this.limitCond !== null ? builder.createString(this.limitCond!) : 0);
  const param = clz_Torappu_SandboxV2BaseUpdateCondition.createParamVector(builder, builder.createObjectOffsetList(this.param));

  return clz_Torappu_SandboxV2BaseUpdateCondition.createclz_Torappu_SandboxV2BaseUpdateCondition(builder,
    desc,
    limitCond,
    param
  );
}
}
