// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement implements flatbuffers.IUnpackableObject<clz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacementT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement):clz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement {
  return (obj || new clz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement):clz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

enrollId():string|null
enrollId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
enrollId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ruleDesc():string|null
ruleDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
ruleDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addEnrollId(builder:flatbuffers.Builder, enrollIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, enrollIdOffset, 0);
}

static addRuleDesc(builder:flatbuffers.Builder, ruleDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ruleDescOffset, 0);
}

static endclz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement(builder:flatbuffers.Builder, enrollIdOffset:flatbuffers.Offset, ruleDescOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement.startclz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement(builder);
  clz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement.addEnrollId(builder, enrollIdOffset);
  clz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement.addRuleDesc(builder, ruleDescOffset);
  return clz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement.endclz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement(builder);
}

unpack(): clz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacementT {
  return new clz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacementT(
    this.enrollId(),
    this.ruleDesc()
  );
}


unpackTo(_o: clz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacementT): void {
  _o.enrollId = this.enrollId();
  _o.ruleDesc = this.ruleDesc();
}
}

export class clz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacementT implements flatbuffers.IGeneratedObject {
constructor(
  public enrollId: string|Uint8Array|null = null,
  public ruleDesc: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const enrollId = (this.enrollId !== null ? builder.createString(this.enrollId!) : 0);
  const ruleDesc = (this.ruleDesc !== null ? builder.createString(this.ruleDesc!) : 0);

  return clz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement.createclz_Torappu_RoguelikeTopicDifficulty_RuleDescReplacement(builder,
    enrollId,
    ruleDesc
  );
}
}
