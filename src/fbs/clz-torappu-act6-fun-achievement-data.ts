// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_Act6FunAchievementType } from './enum--torappu-act6-fun-achievement-type.js';


export class clz_Torappu_Act6FunAchievementData implements flatbuffers.IUnpackableObject<clz_Torappu_Act6FunAchievementDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Act6FunAchievementData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Act6FunAchievementData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act6FunAchievementData):clz_Torappu_Act6FunAchievementData {
  return (obj || new clz_Torappu_Act6FunAchievementData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Act6FunAchievementData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act6FunAchievementData):clz_Torappu_Act6FunAchievementData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Act6FunAchievementData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

achievementId():string|null
achievementId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
achievementId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

achievementType():enum__Torappu_Act6FunAchievementType {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_Act6FunAchievementType.NORMAL;
}

description():string|null
description(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
description(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

coverDesc():string|null
coverDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
coverDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_Act6FunAchievementData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addAchievementId(builder:flatbuffers.Builder, achievementIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, achievementIdOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(1, sortId, 0);
}

static addAchievementType(builder:flatbuffers.Builder, achievementType:enum__Torappu_Act6FunAchievementType) {
  builder.addFieldInt32(2, achievementType, enum__Torappu_Act6FunAchievementType.NORMAL);
}

static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, descriptionOffset, 0);
}

static addCoverDesc(builder:flatbuffers.Builder, coverDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, coverDescOffset, 0);
}

static endclz_Torappu_Act6FunAchievementData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Act6FunAchievementData(builder:flatbuffers.Builder, achievementIdOffset:flatbuffers.Offset, sortId:number, achievementType:enum__Torappu_Act6FunAchievementType, descriptionOffset:flatbuffers.Offset, coverDescOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_Act6FunAchievementData.startclz_Torappu_Act6FunAchievementData(builder);
  clz_Torappu_Act6FunAchievementData.addAchievementId(builder, achievementIdOffset);
  clz_Torappu_Act6FunAchievementData.addSortId(builder, sortId);
  clz_Torappu_Act6FunAchievementData.addAchievementType(builder, achievementType);
  clz_Torappu_Act6FunAchievementData.addDescription(builder, descriptionOffset);
  clz_Torappu_Act6FunAchievementData.addCoverDesc(builder, coverDescOffset);
  return clz_Torappu_Act6FunAchievementData.endclz_Torappu_Act6FunAchievementData(builder);
}

unpack(): clz_Torappu_Act6FunAchievementDataT {
  return new clz_Torappu_Act6FunAchievementDataT(
    this.achievementId(),
    this.sortId(),
    this.achievementType(),
    this.description(),
    this.coverDesc()
  );
}


unpackTo(_o: clz_Torappu_Act6FunAchievementDataT): void {
  _o.achievementId = this.achievementId();
  _o.sortId = this.sortId();
  _o.achievementType = this.achievementType();
  _o.description = this.description();
  _o.coverDesc = this.coverDesc();
}
}

export class clz_Torappu_Act6FunAchievementDataT implements flatbuffers.IGeneratedObject {
constructor(
  public achievementId: string|Uint8Array|null = null,
  public sortId: number = 0,
  public achievementType: enum__Torappu_Act6FunAchievementType = enum__Torappu_Act6FunAchievementType.NORMAL,
  public description: string|Uint8Array|null = null,
  public coverDesc: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const achievementId = (this.achievementId !== null ? builder.createString(this.achievementId!) : 0);
  const description = (this.description !== null ? builder.createString(this.description!) : 0);
  const coverDesc = (this.coverDesc !== null ? builder.createString(this.coverDesc!) : 0);

  return clz_Torappu_Act6FunAchievementData.createclz_Torappu_Act6FunAchievementData(builder,
    achievementId,
    this.sortId,
    this.achievementType,
    description,
    coverDesc
  );
}
}
