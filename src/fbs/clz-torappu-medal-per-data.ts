// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_MedalExpireTime, clz_Torappu_MedalExpireTimeT } from './clz-torappu-medal-expire-time.js';
import { clz_Torappu_MedalRewardGroupData, clz_Torappu_MedalRewardGroupDataT } from './clz-torappu-medal-reward-group-data.js';
import { enum__Torappu_MedalRarity } from './enum--torappu-medal-rarity.js';


export class clz_Torappu_MedalPerData implements flatbuffers.IUnpackableObject<clz_Torappu_MedalPerDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_MedalPerData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_MedalPerData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_MedalPerData):clz_Torappu_MedalPerData {
  return (obj || new clz_Torappu_MedalPerData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_MedalPerData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_MedalPerData):clz_Torappu_MedalPerData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_MedalPerData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

medalId():string|null
medalId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
medalId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

medalName():string|null
medalName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
medalName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

medalType():string|null
medalType(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
medalType(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

slotId():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

preMedalIdList(index: number):string
preMedalIdList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
preMedalIdList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

preMedalIdListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

rarity():enum__Torappu_MedalRarity {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_MedalRarity.T1;
}

template():string|null
template(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
template(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

unlockParam(index: number):string
unlockParam(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
unlockParam(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

unlockParamLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

getMethod():string|null
getMethod(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
getMethod(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

description():string|null
description(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
description(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

advancedMedal():string|null
advancedMedal(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
advancedMedal(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

originMedal():string|null
originMedal(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
originMedal(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

displayTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

expireTimes(index: number, obj?:clz_Torappu_MedalExpireTime):clz_Torappu_MedalExpireTime|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? (obj || new clz_Torappu_MedalExpireTime()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

expireTimesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

medalRewardGroup(index: number, obj?:clz_Torappu_MedalRewardGroupData):clz_Torappu_MedalRewardGroupData|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? (obj || new clz_Torappu_MedalRewardGroupData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

medalRewardGroupLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

isHidden():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startclz_Torappu_MedalPerData(builder:flatbuffers.Builder) {
  builder.startObject(16);
}

static addMedalId(builder:flatbuffers.Builder, medalIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, medalIdOffset, 0);
}

static addMedalName(builder:flatbuffers.Builder, medalNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, medalNameOffset, 0);
}

static addMedalType(builder:flatbuffers.Builder, medalTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, medalTypeOffset, 0);
}

static addSlotId(builder:flatbuffers.Builder, slotId:number) {
  builder.addFieldInt32(3, slotId, 0);
}

static addPreMedalIdList(builder:flatbuffers.Builder, preMedalIdListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, preMedalIdListOffset, 0);
}

static createPreMedalIdListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPreMedalIdListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRarity(builder:flatbuffers.Builder, rarity:enum__Torappu_MedalRarity) {
  builder.addFieldInt32(5, rarity, enum__Torappu_MedalRarity.T1);
}

static addTemplate(builder:flatbuffers.Builder, templateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, templateOffset, 0);
}

static addUnlockParam(builder:flatbuffers.Builder, unlockParamOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, unlockParamOffset, 0);
}

static createUnlockParamVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startUnlockParamVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addGetMethod(builder:flatbuffers.Builder, getMethodOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, getMethodOffset, 0);
}

static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, descriptionOffset, 0);
}

static addAdvancedMedal(builder:flatbuffers.Builder, advancedMedalOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, advancedMedalOffset, 0);
}

static addOriginMedal(builder:flatbuffers.Builder, originMedalOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, originMedalOffset, 0);
}

static addDisplayTime(builder:flatbuffers.Builder, displayTime:bigint) {
  builder.addFieldInt64(12, displayTime, BigInt('0'));
}

static addExpireTimes(builder:flatbuffers.Builder, expireTimesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, expireTimesOffset, 0);
}

static createExpireTimesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startExpireTimesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addMedalRewardGroup(builder:flatbuffers.Builder, medalRewardGroupOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, medalRewardGroupOffset, 0);
}

static createMedalRewardGroupVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startMedalRewardGroupVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addIsHidden(builder:flatbuffers.Builder, isHidden:boolean) {
  builder.addFieldInt8(15, +isHidden, +false);
}

static endclz_Torappu_MedalPerData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_MedalPerData(builder:flatbuffers.Builder, medalIdOffset:flatbuffers.Offset, medalNameOffset:flatbuffers.Offset, medalTypeOffset:flatbuffers.Offset, slotId:number, preMedalIdListOffset:flatbuffers.Offset, rarity:enum__Torappu_MedalRarity, templateOffset:flatbuffers.Offset, unlockParamOffset:flatbuffers.Offset, getMethodOffset:flatbuffers.Offset, descriptionOffset:flatbuffers.Offset, advancedMedalOffset:flatbuffers.Offset, originMedalOffset:flatbuffers.Offset, displayTime:bigint, expireTimesOffset:flatbuffers.Offset, medalRewardGroupOffset:flatbuffers.Offset, isHidden:boolean):flatbuffers.Offset {
  clz_Torappu_MedalPerData.startclz_Torappu_MedalPerData(builder);
  clz_Torappu_MedalPerData.addMedalId(builder, medalIdOffset);
  clz_Torappu_MedalPerData.addMedalName(builder, medalNameOffset);
  clz_Torappu_MedalPerData.addMedalType(builder, medalTypeOffset);
  clz_Torappu_MedalPerData.addSlotId(builder, slotId);
  clz_Torappu_MedalPerData.addPreMedalIdList(builder, preMedalIdListOffset);
  clz_Torappu_MedalPerData.addRarity(builder, rarity);
  clz_Torappu_MedalPerData.addTemplate(builder, templateOffset);
  clz_Torappu_MedalPerData.addUnlockParam(builder, unlockParamOffset);
  clz_Torappu_MedalPerData.addGetMethod(builder, getMethodOffset);
  clz_Torappu_MedalPerData.addDescription(builder, descriptionOffset);
  clz_Torappu_MedalPerData.addAdvancedMedal(builder, advancedMedalOffset);
  clz_Torappu_MedalPerData.addOriginMedal(builder, originMedalOffset);
  clz_Torappu_MedalPerData.addDisplayTime(builder, displayTime);
  clz_Torappu_MedalPerData.addExpireTimes(builder, expireTimesOffset);
  clz_Torappu_MedalPerData.addMedalRewardGroup(builder, medalRewardGroupOffset);
  clz_Torappu_MedalPerData.addIsHidden(builder, isHidden);
  return clz_Torappu_MedalPerData.endclz_Torappu_MedalPerData(builder);
}

unpack(): clz_Torappu_MedalPerDataT {
  return new clz_Torappu_MedalPerDataT(
    this.medalId(),
    this.medalName(),
    this.medalType(),
    this.slotId(),
    this.bb!.createScalarList<string>(this.preMedalIdList.bind(this), this.preMedalIdListLength()),
    this.rarity(),
    this.template(),
    this.bb!.createScalarList<string>(this.unlockParam.bind(this), this.unlockParamLength()),
    this.getMethod(),
    this.description(),
    this.advancedMedal(),
    this.originMedal(),
    this.displayTime(),
    this.bb!.createObjList<clz_Torappu_MedalExpireTime, clz_Torappu_MedalExpireTimeT>(this.expireTimes.bind(this), this.expireTimesLength()),
    this.bb!.createObjList<clz_Torappu_MedalRewardGroupData, clz_Torappu_MedalRewardGroupDataT>(this.medalRewardGroup.bind(this), this.medalRewardGroupLength()),
    this.isHidden()
  );
}


unpackTo(_o: clz_Torappu_MedalPerDataT): void {
  _o.medalId = this.medalId();
  _o.medalName = this.medalName();
  _o.medalType = this.medalType();
  _o.slotId = this.slotId();
  _o.preMedalIdList = this.bb!.createScalarList<string>(this.preMedalIdList.bind(this), this.preMedalIdListLength());
  _o.rarity = this.rarity();
  _o.template = this.template();
  _o.unlockParam = this.bb!.createScalarList<string>(this.unlockParam.bind(this), this.unlockParamLength());
  _o.getMethod = this.getMethod();
  _o.description = this.description();
  _o.advancedMedal = this.advancedMedal();
  _o.originMedal = this.originMedal();
  _o.displayTime = this.displayTime();
  _o.expireTimes = this.bb!.createObjList<clz_Torappu_MedalExpireTime, clz_Torappu_MedalExpireTimeT>(this.expireTimes.bind(this), this.expireTimesLength());
  _o.medalRewardGroup = this.bb!.createObjList<clz_Torappu_MedalRewardGroupData, clz_Torappu_MedalRewardGroupDataT>(this.medalRewardGroup.bind(this), this.medalRewardGroupLength());
  _o.isHidden = this.isHidden();
}
}

export class clz_Torappu_MedalPerDataT implements flatbuffers.IGeneratedObject {
constructor(
  public medalId: string|Uint8Array|null = null,
  public medalName: string|Uint8Array|null = null,
  public medalType: string|Uint8Array|null = null,
  public slotId: number = 0,
  public preMedalIdList: (string)[] = [],
  public rarity: enum__Torappu_MedalRarity = enum__Torappu_MedalRarity.T1,
  public template: string|Uint8Array|null = null,
  public unlockParam: (string)[] = [],
  public getMethod: string|Uint8Array|null = null,
  public description: string|Uint8Array|null = null,
  public advancedMedal: string|Uint8Array|null = null,
  public originMedal: string|Uint8Array|null = null,
  public displayTime: bigint = BigInt('0'),
  public expireTimes: (clz_Torappu_MedalExpireTimeT)[] = [],
  public medalRewardGroup: (clz_Torappu_MedalRewardGroupDataT)[] = [],
  public isHidden: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const medalId = (this.medalId !== null ? builder.createString(this.medalId!) : 0);
  const medalName = (this.medalName !== null ? builder.createString(this.medalName!) : 0);
  const medalType = (this.medalType !== null ? builder.createString(this.medalType!) : 0);
  const preMedalIdList = clz_Torappu_MedalPerData.createPreMedalIdListVector(builder, builder.createObjectOffsetList(this.preMedalIdList));
  const template = (this.template !== null ? builder.createString(this.template!) : 0);
  const unlockParam = clz_Torappu_MedalPerData.createUnlockParamVector(builder, builder.createObjectOffsetList(this.unlockParam));
  const getMethod = (this.getMethod !== null ? builder.createString(this.getMethod!) : 0);
  const description = (this.description !== null ? builder.createString(this.description!) : 0);
  const advancedMedal = (this.advancedMedal !== null ? builder.createString(this.advancedMedal!) : 0);
  const originMedal = (this.originMedal !== null ? builder.createString(this.originMedal!) : 0);
  const expireTimes = clz_Torappu_MedalPerData.createExpireTimesVector(builder, builder.createObjectOffsetList(this.expireTimes));
  const medalRewardGroup = clz_Torappu_MedalPerData.createMedalRewardGroupVector(builder, builder.createObjectOffsetList(this.medalRewardGroup));

  return clz_Torappu_MedalPerData.createclz_Torappu_MedalPerData(builder,
    medalId,
    medalName,
    medalType,
    this.slotId,
    preMedalIdList,
    this.rarity,
    template,
    unlockParam,
    getMethod,
    description,
    advancedMedal,
    originMedal,
    this.displayTime,
    expireTimes,
    medalRewardGroup,
    this.isHidden
  );
}
}
