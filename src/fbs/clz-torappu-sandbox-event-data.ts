// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SandboxEventData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxEventDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxEventData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxEventData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxEventData):clz_Torappu_SandboxEventData {
  return (obj || new clz_Torappu_SandboxEventData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxEventData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxEventData):clz_Torappu_SandboxEventData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxEventData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

eventSceneId():string|null
eventSceneId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
eventSceneId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

hasThumbtack():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startclz_Torappu_SandboxEventData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addEventSceneId(builder:flatbuffers.Builder, eventSceneIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, eventSceneIdOffset, 0);
}

static addHasThumbtack(builder:flatbuffers.Builder, hasThumbtack:boolean) {
  builder.addFieldInt8(1, +hasThumbtack, +false);
}

static endclz_Torappu_SandboxEventData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxEventData(builder:flatbuffers.Builder, eventSceneIdOffset:flatbuffers.Offset, hasThumbtack:boolean):flatbuffers.Offset {
  clz_Torappu_SandboxEventData.startclz_Torappu_SandboxEventData(builder);
  clz_Torappu_SandboxEventData.addEventSceneId(builder, eventSceneIdOffset);
  clz_Torappu_SandboxEventData.addHasThumbtack(builder, hasThumbtack);
  return clz_Torappu_SandboxEventData.endclz_Torappu_SandboxEventData(builder);
}

unpack(): clz_Torappu_SandboxEventDataT {
  return new clz_Torappu_SandboxEventDataT(
    this.eventSceneId(),
    this.hasThumbtack()
  );
}


unpackTo(_o: clz_Torappu_SandboxEventDataT): void {
  _o.eventSceneId = this.eventSceneId();
  _o.hasThumbtack = this.hasThumbtack();
}
}

export class clz_Torappu_SandboxEventDataT implements flatbuffers.IGeneratedObject {
constructor(
  public eventSceneId: string|Uint8Array|null = null,
  public hasThumbtack: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const eventSceneId = (this.eventSceneId !== null ? builder.createString(this.eventSceneId!) : 0);

  return clz_Torappu_SandboxEventData.createclz_Torappu_SandboxEventData(builder,
    eventSceneId,
    this.hasThumbtack
  );
}
}
