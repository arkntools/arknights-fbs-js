// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_RoguelikeEnrollType } from './enum--torappu-roguelike-enroll-type.js';


export class clz_Torappu_RoguelikeTopicEnroll implements flatbuffers.IUnpackableObject<clz_Torappu_RoguelikeTopicEnrollT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RoguelikeTopicEnroll {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RoguelikeTopicEnroll(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeTopicEnroll):clz_Torappu_RoguelikeTopicEnroll {
  return (obj || new clz_Torappu_RoguelikeTopicEnroll()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RoguelikeTopicEnroll(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeTopicEnroll):clz_Torappu_RoguelikeTopicEnroll {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RoguelikeTopicEnroll()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

enrollId():string|null
enrollId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
enrollId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

enrollTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

enrollType():enum__Torappu_RoguelikeEnrollType {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_RoguelikeEnrollType.DLC;
}

enrollNoticeEndTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startclz_Torappu_RoguelikeTopicEnroll(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addEnrollId(builder:flatbuffers.Builder, enrollIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, enrollIdOffset, 0);
}

static addEnrollTime(builder:flatbuffers.Builder, enrollTime:bigint) {
  builder.addFieldInt64(1, enrollTime, BigInt('0'));
}

static addEnrollType(builder:flatbuffers.Builder, enrollType:enum__Torappu_RoguelikeEnrollType) {
  builder.addFieldInt32(2, enrollType, enum__Torappu_RoguelikeEnrollType.DLC);
}

static addEnrollNoticeEndTime(builder:flatbuffers.Builder, enrollNoticeEndTime:bigint) {
  builder.addFieldInt64(3, enrollNoticeEndTime, BigInt('0'));
}

static endclz_Torappu_RoguelikeTopicEnroll(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_RoguelikeTopicEnroll(builder:flatbuffers.Builder, enrollIdOffset:flatbuffers.Offset, enrollTime:bigint, enrollType:enum__Torappu_RoguelikeEnrollType, enrollNoticeEndTime:bigint):flatbuffers.Offset {
  clz_Torappu_RoguelikeTopicEnroll.startclz_Torappu_RoguelikeTopicEnroll(builder);
  clz_Torappu_RoguelikeTopicEnroll.addEnrollId(builder, enrollIdOffset);
  clz_Torappu_RoguelikeTopicEnroll.addEnrollTime(builder, enrollTime);
  clz_Torappu_RoguelikeTopicEnroll.addEnrollType(builder, enrollType);
  clz_Torappu_RoguelikeTopicEnroll.addEnrollNoticeEndTime(builder, enrollNoticeEndTime);
  return clz_Torappu_RoguelikeTopicEnroll.endclz_Torappu_RoguelikeTopicEnroll(builder);
}

unpack(): clz_Torappu_RoguelikeTopicEnrollT {
  return new clz_Torappu_RoguelikeTopicEnrollT(
    this.enrollId(),
    this.enrollTime(),
    this.enrollType(),
    this.enrollNoticeEndTime()
  );
}


unpackTo(_o: clz_Torappu_RoguelikeTopicEnrollT): void {
  _o.enrollId = this.enrollId();
  _o.enrollTime = this.enrollTime();
  _o.enrollType = this.enrollType();
  _o.enrollNoticeEndTime = this.enrollNoticeEndTime();
}
}

export class clz_Torappu_RoguelikeTopicEnrollT implements flatbuffers.IGeneratedObject {
constructor(
  public enrollId: string|Uint8Array|null = null,
  public enrollTime: bigint = BigInt('0'),
  public enrollType: enum__Torappu_RoguelikeEnrollType = enum__Torappu_RoguelikeEnrollType.DLC,
  public enrollNoticeEndTime: bigint = BigInt('0')
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const enrollId = (this.enrollId !== null ? builder.createString(this.enrollId!) : 0);

  return clz_Torappu_RoguelikeTopicEnroll.createclz_Torappu_RoguelikeTopicEnroll(builder,
    enrollId,
    this.enrollTime,
    this.enrollType,
    this.enrollNoticeEndTime
  );
}
}
