// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_BuildingData_ManufactPhase implements flatbuffers.IUnpackableObject<clz_Torappu_BuildingData_ManufactPhaseT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_BuildingData_ManufactPhase {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_BuildingData_ManufactPhase(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_ManufactPhase):clz_Torappu_BuildingData_ManufactPhase {
  return (obj || new clz_Torappu_BuildingData_ManufactPhase()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_BuildingData_ManufactPhase(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_ManufactPhase):clz_Torappu_BuildingData_ManufactPhase {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_BuildingData_ManufactPhase()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

speed():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

outputCapacity():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_BuildingData_ManufactPhase(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addSpeed(builder:flatbuffers.Builder, speed:number) {
  builder.addFieldFloat32(0, speed, 0.0);
}

static addOutputCapacity(builder:flatbuffers.Builder, outputCapacity:number) {
  builder.addFieldInt32(1, outputCapacity, 0);
}

static endclz_Torappu_BuildingData_ManufactPhase(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_BuildingData_ManufactPhase(builder:flatbuffers.Builder, speed:number, outputCapacity:number):flatbuffers.Offset {
  clz_Torappu_BuildingData_ManufactPhase.startclz_Torappu_BuildingData_ManufactPhase(builder);
  clz_Torappu_BuildingData_ManufactPhase.addSpeed(builder, speed);
  clz_Torappu_BuildingData_ManufactPhase.addOutputCapacity(builder, outputCapacity);
  return clz_Torappu_BuildingData_ManufactPhase.endclz_Torappu_BuildingData_ManufactPhase(builder);
}

unpack(): clz_Torappu_BuildingData_ManufactPhaseT {
  return new clz_Torappu_BuildingData_ManufactPhaseT(
    this.speed(),
    this.outputCapacity()
  );
}


unpackTo(_o: clz_Torappu_BuildingData_ManufactPhaseT): void {
  _o.speed = this.speed();
  _o.outputCapacity = this.outputCapacity();
}
}

export class clz_Torappu_BuildingData_ManufactPhaseT implements flatbuffers.IGeneratedObject {
constructor(
  public speed: number = 0.0,
  public outputCapacity: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return clz_Torappu_BuildingData_ManufactPhase.createclz_Torappu_BuildingData_ManufactPhase(builder,
    this.speed,
    this.outputCapacity
  );
}
}
