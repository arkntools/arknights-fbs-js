// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_OpenServerItemData, clz_Torappu_OpenServerItemDataT } from './clz-torappu-open-server-item-data.js';


export class clz_Torappu_TotalCheckinData implements flatbuffers.IUnpackableObject<clz_Torappu_TotalCheckinDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_TotalCheckinData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_TotalCheckinData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_TotalCheckinData):clz_Torappu_TotalCheckinData {
  return (obj || new clz_Torappu_TotalCheckinData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_TotalCheckinData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_TotalCheckinData):clz_Torappu_TotalCheckinData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_TotalCheckinData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

order():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

item(obj?:clz_Torappu_OpenServerItemData):clz_Torappu_OpenServerItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new clz_Torappu_OpenServerItemData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

colorId():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_TotalCheckinData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addOrder(builder:flatbuffers.Builder, order:number) {
  builder.addFieldInt32(0, order, 0);
}

static addItem(builder:flatbuffers.Builder, itemOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, itemOffset, 0);
}

static addColorId(builder:flatbuffers.Builder, colorId:number) {
  builder.addFieldInt32(2, colorId, 0);
}

static endclz_Torappu_TotalCheckinData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_TotalCheckinDataT {
  return new clz_Torappu_TotalCheckinDataT(
    this.order(),
    (this.item() !== null ? this.item()!.unpack() : null),
    this.colorId()
  );
}


unpackTo(_o: clz_Torappu_TotalCheckinDataT): void {
  _o.order = this.order();
  _o.item = (this.item() !== null ? this.item()!.unpack() : null);
  _o.colorId = this.colorId();
}
}

export class clz_Torappu_TotalCheckinDataT implements flatbuffers.IGeneratedObject {
constructor(
  public order: number = 0,
  public item: clz_Torappu_OpenServerItemDataT|null = null,
  public colorId: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const item = (this.item !== null ? this.item!.pack(builder) : 0);

  clz_Torappu_TotalCheckinData.startclz_Torappu_TotalCheckinData(builder);
  clz_Torappu_TotalCheckinData.addOrder(builder, this.order);
  clz_Torappu_TotalCheckinData.addItem(builder, item);
  clz_Torappu_TotalCheckinData.addColorId(builder, this.colorId);

  return clz_Torappu_TotalCheckinData.endclz_Torappu_TotalCheckinData(builder);
}
}
