// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { dict__string__clz_Torappu_MonthlySignInGroupData, dict__string__clz_Torappu_MonthlySignInGroupDataT } from './dict--string--clz-torappu-monthly-sign-in-group-data.js';
import { dict__string__list_clz_Torappu_MonthlyDailyBonusGroup, dict__string__list_clz_Torappu_MonthlyDailyBonusGroupT } from './dict--string--list-clz-torappu-monthly-daily-bonus-group.js';


export class clz_Torappu_CheckInTable implements flatbuffers.IUnpackableObject<clz_Torappu_CheckInTableT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_CheckInTable {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_CheckInTable(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CheckInTable):clz_Torappu_CheckInTable {
  return (obj || new clz_Torappu_CheckInTable()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_CheckInTable(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CheckInTable):clz_Torappu_CheckInTable {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_CheckInTable()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

groups(index: number, obj?:dict__string__clz_Torappu_MonthlySignInGroupData):dict__string__clz_Torappu_MonthlySignInGroupData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new dict__string__clz_Torappu_MonthlySignInGroupData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

groupsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

monthlySubItem(index: number, obj?:dict__string__list_clz_Torappu_MonthlyDailyBonusGroup):dict__string__list_clz_Torappu_MonthlyDailyBonusGroup|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new dict__string__list_clz_Torappu_MonthlyDailyBonusGroup()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

monthlySubItemLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

currentMonthlySubId():string|null
currentMonthlySubId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
currentMonthlySubId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_CheckInTable(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addGroups(builder:flatbuffers.Builder, groupsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, groupsOffset, 0);
}

static createGroupsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startGroupsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addMonthlySubItem(builder:flatbuffers.Builder, monthlySubItemOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, monthlySubItemOffset, 0);
}

static createMonthlySubItemVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startMonthlySubItemVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCurrentMonthlySubId(builder:flatbuffers.Builder, currentMonthlySubIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, currentMonthlySubIdOffset, 0);
}

static endclz_Torappu_CheckInTable(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishclz_Torappu_CheckInTableBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedclz_Torappu_CheckInTableBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createclz_Torappu_CheckInTable(builder:flatbuffers.Builder, groupsOffset:flatbuffers.Offset, monthlySubItemOffset:flatbuffers.Offset, currentMonthlySubIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_CheckInTable.startclz_Torappu_CheckInTable(builder);
  clz_Torappu_CheckInTable.addGroups(builder, groupsOffset);
  clz_Torappu_CheckInTable.addMonthlySubItem(builder, monthlySubItemOffset);
  clz_Torappu_CheckInTable.addCurrentMonthlySubId(builder, currentMonthlySubIdOffset);
  return clz_Torappu_CheckInTable.endclz_Torappu_CheckInTable(builder);
}

unpack(): clz_Torappu_CheckInTableT {
  return new clz_Torappu_CheckInTableT(
    this.bb!.createObjList<dict__string__clz_Torappu_MonthlySignInGroupData, dict__string__clz_Torappu_MonthlySignInGroupDataT>(this.groups.bind(this), this.groupsLength()),
    this.bb!.createObjList<dict__string__list_clz_Torappu_MonthlyDailyBonusGroup, dict__string__list_clz_Torappu_MonthlyDailyBonusGroupT>(this.monthlySubItem.bind(this), this.monthlySubItemLength()),
    this.currentMonthlySubId()
  );
}


unpackTo(_o: clz_Torappu_CheckInTableT): void {
  _o.groups = this.bb!.createObjList<dict__string__clz_Torappu_MonthlySignInGroupData, dict__string__clz_Torappu_MonthlySignInGroupDataT>(this.groups.bind(this), this.groupsLength());
  _o.monthlySubItem = this.bb!.createObjList<dict__string__list_clz_Torappu_MonthlyDailyBonusGroup, dict__string__list_clz_Torappu_MonthlyDailyBonusGroupT>(this.monthlySubItem.bind(this), this.monthlySubItemLength());
  _o.currentMonthlySubId = this.currentMonthlySubId();
}
}

export class clz_Torappu_CheckInTableT implements flatbuffers.IGeneratedObject {
constructor(
  public groups: (dict__string__clz_Torappu_MonthlySignInGroupDataT)[] = [],
  public monthlySubItem: (dict__string__list_clz_Torappu_MonthlyDailyBonusGroupT)[] = [],
  public currentMonthlySubId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const groups = clz_Torappu_CheckInTable.createGroupsVector(builder, builder.createObjectOffsetList(this.groups));
  const monthlySubItem = clz_Torappu_CheckInTable.createMonthlySubItemVector(builder, builder.createObjectOffsetList(this.monthlySubItem));
  const currentMonthlySubId = (this.currentMonthlySubId !== null ? builder.createString(this.currentMonthlySubId!) : 0);

  return clz_Torappu_CheckInTable.createclz_Torappu_CheckInTable(builder,
    groups,
    monthlySubItem,
    currentMonthlySubId
  );
}
}
