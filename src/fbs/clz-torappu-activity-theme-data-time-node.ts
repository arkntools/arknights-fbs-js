// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActivityThemeData_TimeNode implements flatbuffers.IUnpackableObject<clz_Torappu_ActivityThemeData_TimeNodeT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActivityThemeData_TimeNode {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActivityThemeData_TimeNode(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityThemeData_TimeNode):clz_Torappu_ActivityThemeData_TimeNode {
  return (obj || new clz_Torappu_ActivityThemeData_TimeNode()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActivityThemeData_TimeNode(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityThemeData_TimeNode):clz_Torappu_ActivityThemeData_TimeNode {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActivityThemeData_TimeNode()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

title():string|null
title(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
title(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ts():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startclz_Torappu_ActivityThemeData_TimeNode(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addTitle(builder:flatbuffers.Builder, titleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, titleOffset, 0);
}

static addTs(builder:flatbuffers.Builder, ts:bigint) {
  builder.addFieldInt64(1, ts, BigInt('0'));
}

static endclz_Torappu_ActivityThemeData_TimeNode(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActivityThemeData_TimeNode(builder:flatbuffers.Builder, titleOffset:flatbuffers.Offset, ts:bigint):flatbuffers.Offset {
  clz_Torappu_ActivityThemeData_TimeNode.startclz_Torappu_ActivityThemeData_TimeNode(builder);
  clz_Torappu_ActivityThemeData_TimeNode.addTitle(builder, titleOffset);
  clz_Torappu_ActivityThemeData_TimeNode.addTs(builder, ts);
  return clz_Torappu_ActivityThemeData_TimeNode.endclz_Torappu_ActivityThemeData_TimeNode(builder);
}

unpack(): clz_Torappu_ActivityThemeData_TimeNodeT {
  return new clz_Torappu_ActivityThemeData_TimeNodeT(
    this.title(),
    this.ts()
  );
}


unpackTo(_o: clz_Torappu_ActivityThemeData_TimeNodeT): void {
  _o.title = this.title();
  _o.ts = this.ts();
}
}

export class clz_Torappu_ActivityThemeData_TimeNodeT implements flatbuffers.IGeneratedObject {
constructor(
  public title: string|Uint8Array|null = null,
  public ts: bigint = BigInt('0')
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const title = (this.title !== null ? builder.createString(this.title!) : 0);

  return clz_Torappu_ActivityThemeData_TimeNode.createclz_Torappu_ActivityThemeData_TimeNode(builder,
    title,
    this.ts
  );
}
}
