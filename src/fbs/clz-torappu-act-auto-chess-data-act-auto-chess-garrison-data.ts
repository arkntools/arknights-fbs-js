// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT } from './clz-torappu-blackboard-data-pair.js';


export class clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData implements flatbuffers.IUnpackableObject<clz_Torappu_ActAutoChessData_ActAutoChessGarrisonDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActAutoChessData_ActAutoChessGarrisonData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData):clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData {
  return (obj || new clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActAutoChessData_ActAutoChessGarrisonData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData):clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

garrisonDesc():string|null
garrisonDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
garrisonDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

eventType():string|null
eventType(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
eventType(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

eventTypeDesc():string|null
eventTypeDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
eventTypeDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

eventTypeIcon():string|null
eventTypeIcon(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
eventTypeIcon(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

eventTypeSmallIcon():string|null
eventTypeSmallIcon(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
eventTypeSmallIcon(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

effectType():string|null
effectType(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
effectType(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

charLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

battleRuneKey():string|null
battleRuneKey(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
battleRuneKey(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

blackboard(index: number, obj?:clz_Torappu_Blackboard_DataPair):clz_Torappu_Blackboard_DataPair|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? (obj || new clz_Torappu_Blackboard_DataPair()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

blackboardLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

description():string|null
description(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
description(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_ActAutoChessData_ActAutoChessGarrisonData(builder:flatbuffers.Builder) {
  builder.startObject(10);
}

static addGarrisonDesc(builder:flatbuffers.Builder, garrisonDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, garrisonDescOffset, 0);
}

static addEventType(builder:flatbuffers.Builder, eventTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, eventTypeOffset, 0);
}

static addEventTypeDesc(builder:flatbuffers.Builder, eventTypeDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, eventTypeDescOffset, 0);
}

static addEventTypeIcon(builder:flatbuffers.Builder, eventTypeIconOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, eventTypeIconOffset, 0);
}

static addEventTypeSmallIcon(builder:flatbuffers.Builder, eventTypeSmallIconOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, eventTypeSmallIconOffset, 0);
}

static addEffectType(builder:flatbuffers.Builder, effectTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, effectTypeOffset, 0);
}

static addCharLevel(builder:flatbuffers.Builder, charLevel:number) {
  builder.addFieldInt32(6, charLevel, 0);
}

static addBattleRuneKey(builder:flatbuffers.Builder, battleRuneKeyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, battleRuneKeyOffset, 0);
}

static addBlackboard(builder:flatbuffers.Builder, blackboardOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, blackboardOffset, 0);
}

static createBlackboardVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBlackboardVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, descriptionOffset, 0);
}

static endclz_Torappu_ActAutoChessData_ActAutoChessGarrisonData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActAutoChessData_ActAutoChessGarrisonData(builder:flatbuffers.Builder, garrisonDescOffset:flatbuffers.Offset, eventTypeOffset:flatbuffers.Offset, eventTypeDescOffset:flatbuffers.Offset, eventTypeIconOffset:flatbuffers.Offset, eventTypeSmallIconOffset:flatbuffers.Offset, effectTypeOffset:flatbuffers.Offset, charLevel:number, battleRuneKeyOffset:flatbuffers.Offset, blackboardOffset:flatbuffers.Offset, descriptionOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData.startclz_Torappu_ActAutoChessData_ActAutoChessGarrisonData(builder);
  clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData.addGarrisonDesc(builder, garrisonDescOffset);
  clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData.addEventType(builder, eventTypeOffset);
  clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData.addEventTypeDesc(builder, eventTypeDescOffset);
  clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData.addEventTypeIcon(builder, eventTypeIconOffset);
  clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData.addEventTypeSmallIcon(builder, eventTypeSmallIconOffset);
  clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData.addEffectType(builder, effectTypeOffset);
  clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData.addCharLevel(builder, charLevel);
  clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData.addBattleRuneKey(builder, battleRuneKeyOffset);
  clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData.addBlackboard(builder, blackboardOffset);
  clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData.addDescription(builder, descriptionOffset);
  return clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData.endclz_Torappu_ActAutoChessData_ActAutoChessGarrisonData(builder);
}

unpack(): clz_Torappu_ActAutoChessData_ActAutoChessGarrisonDataT {
  return new clz_Torappu_ActAutoChessData_ActAutoChessGarrisonDataT(
    this.garrisonDesc(),
    this.eventType(),
    this.eventTypeDesc(),
    this.eventTypeIcon(),
    this.eventTypeSmallIcon(),
    this.effectType(),
    this.charLevel(),
    this.battleRuneKey(),
    this.bb!.createObjList<clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT>(this.blackboard.bind(this), this.blackboardLength()),
    this.description()
  );
}


unpackTo(_o: clz_Torappu_ActAutoChessData_ActAutoChessGarrisonDataT): void {
  _o.garrisonDesc = this.garrisonDesc();
  _o.eventType = this.eventType();
  _o.eventTypeDesc = this.eventTypeDesc();
  _o.eventTypeIcon = this.eventTypeIcon();
  _o.eventTypeSmallIcon = this.eventTypeSmallIcon();
  _o.effectType = this.effectType();
  _o.charLevel = this.charLevel();
  _o.battleRuneKey = this.battleRuneKey();
  _o.blackboard = this.bb!.createObjList<clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT>(this.blackboard.bind(this), this.blackboardLength());
  _o.description = this.description();
}
}

export class clz_Torappu_ActAutoChessData_ActAutoChessGarrisonDataT implements flatbuffers.IGeneratedObject {
constructor(
  public garrisonDesc: string|Uint8Array|null = null,
  public eventType: string|Uint8Array|null = null,
  public eventTypeDesc: string|Uint8Array|null = null,
  public eventTypeIcon: string|Uint8Array|null = null,
  public eventTypeSmallIcon: string|Uint8Array|null = null,
  public effectType: string|Uint8Array|null = null,
  public charLevel: number = 0,
  public battleRuneKey: string|Uint8Array|null = null,
  public blackboard: (clz_Torappu_Blackboard_DataPairT)[] = [],
  public description: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const garrisonDesc = (this.garrisonDesc !== null ? builder.createString(this.garrisonDesc!) : 0);
  const eventType = (this.eventType !== null ? builder.createString(this.eventType!) : 0);
  const eventTypeDesc = (this.eventTypeDesc !== null ? builder.createString(this.eventTypeDesc!) : 0);
  const eventTypeIcon = (this.eventTypeIcon !== null ? builder.createString(this.eventTypeIcon!) : 0);
  const eventTypeSmallIcon = (this.eventTypeSmallIcon !== null ? builder.createString(this.eventTypeSmallIcon!) : 0);
  const effectType = (this.effectType !== null ? builder.createString(this.effectType!) : 0);
  const battleRuneKey = (this.battleRuneKey !== null ? builder.createString(this.battleRuneKey!) : 0);
  const blackboard = clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData.createBlackboardVector(builder, builder.createObjectOffsetList(this.blackboard));
  const description = (this.description !== null ? builder.createString(this.description!) : 0);

  return clz_Torappu_ActAutoChessData_ActAutoChessGarrisonData.createclz_Torappu_ActAutoChessData_ActAutoChessGarrisonData(builder,
    garrisonDesc,
    eventType,
    eventTypeDesc,
    eventTypeIcon,
    eventTypeSmallIcon,
    effectType,
    this.charLevel,
    battleRuneKey,
    blackboard,
    description
  );
}
}
