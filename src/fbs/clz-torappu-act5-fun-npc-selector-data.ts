// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_Act5FunNpcSelectorData implements flatbuffers.IUnpackableObject<clz_Torappu_Act5FunNpcSelectorDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Act5FunNpcSelectorData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Act5FunNpcSelectorData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act5FunNpcSelectorData):clz_Torappu_Act5FunNpcSelectorData {
  return (obj || new clz_Torappu_Act5FunNpcSelectorData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Act5FunNpcSelectorData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act5FunNpcSelectorData):clz_Torappu_Act5FunNpcSelectorData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Act5FunNpcSelectorData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

npcId():string|null
npcId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
npcId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

enemyId():string|null
enemyId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
enemyId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

score():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

static startclz_Torappu_Act5FunNpcSelectorData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addNpcId(builder:flatbuffers.Builder, npcIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, npcIdOffset, 0);
}

static addEnemyId(builder:flatbuffers.Builder, enemyIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, enemyIdOffset, 0);
}

static addScore(builder:flatbuffers.Builder, score:number) {
  builder.addFieldFloat32(2, score, 0.0);
}

static endclz_Torappu_Act5FunNpcSelectorData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Act5FunNpcSelectorData(builder:flatbuffers.Builder, npcIdOffset:flatbuffers.Offset, enemyIdOffset:flatbuffers.Offset, score:number):flatbuffers.Offset {
  clz_Torappu_Act5FunNpcSelectorData.startclz_Torappu_Act5FunNpcSelectorData(builder);
  clz_Torappu_Act5FunNpcSelectorData.addNpcId(builder, npcIdOffset);
  clz_Torappu_Act5FunNpcSelectorData.addEnemyId(builder, enemyIdOffset);
  clz_Torappu_Act5FunNpcSelectorData.addScore(builder, score);
  return clz_Torappu_Act5FunNpcSelectorData.endclz_Torappu_Act5FunNpcSelectorData(builder);
}

unpack(): clz_Torappu_Act5FunNpcSelectorDataT {
  return new clz_Torappu_Act5FunNpcSelectorDataT(
    this.npcId(),
    this.enemyId(),
    this.score()
  );
}


unpackTo(_o: clz_Torappu_Act5FunNpcSelectorDataT): void {
  _o.npcId = this.npcId();
  _o.enemyId = this.enemyId();
  _o.score = this.score();
}
}

export class clz_Torappu_Act5FunNpcSelectorDataT implements flatbuffers.IGeneratedObject {
constructor(
  public npcId: string|Uint8Array|null = null,
  public enemyId: string|Uint8Array|null = null,
  public score: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const npcId = (this.npcId !== null ? builder.createString(this.npcId!) : 0);
  const enemyId = (this.enemyId !== null ? builder.createString(this.enemyId!) : 0);

  return clz_Torappu_Act5FunNpcSelectorData.createclz_Torappu_Act5FunNpcSelectorData(builder,
    npcId,
    enemyId,
    this.score
  );
}
}
