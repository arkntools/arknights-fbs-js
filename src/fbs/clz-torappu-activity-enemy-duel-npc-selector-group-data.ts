// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_ActivityEnemyDuelNpcSelectorData, clz_Torappu_ActivityEnemyDuelNpcSelectorDataT } from './clz-torappu-activity-enemy-duel-npc-selector-data.js';


export class clz_Torappu_ActivityEnemyDuelNpcSelectorGroupData implements flatbuffers.IUnpackableObject<clz_Torappu_ActivityEnemyDuelNpcSelectorGroupDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActivityEnemyDuelNpcSelectorGroupData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActivityEnemyDuelNpcSelectorGroupData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityEnemyDuelNpcSelectorGroupData):clz_Torappu_ActivityEnemyDuelNpcSelectorGroupData {
  return (obj || new clz_Torappu_ActivityEnemyDuelNpcSelectorGroupData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActivityEnemyDuelNpcSelectorGroupData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityEnemyDuelNpcSelectorGroupData):clz_Torappu_ActivityEnemyDuelNpcSelectorGroupData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActivityEnemyDuelNpcSelectorGroupData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

npcId():string|null
npcId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
npcId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

data(index: number, obj?:clz_Torappu_ActivityEnemyDuelNpcSelectorData):clz_Torappu_ActivityEnemyDuelNpcSelectorData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new clz_Torappu_ActivityEnemyDuelNpcSelectorData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

dataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_ActivityEnemyDuelNpcSelectorGroupData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addNpcId(builder:flatbuffers.Builder, npcIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, npcIdOffset, 0);
}

static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, dataOffset, 0);
}

static createDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_ActivityEnemyDuelNpcSelectorGroupData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActivityEnemyDuelNpcSelectorGroupData(builder:flatbuffers.Builder, npcIdOffset:flatbuffers.Offset, dataOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActivityEnemyDuelNpcSelectorGroupData.startclz_Torappu_ActivityEnemyDuelNpcSelectorGroupData(builder);
  clz_Torappu_ActivityEnemyDuelNpcSelectorGroupData.addNpcId(builder, npcIdOffset);
  clz_Torappu_ActivityEnemyDuelNpcSelectorGroupData.addData(builder, dataOffset);
  return clz_Torappu_ActivityEnemyDuelNpcSelectorGroupData.endclz_Torappu_ActivityEnemyDuelNpcSelectorGroupData(builder);
}

unpack(): clz_Torappu_ActivityEnemyDuelNpcSelectorGroupDataT {
  return new clz_Torappu_ActivityEnemyDuelNpcSelectorGroupDataT(
    this.npcId(),
    this.bb!.createObjList<clz_Torappu_ActivityEnemyDuelNpcSelectorData, clz_Torappu_ActivityEnemyDuelNpcSelectorDataT>(this.data.bind(this), this.dataLength())
  );
}


unpackTo(_o: clz_Torappu_ActivityEnemyDuelNpcSelectorGroupDataT): void {
  _o.npcId = this.npcId();
  _o.data = this.bb!.createObjList<clz_Torappu_ActivityEnemyDuelNpcSelectorData, clz_Torappu_ActivityEnemyDuelNpcSelectorDataT>(this.data.bind(this), this.dataLength());
}
}

export class clz_Torappu_ActivityEnemyDuelNpcSelectorGroupDataT implements flatbuffers.IGeneratedObject {
constructor(
  public npcId: string|Uint8Array|null = null,
  public data: (clz_Torappu_ActivityEnemyDuelNpcSelectorDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const npcId = (this.npcId !== null ? builder.createString(this.npcId!) : 0);
  const data = clz_Torappu_ActivityEnemyDuelNpcSelectorGroupData.createDataVector(builder, builder.createObjectOffsetList(this.data));

  return clz_Torappu_ActivityEnemyDuelNpcSelectorGroupData.createclz_Torappu_ActivityEnemyDuelNpcSelectorGroupData(builder,
    npcId,
    data
  );
}
}
