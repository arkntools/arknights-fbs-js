// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT } from './clz-torappu-item-bundle.js';


export class clz_Torappu_Act4funMissionData implements flatbuffers.IUnpackableObject<clz_Torappu_Act4funMissionDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Act4funMissionData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Act4funMissionData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act4funMissionData):clz_Torappu_Act4funMissionData {
  return (obj || new clz_Torappu_Act4funMissionData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Act4funMissionData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act4funMissionData):clz_Torappu_Act4funMissionData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Act4funMissionData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

missionId():string|null
missionId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
missionId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():string|null
sortId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
sortId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

missionDes():string|null
missionDes(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
missionDes(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

rewardIconIds(index: number):string
rewardIconIds(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
rewardIconIds(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

rewardIconIdsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

rewards(index: number, obj?:clz_Torappu_ItemBundle):clz_Torappu_ItemBundle|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new clz_Torappu_ItemBundle()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

rewardsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_Act4funMissionData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addMissionId(builder:flatbuffers.Builder, missionIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, missionIdOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, sortIdOffset, 0);
}

static addMissionDes(builder:flatbuffers.Builder, missionDesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, missionDesOffset, 0);
}

static addRewardIconIds(builder:flatbuffers.Builder, rewardIconIdsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, rewardIconIdsOffset, 0);
}

static createRewardIconIdsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRewardIconIdsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRewards(builder:flatbuffers.Builder, rewardsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, rewardsOffset, 0);
}

static createRewardsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRewardsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_Act4funMissionData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Act4funMissionData(builder:flatbuffers.Builder, missionIdOffset:flatbuffers.Offset, sortIdOffset:flatbuffers.Offset, missionDesOffset:flatbuffers.Offset, rewardIconIdsOffset:flatbuffers.Offset, rewardsOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_Act4funMissionData.startclz_Torappu_Act4funMissionData(builder);
  clz_Torappu_Act4funMissionData.addMissionId(builder, missionIdOffset);
  clz_Torappu_Act4funMissionData.addSortId(builder, sortIdOffset);
  clz_Torappu_Act4funMissionData.addMissionDes(builder, missionDesOffset);
  clz_Torappu_Act4funMissionData.addRewardIconIds(builder, rewardIconIdsOffset);
  clz_Torappu_Act4funMissionData.addRewards(builder, rewardsOffset);
  return clz_Torappu_Act4funMissionData.endclz_Torappu_Act4funMissionData(builder);
}

unpack(): clz_Torappu_Act4funMissionDataT {
  return new clz_Torappu_Act4funMissionDataT(
    this.missionId(),
    this.sortId(),
    this.missionDes(),
    this.bb!.createScalarList<string>(this.rewardIconIds.bind(this), this.rewardIconIdsLength()),
    this.bb!.createObjList<clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT>(this.rewards.bind(this), this.rewardsLength())
  );
}


unpackTo(_o: clz_Torappu_Act4funMissionDataT): void {
  _o.missionId = this.missionId();
  _o.sortId = this.sortId();
  _o.missionDes = this.missionDes();
  _o.rewardIconIds = this.bb!.createScalarList<string>(this.rewardIconIds.bind(this), this.rewardIconIdsLength());
  _o.rewards = this.bb!.createObjList<clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT>(this.rewards.bind(this), this.rewardsLength());
}
}

export class clz_Torappu_Act4funMissionDataT implements flatbuffers.IGeneratedObject {
constructor(
  public missionId: string|Uint8Array|null = null,
  public sortId: string|Uint8Array|null = null,
  public missionDes: string|Uint8Array|null = null,
  public rewardIconIds: (string)[] = [],
  public rewards: (clz_Torappu_ItemBundleT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const missionId = (this.missionId !== null ? builder.createString(this.missionId!) : 0);
  const sortId = (this.sortId !== null ? builder.createString(this.sortId!) : 0);
  const missionDes = (this.missionDes !== null ? builder.createString(this.missionDes!) : 0);
  const rewardIconIds = clz_Torappu_Act4funMissionData.createRewardIconIdsVector(builder, builder.createObjectOffsetList(this.rewardIconIds));
  const rewards = clz_Torappu_Act4funMissionData.createRewardsVector(builder, builder.createObjectOffsetList(this.rewards));

  return clz_Torappu_Act4funMissionData.createclz_Torappu_Act4funMissionData(builder,
    missionId,
    sortId,
    missionDes,
    rewardIconIds,
    rewards
  );
}
}
