// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_FireworkData_ConstData, clz_Torappu_FireworkData_ConstDataT } from './clz-torappu-firework-data-const-data.js';
import { dict__string__clz_Torappu_FireworkData_AnimalData, dict__string__clz_Torappu_FireworkData_AnimalDataT } from './dict--string--clz-torappu-firework-data-animal-data.js';
import { dict__string__clz_Torappu_FireworkData_LevelData, dict__string__clz_Torappu_FireworkData_LevelDataT } from './dict--string--clz-torappu-firework-data-level-data.js';
import { dict__string__clz_Torappu_FireworkData_PlateData, dict__string__clz_Torappu_FireworkData_PlateDataT } from './dict--string--clz-torappu-firework-data-plate-data.js';


export class clz_Torappu_FireworkData implements flatbuffers.IUnpackableObject<clz_Torappu_FireworkDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_FireworkData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_FireworkData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_FireworkData):clz_Torappu_FireworkData {
  return (obj || new clz_Torappu_FireworkData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_FireworkData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_FireworkData):clz_Torappu_FireworkData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_FireworkData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

plateData(index: number, obj?:dict__string__clz_Torappu_FireworkData_PlateData):dict__string__clz_Torappu_FireworkData_PlateData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new dict__string__clz_Torappu_FireworkData_PlateData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

plateDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

animalData(index: number, obj?:dict__string__clz_Torappu_FireworkData_AnimalData):dict__string__clz_Torappu_FireworkData_AnimalData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new dict__string__clz_Torappu_FireworkData_AnimalData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

animalDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

levelData(index: number, obj?:dict__string__clz_Torappu_FireworkData_LevelData):dict__string__clz_Torappu_FireworkData_LevelData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new dict__string__clz_Torappu_FireworkData_LevelData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

levelDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

constData(obj?:clz_Torappu_FireworkData_ConstData):clz_Torappu_FireworkData_ConstData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_Torappu_FireworkData_ConstData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startclz_Torappu_FireworkData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addPlateData(builder:flatbuffers.Builder, plateDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, plateDataOffset, 0);
}

static createPlateDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPlateDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addAnimalData(builder:flatbuffers.Builder, animalDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, animalDataOffset, 0);
}

static createAnimalDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startAnimalDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addLevelData(builder:flatbuffers.Builder, levelDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, levelDataOffset, 0);
}

static createLevelDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startLevelDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addConstData(builder:flatbuffers.Builder, constDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, constDataOffset, 0);
}

static endclz_Torappu_FireworkData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_FireworkDataT {
  return new clz_Torappu_FireworkDataT(
    this.bb!.createObjList<dict__string__clz_Torappu_FireworkData_PlateData, dict__string__clz_Torappu_FireworkData_PlateDataT>(this.plateData.bind(this), this.plateDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_FireworkData_AnimalData, dict__string__clz_Torappu_FireworkData_AnimalDataT>(this.animalData.bind(this), this.animalDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_FireworkData_LevelData, dict__string__clz_Torappu_FireworkData_LevelDataT>(this.levelData.bind(this), this.levelDataLength()),
    (this.constData() !== null ? this.constData()!.unpack() : null)
  );
}


unpackTo(_o: clz_Torappu_FireworkDataT): void {
  _o.plateData = this.bb!.createObjList<dict__string__clz_Torappu_FireworkData_PlateData, dict__string__clz_Torappu_FireworkData_PlateDataT>(this.plateData.bind(this), this.plateDataLength());
  _o.animalData = this.bb!.createObjList<dict__string__clz_Torappu_FireworkData_AnimalData, dict__string__clz_Torappu_FireworkData_AnimalDataT>(this.animalData.bind(this), this.animalDataLength());
  _o.levelData = this.bb!.createObjList<dict__string__clz_Torappu_FireworkData_LevelData, dict__string__clz_Torappu_FireworkData_LevelDataT>(this.levelData.bind(this), this.levelDataLength());
  _o.constData = (this.constData() !== null ? this.constData()!.unpack() : null);
}
}

export class clz_Torappu_FireworkDataT implements flatbuffers.IGeneratedObject {
constructor(
  public plateData: (dict__string__clz_Torappu_FireworkData_PlateDataT)[] = [],
  public animalData: (dict__string__clz_Torappu_FireworkData_AnimalDataT)[] = [],
  public levelData: (dict__string__clz_Torappu_FireworkData_LevelDataT)[] = [],
  public constData: clz_Torappu_FireworkData_ConstDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const plateData = clz_Torappu_FireworkData.createPlateDataVector(builder, builder.createObjectOffsetList(this.plateData));
  const animalData = clz_Torappu_FireworkData.createAnimalDataVector(builder, builder.createObjectOffsetList(this.animalData));
  const levelData = clz_Torappu_FireworkData.createLevelDataVector(builder, builder.createObjectOffsetList(this.levelData));
  const constData = (this.constData !== null ? this.constData!.pack(builder) : 0);

  clz_Torappu_FireworkData.startclz_Torappu_FireworkData(builder);
  clz_Torappu_FireworkData.addPlateData(builder, plateData);
  clz_Torappu_FireworkData.addAnimalData(builder, animalData);
  clz_Torappu_FireworkData.addLevelData(builder, levelData);
  clz_Torappu_FireworkData.addConstData(builder, constData);

  return clz_Torappu_FireworkData.endclz_Torappu_FireworkData(builder);
}
}
