// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { dict__string__clz_Torappu_CrossDayTrackData, dict__string__clz_Torappu_CrossDayTrackDataT } from './dict--string--clz-torappu-cross-day-track-data.js';


export class clz_Torappu_CrossDayTrackTypeData implements flatbuffers.IUnpackableObject<clz_Torappu_CrossDayTrackTypeDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_CrossDayTrackTypeData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_CrossDayTrackTypeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CrossDayTrackTypeData):clz_Torappu_CrossDayTrackTypeData {
  return (obj || new clz_Torappu_CrossDayTrackTypeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_CrossDayTrackTypeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CrossDayTrackTypeData):clz_Torappu_CrossDayTrackTypeData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_CrossDayTrackTypeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

type():string|null
type(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
type(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

startTs():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

expireTs():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

dataDict(index: number, obj?:dict__string__clz_Torappu_CrossDayTrackData):dict__string__clz_Torappu_CrossDayTrackData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new dict__string__clz_Torappu_CrossDayTrackData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

dataDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_CrossDayTrackTypeData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addType(builder:flatbuffers.Builder, typeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, typeOffset, 0);
}

static addStartTs(builder:flatbuffers.Builder, startTs:bigint) {
  builder.addFieldInt64(1, startTs, BigInt('0'));
}

static addExpireTs(builder:flatbuffers.Builder, expireTs:bigint) {
  builder.addFieldInt64(2, expireTs, BigInt('0'));
}

static addDataDict(builder:flatbuffers.Builder, dataDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, dataDictOffset, 0);
}

static createDataDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startDataDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_CrossDayTrackTypeData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_CrossDayTrackTypeData(builder:flatbuffers.Builder, typeOffset:flatbuffers.Offset, startTs:bigint, expireTs:bigint, dataDictOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_CrossDayTrackTypeData.startclz_Torappu_CrossDayTrackTypeData(builder);
  clz_Torappu_CrossDayTrackTypeData.addType(builder, typeOffset);
  clz_Torappu_CrossDayTrackTypeData.addStartTs(builder, startTs);
  clz_Torappu_CrossDayTrackTypeData.addExpireTs(builder, expireTs);
  clz_Torappu_CrossDayTrackTypeData.addDataDict(builder, dataDictOffset);
  return clz_Torappu_CrossDayTrackTypeData.endclz_Torappu_CrossDayTrackTypeData(builder);
}

unpack(): clz_Torappu_CrossDayTrackTypeDataT {
  return new clz_Torappu_CrossDayTrackTypeDataT(
    this.type(),
    this.startTs(),
    this.expireTs(),
    this.bb!.createObjList<dict__string__clz_Torappu_CrossDayTrackData, dict__string__clz_Torappu_CrossDayTrackDataT>(this.dataDict.bind(this), this.dataDictLength())
  );
}


unpackTo(_o: clz_Torappu_CrossDayTrackTypeDataT): void {
  _o.type = this.type();
  _o.startTs = this.startTs();
  _o.expireTs = this.expireTs();
  _o.dataDict = this.bb!.createObjList<dict__string__clz_Torappu_CrossDayTrackData, dict__string__clz_Torappu_CrossDayTrackDataT>(this.dataDict.bind(this), this.dataDictLength());
}
}

export class clz_Torappu_CrossDayTrackTypeDataT implements flatbuffers.IGeneratedObject {
constructor(
  public type: string|Uint8Array|null = null,
  public startTs: bigint = BigInt('0'),
  public expireTs: bigint = BigInt('0'),
  public dataDict: (dict__string__clz_Torappu_CrossDayTrackDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const type = (this.type !== null ? builder.createString(this.type!) : 0);
  const dataDict = clz_Torappu_CrossDayTrackTypeData.createDataDictVector(builder, builder.createObjectOffsetList(this.dataDict));

  return clz_Torappu_CrossDayTrackTypeData.createclz_Torappu_CrossDayTrackTypeData(builder,
    type,
    this.startTs,
    this.expireTs,
    dataDict
  );
}
}
