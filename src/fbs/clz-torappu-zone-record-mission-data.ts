// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ZoneRecordMissionData implements flatbuffers.IUnpackableObject<clz_Torappu_ZoneRecordMissionDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ZoneRecordMissionData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ZoneRecordMissionData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ZoneRecordMissionData):clz_Torappu_ZoneRecordMissionData {
  return (obj || new clz_Torappu_ZoneRecordMissionData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ZoneRecordMissionData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ZoneRecordMissionData):clz_Torappu_ZoneRecordMissionData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ZoneRecordMissionData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

missionId():string|null
missionId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
missionId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

recordStageId():string|null
recordStageId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
recordStageId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

templateDesc():string|null
templateDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
templateDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

desc():string|null
desc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
desc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_ZoneRecordMissionData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addMissionId(builder:flatbuffers.Builder, missionIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, missionIdOffset, 0);
}

static addRecordStageId(builder:flatbuffers.Builder, recordStageIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, recordStageIdOffset, 0);
}

static addTemplateDesc(builder:flatbuffers.Builder, templateDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, templateDescOffset, 0);
}

static addDesc(builder:flatbuffers.Builder, descOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, descOffset, 0);
}

static endclz_Torappu_ZoneRecordMissionData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ZoneRecordMissionData(builder:flatbuffers.Builder, missionIdOffset:flatbuffers.Offset, recordStageIdOffset:flatbuffers.Offset, templateDescOffset:flatbuffers.Offset, descOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ZoneRecordMissionData.startclz_Torappu_ZoneRecordMissionData(builder);
  clz_Torappu_ZoneRecordMissionData.addMissionId(builder, missionIdOffset);
  clz_Torappu_ZoneRecordMissionData.addRecordStageId(builder, recordStageIdOffset);
  clz_Torappu_ZoneRecordMissionData.addTemplateDesc(builder, templateDescOffset);
  clz_Torappu_ZoneRecordMissionData.addDesc(builder, descOffset);
  return clz_Torappu_ZoneRecordMissionData.endclz_Torappu_ZoneRecordMissionData(builder);
}

unpack(): clz_Torappu_ZoneRecordMissionDataT {
  return new clz_Torappu_ZoneRecordMissionDataT(
    this.missionId(),
    this.recordStageId(),
    this.templateDesc(),
    this.desc()
  );
}


unpackTo(_o: clz_Torappu_ZoneRecordMissionDataT): void {
  _o.missionId = this.missionId();
  _o.recordStageId = this.recordStageId();
  _o.templateDesc = this.templateDesc();
  _o.desc = this.desc();
}
}

export class clz_Torappu_ZoneRecordMissionDataT implements flatbuffers.IGeneratedObject {
constructor(
  public missionId: string|Uint8Array|null = null,
  public recordStageId: string|Uint8Array|null = null,
  public templateDesc: string|Uint8Array|null = null,
  public desc: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const missionId = (this.missionId !== null ? builder.createString(this.missionId!) : 0);
  const recordStageId = (this.recordStageId !== null ? builder.createString(this.recordStageId!) : 0);
  const templateDesc = (this.templateDesc !== null ? builder.createString(this.templateDesc!) : 0);
  const desc = (this.desc !== null ? builder.createString(this.desc!) : 0);

  return clz_Torappu_ZoneRecordMissionData.createclz_Torappu_ZoneRecordMissionData(builder,
    missionId,
    recordStageId,
    templateDesc,
    desc
  );
}
}
