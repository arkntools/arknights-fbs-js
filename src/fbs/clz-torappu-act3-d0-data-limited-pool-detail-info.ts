// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_Act3D0Data_LimitedPoolDetailInfo_PoolItemInfo, clz_Torappu_Act3D0Data_LimitedPoolDetailInfo_PoolItemInfoT } from './clz-torappu-act3-d0-data-limited-pool-detail-info-pool-item-info.js';


export class clz_Torappu_Act3D0Data_LimitedPoolDetailInfo implements flatbuffers.IUnpackableObject<clz_Torappu_Act3D0Data_LimitedPoolDetailInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Act3D0Data_LimitedPoolDetailInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Act3D0Data_LimitedPoolDetailInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act3D0Data_LimitedPoolDetailInfo):clz_Torappu_Act3D0Data_LimitedPoolDetailInfo {
  return (obj || new clz_Torappu_Act3D0Data_LimitedPoolDetailInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Act3D0Data_LimitedPoolDetailInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act3D0Data_LimitedPoolDetailInfo):clz_Torappu_Act3D0Data_LimitedPoolDetailInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Act3D0Data_LimitedPoolDetailInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

poolId():string|null
poolId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
poolId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

poolItemInfo(index: number, obj?:clz_Torappu_Act3D0Data_LimitedPoolDetailInfo_PoolItemInfo):clz_Torappu_Act3D0Data_LimitedPoolDetailInfo_PoolItemInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new clz_Torappu_Act3D0Data_LimitedPoolDetailInfo_PoolItemInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

poolItemInfoLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_Act3D0Data_LimitedPoolDetailInfo(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addPoolId(builder:flatbuffers.Builder, poolIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, poolIdOffset, 0);
}

static addPoolItemInfo(builder:flatbuffers.Builder, poolItemInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, poolItemInfoOffset, 0);
}

static createPoolItemInfoVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPoolItemInfoVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_Act3D0Data_LimitedPoolDetailInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Act3D0Data_LimitedPoolDetailInfo(builder:flatbuffers.Builder, poolIdOffset:flatbuffers.Offset, poolItemInfoOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_Act3D0Data_LimitedPoolDetailInfo.startclz_Torappu_Act3D0Data_LimitedPoolDetailInfo(builder);
  clz_Torappu_Act3D0Data_LimitedPoolDetailInfo.addPoolId(builder, poolIdOffset);
  clz_Torappu_Act3D0Data_LimitedPoolDetailInfo.addPoolItemInfo(builder, poolItemInfoOffset);
  return clz_Torappu_Act3D0Data_LimitedPoolDetailInfo.endclz_Torappu_Act3D0Data_LimitedPoolDetailInfo(builder);
}

unpack(): clz_Torappu_Act3D0Data_LimitedPoolDetailInfoT {
  return new clz_Torappu_Act3D0Data_LimitedPoolDetailInfoT(
    this.poolId(),
    this.bb!.createObjList<clz_Torappu_Act3D0Data_LimitedPoolDetailInfo_PoolItemInfo, clz_Torappu_Act3D0Data_LimitedPoolDetailInfo_PoolItemInfoT>(this.poolItemInfo.bind(this), this.poolItemInfoLength())
  );
}


unpackTo(_o: clz_Torappu_Act3D0Data_LimitedPoolDetailInfoT): void {
  _o.poolId = this.poolId();
  _o.poolItemInfo = this.bb!.createObjList<clz_Torappu_Act3D0Data_LimitedPoolDetailInfo_PoolItemInfo, clz_Torappu_Act3D0Data_LimitedPoolDetailInfo_PoolItemInfoT>(this.poolItemInfo.bind(this), this.poolItemInfoLength());
}
}

export class clz_Torappu_Act3D0Data_LimitedPoolDetailInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public poolId: string|Uint8Array|null = null,
  public poolItemInfo: (clz_Torappu_Act3D0Data_LimitedPoolDetailInfo_PoolItemInfoT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const poolId = (this.poolId !== null ? builder.createString(this.poolId!) : 0);
  const poolItemInfo = clz_Torappu_Act3D0Data_LimitedPoolDetailInfo.createPoolItemInfoVector(builder, builder.createObjectOffsetList(this.poolItemInfo));

  return clz_Torappu_Act3D0Data_LimitedPoolDetailInfo.createclz_Torappu_Act3D0Data_LimitedPoolDetailInfo(builder,
    poolId,
    poolItemInfo
  );
}
}
