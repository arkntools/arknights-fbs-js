// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_AllPlayerCheckinData_PersonalBehaviour implements flatbuffers.IUnpackableObject<clz_Torappu_AllPlayerCheckinData_PersonalBehaviourT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_AllPlayerCheckinData_PersonalBehaviour {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_AllPlayerCheckinData_PersonalBehaviour(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_AllPlayerCheckinData_PersonalBehaviour):clz_Torappu_AllPlayerCheckinData_PersonalBehaviour {
  return (obj || new clz_Torappu_AllPlayerCheckinData_PersonalBehaviour()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_AllPlayerCheckinData_PersonalBehaviour(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_AllPlayerCheckinData_PersonalBehaviour):clz_Torappu_AllPlayerCheckinData_PersonalBehaviour {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_AllPlayerCheckinData_PersonalBehaviour()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

personalBehaviorId():string|null
personalBehaviorId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
personalBehaviorId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

displayOrder():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

requireRepeatCompletion():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

desc():string|null
desc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
desc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_AllPlayerCheckinData_PersonalBehaviour(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(0, sortId, 0);
}

static addPersonalBehaviorId(builder:flatbuffers.Builder, personalBehaviorIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, personalBehaviorIdOffset, 0);
}

static addDisplayOrder(builder:flatbuffers.Builder, displayOrder:number) {
  builder.addFieldInt32(2, displayOrder, 0);
}

static addRequireRepeatCompletion(builder:flatbuffers.Builder, requireRepeatCompletion:boolean) {
  builder.addFieldInt8(3, +requireRepeatCompletion, +false);
}

static addDesc(builder:flatbuffers.Builder, descOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, descOffset, 0);
}

static endclz_Torappu_AllPlayerCheckinData_PersonalBehaviour(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_AllPlayerCheckinData_PersonalBehaviour(builder:flatbuffers.Builder, sortId:number, personalBehaviorIdOffset:flatbuffers.Offset, displayOrder:number, requireRepeatCompletion:boolean, descOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_AllPlayerCheckinData_PersonalBehaviour.startclz_Torappu_AllPlayerCheckinData_PersonalBehaviour(builder);
  clz_Torappu_AllPlayerCheckinData_PersonalBehaviour.addSortId(builder, sortId);
  clz_Torappu_AllPlayerCheckinData_PersonalBehaviour.addPersonalBehaviorId(builder, personalBehaviorIdOffset);
  clz_Torappu_AllPlayerCheckinData_PersonalBehaviour.addDisplayOrder(builder, displayOrder);
  clz_Torappu_AllPlayerCheckinData_PersonalBehaviour.addRequireRepeatCompletion(builder, requireRepeatCompletion);
  clz_Torappu_AllPlayerCheckinData_PersonalBehaviour.addDesc(builder, descOffset);
  return clz_Torappu_AllPlayerCheckinData_PersonalBehaviour.endclz_Torappu_AllPlayerCheckinData_PersonalBehaviour(builder);
}

unpack(): clz_Torappu_AllPlayerCheckinData_PersonalBehaviourT {
  return new clz_Torappu_AllPlayerCheckinData_PersonalBehaviourT(
    this.sortId(),
    this.personalBehaviorId(),
    this.displayOrder(),
    this.requireRepeatCompletion(),
    this.desc()
  );
}


unpackTo(_o: clz_Torappu_AllPlayerCheckinData_PersonalBehaviourT): void {
  _o.sortId = this.sortId();
  _o.personalBehaviorId = this.personalBehaviorId();
  _o.displayOrder = this.displayOrder();
  _o.requireRepeatCompletion = this.requireRepeatCompletion();
  _o.desc = this.desc();
}
}

export class clz_Torappu_AllPlayerCheckinData_PersonalBehaviourT implements flatbuffers.IGeneratedObject {
constructor(
  public sortId: number = 0,
  public personalBehaviorId: string|Uint8Array|null = null,
  public displayOrder: number = 0,
  public requireRepeatCompletion: boolean = false,
  public desc: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const personalBehaviorId = (this.personalBehaviorId !== null ? builder.createString(this.personalBehaviorId!) : 0);
  const desc = (this.desc !== null ? builder.createString(this.desc!) : 0);

  return clz_Torappu_AllPlayerCheckinData_PersonalBehaviour.createclz_Torappu_AllPlayerCheckinData_PersonalBehaviour(builder,
    this.sortId,
    personalBehaviorId,
    this.displayOrder,
    this.requireRepeatCompletion,
    desc
  );
}
}
