// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_BuildingData_ShopPhase implements flatbuffers.IUnpackableObject<clz_Torappu_BuildingData_ShopPhaseT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_BuildingData_ShopPhase {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_BuildingData_ShopPhase(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_ShopPhase):clz_Torappu_BuildingData_ShopPhase {
  return (obj || new clz_Torappu_BuildingData_ShopPhase()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_BuildingData_ShopPhase(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_ShopPhase):clz_Torappu_BuildingData_ShopPhase {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_BuildingData_ShopPhase()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

counterNum():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

speed():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

moneyCapacity():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_BuildingData_ShopPhase(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addCounterNum(builder:flatbuffers.Builder, counterNum:number) {
  builder.addFieldInt32(0, counterNum, 0);
}

static addSpeed(builder:flatbuffers.Builder, speed:number) {
  builder.addFieldFloat32(1, speed, 0.0);
}

static addMoneyCapacity(builder:flatbuffers.Builder, moneyCapacity:number) {
  builder.addFieldInt32(2, moneyCapacity, 0);
}

static endclz_Torappu_BuildingData_ShopPhase(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_BuildingData_ShopPhase(builder:flatbuffers.Builder, counterNum:number, speed:number, moneyCapacity:number):flatbuffers.Offset {
  clz_Torappu_BuildingData_ShopPhase.startclz_Torappu_BuildingData_ShopPhase(builder);
  clz_Torappu_BuildingData_ShopPhase.addCounterNum(builder, counterNum);
  clz_Torappu_BuildingData_ShopPhase.addSpeed(builder, speed);
  clz_Torappu_BuildingData_ShopPhase.addMoneyCapacity(builder, moneyCapacity);
  return clz_Torappu_BuildingData_ShopPhase.endclz_Torappu_BuildingData_ShopPhase(builder);
}

unpack(): clz_Torappu_BuildingData_ShopPhaseT {
  return new clz_Torappu_BuildingData_ShopPhaseT(
    this.counterNum(),
    this.speed(),
    this.moneyCapacity()
  );
}


unpackTo(_o: clz_Torappu_BuildingData_ShopPhaseT): void {
  _o.counterNum = this.counterNum();
  _o.speed = this.speed();
  _o.moneyCapacity = this.moneyCapacity();
}
}

export class clz_Torappu_BuildingData_ShopPhaseT implements flatbuffers.IGeneratedObject {
constructor(
  public counterNum: number = 0,
  public speed: number = 0.0,
  public moneyCapacity: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return clz_Torappu_BuildingData_ShopPhase.createclz_Torappu_BuildingData_ShopPhase(builder,
    this.counterNum,
    this.speed,
    this.moneyCapacity
  );
}
}
