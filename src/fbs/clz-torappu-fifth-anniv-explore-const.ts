// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_FifthAnnivExploreConst implements flatbuffers.IUnpackableObject<clz_Torappu_FifthAnnivExploreConstT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_FifthAnnivExploreConst {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_FifthAnnivExploreConst(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_FifthAnnivExploreConst):clz_Torappu_FifthAnnivExploreConst {
  return (obj || new clz_Torappu_FifthAnnivExploreConst()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_FifthAnnivExploreConst(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_FifthAnnivExploreConst):clz_Torappu_FifthAnnivExploreConst {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_FifthAnnivExploreConst()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

prevRecordNum():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

maxBoard():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

valueMin():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

valueMax():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

targetStuckDesc():string|null
targetStuckDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
targetStuckDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

stageStuckDesc():string|null
stageStuckDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
stageStuckDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

missionName():string|null
missionName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
missionName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

missionDesc():string|null
missionDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
missionDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

choiceValueOrder(index: number):string
choiceValueOrder(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
choiceValueOrder(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

choiceValueOrderLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

teamPassTargeDesc():string|null
teamPassTargeDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamPassTargeDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

teamPassEndDesc():string|null
teamPassEndDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamPassEndDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_FifthAnnivExploreConst(builder:flatbuffers.Builder) {
  builder.startObject(11);
}

static addPrevRecordNum(builder:flatbuffers.Builder, prevRecordNum:number) {
  builder.addFieldInt32(0, prevRecordNum, 0);
}

static addMaxBoard(builder:flatbuffers.Builder, maxBoard:number) {
  builder.addFieldInt32(1, maxBoard, 0);
}

static addValueMin(builder:flatbuffers.Builder, valueMin:number) {
  builder.addFieldInt32(2, valueMin, 0);
}

static addValueMax(builder:flatbuffers.Builder, valueMax:number) {
  builder.addFieldInt32(3, valueMax, 0);
}

static addTargetStuckDesc(builder:flatbuffers.Builder, targetStuckDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, targetStuckDescOffset, 0);
}

static addStageStuckDesc(builder:flatbuffers.Builder, stageStuckDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, stageStuckDescOffset, 0);
}

static addMissionName(builder:flatbuffers.Builder, missionNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, missionNameOffset, 0);
}

static addMissionDesc(builder:flatbuffers.Builder, missionDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, missionDescOffset, 0);
}

static addChoiceValueOrder(builder:flatbuffers.Builder, choiceValueOrderOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, choiceValueOrderOffset, 0);
}

static createChoiceValueOrderVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startChoiceValueOrderVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTeamPassTargeDesc(builder:flatbuffers.Builder, teamPassTargeDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, teamPassTargeDescOffset, 0);
}

static addTeamPassEndDesc(builder:flatbuffers.Builder, teamPassEndDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, teamPassEndDescOffset, 0);
}

static endclz_Torappu_FifthAnnivExploreConst(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_FifthAnnivExploreConst(builder:flatbuffers.Builder, prevRecordNum:number, maxBoard:number, valueMin:number, valueMax:number, targetStuckDescOffset:flatbuffers.Offset, stageStuckDescOffset:flatbuffers.Offset, missionNameOffset:flatbuffers.Offset, missionDescOffset:flatbuffers.Offset, choiceValueOrderOffset:flatbuffers.Offset, teamPassTargeDescOffset:flatbuffers.Offset, teamPassEndDescOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_FifthAnnivExploreConst.startclz_Torappu_FifthAnnivExploreConst(builder);
  clz_Torappu_FifthAnnivExploreConst.addPrevRecordNum(builder, prevRecordNum);
  clz_Torappu_FifthAnnivExploreConst.addMaxBoard(builder, maxBoard);
  clz_Torappu_FifthAnnivExploreConst.addValueMin(builder, valueMin);
  clz_Torappu_FifthAnnivExploreConst.addValueMax(builder, valueMax);
  clz_Torappu_FifthAnnivExploreConst.addTargetStuckDesc(builder, targetStuckDescOffset);
  clz_Torappu_FifthAnnivExploreConst.addStageStuckDesc(builder, stageStuckDescOffset);
  clz_Torappu_FifthAnnivExploreConst.addMissionName(builder, missionNameOffset);
  clz_Torappu_FifthAnnivExploreConst.addMissionDesc(builder, missionDescOffset);
  clz_Torappu_FifthAnnivExploreConst.addChoiceValueOrder(builder, choiceValueOrderOffset);
  clz_Torappu_FifthAnnivExploreConst.addTeamPassTargeDesc(builder, teamPassTargeDescOffset);
  clz_Torappu_FifthAnnivExploreConst.addTeamPassEndDesc(builder, teamPassEndDescOffset);
  return clz_Torappu_FifthAnnivExploreConst.endclz_Torappu_FifthAnnivExploreConst(builder);
}

unpack(): clz_Torappu_FifthAnnivExploreConstT {
  return new clz_Torappu_FifthAnnivExploreConstT(
    this.prevRecordNum(),
    this.maxBoard(),
    this.valueMin(),
    this.valueMax(),
    this.targetStuckDesc(),
    this.stageStuckDesc(),
    this.missionName(),
    this.missionDesc(),
    this.bb!.createScalarList<string>(this.choiceValueOrder.bind(this), this.choiceValueOrderLength()),
    this.teamPassTargeDesc(),
    this.teamPassEndDesc()
  );
}


unpackTo(_o: clz_Torappu_FifthAnnivExploreConstT): void {
  _o.prevRecordNum = this.prevRecordNum();
  _o.maxBoard = this.maxBoard();
  _o.valueMin = this.valueMin();
  _o.valueMax = this.valueMax();
  _o.targetStuckDesc = this.targetStuckDesc();
  _o.stageStuckDesc = this.stageStuckDesc();
  _o.missionName = this.missionName();
  _o.missionDesc = this.missionDesc();
  _o.choiceValueOrder = this.bb!.createScalarList<string>(this.choiceValueOrder.bind(this), this.choiceValueOrderLength());
  _o.teamPassTargeDesc = this.teamPassTargeDesc();
  _o.teamPassEndDesc = this.teamPassEndDesc();
}
}

export class clz_Torappu_FifthAnnivExploreConstT implements flatbuffers.IGeneratedObject {
constructor(
  public prevRecordNum: number = 0,
  public maxBoard: number = 0,
  public valueMin: number = 0,
  public valueMax: number = 0,
  public targetStuckDesc: string|Uint8Array|null = null,
  public stageStuckDesc: string|Uint8Array|null = null,
  public missionName: string|Uint8Array|null = null,
  public missionDesc: string|Uint8Array|null = null,
  public choiceValueOrder: (string)[] = [],
  public teamPassTargeDesc: string|Uint8Array|null = null,
  public teamPassEndDesc: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const targetStuckDesc = (this.targetStuckDesc !== null ? builder.createString(this.targetStuckDesc!) : 0);
  const stageStuckDesc = (this.stageStuckDesc !== null ? builder.createString(this.stageStuckDesc!) : 0);
  const missionName = (this.missionName !== null ? builder.createString(this.missionName!) : 0);
  const missionDesc = (this.missionDesc !== null ? builder.createString(this.missionDesc!) : 0);
  const choiceValueOrder = clz_Torappu_FifthAnnivExploreConst.createChoiceValueOrderVector(builder, builder.createObjectOffsetList(this.choiceValueOrder));
  const teamPassTargeDesc = (this.teamPassTargeDesc !== null ? builder.createString(this.teamPassTargeDesc!) : 0);
  const teamPassEndDesc = (this.teamPassEndDesc !== null ? builder.createString(this.teamPassEndDesc!) : 0);

  return clz_Torappu_FifthAnnivExploreConst.createclz_Torappu_FifthAnnivExploreConst(builder,
    this.prevRecordNum,
    this.maxBoard,
    this.valueMin,
    this.valueMax,
    targetStuckDesc,
    stageStuckDesc,
    missionName,
    missionDesc,
    choiceValueOrder,
    teamPassTargeDesc,
    teamPassEndDesc
  );
}
}
