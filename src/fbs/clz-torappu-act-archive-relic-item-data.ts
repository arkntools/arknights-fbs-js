// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActArchiveRelicItemData implements flatbuffers.IUnpackableObject<clz_Torappu_ActArchiveRelicItemDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActArchiveRelicItemData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActArchiveRelicItemData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActArchiveRelicItemData):clz_Torappu_ActArchiveRelicItemData {
  return (obj || new clz_Torappu_ActArchiveRelicItemData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActArchiveRelicItemData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActArchiveRelicItemData):clz_Torappu_ActArchiveRelicItemData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActArchiveRelicItemData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

relicId():string|null
relicId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
relicId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

relicSortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

relicGroupId():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

orderId():string|null
orderId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
orderId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

isSpRelic():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

enrollId():string|null
enrollId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
enrollId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_ActArchiveRelicItemData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addRelicId(builder:flatbuffers.Builder, relicIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, relicIdOffset, 0);
}

static addRelicSortId(builder:flatbuffers.Builder, relicSortId:number) {
  builder.addFieldInt32(1, relicSortId, 0);
}

static addRelicGroupId(builder:flatbuffers.Builder, relicGroupId:number) {
  builder.addFieldInt32(2, relicGroupId, 0);
}

static addOrderId(builder:flatbuffers.Builder, orderIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, orderIdOffset, 0);
}

static addIsSpRelic(builder:flatbuffers.Builder, isSpRelic:boolean) {
  builder.addFieldInt8(4, +isSpRelic, +false);
}

static addEnrollId(builder:flatbuffers.Builder, enrollIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, enrollIdOffset, 0);
}

static endclz_Torappu_ActArchiveRelicItemData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActArchiveRelicItemData(builder:flatbuffers.Builder, relicIdOffset:flatbuffers.Offset, relicSortId:number, relicGroupId:number, orderIdOffset:flatbuffers.Offset, isSpRelic:boolean, enrollIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActArchiveRelicItemData.startclz_Torappu_ActArchiveRelicItemData(builder);
  clz_Torappu_ActArchiveRelicItemData.addRelicId(builder, relicIdOffset);
  clz_Torappu_ActArchiveRelicItemData.addRelicSortId(builder, relicSortId);
  clz_Torappu_ActArchiveRelicItemData.addRelicGroupId(builder, relicGroupId);
  clz_Torappu_ActArchiveRelicItemData.addOrderId(builder, orderIdOffset);
  clz_Torappu_ActArchiveRelicItemData.addIsSpRelic(builder, isSpRelic);
  clz_Torappu_ActArchiveRelicItemData.addEnrollId(builder, enrollIdOffset);
  return clz_Torappu_ActArchiveRelicItemData.endclz_Torappu_ActArchiveRelicItemData(builder);
}

unpack(): clz_Torappu_ActArchiveRelicItemDataT {
  return new clz_Torappu_ActArchiveRelicItemDataT(
    this.relicId(),
    this.relicSortId(),
    this.relicGroupId(),
    this.orderId(),
    this.isSpRelic(),
    this.enrollId()
  );
}


unpackTo(_o: clz_Torappu_ActArchiveRelicItemDataT): void {
  _o.relicId = this.relicId();
  _o.relicSortId = this.relicSortId();
  _o.relicGroupId = this.relicGroupId();
  _o.orderId = this.orderId();
  _o.isSpRelic = this.isSpRelic();
  _o.enrollId = this.enrollId();
}
}

export class clz_Torappu_ActArchiveRelicItemDataT implements flatbuffers.IGeneratedObject {
constructor(
  public relicId: string|Uint8Array|null = null,
  public relicSortId: number = 0,
  public relicGroupId: number = 0,
  public orderId: string|Uint8Array|null = null,
  public isSpRelic: boolean = false,
  public enrollId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const relicId = (this.relicId !== null ? builder.createString(this.relicId!) : 0);
  const orderId = (this.orderId !== null ? builder.createString(this.orderId!) : 0);
  const enrollId = (this.enrollId !== null ? builder.createString(this.enrollId!) : 0);

  return clz_Torappu_ActArchiveRelicItemData.createclz_Torappu_ActArchiveRelicItemData(builder,
    relicId,
    this.relicSortId,
    this.relicGroupId,
    orderId,
    this.isSpRelic,
    enrollId
  );
}
}
