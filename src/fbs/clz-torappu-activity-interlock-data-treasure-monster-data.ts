// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActivityInterlockData_TreasureMonsterData implements flatbuffers.IUnpackableObject<clz_Torappu_ActivityInterlockData_TreasureMonsterDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActivityInterlockData_TreasureMonsterData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActivityInterlockData_TreasureMonsterData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityInterlockData_TreasureMonsterData):clz_Torappu_ActivityInterlockData_TreasureMonsterData {
  return (obj || new clz_Torappu_ActivityInterlockData_TreasureMonsterData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActivityInterlockData_TreasureMonsterData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityInterlockData_TreasureMonsterData):clz_Torappu_ActivityInterlockData_TreasureMonsterData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActivityInterlockData_TreasureMonsterData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

lockStageKey():string|null
lockStageKey(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
lockStageKey(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

enemyId():string|null
enemyId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
enemyId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

enemyName():string|null
enemyName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
enemyName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

enemyIcon():string|null
enemyIcon(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
enemyIcon(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

enemyDescription():string|null
enemyDescription(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
enemyDescription(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_ActivityInterlockData_TreasureMonsterData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addLockStageKey(builder:flatbuffers.Builder, lockStageKeyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, lockStageKeyOffset, 0);
}

static addEnemyId(builder:flatbuffers.Builder, enemyIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, enemyIdOffset, 0);
}

static addEnemyName(builder:flatbuffers.Builder, enemyNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, enemyNameOffset, 0);
}

static addEnemyIcon(builder:flatbuffers.Builder, enemyIconOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, enemyIconOffset, 0);
}

static addEnemyDescription(builder:flatbuffers.Builder, enemyDescriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, enemyDescriptionOffset, 0);
}

static endclz_Torappu_ActivityInterlockData_TreasureMonsterData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActivityInterlockData_TreasureMonsterData(builder:flatbuffers.Builder, lockStageKeyOffset:flatbuffers.Offset, enemyIdOffset:flatbuffers.Offset, enemyNameOffset:flatbuffers.Offset, enemyIconOffset:flatbuffers.Offset, enemyDescriptionOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActivityInterlockData_TreasureMonsterData.startclz_Torappu_ActivityInterlockData_TreasureMonsterData(builder);
  clz_Torappu_ActivityInterlockData_TreasureMonsterData.addLockStageKey(builder, lockStageKeyOffset);
  clz_Torappu_ActivityInterlockData_TreasureMonsterData.addEnemyId(builder, enemyIdOffset);
  clz_Torappu_ActivityInterlockData_TreasureMonsterData.addEnemyName(builder, enemyNameOffset);
  clz_Torappu_ActivityInterlockData_TreasureMonsterData.addEnemyIcon(builder, enemyIconOffset);
  clz_Torappu_ActivityInterlockData_TreasureMonsterData.addEnemyDescription(builder, enemyDescriptionOffset);
  return clz_Torappu_ActivityInterlockData_TreasureMonsterData.endclz_Torappu_ActivityInterlockData_TreasureMonsterData(builder);
}

unpack(): clz_Torappu_ActivityInterlockData_TreasureMonsterDataT {
  return new clz_Torappu_ActivityInterlockData_TreasureMonsterDataT(
    this.lockStageKey(),
    this.enemyId(),
    this.enemyName(),
    this.enemyIcon(),
    this.enemyDescription()
  );
}


unpackTo(_o: clz_Torappu_ActivityInterlockData_TreasureMonsterDataT): void {
  _o.lockStageKey = this.lockStageKey();
  _o.enemyId = this.enemyId();
  _o.enemyName = this.enemyName();
  _o.enemyIcon = this.enemyIcon();
  _o.enemyDescription = this.enemyDescription();
}
}

export class clz_Torappu_ActivityInterlockData_TreasureMonsterDataT implements flatbuffers.IGeneratedObject {
constructor(
  public lockStageKey: string|Uint8Array|null = null,
  public enemyId: string|Uint8Array|null = null,
  public enemyName: string|Uint8Array|null = null,
  public enemyIcon: string|Uint8Array|null = null,
  public enemyDescription: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const lockStageKey = (this.lockStageKey !== null ? builder.createString(this.lockStageKey!) : 0);
  const enemyId = (this.enemyId !== null ? builder.createString(this.enemyId!) : 0);
  const enemyName = (this.enemyName !== null ? builder.createString(this.enemyName!) : 0);
  const enemyIcon = (this.enemyIcon !== null ? builder.createString(this.enemyIcon!) : 0);
  const enemyDescription = (this.enemyDescription !== null ? builder.createString(this.enemyDescription!) : 0);

  return clz_Torappu_ActivityInterlockData_TreasureMonsterData.createclz_Torappu_ActivityInterlockData_TreasureMonsterData(builder,
    lockStageKey,
    enemyId,
    enemyName,
    enemyIcon,
    enemyDescription
  );
}
}
