// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActivityPotentialCharacterInfo implements flatbuffers.IUnpackableObject<clz_Torappu_ActivityPotentialCharacterInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActivityPotentialCharacterInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActivityPotentialCharacterInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityPotentialCharacterInfo):clz_Torappu_ActivityPotentialCharacterInfo {
  return (obj || new clz_Torappu_ActivityPotentialCharacterInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActivityPotentialCharacterInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityPotentialCharacterInfo):clz_Torappu_ActivityPotentialCharacterInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActivityPotentialCharacterInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

charId():string|null
charId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
charId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_ActivityPotentialCharacterInfo(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addCharId(builder:flatbuffers.Builder, charIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, charIdOffset, 0);
}

static endclz_Torappu_ActivityPotentialCharacterInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActivityPotentialCharacterInfo(builder:flatbuffers.Builder, charIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActivityPotentialCharacterInfo.startclz_Torappu_ActivityPotentialCharacterInfo(builder);
  clz_Torappu_ActivityPotentialCharacterInfo.addCharId(builder, charIdOffset);
  return clz_Torappu_ActivityPotentialCharacterInfo.endclz_Torappu_ActivityPotentialCharacterInfo(builder);
}

unpack(): clz_Torappu_ActivityPotentialCharacterInfoT {
  return new clz_Torappu_ActivityPotentialCharacterInfoT(
    this.charId()
  );
}


unpackTo(_o: clz_Torappu_ActivityPotentialCharacterInfoT): void {
  _o.charId = this.charId();
}
}

export class clz_Torappu_ActivityPotentialCharacterInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public charId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const charId = (this.charId !== null ? builder.createString(this.charId!) : 0);

  return clz_Torappu_ActivityPotentialCharacterInfo.createclz_Torappu_ActivityPotentialCharacterInfo(builder,
    charId
  );
}
}
