// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_SandboxItemType } from './enum--torappu-sandbox-item-type.js';


export class clz_Torappu_SandboxItemToastData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxItemToastDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxItemToastData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxItemToastData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxItemToastData):clz_Torappu_SandboxItemToastData {
  return (obj || new clz_Torappu_SandboxItemToastData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxItemToastData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxItemToastData):clz_Torappu_SandboxItemToastData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxItemToastData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

itemType():enum__Torappu_SandboxItemType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_SandboxItemType.NONE;
}

toastDesc():string|null
toastDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
toastDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

color():string|null
color(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
color(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_SandboxItemToastData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addItemType(builder:flatbuffers.Builder, itemType:enum__Torappu_SandboxItemType) {
  builder.addFieldInt32(0, itemType, enum__Torappu_SandboxItemType.NONE);
}

static addToastDesc(builder:flatbuffers.Builder, toastDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, toastDescOffset, 0);
}

static addColor(builder:flatbuffers.Builder, colorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, colorOffset, 0);
}

static endclz_Torappu_SandboxItemToastData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxItemToastData(builder:flatbuffers.Builder, itemType:enum__Torappu_SandboxItemType, toastDescOffset:flatbuffers.Offset, colorOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SandboxItemToastData.startclz_Torappu_SandboxItemToastData(builder);
  clz_Torappu_SandboxItemToastData.addItemType(builder, itemType);
  clz_Torappu_SandboxItemToastData.addToastDesc(builder, toastDescOffset);
  clz_Torappu_SandboxItemToastData.addColor(builder, colorOffset);
  return clz_Torappu_SandboxItemToastData.endclz_Torappu_SandboxItemToastData(builder);
}

unpack(): clz_Torappu_SandboxItemToastDataT {
  return new clz_Torappu_SandboxItemToastDataT(
    this.itemType(),
    this.toastDesc(),
    this.color()
  );
}


unpackTo(_o: clz_Torappu_SandboxItemToastDataT): void {
  _o.itemType = this.itemType();
  _o.toastDesc = this.toastDesc();
  _o.color = this.color();
}
}

export class clz_Torappu_SandboxItemToastDataT implements flatbuffers.IGeneratedObject {
constructor(
  public itemType: enum__Torappu_SandboxItemType = enum__Torappu_SandboxItemType.NONE,
  public toastDesc: string|Uint8Array|null = null,
  public color: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const toastDesc = (this.toastDesc !== null ? builder.createString(this.toastDesc!) : 0);
  const color = (this.color !== null ? builder.createString(this.color!) : 0);

  return clz_Torappu_SandboxItemToastData.createclz_Torappu_SandboxItemToastData(builder,
    this.itemType,
    toastDesc,
    color
  );
}
}
