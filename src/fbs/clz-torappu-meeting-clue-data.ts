// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_MeetingClueData_ClueData, clz_Torappu_MeetingClueData_ClueDataT } from './clz-torappu-meeting-clue-data-clue-data.js';
import { clz_Torappu_MeetingClueData_ClueTypeData, clz_Torappu_MeetingClueData_ClueTypeDataT } from './clz-torappu-meeting-clue-data-clue-type-data.js';
import { clz_Torappu_MeetingClueData_MessageLeaveBoardConstData, clz_Torappu_MeetingClueData_MessageLeaveBoardConstDataT } from './clz-torappu-meeting-clue-data-message-leave-board-const-data.js';
import { clz_Torappu_MeetingClueData_ReceiveTimeBonus, clz_Torappu_MeetingClueData_ReceiveTimeBonusT } from './clz-torappu-meeting-clue-data-receive-time-bonus.js';


export class clz_Torappu_MeetingClueData implements flatbuffers.IUnpackableObject<clz_Torappu_MeetingClueDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_MeetingClueData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_MeetingClueData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_MeetingClueData):clz_Torappu_MeetingClueData {
  return (obj || new clz_Torappu_MeetingClueData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_MeetingClueData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_MeetingClueData):clz_Torappu_MeetingClueData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_MeetingClueData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

clues(index: number, obj?:clz_Torappu_MeetingClueData_ClueData):clz_Torappu_MeetingClueData_ClueData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new clz_Torappu_MeetingClueData_ClueData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

cluesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

clueTypes(index: number, obj?:clz_Torappu_MeetingClueData_ClueTypeData):clz_Torappu_MeetingClueData_ClueTypeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new clz_Torappu_MeetingClueData_ClueTypeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

clueTypesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

receiveTimeBonus(index: number, obj?:clz_Torappu_MeetingClueData_ReceiveTimeBonus):clz_Torappu_MeetingClueData_ReceiveTimeBonus|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new clz_Torappu_MeetingClueData_ReceiveTimeBonus()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

receiveTimeBonusLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

messageLeaveBoardConstData(obj?:clz_Torappu_MeetingClueData_MessageLeaveBoardConstData):clz_Torappu_MeetingClueData_MessageLeaveBoardConstData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_Torappu_MeetingClueData_MessageLeaveBoardConstData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

inventoryLimit():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

outputBasicBonus():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

outputOperatorsBonus():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

cluePointLimit():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

expiredDays():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

transferBonus():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

recycleBonus():number {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

expiredBonus():number {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

communicationDuration():number {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

initiatorBonus():number {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

participantsBonus():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

commuFoldDuration():number {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

static startclz_Torappu_MeetingClueData(builder:flatbuffers.Builder) {
  builder.startObject(16);
}

static addClues(builder:flatbuffers.Builder, cluesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, cluesOffset, 0);
}

static createCluesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCluesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addClueTypes(builder:flatbuffers.Builder, clueTypesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, clueTypesOffset, 0);
}

static createClueTypesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startClueTypesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addReceiveTimeBonus(builder:flatbuffers.Builder, receiveTimeBonusOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, receiveTimeBonusOffset, 0);
}

static createReceiveTimeBonusVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startReceiveTimeBonusVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addMessageLeaveBoardConstData(builder:flatbuffers.Builder, messageLeaveBoardConstDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, messageLeaveBoardConstDataOffset, 0);
}

static addInventoryLimit(builder:flatbuffers.Builder, inventoryLimit:number) {
  builder.addFieldInt32(4, inventoryLimit, 0);
}

static addOutputBasicBonus(builder:flatbuffers.Builder, outputBasicBonus:number) {
  builder.addFieldInt32(5, outputBasicBonus, 0);
}

static addOutputOperatorsBonus(builder:flatbuffers.Builder, outputOperatorsBonus:number) {
  builder.addFieldInt32(6, outputOperatorsBonus, 0);
}

static addCluePointLimit(builder:flatbuffers.Builder, cluePointLimit:number) {
  builder.addFieldInt32(7, cluePointLimit, 0);
}

static addExpiredDays(builder:flatbuffers.Builder, expiredDays:number) {
  builder.addFieldInt32(8, expiredDays, 0);
}

static addTransferBonus(builder:flatbuffers.Builder, transferBonus:number) {
  builder.addFieldInt32(9, transferBonus, 0);
}

static addRecycleBonus(builder:flatbuffers.Builder, recycleBonus:number) {
  builder.addFieldInt32(10, recycleBonus, 0);
}

static addExpiredBonus(builder:flatbuffers.Builder, expiredBonus:number) {
  builder.addFieldInt32(11, expiredBonus, 0);
}

static addCommunicationDuration(builder:flatbuffers.Builder, communicationDuration:number) {
  builder.addFieldInt32(12, communicationDuration, 0);
}

static addInitiatorBonus(builder:flatbuffers.Builder, initiatorBonus:number) {
  builder.addFieldInt32(13, initiatorBonus, 0);
}

static addParticipantsBonus(builder:flatbuffers.Builder, participantsBonus:number) {
  builder.addFieldInt32(14, participantsBonus, 0);
}

static addCommuFoldDuration(builder:flatbuffers.Builder, commuFoldDuration:number) {
  builder.addFieldFloat32(15, commuFoldDuration, 0.0);
}

static endclz_Torappu_MeetingClueData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishclz_Torappu_MeetingClueDataBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedclz_Torappu_MeetingClueDataBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}


unpack(): clz_Torappu_MeetingClueDataT {
  return new clz_Torappu_MeetingClueDataT(
    this.bb!.createObjList<clz_Torappu_MeetingClueData_ClueData, clz_Torappu_MeetingClueData_ClueDataT>(this.clues.bind(this), this.cluesLength()),
    this.bb!.createObjList<clz_Torappu_MeetingClueData_ClueTypeData, clz_Torappu_MeetingClueData_ClueTypeDataT>(this.clueTypes.bind(this), this.clueTypesLength()),
    this.bb!.createObjList<clz_Torappu_MeetingClueData_ReceiveTimeBonus, clz_Torappu_MeetingClueData_ReceiveTimeBonusT>(this.receiveTimeBonus.bind(this), this.receiveTimeBonusLength()),
    (this.messageLeaveBoardConstData() !== null ? this.messageLeaveBoardConstData()!.unpack() : null),
    this.inventoryLimit(),
    this.outputBasicBonus(),
    this.outputOperatorsBonus(),
    this.cluePointLimit(),
    this.expiredDays(),
    this.transferBonus(),
    this.recycleBonus(),
    this.expiredBonus(),
    this.communicationDuration(),
    this.initiatorBonus(),
    this.participantsBonus(),
    this.commuFoldDuration()
  );
}


unpackTo(_o: clz_Torappu_MeetingClueDataT): void {
  _o.clues = this.bb!.createObjList<clz_Torappu_MeetingClueData_ClueData, clz_Torappu_MeetingClueData_ClueDataT>(this.clues.bind(this), this.cluesLength());
  _o.clueTypes = this.bb!.createObjList<clz_Torappu_MeetingClueData_ClueTypeData, clz_Torappu_MeetingClueData_ClueTypeDataT>(this.clueTypes.bind(this), this.clueTypesLength());
  _o.receiveTimeBonus = this.bb!.createObjList<clz_Torappu_MeetingClueData_ReceiveTimeBonus, clz_Torappu_MeetingClueData_ReceiveTimeBonusT>(this.receiveTimeBonus.bind(this), this.receiveTimeBonusLength());
  _o.messageLeaveBoardConstData = (this.messageLeaveBoardConstData() !== null ? this.messageLeaveBoardConstData()!.unpack() : null);
  _o.inventoryLimit = this.inventoryLimit();
  _o.outputBasicBonus = this.outputBasicBonus();
  _o.outputOperatorsBonus = this.outputOperatorsBonus();
  _o.cluePointLimit = this.cluePointLimit();
  _o.expiredDays = this.expiredDays();
  _o.transferBonus = this.transferBonus();
  _o.recycleBonus = this.recycleBonus();
  _o.expiredBonus = this.expiredBonus();
  _o.communicationDuration = this.communicationDuration();
  _o.initiatorBonus = this.initiatorBonus();
  _o.participantsBonus = this.participantsBonus();
  _o.commuFoldDuration = this.commuFoldDuration();
}
}

export class clz_Torappu_MeetingClueDataT implements flatbuffers.IGeneratedObject {
constructor(
  public clues: (clz_Torappu_MeetingClueData_ClueDataT)[] = [],
  public clueTypes: (clz_Torappu_MeetingClueData_ClueTypeDataT)[] = [],
  public receiveTimeBonus: (clz_Torappu_MeetingClueData_ReceiveTimeBonusT)[] = [],
  public messageLeaveBoardConstData: clz_Torappu_MeetingClueData_MessageLeaveBoardConstDataT|null = null,
  public inventoryLimit: number = 0,
  public outputBasicBonus: number = 0,
  public outputOperatorsBonus: number = 0,
  public cluePointLimit: number = 0,
  public expiredDays: number = 0,
  public transferBonus: number = 0,
  public recycleBonus: number = 0,
  public expiredBonus: number = 0,
  public communicationDuration: number = 0,
  public initiatorBonus: number = 0,
  public participantsBonus: number = 0,
  public commuFoldDuration: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const clues = clz_Torappu_MeetingClueData.createCluesVector(builder, builder.createObjectOffsetList(this.clues));
  const clueTypes = clz_Torappu_MeetingClueData.createClueTypesVector(builder, builder.createObjectOffsetList(this.clueTypes));
  const receiveTimeBonus = clz_Torappu_MeetingClueData.createReceiveTimeBonusVector(builder, builder.createObjectOffsetList(this.receiveTimeBonus));
  const messageLeaveBoardConstData = (this.messageLeaveBoardConstData !== null ? this.messageLeaveBoardConstData!.pack(builder) : 0);

  clz_Torappu_MeetingClueData.startclz_Torappu_MeetingClueData(builder);
  clz_Torappu_MeetingClueData.addClues(builder, clues);
  clz_Torappu_MeetingClueData.addClueTypes(builder, clueTypes);
  clz_Torappu_MeetingClueData.addReceiveTimeBonus(builder, receiveTimeBonus);
  clz_Torappu_MeetingClueData.addMessageLeaveBoardConstData(builder, messageLeaveBoardConstData);
  clz_Torappu_MeetingClueData.addInventoryLimit(builder, this.inventoryLimit);
  clz_Torappu_MeetingClueData.addOutputBasicBonus(builder, this.outputBasicBonus);
  clz_Torappu_MeetingClueData.addOutputOperatorsBonus(builder, this.outputOperatorsBonus);
  clz_Torappu_MeetingClueData.addCluePointLimit(builder, this.cluePointLimit);
  clz_Torappu_MeetingClueData.addExpiredDays(builder, this.expiredDays);
  clz_Torappu_MeetingClueData.addTransferBonus(builder, this.transferBonus);
  clz_Torappu_MeetingClueData.addRecycleBonus(builder, this.recycleBonus);
  clz_Torappu_MeetingClueData.addExpiredBonus(builder, this.expiredBonus);
  clz_Torappu_MeetingClueData.addCommunicationDuration(builder, this.communicationDuration);
  clz_Torappu_MeetingClueData.addInitiatorBonus(builder, this.initiatorBonus);
  clz_Torappu_MeetingClueData.addParticipantsBonus(builder, this.participantsBonus);
  clz_Torappu_MeetingClueData.addCommuFoldDuration(builder, this.commuFoldDuration);

  return clz_Torappu_MeetingClueData.endclz_Torappu_MeetingClueData(builder);
}
}
