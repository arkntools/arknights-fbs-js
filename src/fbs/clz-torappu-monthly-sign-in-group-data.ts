// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_MonthlySignInData, clz_Torappu_MonthlySignInDataT } from './clz-torappu-monthly-sign-in-data.js';


export class clz_Torappu_MonthlySignInGroupData implements flatbuffers.IUnpackableObject<clz_Torappu_MonthlySignInGroupDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_MonthlySignInGroupData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_MonthlySignInGroupData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_MonthlySignInGroupData):clz_Torappu_MonthlySignInGroupData {
  return (obj || new clz_Torappu_MonthlySignInGroupData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_MonthlySignInGroupData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_MonthlySignInGroupData):clz_Torappu_MonthlySignInGroupData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_MonthlySignInGroupData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

groupId():string|null
groupId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
groupId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

title():string|null
title(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
title(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

description():string|null
description(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
description(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

signStartTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

signEndTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

items(index: number, obj?:clz_Torappu_MonthlySignInData):clz_Torappu_MonthlySignInData|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new clz_Torappu_MonthlySignInData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

itemsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_MonthlySignInGroupData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addGroupId(builder:flatbuffers.Builder, groupIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, groupIdOffset, 0);
}

static addTitle(builder:flatbuffers.Builder, titleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, titleOffset, 0);
}

static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, descriptionOffset, 0);
}

static addSignStartTime(builder:flatbuffers.Builder, signStartTime:bigint) {
  builder.addFieldInt64(3, signStartTime, BigInt('0'));
}

static addSignEndTime(builder:flatbuffers.Builder, signEndTime:bigint) {
  builder.addFieldInt64(4, signEndTime, BigInt('0'));
}

static addItems(builder:flatbuffers.Builder, itemsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, itemsOffset, 0);
}

static createItemsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startItemsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_MonthlySignInGroupData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_MonthlySignInGroupData(builder:flatbuffers.Builder, groupIdOffset:flatbuffers.Offset, titleOffset:flatbuffers.Offset, descriptionOffset:flatbuffers.Offset, signStartTime:bigint, signEndTime:bigint, itemsOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_MonthlySignInGroupData.startclz_Torappu_MonthlySignInGroupData(builder);
  clz_Torappu_MonthlySignInGroupData.addGroupId(builder, groupIdOffset);
  clz_Torappu_MonthlySignInGroupData.addTitle(builder, titleOffset);
  clz_Torappu_MonthlySignInGroupData.addDescription(builder, descriptionOffset);
  clz_Torappu_MonthlySignInGroupData.addSignStartTime(builder, signStartTime);
  clz_Torappu_MonthlySignInGroupData.addSignEndTime(builder, signEndTime);
  clz_Torappu_MonthlySignInGroupData.addItems(builder, itemsOffset);
  return clz_Torappu_MonthlySignInGroupData.endclz_Torappu_MonthlySignInGroupData(builder);
}

unpack(): clz_Torappu_MonthlySignInGroupDataT {
  return new clz_Torappu_MonthlySignInGroupDataT(
    this.groupId(),
    this.title(),
    this.description(),
    this.signStartTime(),
    this.signEndTime(),
    this.bb!.createObjList<clz_Torappu_MonthlySignInData, clz_Torappu_MonthlySignInDataT>(this.items.bind(this), this.itemsLength())
  );
}


unpackTo(_o: clz_Torappu_MonthlySignInGroupDataT): void {
  _o.groupId = this.groupId();
  _o.title = this.title();
  _o.description = this.description();
  _o.signStartTime = this.signStartTime();
  _o.signEndTime = this.signEndTime();
  _o.items = this.bb!.createObjList<clz_Torappu_MonthlySignInData, clz_Torappu_MonthlySignInDataT>(this.items.bind(this), this.itemsLength());
}
}

export class clz_Torappu_MonthlySignInGroupDataT implements flatbuffers.IGeneratedObject {
constructor(
  public groupId: string|Uint8Array|null = null,
  public title: string|Uint8Array|null = null,
  public description: string|Uint8Array|null = null,
  public signStartTime: bigint = BigInt('0'),
  public signEndTime: bigint = BigInt('0'),
  public items: (clz_Torappu_MonthlySignInDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const groupId = (this.groupId !== null ? builder.createString(this.groupId!) : 0);
  const title = (this.title !== null ? builder.createString(this.title!) : 0);
  const description = (this.description !== null ? builder.createString(this.description!) : 0);
  const items = clz_Torappu_MonthlySignInGroupData.createItemsVector(builder, builder.createObjectOffsetList(this.items));

  return clz_Torappu_MonthlySignInGroupData.createclz_Torappu_MonthlySignInGroupData(builder,
    groupId,
    title,
    description,
    this.signStartTime,
    this.signEndTime,
    items
  );
}
}
