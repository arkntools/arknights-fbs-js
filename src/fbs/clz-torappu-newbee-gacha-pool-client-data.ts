// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_NewbeeGachaPoolClientData implements flatbuffers.IUnpackableObject<clz_Torappu_NewbeeGachaPoolClientDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_NewbeeGachaPoolClientData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_NewbeeGachaPoolClientData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_NewbeeGachaPoolClientData):clz_Torappu_NewbeeGachaPoolClientData {
  return (obj || new clz_Torappu_NewbeeGachaPoolClientData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_NewbeeGachaPoolClientData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_NewbeeGachaPoolClientData):clz_Torappu_NewbeeGachaPoolClientData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_NewbeeGachaPoolClientData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

gachaPoolId():string|null
gachaPoolId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
gachaPoolId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

gachaIndex():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

gachaPoolName():string|null
gachaPoolName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
gachaPoolName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

gachaPoolDetail():string|null
gachaPoolDetail(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
gachaPoolDetail(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

gachaPrice():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

gachaTimes():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

gachaOffset():string|null
gachaOffset(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
gachaOffset(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_NewbeeGachaPoolClientData(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static addGachaPoolId(builder:flatbuffers.Builder, gachaPoolIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, gachaPoolIdOffset, 0);
}

static addGachaIndex(builder:flatbuffers.Builder, gachaIndex:number) {
  builder.addFieldInt32(1, gachaIndex, 0);
}

static addGachaPoolName(builder:flatbuffers.Builder, gachaPoolNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, gachaPoolNameOffset, 0);
}

static addGachaPoolDetail(builder:flatbuffers.Builder, gachaPoolDetailOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, gachaPoolDetailOffset, 0);
}

static addGachaPrice(builder:flatbuffers.Builder, gachaPrice:number) {
  builder.addFieldInt32(4, gachaPrice, 0);
}

static addGachaTimes(builder:flatbuffers.Builder, gachaTimes:number) {
  builder.addFieldInt32(5, gachaTimes, 0);
}

static addGachaOffset(builder:flatbuffers.Builder, gachaOffsetOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, gachaOffsetOffset, 0);
}

static endclz_Torappu_NewbeeGachaPoolClientData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_NewbeeGachaPoolClientData(builder:flatbuffers.Builder, gachaPoolIdOffset:flatbuffers.Offset, gachaIndex:number, gachaPoolNameOffset:flatbuffers.Offset, gachaPoolDetailOffset:flatbuffers.Offset, gachaPrice:number, gachaTimes:number, gachaOffsetOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_NewbeeGachaPoolClientData.startclz_Torappu_NewbeeGachaPoolClientData(builder);
  clz_Torappu_NewbeeGachaPoolClientData.addGachaPoolId(builder, gachaPoolIdOffset);
  clz_Torappu_NewbeeGachaPoolClientData.addGachaIndex(builder, gachaIndex);
  clz_Torappu_NewbeeGachaPoolClientData.addGachaPoolName(builder, gachaPoolNameOffset);
  clz_Torappu_NewbeeGachaPoolClientData.addGachaPoolDetail(builder, gachaPoolDetailOffset);
  clz_Torappu_NewbeeGachaPoolClientData.addGachaPrice(builder, gachaPrice);
  clz_Torappu_NewbeeGachaPoolClientData.addGachaTimes(builder, gachaTimes);
  clz_Torappu_NewbeeGachaPoolClientData.addGachaOffset(builder, gachaOffsetOffset);
  return clz_Torappu_NewbeeGachaPoolClientData.endclz_Torappu_NewbeeGachaPoolClientData(builder);
}

unpack(): clz_Torappu_NewbeeGachaPoolClientDataT {
  return new clz_Torappu_NewbeeGachaPoolClientDataT(
    this.gachaPoolId(),
    this.gachaIndex(),
    this.gachaPoolName(),
    this.gachaPoolDetail(),
    this.gachaPrice(),
    this.gachaTimes(),
    this.gachaOffset()
  );
}


unpackTo(_o: clz_Torappu_NewbeeGachaPoolClientDataT): void {
  _o.gachaPoolId = this.gachaPoolId();
  _o.gachaIndex = this.gachaIndex();
  _o.gachaPoolName = this.gachaPoolName();
  _o.gachaPoolDetail = this.gachaPoolDetail();
  _o.gachaPrice = this.gachaPrice();
  _o.gachaTimes = this.gachaTimes();
  _o.gachaOffset = this.gachaOffset();
}
}

export class clz_Torappu_NewbeeGachaPoolClientDataT implements flatbuffers.IGeneratedObject {
constructor(
  public gachaPoolId: string|Uint8Array|null = null,
  public gachaIndex: number = 0,
  public gachaPoolName: string|Uint8Array|null = null,
  public gachaPoolDetail: string|Uint8Array|null = null,
  public gachaPrice: number = 0,
  public gachaTimes: number = 0,
  public gachaOffset: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const gachaPoolId = (this.gachaPoolId !== null ? builder.createString(this.gachaPoolId!) : 0);
  const gachaPoolName = (this.gachaPoolName !== null ? builder.createString(this.gachaPoolName!) : 0);
  const gachaPoolDetail = (this.gachaPoolDetail !== null ? builder.createString(this.gachaPoolDetail!) : 0);
  const gachaOffset = (this.gachaOffset !== null ? builder.createString(this.gachaOffset!) : 0);

  return clz_Torappu_NewbeeGachaPoolClientData.createclz_Torappu_NewbeeGachaPoolClientData(builder,
    gachaPoolId,
    this.gachaIndex,
    gachaPoolName,
    gachaPoolDetail,
    this.gachaPrice,
    this.gachaTimes,
    gachaOffset
  );
}
}
