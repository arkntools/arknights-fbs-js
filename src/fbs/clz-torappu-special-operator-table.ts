// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_SpecialOperatorConstData, clz_Torappu_SpecialOperatorConstDataT } from './clz-torappu-special-operator-const-data.js';
import { clz_Torappu_SpecialOperatorModeData, clz_Torappu_SpecialOperatorModeDataT } from './clz-torappu-special-operator-mode-data.js';
import { dict__string__clz_Torappu_MissionData, dict__string__clz_Torappu_MissionDataT } from './dict--string--clz-torappu-mission-data.js';
import { dict__string__clz_Torappu_MissionGroup, dict__string__clz_Torappu_MissionGroupT } from './dict--string--clz-torappu-mission-group.js';
import { dict__string__clz_Torappu_SpecialOperatorBasicData, dict__string__clz_Torappu_SpecialOperatorBasicDataT } from './dict--string--clz-torappu-special-operator-basic-data.js';
import { dict__string__clz_Torappu_SpecialOperatorDetailData, dict__string__clz_Torappu_SpecialOperatorDetailDataT } from './dict--string--clz-torappu-special-operator-detail-data.js';


export class clz_Torappu_SpecialOperatorTable implements flatbuffers.IUnpackableObject<clz_Torappu_SpecialOperatorTableT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SpecialOperatorTable {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SpecialOperatorTable(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SpecialOperatorTable):clz_Torappu_SpecialOperatorTable {
  return (obj || new clz_Torappu_SpecialOperatorTable()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SpecialOperatorTable(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SpecialOperatorTable):clz_Torappu_SpecialOperatorTable {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SpecialOperatorTable()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

operatorBasicData(index: number, obj?:dict__string__clz_Torappu_SpecialOperatorBasicData):dict__string__clz_Torappu_SpecialOperatorBasicData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new dict__string__clz_Torappu_SpecialOperatorBasicData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

operatorBasicDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

operatorDetailData(index: number, obj?:dict__string__clz_Torappu_SpecialOperatorDetailData):dict__string__clz_Torappu_SpecialOperatorDetailData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new dict__string__clz_Torappu_SpecialOperatorDetailData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

operatorDetailDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

modeData(index: number, obj?:clz_Torappu_SpecialOperatorModeData):clz_Torappu_SpecialOperatorModeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new clz_Torappu_SpecialOperatorModeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

modeDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

nodeUnlockMissionData(index: number, obj?:dict__string__clz_Torappu_MissionData):dict__string__clz_Torappu_MissionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new dict__string__clz_Torappu_MissionData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

nodeUnlockMissionDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

nodeUnlockMissionGroup(index: number, obj?:dict__string__clz_Torappu_MissionGroup):dict__string__clz_Torappu_MissionGroup|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new dict__string__clz_Torappu_MissionGroup()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

nodeUnlockMissionGroupLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

constData(obj?:clz_Torappu_SpecialOperatorConstData):clz_Torappu_SpecialOperatorConstData|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new clz_Torappu_SpecialOperatorConstData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startclz_Torappu_SpecialOperatorTable(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addOperatorBasicData(builder:flatbuffers.Builder, operatorBasicDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, operatorBasicDataOffset, 0);
}

static createOperatorBasicDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startOperatorBasicDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addOperatorDetailData(builder:flatbuffers.Builder, operatorDetailDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, operatorDetailDataOffset, 0);
}

static createOperatorDetailDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startOperatorDetailDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addModeData(builder:flatbuffers.Builder, modeDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, modeDataOffset, 0);
}

static createModeDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startModeDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addNodeUnlockMissionData(builder:flatbuffers.Builder, nodeUnlockMissionDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, nodeUnlockMissionDataOffset, 0);
}

static createNodeUnlockMissionDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startNodeUnlockMissionDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addNodeUnlockMissionGroup(builder:flatbuffers.Builder, nodeUnlockMissionGroupOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, nodeUnlockMissionGroupOffset, 0);
}

static createNodeUnlockMissionGroupVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startNodeUnlockMissionGroupVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addConstData(builder:flatbuffers.Builder, constDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, constDataOffset, 0);
}

static endclz_Torappu_SpecialOperatorTable(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishclz_Torappu_SpecialOperatorTableBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedclz_Torappu_SpecialOperatorTableBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}


unpack(): clz_Torappu_SpecialOperatorTableT {
  return new clz_Torappu_SpecialOperatorTableT(
    this.bb!.createObjList<dict__string__clz_Torappu_SpecialOperatorBasicData, dict__string__clz_Torappu_SpecialOperatorBasicDataT>(this.operatorBasicData.bind(this), this.operatorBasicDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SpecialOperatorDetailData, dict__string__clz_Torappu_SpecialOperatorDetailDataT>(this.operatorDetailData.bind(this), this.operatorDetailDataLength()),
    this.bb!.createObjList<clz_Torappu_SpecialOperatorModeData, clz_Torappu_SpecialOperatorModeDataT>(this.modeData.bind(this), this.modeDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_MissionData, dict__string__clz_Torappu_MissionDataT>(this.nodeUnlockMissionData.bind(this), this.nodeUnlockMissionDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_MissionGroup, dict__string__clz_Torappu_MissionGroupT>(this.nodeUnlockMissionGroup.bind(this), this.nodeUnlockMissionGroupLength()),
    (this.constData() !== null ? this.constData()!.unpack() : null)
  );
}


unpackTo(_o: clz_Torappu_SpecialOperatorTableT): void {
  _o.operatorBasicData = this.bb!.createObjList<dict__string__clz_Torappu_SpecialOperatorBasicData, dict__string__clz_Torappu_SpecialOperatorBasicDataT>(this.operatorBasicData.bind(this), this.operatorBasicDataLength());
  _o.operatorDetailData = this.bb!.createObjList<dict__string__clz_Torappu_SpecialOperatorDetailData, dict__string__clz_Torappu_SpecialOperatorDetailDataT>(this.operatorDetailData.bind(this), this.operatorDetailDataLength());
  _o.modeData = this.bb!.createObjList<clz_Torappu_SpecialOperatorModeData, clz_Torappu_SpecialOperatorModeDataT>(this.modeData.bind(this), this.modeDataLength());
  _o.nodeUnlockMissionData = this.bb!.createObjList<dict__string__clz_Torappu_MissionData, dict__string__clz_Torappu_MissionDataT>(this.nodeUnlockMissionData.bind(this), this.nodeUnlockMissionDataLength());
  _o.nodeUnlockMissionGroup = this.bb!.createObjList<dict__string__clz_Torappu_MissionGroup, dict__string__clz_Torappu_MissionGroupT>(this.nodeUnlockMissionGroup.bind(this), this.nodeUnlockMissionGroupLength());
  _o.constData = (this.constData() !== null ? this.constData()!.unpack() : null);
}
}

export class clz_Torappu_SpecialOperatorTableT implements flatbuffers.IGeneratedObject {
constructor(
  public operatorBasicData: (dict__string__clz_Torappu_SpecialOperatorBasicDataT)[] = [],
  public operatorDetailData: (dict__string__clz_Torappu_SpecialOperatorDetailDataT)[] = [],
  public modeData: (clz_Torappu_SpecialOperatorModeDataT)[] = [],
  public nodeUnlockMissionData: (dict__string__clz_Torappu_MissionDataT)[] = [],
  public nodeUnlockMissionGroup: (dict__string__clz_Torappu_MissionGroupT)[] = [],
  public constData: clz_Torappu_SpecialOperatorConstDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const operatorBasicData = clz_Torappu_SpecialOperatorTable.createOperatorBasicDataVector(builder, builder.createObjectOffsetList(this.operatorBasicData));
  const operatorDetailData = clz_Torappu_SpecialOperatorTable.createOperatorDetailDataVector(builder, builder.createObjectOffsetList(this.operatorDetailData));
  const modeData = clz_Torappu_SpecialOperatorTable.createModeDataVector(builder, builder.createObjectOffsetList(this.modeData));
  const nodeUnlockMissionData = clz_Torappu_SpecialOperatorTable.createNodeUnlockMissionDataVector(builder, builder.createObjectOffsetList(this.nodeUnlockMissionData));
  const nodeUnlockMissionGroup = clz_Torappu_SpecialOperatorTable.createNodeUnlockMissionGroupVector(builder, builder.createObjectOffsetList(this.nodeUnlockMissionGroup));
  const constData = (this.constData !== null ? this.constData!.pack(builder) : 0);

  clz_Torappu_SpecialOperatorTable.startclz_Torappu_SpecialOperatorTable(builder);
  clz_Torappu_SpecialOperatorTable.addOperatorBasicData(builder, operatorBasicData);
  clz_Torappu_SpecialOperatorTable.addOperatorDetailData(builder, operatorDetailData);
  clz_Torappu_SpecialOperatorTable.addModeData(builder, modeData);
  clz_Torappu_SpecialOperatorTable.addNodeUnlockMissionData(builder, nodeUnlockMissionData);
  clz_Torappu_SpecialOperatorTable.addNodeUnlockMissionGroup(builder, nodeUnlockMissionGroup);
  clz_Torappu_SpecialOperatorTable.addConstData(builder, constData);

  return clz_Torappu_SpecialOperatorTable.endclz_Torappu_SpecialOperatorTable(builder);
}
}
