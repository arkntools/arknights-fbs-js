// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_SandboxV2MapConfig, clz_Torappu_SandboxV2MapConfigT } from './clz-torappu-sandbox-v2-map-config.js';
import { dict__string__clz_Torappu_SandboxV2MapZoneData, dict__string__clz_Torappu_SandboxV2MapZoneDataT } from './dict--string--clz-torappu-sandbox-v2-map-zone-data.js';
import { dict__string__clz_Torappu_SandboxV2NodeData, dict__string__clz_Torappu_SandboxV2NodeDataT } from './dict--string--clz-torappu-sandbox-v2-node-data.js';


export class clz_Torappu_SandboxV2MapData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxV2MapDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxV2MapData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxV2MapData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2MapData):clz_Torappu_SandboxV2MapData {
  return (obj || new clz_Torappu_SandboxV2MapData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxV2MapData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2MapData):clz_Torappu_SandboxV2MapData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxV2MapData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

nodes(index: number, obj?:dict__string__clz_Torappu_SandboxV2NodeData):dict__string__clz_Torappu_SandboxV2NodeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2NodeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

nodesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

zones(index: number, obj?:dict__string__clz_Torappu_SandboxV2MapZoneData):dict__string__clz_Torappu_SandboxV2MapZoneData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2MapZoneData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

zonesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

mapConfig(obj?:clz_Torappu_SandboxV2MapConfig):clz_Torappu_SandboxV2MapConfig|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new clz_Torappu_SandboxV2MapConfig()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

centerNodeId():string|null
centerNodeId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
centerNodeId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

monthModeNodeId():string|null
monthModeNodeId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
monthModeNodeId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_SandboxV2MapData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addNodes(builder:flatbuffers.Builder, nodesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, nodesOffset, 0);
}

static createNodesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startNodesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addZones(builder:flatbuffers.Builder, zonesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, zonesOffset, 0);
}

static createZonesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startZonesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addMapConfig(builder:flatbuffers.Builder, mapConfigOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, mapConfigOffset, 0);
}

static addCenterNodeId(builder:flatbuffers.Builder, centerNodeIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, centerNodeIdOffset, 0);
}

static addMonthModeNodeId(builder:flatbuffers.Builder, monthModeNodeIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, monthModeNodeIdOffset, 0);
}

static endclz_Torappu_SandboxV2MapData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_SandboxV2MapDataT {
  return new clz_Torappu_SandboxV2MapDataT(
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2NodeData, dict__string__clz_Torappu_SandboxV2NodeDataT>(this.nodes.bind(this), this.nodesLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2MapZoneData, dict__string__clz_Torappu_SandboxV2MapZoneDataT>(this.zones.bind(this), this.zonesLength()),
    (this.mapConfig() !== null ? this.mapConfig()!.unpack() : null),
    this.centerNodeId(),
    this.monthModeNodeId()
  );
}


unpackTo(_o: clz_Torappu_SandboxV2MapDataT): void {
  _o.nodes = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2NodeData, dict__string__clz_Torappu_SandboxV2NodeDataT>(this.nodes.bind(this), this.nodesLength());
  _o.zones = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2MapZoneData, dict__string__clz_Torappu_SandboxV2MapZoneDataT>(this.zones.bind(this), this.zonesLength());
  _o.mapConfig = (this.mapConfig() !== null ? this.mapConfig()!.unpack() : null);
  _o.centerNodeId = this.centerNodeId();
  _o.monthModeNodeId = this.monthModeNodeId();
}
}

export class clz_Torappu_SandboxV2MapDataT implements flatbuffers.IGeneratedObject {
constructor(
  public nodes: (dict__string__clz_Torappu_SandboxV2NodeDataT)[] = [],
  public zones: (dict__string__clz_Torappu_SandboxV2MapZoneDataT)[] = [],
  public mapConfig: clz_Torappu_SandboxV2MapConfigT|null = null,
  public centerNodeId: string|Uint8Array|null = null,
  public monthModeNodeId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const nodes = clz_Torappu_SandboxV2MapData.createNodesVector(builder, builder.createObjectOffsetList(this.nodes));
  const zones = clz_Torappu_SandboxV2MapData.createZonesVector(builder, builder.createObjectOffsetList(this.zones));
  const mapConfig = (this.mapConfig !== null ? this.mapConfig!.pack(builder) : 0);
  const centerNodeId = (this.centerNodeId !== null ? builder.createString(this.centerNodeId!) : 0);
  const monthModeNodeId = (this.monthModeNodeId !== null ? builder.createString(this.monthModeNodeId!) : 0);

  clz_Torappu_SandboxV2MapData.startclz_Torappu_SandboxV2MapData(builder);
  clz_Torappu_SandboxV2MapData.addNodes(builder, nodes);
  clz_Torappu_SandboxV2MapData.addZones(builder, zones);
  clz_Torappu_SandboxV2MapData.addMapConfig(builder, mapConfig);
  clz_Torappu_SandboxV2MapData.addCenterNodeId(builder, centerNodeId);
  clz_Torappu_SandboxV2MapData.addMonthModeNodeId(builder, monthModeNodeId);

  return clz_Torappu_SandboxV2MapData.endclz_Torappu_SandboxV2MapData(builder);
}
}
