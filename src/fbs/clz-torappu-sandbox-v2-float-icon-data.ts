// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SandboxV2FloatIconData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxV2FloatIconDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxV2FloatIconData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxV2FloatIconData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2FloatIconData):clz_Torappu_SandboxV2FloatIconData {
  return (obj || new clz_Torappu_SandboxV2FloatIconData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxV2FloatIconData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2FloatIconData):clz_Torappu_SandboxV2FloatIconData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxV2FloatIconData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

picId():string|null
picId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
picId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

picName():string|null
picName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
picName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_SandboxV2FloatIconData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addPicId(builder:flatbuffers.Builder, picIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, picIdOffset, 0);
}

static addPicName(builder:flatbuffers.Builder, picNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, picNameOffset, 0);
}

static endclz_Torappu_SandboxV2FloatIconData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxV2FloatIconData(builder:flatbuffers.Builder, picIdOffset:flatbuffers.Offset, picNameOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SandboxV2FloatIconData.startclz_Torappu_SandboxV2FloatIconData(builder);
  clz_Torappu_SandboxV2FloatIconData.addPicId(builder, picIdOffset);
  clz_Torappu_SandboxV2FloatIconData.addPicName(builder, picNameOffset);
  return clz_Torappu_SandboxV2FloatIconData.endclz_Torappu_SandboxV2FloatIconData(builder);
}

unpack(): clz_Torappu_SandboxV2FloatIconDataT {
  return new clz_Torappu_SandboxV2FloatIconDataT(
    this.picId(),
    this.picName()
  );
}


unpackTo(_o: clz_Torappu_SandboxV2FloatIconDataT): void {
  _o.picId = this.picId();
  _o.picName = this.picName();
}
}

export class clz_Torappu_SandboxV2FloatIconDataT implements flatbuffers.IGeneratedObject {
constructor(
  public picId: string|Uint8Array|null = null,
  public picName: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const picId = (this.picId !== null ? builder.createString(this.picId!) : 0);
  const picName = (this.picName !== null ? builder.createString(this.picName!) : 0);

  return clz_Torappu_SandboxV2FloatIconData.createclz_Torappu_SandboxV2FloatIconData(builder,
    picId,
    picName
  );
}
}
