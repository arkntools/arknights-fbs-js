// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo implements flatbuffers.IUnpackableObject<clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo):clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo {
  return (obj || new clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo):clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

frontNodes(index: number):string
frontNodes(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
frontNodes(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

frontNodesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

nextNode():string|null
nextNode(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
nextNode(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addFrontNodes(builder:flatbuffers.Builder, frontNodesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, frontNodesOffset, 0);
}

static createFrontNodesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startFrontNodesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addNextNode(builder:flatbuffers.Builder, nextNodeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nextNodeOffset, 0);
}

static endclz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo(builder:flatbuffers.Builder, frontNodesOffset:flatbuffers.Offset, nextNodeOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo.startclz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo(builder);
  clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo.addFrontNodes(builder, frontNodesOffset);
  clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo.addNextNode(builder, nextNodeOffset);
  return clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo.endclz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo(builder);
}

unpack(): clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfoT {
  return new clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfoT(
    this.bb!.createScalarList<string>(this.frontNodes.bind(this), this.frontNodesLength()),
    this.nextNode()
  );
}


unpackTo(_o: clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfoT): void {
  _o.frontNodes = this.bb!.createScalarList<string>(this.frontNodes.bind(this), this.frontNodesLength());
  _o.nextNode = this.nextNode();
}
}

export class clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public frontNodes: (string)[] = [],
  public nextNode: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const frontNodes = clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo.createFrontNodesVector(builder, builder.createObjectOffsetList(this.frontNodes));
  const nextNode = (this.nextNode !== null ? builder.createString(this.nextNode!) : 0);

  return clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo.createclz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo(builder,
    frontNodes,
    nextNode
  );
}
}
