// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { dict__string__clz_Torappu_RoguelikeArchiveEnroll, dict__string__clz_Torappu_RoguelikeArchiveEnrollT } from './dict--string--clz-torappu-roguelike-archive-enroll.js';
import { dict__string__clz_Torappu_RoguelikeArchiveUnlockCondDesc, dict__string__clz_Torappu_RoguelikeArchiveUnlockCondDescT } from './dict--string--clz-torappu-roguelike-archive-unlock-cond-desc.js';


export class clz_Torappu_RoguelikeArchiveUnlockCondData implements flatbuffers.IUnpackableObject<clz_Torappu_RoguelikeArchiveUnlockCondDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RoguelikeArchiveUnlockCondData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RoguelikeArchiveUnlockCondData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeArchiveUnlockCondData):clz_Torappu_RoguelikeArchiveUnlockCondData {
  return (obj || new clz_Torappu_RoguelikeArchiveUnlockCondData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RoguelikeArchiveUnlockCondData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeArchiveUnlockCondData):clz_Torappu_RoguelikeArchiveUnlockCondData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RoguelikeArchiveUnlockCondData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

unlockCondDesc(index: number, obj?:dict__string__clz_Torappu_RoguelikeArchiveUnlockCondDesc):dict__string__clz_Torappu_RoguelikeArchiveUnlockCondDesc|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new dict__string__clz_Torappu_RoguelikeArchiveUnlockCondDesc()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

unlockCondDescLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

enroll(index: number, obj?:dict__string__clz_Torappu_RoguelikeArchiveEnroll):dict__string__clz_Torappu_RoguelikeArchiveEnroll|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new dict__string__clz_Torappu_RoguelikeArchiveEnroll()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

enrollLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_RoguelikeArchiveUnlockCondData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addUnlockCondDesc(builder:flatbuffers.Builder, unlockCondDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, unlockCondDescOffset, 0);
}

static createUnlockCondDescVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startUnlockCondDescVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addEnroll(builder:flatbuffers.Builder, enrollOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, enrollOffset, 0);
}

static createEnrollVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEnrollVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_RoguelikeArchiveUnlockCondData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_RoguelikeArchiveUnlockCondData(builder:flatbuffers.Builder, unlockCondDescOffset:flatbuffers.Offset, enrollOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_RoguelikeArchiveUnlockCondData.startclz_Torappu_RoguelikeArchiveUnlockCondData(builder);
  clz_Torappu_RoguelikeArchiveUnlockCondData.addUnlockCondDesc(builder, unlockCondDescOffset);
  clz_Torappu_RoguelikeArchiveUnlockCondData.addEnroll(builder, enrollOffset);
  return clz_Torappu_RoguelikeArchiveUnlockCondData.endclz_Torappu_RoguelikeArchiveUnlockCondData(builder);
}

unpack(): clz_Torappu_RoguelikeArchiveUnlockCondDataT {
  return new clz_Torappu_RoguelikeArchiveUnlockCondDataT(
    this.bb!.createObjList<dict__string__clz_Torappu_RoguelikeArchiveUnlockCondDesc, dict__string__clz_Torappu_RoguelikeArchiveUnlockCondDescT>(this.unlockCondDesc.bind(this), this.unlockCondDescLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_RoguelikeArchiveEnroll, dict__string__clz_Torappu_RoguelikeArchiveEnrollT>(this.enroll.bind(this), this.enrollLength())
  );
}


unpackTo(_o: clz_Torappu_RoguelikeArchiveUnlockCondDataT): void {
  _o.unlockCondDesc = this.bb!.createObjList<dict__string__clz_Torappu_RoguelikeArchiveUnlockCondDesc, dict__string__clz_Torappu_RoguelikeArchiveUnlockCondDescT>(this.unlockCondDesc.bind(this), this.unlockCondDescLength());
  _o.enroll = this.bb!.createObjList<dict__string__clz_Torappu_RoguelikeArchiveEnroll, dict__string__clz_Torappu_RoguelikeArchiveEnrollT>(this.enroll.bind(this), this.enrollLength());
}
}

export class clz_Torappu_RoguelikeArchiveUnlockCondDataT implements flatbuffers.IGeneratedObject {
constructor(
  public unlockCondDesc: (dict__string__clz_Torappu_RoguelikeArchiveUnlockCondDescT)[] = [],
  public enroll: (dict__string__clz_Torappu_RoguelikeArchiveEnrollT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const unlockCondDesc = clz_Torappu_RoguelikeArchiveUnlockCondData.createUnlockCondDescVector(builder, builder.createObjectOffsetList(this.unlockCondDesc));
  const enroll = clz_Torappu_RoguelikeArchiveUnlockCondData.createEnrollVector(builder, builder.createObjectOffsetList(this.enroll));

  return clz_Torappu_RoguelikeArchiveUnlockCondData.createclz_Torappu_RoguelikeArchiveUnlockCondData(builder,
    unlockCondDesc,
    enroll
  );
}
}
