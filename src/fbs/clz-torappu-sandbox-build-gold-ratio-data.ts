// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SandboxBuildGoldRatioData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxBuildGoldRatioDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxBuildGoldRatioData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxBuildGoldRatioData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxBuildGoldRatioData):clz_Torappu_SandboxBuildGoldRatioData {
  return (obj || new clz_Torappu_SandboxBuildGoldRatioData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxBuildGoldRatioData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxBuildGoldRatioData):clz_Torappu_SandboxBuildGoldRatioData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxBuildGoldRatioData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

itemId():string|null
itemId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
itemId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ratio():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

effectDesc():string|null
effectDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
effectDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_SandboxBuildGoldRatioData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addItemId(builder:flatbuffers.Builder, itemIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, itemIdOffset, 0);
}

static addRatio(builder:flatbuffers.Builder, ratio:number) {
  builder.addFieldInt32(1, ratio, 0);
}

static addEffectDesc(builder:flatbuffers.Builder, effectDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, effectDescOffset, 0);
}

static endclz_Torappu_SandboxBuildGoldRatioData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxBuildGoldRatioData(builder:flatbuffers.Builder, itemIdOffset:flatbuffers.Offset, ratio:number, effectDescOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SandboxBuildGoldRatioData.startclz_Torappu_SandboxBuildGoldRatioData(builder);
  clz_Torappu_SandboxBuildGoldRatioData.addItemId(builder, itemIdOffset);
  clz_Torappu_SandboxBuildGoldRatioData.addRatio(builder, ratio);
  clz_Torappu_SandboxBuildGoldRatioData.addEffectDesc(builder, effectDescOffset);
  return clz_Torappu_SandboxBuildGoldRatioData.endclz_Torappu_SandboxBuildGoldRatioData(builder);
}

unpack(): clz_Torappu_SandboxBuildGoldRatioDataT {
  return new clz_Torappu_SandboxBuildGoldRatioDataT(
    this.itemId(),
    this.ratio(),
    this.effectDesc()
  );
}


unpackTo(_o: clz_Torappu_SandboxBuildGoldRatioDataT): void {
  _o.itemId = this.itemId();
  _o.ratio = this.ratio();
  _o.effectDesc = this.effectDesc();
}
}

export class clz_Torappu_SandboxBuildGoldRatioDataT implements flatbuffers.IGeneratedObject {
constructor(
  public itemId: string|Uint8Array|null = null,
  public ratio: number = 0,
  public effectDesc: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const itemId = (this.itemId !== null ? builder.createString(this.itemId!) : 0);
  const effectDesc = (this.effectDesc !== null ? builder.createString(this.effectDesc!) : 0);

  return clz_Torappu_SandboxBuildGoldRatioData.createclz_Torappu_SandboxBuildGoldRatioData(builder,
    itemId,
    this.ratio,
    effectDesc
  );
}
}
