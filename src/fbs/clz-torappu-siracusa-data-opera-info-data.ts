// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SiracusaData_OperaInfoData implements flatbuffers.IUnpackableObject<clz_Torappu_SiracusaData_OperaInfoDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SiracusaData_OperaInfoData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SiracusaData_OperaInfoData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SiracusaData_OperaInfoData):clz_Torappu_SiracusaData_OperaInfoData {
  return (obj || new clz_Torappu_SiracusaData_OperaInfoData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SiracusaData_OperaInfoData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SiracusaData_OperaInfoData):clz_Torappu_SiracusaData_OperaInfoData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SiracusaData_OperaInfoData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

operaId():string|null
operaId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
operaId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

operaName():string|null
operaName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
operaName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

operaSubName():string|null
operaSubName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
operaSubName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

operaScore():string|null
operaScore(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
operaScore(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

unlockTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startclz_Torappu_SiracusaData_OperaInfoData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addOperaId(builder:flatbuffers.Builder, operaIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, operaIdOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(1, sortId, 0);
}

static addOperaName(builder:flatbuffers.Builder, operaNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, operaNameOffset, 0);
}

static addOperaSubName(builder:flatbuffers.Builder, operaSubNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, operaSubNameOffset, 0);
}

static addOperaScore(builder:flatbuffers.Builder, operaScoreOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, operaScoreOffset, 0);
}

static addUnlockTime(builder:flatbuffers.Builder, unlockTime:bigint) {
  builder.addFieldInt64(5, unlockTime, BigInt('0'));
}

static endclz_Torappu_SiracusaData_OperaInfoData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SiracusaData_OperaInfoData(builder:flatbuffers.Builder, operaIdOffset:flatbuffers.Offset, sortId:number, operaNameOffset:flatbuffers.Offset, operaSubNameOffset:flatbuffers.Offset, operaScoreOffset:flatbuffers.Offset, unlockTime:bigint):flatbuffers.Offset {
  clz_Torappu_SiracusaData_OperaInfoData.startclz_Torappu_SiracusaData_OperaInfoData(builder);
  clz_Torappu_SiracusaData_OperaInfoData.addOperaId(builder, operaIdOffset);
  clz_Torappu_SiracusaData_OperaInfoData.addSortId(builder, sortId);
  clz_Torappu_SiracusaData_OperaInfoData.addOperaName(builder, operaNameOffset);
  clz_Torappu_SiracusaData_OperaInfoData.addOperaSubName(builder, operaSubNameOffset);
  clz_Torappu_SiracusaData_OperaInfoData.addOperaScore(builder, operaScoreOffset);
  clz_Torappu_SiracusaData_OperaInfoData.addUnlockTime(builder, unlockTime);
  return clz_Torappu_SiracusaData_OperaInfoData.endclz_Torappu_SiracusaData_OperaInfoData(builder);
}

unpack(): clz_Torappu_SiracusaData_OperaInfoDataT {
  return new clz_Torappu_SiracusaData_OperaInfoDataT(
    this.operaId(),
    this.sortId(),
    this.operaName(),
    this.operaSubName(),
    this.operaScore(),
    this.unlockTime()
  );
}


unpackTo(_o: clz_Torappu_SiracusaData_OperaInfoDataT): void {
  _o.operaId = this.operaId();
  _o.sortId = this.sortId();
  _o.operaName = this.operaName();
  _o.operaSubName = this.operaSubName();
  _o.operaScore = this.operaScore();
  _o.unlockTime = this.unlockTime();
}
}

export class clz_Torappu_SiracusaData_OperaInfoDataT implements flatbuffers.IGeneratedObject {
constructor(
  public operaId: string|Uint8Array|null = null,
  public sortId: number = 0,
  public operaName: string|Uint8Array|null = null,
  public operaSubName: string|Uint8Array|null = null,
  public operaScore: string|Uint8Array|null = null,
  public unlockTime: bigint = BigInt('0')
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const operaId = (this.operaId !== null ? builder.createString(this.operaId!) : 0);
  const operaName = (this.operaName !== null ? builder.createString(this.operaName!) : 0);
  const operaSubName = (this.operaSubName !== null ? builder.createString(this.operaSubName!) : 0);
  const operaScore = (this.operaScore !== null ? builder.createString(this.operaScore!) : 0);

  return clz_Torappu_SiracusaData_OperaInfoData.createclz_Torappu_SiracusaData_OperaInfoData(builder,
    operaId,
    this.sortId,
    operaName,
    operaSubName,
    operaScore,
    this.unlockTime
  );
}
}
