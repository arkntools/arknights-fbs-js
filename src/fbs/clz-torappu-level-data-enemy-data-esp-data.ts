// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_SpType } from './enum--torappu-sp-type.js';


export class clz_Torappu_LevelData_EnemyData_ESpData implements flatbuffers.IUnpackableObject<clz_Torappu_LevelData_EnemyData_ESpDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_LevelData_EnemyData_ESpData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_LevelData_EnemyData_ESpData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_LevelData_EnemyData_ESpData):clz_Torappu_LevelData_EnemyData_ESpData {
  return (obj || new clz_Torappu_LevelData_EnemyData_ESpData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_LevelData_EnemyData_ESpData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_LevelData_EnemyData_ESpData):clz_Torappu_LevelData_EnemyData_ESpData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_LevelData_EnemyData_ESpData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

spType():enum__Torappu_SpType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_SpType.NONE;
}

maxSp():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

initSp():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

increment():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

static startclz_Torappu_LevelData_EnemyData_ESpData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addSpType(builder:flatbuffers.Builder, spType:enum__Torappu_SpType) {
  builder.addFieldInt32(0, spType, enum__Torappu_SpType.NONE);
}

static addMaxSp(builder:flatbuffers.Builder, maxSp:number) {
  builder.addFieldInt32(1, maxSp, 0);
}

static addInitSp(builder:flatbuffers.Builder, initSp:number) {
  builder.addFieldInt32(2, initSp, 0);
}

static addIncrement(builder:flatbuffers.Builder, increment:number) {
  builder.addFieldFloat32(3, increment, 0.0);
}

static endclz_Torappu_LevelData_EnemyData_ESpData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_LevelData_EnemyData_ESpData(builder:flatbuffers.Builder, spType:enum__Torappu_SpType, maxSp:number, initSp:number, increment:number):flatbuffers.Offset {
  clz_Torappu_LevelData_EnemyData_ESpData.startclz_Torappu_LevelData_EnemyData_ESpData(builder);
  clz_Torappu_LevelData_EnemyData_ESpData.addSpType(builder, spType);
  clz_Torappu_LevelData_EnemyData_ESpData.addMaxSp(builder, maxSp);
  clz_Torappu_LevelData_EnemyData_ESpData.addInitSp(builder, initSp);
  clz_Torappu_LevelData_EnemyData_ESpData.addIncrement(builder, increment);
  return clz_Torappu_LevelData_EnemyData_ESpData.endclz_Torappu_LevelData_EnemyData_ESpData(builder);
}

unpack(): clz_Torappu_LevelData_EnemyData_ESpDataT {
  return new clz_Torappu_LevelData_EnemyData_ESpDataT(
    this.spType(),
    this.maxSp(),
    this.initSp(),
    this.increment()
  );
}


unpackTo(_o: clz_Torappu_LevelData_EnemyData_ESpDataT): void {
  _o.spType = this.spType();
  _o.maxSp = this.maxSp();
  _o.initSp = this.initSp();
  _o.increment = this.increment();
}
}

export class clz_Torappu_LevelData_EnemyData_ESpDataT implements flatbuffers.IGeneratedObject {
constructor(
  public spType: enum__Torappu_SpType = enum__Torappu_SpType.NONE,
  public maxSp: number = 0,
  public initSp: number = 0,
  public increment: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return clz_Torappu_LevelData_EnemyData_ESpData.createclz_Torappu_LevelData_EnemyData_ESpData(builder,
    this.spType,
    this.maxSp,
    this.initSp,
    this.increment
  );
}
}
