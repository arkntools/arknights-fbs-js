// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_Act4funTokenInfoData implements flatbuffers.IUnpackableObject<clz_Torappu_Act4funTokenInfoDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Act4funTokenInfoData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Act4funTokenInfoData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act4funTokenInfoData):clz_Torappu_Act4funTokenInfoData {
  return (obj || new clz_Torappu_Act4funTokenInfoData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Act4funTokenInfoData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act4funTokenInfoData):clz_Torappu_Act4funTokenInfoData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Act4funTokenInfoData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

tokenLevelId():string|null
tokenLevelId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
tokenLevelId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

levelDesc():string|null
levelDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
levelDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

skillDesc():string|null
skillDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
skillDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

tokenLevelNum():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

levelIconId():string|null
levelIconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
levelIconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_Act4funTokenInfoData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addTokenLevelId(builder:flatbuffers.Builder, tokenLevelIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, tokenLevelIdOffset, 0);
}

static addLevelDesc(builder:flatbuffers.Builder, levelDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, levelDescOffset, 0);
}

static addSkillDesc(builder:flatbuffers.Builder, skillDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, skillDescOffset, 0);
}

static addTokenLevelNum(builder:flatbuffers.Builder, tokenLevelNum:number) {
  builder.addFieldInt32(3, tokenLevelNum, 0);
}

static addLevelIconId(builder:flatbuffers.Builder, levelIconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, levelIconIdOffset, 0);
}

static endclz_Torappu_Act4funTokenInfoData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Act4funTokenInfoData(builder:flatbuffers.Builder, tokenLevelIdOffset:flatbuffers.Offset, levelDescOffset:flatbuffers.Offset, skillDescOffset:flatbuffers.Offset, tokenLevelNum:number, levelIconIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_Act4funTokenInfoData.startclz_Torappu_Act4funTokenInfoData(builder);
  clz_Torappu_Act4funTokenInfoData.addTokenLevelId(builder, tokenLevelIdOffset);
  clz_Torappu_Act4funTokenInfoData.addLevelDesc(builder, levelDescOffset);
  clz_Torappu_Act4funTokenInfoData.addSkillDesc(builder, skillDescOffset);
  clz_Torappu_Act4funTokenInfoData.addTokenLevelNum(builder, tokenLevelNum);
  clz_Torappu_Act4funTokenInfoData.addLevelIconId(builder, levelIconIdOffset);
  return clz_Torappu_Act4funTokenInfoData.endclz_Torappu_Act4funTokenInfoData(builder);
}

unpack(): clz_Torappu_Act4funTokenInfoDataT {
  return new clz_Torappu_Act4funTokenInfoDataT(
    this.tokenLevelId(),
    this.levelDesc(),
    this.skillDesc(),
    this.tokenLevelNum(),
    this.levelIconId()
  );
}


unpackTo(_o: clz_Torappu_Act4funTokenInfoDataT): void {
  _o.tokenLevelId = this.tokenLevelId();
  _o.levelDesc = this.levelDesc();
  _o.skillDesc = this.skillDesc();
  _o.tokenLevelNum = this.tokenLevelNum();
  _o.levelIconId = this.levelIconId();
}
}

export class clz_Torappu_Act4funTokenInfoDataT implements flatbuffers.IGeneratedObject {
constructor(
  public tokenLevelId: string|Uint8Array|null = null,
  public levelDesc: string|Uint8Array|null = null,
  public skillDesc: string|Uint8Array|null = null,
  public tokenLevelNum: number = 0,
  public levelIconId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const tokenLevelId = (this.tokenLevelId !== null ? builder.createString(this.tokenLevelId!) : 0);
  const levelDesc = (this.levelDesc !== null ? builder.createString(this.levelDesc!) : 0);
  const skillDesc = (this.skillDesc !== null ? builder.createString(this.skillDesc!) : 0);
  const levelIconId = (this.levelIconId !== null ? builder.createString(this.levelIconId!) : 0);

  return clz_Torappu_Act4funTokenInfoData.createclz_Torappu_Act4funTokenInfoData(builder,
    tokenLevelId,
    levelDesc,
    skillDesc,
    this.tokenLevelNum,
    levelIconId
  );
}
}
