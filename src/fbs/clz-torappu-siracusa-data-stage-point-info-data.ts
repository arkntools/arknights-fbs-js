// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SiracusaData_StagePointInfoData implements flatbuffers.IUnpackableObject<clz_Torappu_SiracusaData_StagePointInfoDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SiracusaData_StagePointInfoData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SiracusaData_StagePointInfoData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SiracusaData_StagePointInfoData):clz_Torappu_SiracusaData_StagePointInfoData {
  return (obj || new clz_Torappu_SiracusaData_StagePointInfoData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SiracusaData_StagePointInfoData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SiracusaData_StagePointInfoData):clz_Torappu_SiracusaData_StagePointInfoData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SiracusaData_StagePointInfoData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

stageId():string|null
stageId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
stageId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

pointId():string|null
pointId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
pointId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

isTaskStage():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startclz_Torappu_SiracusaData_StagePointInfoData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addStageId(builder:flatbuffers.Builder, stageIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, stageIdOffset, 0);
}

static addPointId(builder:flatbuffers.Builder, pointIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, pointIdOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(2, sortId, 0);
}

static addIsTaskStage(builder:flatbuffers.Builder, isTaskStage:boolean) {
  builder.addFieldInt8(3, +isTaskStage, +false);
}

static endclz_Torappu_SiracusaData_StagePointInfoData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SiracusaData_StagePointInfoData(builder:flatbuffers.Builder, stageIdOffset:flatbuffers.Offset, pointIdOffset:flatbuffers.Offset, sortId:number, isTaskStage:boolean):flatbuffers.Offset {
  clz_Torappu_SiracusaData_StagePointInfoData.startclz_Torappu_SiracusaData_StagePointInfoData(builder);
  clz_Torappu_SiracusaData_StagePointInfoData.addStageId(builder, stageIdOffset);
  clz_Torappu_SiracusaData_StagePointInfoData.addPointId(builder, pointIdOffset);
  clz_Torappu_SiracusaData_StagePointInfoData.addSortId(builder, sortId);
  clz_Torappu_SiracusaData_StagePointInfoData.addIsTaskStage(builder, isTaskStage);
  return clz_Torappu_SiracusaData_StagePointInfoData.endclz_Torappu_SiracusaData_StagePointInfoData(builder);
}

unpack(): clz_Torappu_SiracusaData_StagePointInfoDataT {
  return new clz_Torappu_SiracusaData_StagePointInfoDataT(
    this.stageId(),
    this.pointId(),
    this.sortId(),
    this.isTaskStage()
  );
}


unpackTo(_o: clz_Torappu_SiracusaData_StagePointInfoDataT): void {
  _o.stageId = this.stageId();
  _o.pointId = this.pointId();
  _o.sortId = this.sortId();
  _o.isTaskStage = this.isTaskStage();
}
}

export class clz_Torappu_SiracusaData_StagePointInfoDataT implements flatbuffers.IGeneratedObject {
constructor(
  public stageId: string|Uint8Array|null = null,
  public pointId: string|Uint8Array|null = null,
  public sortId: number = 0,
  public isTaskStage: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const stageId = (this.stageId !== null ? builder.createString(this.stageId!) : 0);
  const pointId = (this.pointId !== null ? builder.createString(this.pointId!) : 0);

  return clz_Torappu_SiracusaData_StagePointInfoData.createclz_Torappu_SiracusaData_StagePointInfoData(builder,
    stageId,
    pointId,
    this.sortId,
    this.isTaskStage
  );
}
}
