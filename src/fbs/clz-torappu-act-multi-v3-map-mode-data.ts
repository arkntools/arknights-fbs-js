// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_ActMultiV3MapModeType } from './enum--torappu-act-multi-v3-map-mode-type.js';


export class clz_Torappu_ActMultiV3MapModeData implements flatbuffers.IUnpackableObject<clz_Torappu_ActMultiV3MapModeDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActMultiV3MapModeData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActMultiV3MapModeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActMultiV3MapModeData):clz_Torappu_ActMultiV3MapModeData {
  return (obj || new clz_Torappu_ActMultiV3MapModeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActMultiV3MapModeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActMultiV3MapModeData):clz_Torappu_ActMultiV3MapModeData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActMultiV3MapModeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

modeType():enum__Torappu_ActMultiV3MapModeType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_ActMultiV3MapModeType.NONE;
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

iconId():string|null
iconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
iconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

color():string|null
color(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
color(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

quickMatchSortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

stageOverviewSortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

unlockTs():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

unlockPageTitle():string|null
unlockPageTitle(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
unlockPageTitle(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

unlockPageDesc():string|null
unlockPageDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
unlockPageDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_ActMultiV3MapModeData(builder:flatbuffers.Builder) {
  builder.startObject(9);
}

static addModeType(builder:flatbuffers.Builder, modeType:enum__Torappu_ActMultiV3MapModeType) {
  builder.addFieldInt32(0, modeType, enum__Torappu_ActMultiV3MapModeType.NONE);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nameOffset, 0);
}

static addIconId(builder:flatbuffers.Builder, iconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, iconIdOffset, 0);
}

static addColor(builder:flatbuffers.Builder, colorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, colorOffset, 0);
}

static addQuickMatchSortId(builder:flatbuffers.Builder, quickMatchSortId:number) {
  builder.addFieldInt32(4, quickMatchSortId, 0);
}

static addStageOverviewSortId(builder:flatbuffers.Builder, stageOverviewSortId:number) {
  builder.addFieldInt32(5, stageOverviewSortId, 0);
}

static addUnlockTs(builder:flatbuffers.Builder, unlockTs:bigint) {
  builder.addFieldInt64(6, unlockTs, BigInt('0'));
}

static addUnlockPageTitle(builder:flatbuffers.Builder, unlockPageTitleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, unlockPageTitleOffset, 0);
}

static addUnlockPageDesc(builder:flatbuffers.Builder, unlockPageDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, unlockPageDescOffset, 0);
}

static endclz_Torappu_ActMultiV3MapModeData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActMultiV3MapModeData(builder:flatbuffers.Builder, modeType:enum__Torappu_ActMultiV3MapModeType, nameOffset:flatbuffers.Offset, iconIdOffset:flatbuffers.Offset, colorOffset:flatbuffers.Offset, quickMatchSortId:number, stageOverviewSortId:number, unlockTs:bigint, unlockPageTitleOffset:flatbuffers.Offset, unlockPageDescOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActMultiV3MapModeData.startclz_Torappu_ActMultiV3MapModeData(builder);
  clz_Torappu_ActMultiV3MapModeData.addModeType(builder, modeType);
  clz_Torappu_ActMultiV3MapModeData.addName(builder, nameOffset);
  clz_Torappu_ActMultiV3MapModeData.addIconId(builder, iconIdOffset);
  clz_Torappu_ActMultiV3MapModeData.addColor(builder, colorOffset);
  clz_Torappu_ActMultiV3MapModeData.addQuickMatchSortId(builder, quickMatchSortId);
  clz_Torappu_ActMultiV3MapModeData.addStageOverviewSortId(builder, stageOverviewSortId);
  clz_Torappu_ActMultiV3MapModeData.addUnlockTs(builder, unlockTs);
  clz_Torappu_ActMultiV3MapModeData.addUnlockPageTitle(builder, unlockPageTitleOffset);
  clz_Torappu_ActMultiV3MapModeData.addUnlockPageDesc(builder, unlockPageDescOffset);
  return clz_Torappu_ActMultiV3MapModeData.endclz_Torappu_ActMultiV3MapModeData(builder);
}

unpack(): clz_Torappu_ActMultiV3MapModeDataT {
  return new clz_Torappu_ActMultiV3MapModeDataT(
    this.modeType(),
    this.name(),
    this.iconId(),
    this.color(),
    this.quickMatchSortId(),
    this.stageOverviewSortId(),
    this.unlockTs(),
    this.unlockPageTitle(),
    this.unlockPageDesc()
  );
}


unpackTo(_o: clz_Torappu_ActMultiV3MapModeDataT): void {
  _o.modeType = this.modeType();
  _o.name = this.name();
  _o.iconId = this.iconId();
  _o.color = this.color();
  _o.quickMatchSortId = this.quickMatchSortId();
  _o.stageOverviewSortId = this.stageOverviewSortId();
  _o.unlockTs = this.unlockTs();
  _o.unlockPageTitle = this.unlockPageTitle();
  _o.unlockPageDesc = this.unlockPageDesc();
}
}

export class clz_Torappu_ActMultiV3MapModeDataT implements flatbuffers.IGeneratedObject {
constructor(
  public modeType: enum__Torappu_ActMultiV3MapModeType = enum__Torappu_ActMultiV3MapModeType.NONE,
  public name: string|Uint8Array|null = null,
  public iconId: string|Uint8Array|null = null,
  public color: string|Uint8Array|null = null,
  public quickMatchSortId: number = 0,
  public stageOverviewSortId: number = 0,
  public unlockTs: bigint = BigInt('0'),
  public unlockPageTitle: string|Uint8Array|null = null,
  public unlockPageDesc: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const name = (this.name !== null ? builder.createString(this.name!) : 0);
  const iconId = (this.iconId !== null ? builder.createString(this.iconId!) : 0);
  const color = (this.color !== null ? builder.createString(this.color!) : 0);
  const unlockPageTitle = (this.unlockPageTitle !== null ? builder.createString(this.unlockPageTitle!) : 0);
  const unlockPageDesc = (this.unlockPageDesc !== null ? builder.createString(this.unlockPageDesc!) : 0);

  return clz_Torappu_ActMultiV3MapModeData.createclz_Torappu_ActMultiV3MapModeData(builder,
    this.modeType,
    name,
    iconId,
    color,
    this.quickMatchSortId,
    this.stageOverviewSortId,
    this.unlockTs,
    unlockPageTitle,
    unlockPageDesc
  );
}
}
