// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_GridPosition, clz_Torappu_GridPositionT } from './clz-torappu-grid-position.js';


export class clz_Torappu_BuildingData_ObstaclePoint implements flatbuffers.IUnpackableObject<clz_Torappu_BuildingData_ObstaclePointT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_BuildingData_ObstaclePoint {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_BuildingData_ObstaclePoint(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_ObstaclePoint):clz_Torappu_BuildingData_ObstaclePoint {
  return (obj || new clz_Torappu_BuildingData_ObstaclePoint()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_BuildingData_ObstaclePoint(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_ObstaclePoint):clz_Torappu_BuildingData_ObstaclePoint {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_BuildingData_ObstaclePoint()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

offset(obj?:clz_Torappu_GridPosition):clz_Torappu_GridPosition|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new clz_Torappu_GridPosition()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

edgeWalkableMask():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

static startclz_Torappu_BuildingData_ObstaclePoint(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addOffset(builder:flatbuffers.Builder, offsetOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, offsetOffset, 0);
}

static addEdgeWalkableMask(builder:flatbuffers.Builder, edgeWalkableMask:number) {
  builder.addFieldInt8(1, edgeWalkableMask, 0);
}

static endclz_Torappu_BuildingData_ObstaclePoint(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_BuildingData_ObstaclePoint(builder:flatbuffers.Builder, offsetOffset:flatbuffers.Offset, edgeWalkableMask:number):flatbuffers.Offset {
  clz_Torappu_BuildingData_ObstaclePoint.startclz_Torappu_BuildingData_ObstaclePoint(builder);
  clz_Torappu_BuildingData_ObstaclePoint.addOffset(builder, offsetOffset);
  clz_Torappu_BuildingData_ObstaclePoint.addEdgeWalkableMask(builder, edgeWalkableMask);
  return clz_Torappu_BuildingData_ObstaclePoint.endclz_Torappu_BuildingData_ObstaclePoint(builder);
}

unpack(): clz_Torappu_BuildingData_ObstaclePointT {
  return new clz_Torappu_BuildingData_ObstaclePointT(
    (this.offset() !== null ? this.offset()!.unpack() : null),
    this.edgeWalkableMask()
  );
}


unpackTo(_o: clz_Torappu_BuildingData_ObstaclePointT): void {
  _o.offset = (this.offset() !== null ? this.offset()!.unpack() : null);
  _o.edgeWalkableMask = this.edgeWalkableMask();
}
}

export class clz_Torappu_BuildingData_ObstaclePointT implements flatbuffers.IGeneratedObject {
constructor(
  public offset: clz_Torappu_GridPositionT|null = null,
  public edgeWalkableMask: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const offset = (this.offset !== null ? this.offset!.pack(builder) : 0);

  return clz_Torappu_BuildingData_ObstaclePoint.createclz_Torappu_BuildingData_ObstaclePoint(builder,
    offset,
    this.edgeWalkableMask
  );
}
}
