// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_MeetingClueData_ClueData implements flatbuffers.IUnpackableObject<clz_Torappu_MeetingClueData_ClueDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_MeetingClueData_ClueData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_MeetingClueData_ClueData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_MeetingClueData_ClueData):clz_Torappu_MeetingClueData_ClueData {
  return (obj || new clz_Torappu_MeetingClueData_ClueData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_MeetingClueData_ClueData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_MeetingClueData_ClueData):clz_Torappu_MeetingClueData_ClueData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_MeetingClueData_ClueData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

clueId():string|null
clueId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
clueId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

clueName():string|null
clueName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
clueName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

clueType():string|null
clueType(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
clueType(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

number():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_MeetingClueData_ClueData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addClueId(builder:flatbuffers.Builder, clueIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, clueIdOffset, 0);
}

static addClueName(builder:flatbuffers.Builder, clueNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, clueNameOffset, 0);
}

static addClueType(builder:flatbuffers.Builder, clueTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, clueTypeOffset, 0);
}

static addNumber(builder:flatbuffers.Builder, number:number) {
  builder.addFieldInt32(3, number, 0);
}

static endclz_Torappu_MeetingClueData_ClueData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_MeetingClueData_ClueData(builder:flatbuffers.Builder, clueIdOffset:flatbuffers.Offset, clueNameOffset:flatbuffers.Offset, clueTypeOffset:flatbuffers.Offset, number:number):flatbuffers.Offset {
  clz_Torappu_MeetingClueData_ClueData.startclz_Torappu_MeetingClueData_ClueData(builder);
  clz_Torappu_MeetingClueData_ClueData.addClueId(builder, clueIdOffset);
  clz_Torappu_MeetingClueData_ClueData.addClueName(builder, clueNameOffset);
  clz_Torappu_MeetingClueData_ClueData.addClueType(builder, clueTypeOffset);
  clz_Torappu_MeetingClueData_ClueData.addNumber(builder, number);
  return clz_Torappu_MeetingClueData_ClueData.endclz_Torappu_MeetingClueData_ClueData(builder);
}

unpack(): clz_Torappu_MeetingClueData_ClueDataT {
  return new clz_Torappu_MeetingClueData_ClueDataT(
    this.clueId(),
    this.clueName(),
    this.clueType(),
    this.number()
  );
}


unpackTo(_o: clz_Torappu_MeetingClueData_ClueDataT): void {
  _o.clueId = this.clueId();
  _o.clueName = this.clueName();
  _o.clueType = this.clueType();
  _o.number = this.number();
}
}

export class clz_Torappu_MeetingClueData_ClueDataT implements flatbuffers.IGeneratedObject {
constructor(
  public clueId: string|Uint8Array|null = null,
  public clueName: string|Uint8Array|null = null,
  public clueType: string|Uint8Array|null = null,
  public number: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const clueId = (this.clueId !== null ? builder.createString(this.clueId!) : 0);
  const clueName = (this.clueName !== null ? builder.createString(this.clueName!) : 0);
  const clueType = (this.clueType !== null ? builder.createString(this.clueType!) : 0);

  return clz_Torappu_MeetingClueData_ClueData.createclz_Torappu_MeetingClueData_ClueData(builder,
    clueId,
    clueName,
    clueType,
    this.number
  );
}
}
