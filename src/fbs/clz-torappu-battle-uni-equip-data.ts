// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_CharacterData_EquipTalentDataBundle, clz_Torappu_CharacterData_EquipTalentDataBundleT } from './clz-torappu-character-data-equip-talent-data-bundle.js';
import { clz_Torappu_CharacterData_EquipTraitDataBundle, clz_Torappu_CharacterData_EquipTraitDataBundleT } from './clz-torappu-character-data-equip-trait-data-bundle.js';
import { enum__Torappu_UniEquipTarget } from './enum--torappu-uni-equip-target.js';


export class clz_Torappu_BattleUniEquipData implements flatbuffers.IUnpackableObject<clz_Torappu_BattleUniEquipDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_BattleUniEquipData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_BattleUniEquipData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BattleUniEquipData):clz_Torappu_BattleUniEquipData {
  return (obj || new clz_Torappu_BattleUniEquipData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_BattleUniEquipData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BattleUniEquipData):clz_Torappu_BattleUniEquipData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_BattleUniEquipData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

resKey():string|null
resKey(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
resKey(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

target():enum__Torappu_UniEquipTarget {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_UniEquipTarget.NONE;
}

isToken():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

validInGameTag():string|null
validInGameTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
validInGameTag(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

validInMapTag():string|null
validInMapTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
validInMapTag(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

addOrOverrideTalentDataBundle(obj?:clz_Torappu_CharacterData_EquipTalentDataBundle):clz_Torappu_CharacterData_EquipTalentDataBundle|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new clz_Torappu_CharacterData_EquipTalentDataBundle()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

overrideTraitDataBundle(obj?:clz_Torappu_CharacterData_EquipTraitDataBundle):clz_Torappu_CharacterData_EquipTraitDataBundle|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new clz_Torappu_CharacterData_EquipTraitDataBundle()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startclz_Torappu_BattleUniEquipData(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static addResKey(builder:flatbuffers.Builder, resKeyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, resKeyOffset, 0);
}

static addTarget(builder:flatbuffers.Builder, target:enum__Torappu_UniEquipTarget) {
  builder.addFieldInt32(1, target, enum__Torappu_UniEquipTarget.NONE);
}

static addIsToken(builder:flatbuffers.Builder, isToken:boolean) {
  builder.addFieldInt8(2, +isToken, +false);
}

static addValidInGameTag(builder:flatbuffers.Builder, validInGameTagOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, validInGameTagOffset, 0);
}

static addValidInMapTag(builder:flatbuffers.Builder, validInMapTagOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, validInMapTagOffset, 0);
}

static addAddOrOverrideTalentDataBundle(builder:flatbuffers.Builder, addOrOverrideTalentDataBundleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, addOrOverrideTalentDataBundleOffset, 0);
}

static addOverrideTraitDataBundle(builder:flatbuffers.Builder, overrideTraitDataBundleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, overrideTraitDataBundleOffset, 0);
}

static endclz_Torappu_BattleUniEquipData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_BattleUniEquipDataT {
  return new clz_Torappu_BattleUniEquipDataT(
    this.resKey(),
    this.target(),
    this.isToken(),
    this.validInGameTag(),
    this.validInMapTag(),
    (this.addOrOverrideTalentDataBundle() !== null ? this.addOrOverrideTalentDataBundle()!.unpack() : null),
    (this.overrideTraitDataBundle() !== null ? this.overrideTraitDataBundle()!.unpack() : null)
  );
}


unpackTo(_o: clz_Torappu_BattleUniEquipDataT): void {
  _o.resKey = this.resKey();
  _o.target = this.target();
  _o.isToken = this.isToken();
  _o.validInGameTag = this.validInGameTag();
  _o.validInMapTag = this.validInMapTag();
  _o.addOrOverrideTalentDataBundle = (this.addOrOverrideTalentDataBundle() !== null ? this.addOrOverrideTalentDataBundle()!.unpack() : null);
  _o.overrideTraitDataBundle = (this.overrideTraitDataBundle() !== null ? this.overrideTraitDataBundle()!.unpack() : null);
}
}

export class clz_Torappu_BattleUniEquipDataT implements flatbuffers.IGeneratedObject {
constructor(
  public resKey: string|Uint8Array|null = null,
  public target: enum__Torappu_UniEquipTarget = enum__Torappu_UniEquipTarget.NONE,
  public isToken: boolean = false,
  public validInGameTag: string|Uint8Array|null = null,
  public validInMapTag: string|Uint8Array|null = null,
  public addOrOverrideTalentDataBundle: clz_Torappu_CharacterData_EquipTalentDataBundleT|null = null,
  public overrideTraitDataBundle: clz_Torappu_CharacterData_EquipTraitDataBundleT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const resKey = (this.resKey !== null ? builder.createString(this.resKey!) : 0);
  const validInGameTag = (this.validInGameTag !== null ? builder.createString(this.validInGameTag!) : 0);
  const validInMapTag = (this.validInMapTag !== null ? builder.createString(this.validInMapTag!) : 0);
  const addOrOverrideTalentDataBundle = (this.addOrOverrideTalentDataBundle !== null ? this.addOrOverrideTalentDataBundle!.pack(builder) : 0);
  const overrideTraitDataBundle = (this.overrideTraitDataBundle !== null ? this.overrideTraitDataBundle!.pack(builder) : 0);

  clz_Torappu_BattleUniEquipData.startclz_Torappu_BattleUniEquipData(builder);
  clz_Torappu_BattleUniEquipData.addResKey(builder, resKey);
  clz_Torappu_BattleUniEquipData.addTarget(builder, this.target);
  clz_Torappu_BattleUniEquipData.addIsToken(builder, this.isToken);
  clz_Torappu_BattleUniEquipData.addValidInGameTag(builder, validInGameTag);
  clz_Torappu_BattleUniEquipData.addValidInMapTag(builder, validInMapTag);
  clz_Torappu_BattleUniEquipData.addAddOrOverrideTalentDataBundle(builder, addOrOverrideTalentDataBundle);
  clz_Torappu_BattleUniEquipData.addOverrideTraitDataBundle(builder, overrideTraitDataBundle);

  return clz_Torappu_BattleUniEquipData.endclz_Torappu_BattleUniEquipData(builder);
}
}
