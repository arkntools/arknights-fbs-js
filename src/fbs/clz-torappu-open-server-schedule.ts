// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_LongTermCheckInData, clz_Torappu_LongTermCheckInDataT } from './clz-torappu-long-term-check-in-data.js';
import { clz_Torappu_NewbieCheckInPackageData, clz_Torappu_NewbieCheckInPackageDataT } from './clz-torappu-newbie-check-in-package-data.js';
import { clz_Torappu_OpenServerConst, clz_Torappu_OpenServerConstT } from './clz-torappu-open-server-const.js';
import { clz_Torappu_OpenServerScheduleItem, clz_Torappu_OpenServerScheduleItemT } from './clz-torappu-open-server-schedule-item.js';
import { clz_Torappu_ReturnData, clz_Torappu_ReturnDataT } from './clz-torappu-return-data.js';
import { clz_Torappu_ReturnV2Data, clz_Torappu_ReturnV2DataT } from './clz-torappu-return-v2-data.js';
import { dict__string__clz_Torappu_OpenServerData, dict__string__clz_Torappu_OpenServerDataT } from './dict--string--clz-torappu-open-server-data.js';


export class clz_Torappu_OpenServerSchedule implements flatbuffers.IUnpackableObject<clz_Torappu_OpenServerScheduleT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_OpenServerSchedule {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_OpenServerSchedule(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_OpenServerSchedule):clz_Torappu_OpenServerSchedule {
  return (obj || new clz_Torappu_OpenServerSchedule()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_OpenServerSchedule(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_OpenServerSchedule):clz_Torappu_OpenServerSchedule {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_OpenServerSchedule()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

schedule(index: number, obj?:clz_Torappu_OpenServerScheduleItem):clz_Torappu_OpenServerScheduleItem|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new clz_Torappu_OpenServerScheduleItem()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

scheduleLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

dataMap(index: number, obj?:dict__string__clz_Torappu_OpenServerData):dict__string__clz_Torappu_OpenServerData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new dict__string__clz_Torappu_OpenServerData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

dataMapLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

constant(obj?:clz_Torappu_OpenServerConst):clz_Torappu_OpenServerConst|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new clz_Torappu_OpenServerConst()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

playerReturn(obj?:clz_Torappu_ReturnData):clz_Torappu_ReturnData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_Torappu_ReturnData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

playerReturnV2(obj?:clz_Torappu_ReturnV2Data):clz_Torappu_ReturnV2Data|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new clz_Torappu_ReturnV2Data()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

newbieCheckInPackageList(index: number, obj?:clz_Torappu_NewbieCheckInPackageData):clz_Torappu_NewbieCheckInPackageData|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new clz_Torappu_NewbieCheckInPackageData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

newbieCheckInPackageListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

longTermCheckInData(obj?:clz_Torappu_LongTermCheckInData):clz_Torappu_LongTermCheckInData|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new clz_Torappu_LongTermCheckInData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startclz_Torappu_OpenServerSchedule(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static addSchedule(builder:flatbuffers.Builder, scheduleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, scheduleOffset, 0);
}

static createScheduleVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startScheduleVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addDataMap(builder:flatbuffers.Builder, dataMapOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, dataMapOffset, 0);
}

static createDataMapVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startDataMapVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addConstant(builder:flatbuffers.Builder, constantOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, constantOffset, 0);
}

static addPlayerReturn(builder:flatbuffers.Builder, playerReturnOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, playerReturnOffset, 0);
}

static addPlayerReturnV2(builder:flatbuffers.Builder, playerReturnV2Offset:flatbuffers.Offset) {
  builder.addFieldOffset(4, playerReturnV2Offset, 0);
}

static addNewbieCheckInPackageList(builder:flatbuffers.Builder, newbieCheckInPackageListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, newbieCheckInPackageListOffset, 0);
}

static createNewbieCheckInPackageListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startNewbieCheckInPackageListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addLongTermCheckInData(builder:flatbuffers.Builder, longTermCheckInDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, longTermCheckInDataOffset, 0);
}

static endclz_Torappu_OpenServerSchedule(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishclz_Torappu_OpenServerScheduleBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedclz_Torappu_OpenServerScheduleBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}


unpack(): clz_Torappu_OpenServerScheduleT {
  return new clz_Torappu_OpenServerScheduleT(
    this.bb!.createObjList<clz_Torappu_OpenServerScheduleItem, clz_Torappu_OpenServerScheduleItemT>(this.schedule.bind(this), this.scheduleLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_OpenServerData, dict__string__clz_Torappu_OpenServerDataT>(this.dataMap.bind(this), this.dataMapLength()),
    (this.constant() !== null ? this.constant()!.unpack() : null),
    (this.playerReturn() !== null ? this.playerReturn()!.unpack() : null),
    (this.playerReturnV2() !== null ? this.playerReturnV2()!.unpack() : null),
    this.bb!.createObjList<clz_Torappu_NewbieCheckInPackageData, clz_Torappu_NewbieCheckInPackageDataT>(this.newbieCheckInPackageList.bind(this), this.newbieCheckInPackageListLength()),
    (this.longTermCheckInData() !== null ? this.longTermCheckInData()!.unpack() : null)
  );
}


unpackTo(_o: clz_Torappu_OpenServerScheduleT): void {
  _o.schedule = this.bb!.createObjList<clz_Torappu_OpenServerScheduleItem, clz_Torappu_OpenServerScheduleItemT>(this.schedule.bind(this), this.scheduleLength());
  _o.dataMap = this.bb!.createObjList<dict__string__clz_Torappu_OpenServerData, dict__string__clz_Torappu_OpenServerDataT>(this.dataMap.bind(this), this.dataMapLength());
  _o.constant = (this.constant() !== null ? this.constant()!.unpack() : null);
  _o.playerReturn = (this.playerReturn() !== null ? this.playerReturn()!.unpack() : null);
  _o.playerReturnV2 = (this.playerReturnV2() !== null ? this.playerReturnV2()!.unpack() : null);
  _o.newbieCheckInPackageList = this.bb!.createObjList<clz_Torappu_NewbieCheckInPackageData, clz_Torappu_NewbieCheckInPackageDataT>(this.newbieCheckInPackageList.bind(this), this.newbieCheckInPackageListLength());
  _o.longTermCheckInData = (this.longTermCheckInData() !== null ? this.longTermCheckInData()!.unpack() : null);
}
}

export class clz_Torappu_OpenServerScheduleT implements flatbuffers.IGeneratedObject {
constructor(
  public schedule: (clz_Torappu_OpenServerScheduleItemT)[] = [],
  public dataMap: (dict__string__clz_Torappu_OpenServerDataT)[] = [],
  public constant: clz_Torappu_OpenServerConstT|null = null,
  public playerReturn: clz_Torappu_ReturnDataT|null = null,
  public playerReturnV2: clz_Torappu_ReturnV2DataT|null = null,
  public newbieCheckInPackageList: (clz_Torappu_NewbieCheckInPackageDataT)[] = [],
  public longTermCheckInData: clz_Torappu_LongTermCheckInDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const schedule = clz_Torappu_OpenServerSchedule.createScheduleVector(builder, builder.createObjectOffsetList(this.schedule));
  const dataMap = clz_Torappu_OpenServerSchedule.createDataMapVector(builder, builder.createObjectOffsetList(this.dataMap));
  const constant = (this.constant !== null ? this.constant!.pack(builder) : 0);
  const playerReturn = (this.playerReturn !== null ? this.playerReturn!.pack(builder) : 0);
  const playerReturnV2 = (this.playerReturnV2 !== null ? this.playerReturnV2!.pack(builder) : 0);
  const newbieCheckInPackageList = clz_Torappu_OpenServerSchedule.createNewbieCheckInPackageListVector(builder, builder.createObjectOffsetList(this.newbieCheckInPackageList));
  const longTermCheckInData = (this.longTermCheckInData !== null ? this.longTermCheckInData!.pack(builder) : 0);

  clz_Torappu_OpenServerSchedule.startclz_Torappu_OpenServerSchedule(builder);
  clz_Torappu_OpenServerSchedule.addSchedule(builder, schedule);
  clz_Torappu_OpenServerSchedule.addDataMap(builder, dataMap);
  clz_Torappu_OpenServerSchedule.addConstant(builder, constant);
  clz_Torappu_OpenServerSchedule.addPlayerReturn(builder, playerReturn);
  clz_Torappu_OpenServerSchedule.addPlayerReturnV2(builder, playerReturnV2);
  clz_Torappu_OpenServerSchedule.addNewbieCheckInPackageList(builder, newbieCheckInPackageList);
  clz_Torappu_OpenServerSchedule.addLongTermCheckInData(builder, longTermCheckInData);

  return clz_Torappu_OpenServerSchedule.endclz_Torappu_OpenServerSchedule(builder);
}
}
