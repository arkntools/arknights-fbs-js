// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_RecalRuneConstData, clz_Torappu_RecalRuneConstDataT } from './clz-torappu-recal-rune-const-data.js';
import { dict__string__clz_Torappu_RecalRuneSeasonData, dict__string__clz_Torappu_RecalRuneSeasonDataT } from './dict--string--clz-torappu-recal-rune-season-data.js';


export class clz_Torappu_RecalRuneSharedData implements flatbuffers.IUnpackableObject<clz_Torappu_RecalRuneSharedDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RecalRuneSharedData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RecalRuneSharedData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RecalRuneSharedData):clz_Torappu_RecalRuneSharedData {
  return (obj || new clz_Torappu_RecalRuneSharedData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RecalRuneSharedData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RecalRuneSharedData):clz_Torappu_RecalRuneSharedData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RecalRuneSharedData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

seasons(index: number, obj?:dict__string__clz_Torappu_RecalRuneSeasonData):dict__string__clz_Torappu_RecalRuneSeasonData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new dict__string__clz_Torappu_RecalRuneSeasonData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

seasonsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

constData(obj?:clz_Torappu_RecalRuneConstData):clz_Torappu_RecalRuneConstData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new clz_Torappu_RecalRuneConstData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startclz_Torappu_RecalRuneSharedData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addSeasons(builder:flatbuffers.Builder, seasonsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, seasonsOffset, 0);
}

static createSeasonsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startSeasonsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addConstData(builder:flatbuffers.Builder, constDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, constDataOffset, 0);
}

static endclz_Torappu_RecalRuneSharedData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_RecalRuneSharedDataT {
  return new clz_Torappu_RecalRuneSharedDataT(
    this.bb!.createObjList<dict__string__clz_Torappu_RecalRuneSeasonData, dict__string__clz_Torappu_RecalRuneSeasonDataT>(this.seasons.bind(this), this.seasonsLength()),
    (this.constData() !== null ? this.constData()!.unpack() : null)
  );
}


unpackTo(_o: clz_Torappu_RecalRuneSharedDataT): void {
  _o.seasons = this.bb!.createObjList<dict__string__clz_Torappu_RecalRuneSeasonData, dict__string__clz_Torappu_RecalRuneSeasonDataT>(this.seasons.bind(this), this.seasonsLength());
  _o.constData = (this.constData() !== null ? this.constData()!.unpack() : null);
}
}

export class clz_Torappu_RecalRuneSharedDataT implements flatbuffers.IGeneratedObject {
constructor(
  public seasons: (dict__string__clz_Torappu_RecalRuneSeasonDataT)[] = [],
  public constData: clz_Torappu_RecalRuneConstDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const seasons = clz_Torappu_RecalRuneSharedData.createSeasonsVector(builder, builder.createObjectOffsetList(this.seasons));
  const constData = (this.constData !== null ? this.constData!.pack(builder) : 0);

  clz_Torappu_RecalRuneSharedData.startclz_Torappu_RecalRuneSharedData(builder);
  clz_Torappu_RecalRuneSharedData.addSeasons(builder, seasons);
  clz_Torappu_RecalRuneSharedData.addConstData(builder, constData);

  return clz_Torappu_RecalRuneSharedData.endclz_Torappu_RecalRuneSharedData(builder);
}
}
