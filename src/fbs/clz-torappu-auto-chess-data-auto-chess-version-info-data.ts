// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_AutoChessData_AutoChessVersionInfoData implements flatbuffers.IUnpackableObject<clz_Torappu_AutoChessData_AutoChessVersionInfoDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_AutoChessData_AutoChessVersionInfoData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_AutoChessData_AutoChessVersionInfoData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_AutoChessData_AutoChessVersionInfoData):clz_Torappu_AutoChessData_AutoChessVersionInfoData {
  return (obj || new clz_Torappu_AutoChessData_AutoChessVersionInfoData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_AutoChessData_AutoChessVersionInfoData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_AutoChessData_AutoChessVersionInfoData):clz_Torappu_AutoChessData_AutoChessVersionInfoData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_AutoChessData_AutoChessVersionInfoData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

versionId():string|null
versionId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
versionId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

activityId():string|null
activityId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
activityId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

updateTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

appearTimeOnMainScreen():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

disappearTimeOnMainScreen():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startclz_Torappu_AutoChessData_AutoChessVersionInfoData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addVersionId(builder:flatbuffers.Builder, versionIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, versionIdOffset, 0);
}

static addActivityId(builder:flatbuffers.Builder, activityIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, activityIdOffset, 0);
}

static addUpdateTime(builder:flatbuffers.Builder, updateTime:bigint) {
  builder.addFieldInt64(2, updateTime, BigInt('0'));
}

static addAppearTimeOnMainScreen(builder:flatbuffers.Builder, appearTimeOnMainScreen:bigint) {
  builder.addFieldInt64(3, appearTimeOnMainScreen, BigInt('0'));
}

static addDisappearTimeOnMainScreen(builder:flatbuffers.Builder, disappearTimeOnMainScreen:bigint) {
  builder.addFieldInt64(4, disappearTimeOnMainScreen, BigInt('0'));
}

static endclz_Torappu_AutoChessData_AutoChessVersionInfoData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_AutoChessData_AutoChessVersionInfoData(builder:flatbuffers.Builder, versionIdOffset:flatbuffers.Offset, activityIdOffset:flatbuffers.Offset, updateTime:bigint, appearTimeOnMainScreen:bigint, disappearTimeOnMainScreen:bigint):flatbuffers.Offset {
  clz_Torappu_AutoChessData_AutoChessVersionInfoData.startclz_Torappu_AutoChessData_AutoChessVersionInfoData(builder);
  clz_Torappu_AutoChessData_AutoChessVersionInfoData.addVersionId(builder, versionIdOffset);
  clz_Torappu_AutoChessData_AutoChessVersionInfoData.addActivityId(builder, activityIdOffset);
  clz_Torappu_AutoChessData_AutoChessVersionInfoData.addUpdateTime(builder, updateTime);
  clz_Torappu_AutoChessData_AutoChessVersionInfoData.addAppearTimeOnMainScreen(builder, appearTimeOnMainScreen);
  clz_Torappu_AutoChessData_AutoChessVersionInfoData.addDisappearTimeOnMainScreen(builder, disappearTimeOnMainScreen);
  return clz_Torappu_AutoChessData_AutoChessVersionInfoData.endclz_Torappu_AutoChessData_AutoChessVersionInfoData(builder);
}

unpack(): clz_Torappu_AutoChessData_AutoChessVersionInfoDataT {
  return new clz_Torappu_AutoChessData_AutoChessVersionInfoDataT(
    this.versionId(),
    this.activityId(),
    this.updateTime(),
    this.appearTimeOnMainScreen(),
    this.disappearTimeOnMainScreen()
  );
}


unpackTo(_o: clz_Torappu_AutoChessData_AutoChessVersionInfoDataT): void {
  _o.versionId = this.versionId();
  _o.activityId = this.activityId();
  _o.updateTime = this.updateTime();
  _o.appearTimeOnMainScreen = this.appearTimeOnMainScreen();
  _o.disappearTimeOnMainScreen = this.disappearTimeOnMainScreen();
}
}

export class clz_Torappu_AutoChessData_AutoChessVersionInfoDataT implements flatbuffers.IGeneratedObject {
constructor(
  public versionId: string|Uint8Array|null = null,
  public activityId: string|Uint8Array|null = null,
  public updateTime: bigint = BigInt('0'),
  public appearTimeOnMainScreen: bigint = BigInt('0'),
  public disappearTimeOnMainScreen: bigint = BigInt('0')
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const versionId = (this.versionId !== null ? builder.createString(this.versionId!) : 0);
  const activityId = (this.activityId !== null ? builder.createString(this.activityId!) : 0);

  return clz_Torappu_AutoChessData_AutoChessVersionInfoData.createclz_Torappu_AutoChessData_AutoChessVersionInfoData(builder,
    versionId,
    activityId,
    this.updateTime,
    this.appearTimeOnMainScreen,
    this.disappearTimeOnMainScreen
  );
}
}
