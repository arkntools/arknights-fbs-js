// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_VoiceLangType } from './enum--torappu-voice-lang-type.js';


export class clz_Torappu_ExtraVoiceConfigData implements flatbuffers.IUnpackableObject<clz_Torappu_ExtraVoiceConfigDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ExtraVoiceConfigData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ExtraVoiceConfigData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ExtraVoiceConfigData):clz_Torappu_ExtraVoiceConfigData {
  return (obj || new clz_Torappu_ExtraVoiceConfigData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ExtraVoiceConfigData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ExtraVoiceConfigData):clz_Torappu_ExtraVoiceConfigData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ExtraVoiceConfigData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

voiceId():string|null
voiceId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
voiceId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

validVoiceLang(index: number):enum__Torappu_VoiceLangType|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : null;
}

validVoiceLangLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

validVoiceLangArray():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

static startclz_Torappu_ExtraVoiceConfigData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addVoiceId(builder:flatbuffers.Builder, voiceIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, voiceIdOffset, 0);
}

static addValidVoiceLang(builder:flatbuffers.Builder, validVoiceLangOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, validVoiceLangOffset, 0);
}

static createValidVoiceLangVector(builder:flatbuffers.Builder, data:enum__Torappu_VoiceLangType[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static startValidVoiceLangVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_ExtraVoiceConfigData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ExtraVoiceConfigData(builder:flatbuffers.Builder, voiceIdOffset:flatbuffers.Offset, validVoiceLangOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ExtraVoiceConfigData.startclz_Torappu_ExtraVoiceConfigData(builder);
  clz_Torappu_ExtraVoiceConfigData.addVoiceId(builder, voiceIdOffset);
  clz_Torappu_ExtraVoiceConfigData.addValidVoiceLang(builder, validVoiceLangOffset);
  return clz_Torappu_ExtraVoiceConfigData.endclz_Torappu_ExtraVoiceConfigData(builder);
}

unpack(): clz_Torappu_ExtraVoiceConfigDataT {
  return new clz_Torappu_ExtraVoiceConfigDataT(
    this.voiceId(),
    this.bb!.createScalarList<enum__Torappu_VoiceLangType>(this.validVoiceLang.bind(this), this.validVoiceLangLength())
  );
}


unpackTo(_o: clz_Torappu_ExtraVoiceConfigDataT): void {
  _o.voiceId = this.voiceId();
  _o.validVoiceLang = this.bb!.createScalarList<enum__Torappu_VoiceLangType>(this.validVoiceLang.bind(this), this.validVoiceLangLength());
}
}

export class clz_Torappu_ExtraVoiceConfigDataT implements flatbuffers.IGeneratedObject {
constructor(
  public voiceId: string|Uint8Array|null = null,
  public validVoiceLang: (enum__Torappu_VoiceLangType)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const voiceId = (this.voiceId !== null ? builder.createString(this.voiceId!) : 0);
  const validVoiceLang = clz_Torappu_ExtraVoiceConfigData.createValidVoiceLangVector(builder, this.validVoiceLang);

  return clz_Torappu_ExtraVoiceConfigData.createclz_Torappu_ExtraVoiceConfigData(builder,
    voiceId,
    validVoiceLang
  );
}
}
