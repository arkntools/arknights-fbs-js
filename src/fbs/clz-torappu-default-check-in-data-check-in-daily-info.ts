// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT } from './clz-torappu-item-bundle.js';


export class clz_Torappu_DefaultCheckInData_CheckInDailyInfo implements flatbuffers.IUnpackableObject<clz_Torappu_DefaultCheckInData_CheckInDailyInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_DefaultCheckInData_CheckInDailyInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_DefaultCheckInData_CheckInDailyInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_DefaultCheckInData_CheckInDailyInfo):clz_Torappu_DefaultCheckInData_CheckInDailyInfo {
  return (obj || new clz_Torappu_DefaultCheckInData_CheckInDailyInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_DefaultCheckInData_CheckInDailyInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_DefaultCheckInData_CheckInDailyInfo):clz_Torappu_DefaultCheckInData_CheckInDailyInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_DefaultCheckInData_CheckInDailyInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

itemList(index: number, obj?:clz_Torappu_ItemBundle):clz_Torappu_ItemBundle|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new clz_Torappu_ItemBundle()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

itemListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

order():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

color():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

keyItem():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

showItemOrder():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

isDynItem():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startclz_Torappu_DefaultCheckInData_CheckInDailyInfo(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addItemList(builder:flatbuffers.Builder, itemListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, itemListOffset, 0);
}

static createItemListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startItemListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addOrder(builder:flatbuffers.Builder, order:number) {
  builder.addFieldInt32(1, order, 0);
}

static addColor(builder:flatbuffers.Builder, color:number) {
  builder.addFieldInt32(2, color, 0);
}

static addKeyItem(builder:flatbuffers.Builder, keyItem:number) {
  builder.addFieldInt32(3, keyItem, 0);
}

static addShowItemOrder(builder:flatbuffers.Builder, showItemOrder:number) {
  builder.addFieldInt32(4, showItemOrder, 0);
}

static addIsDynItem(builder:flatbuffers.Builder, isDynItem:boolean) {
  builder.addFieldInt8(5, +isDynItem, +false);
}

static endclz_Torappu_DefaultCheckInData_CheckInDailyInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_DefaultCheckInData_CheckInDailyInfo(builder:flatbuffers.Builder, itemListOffset:flatbuffers.Offset, order:number, color:number, keyItem:number, showItemOrder:number, isDynItem:boolean):flatbuffers.Offset {
  clz_Torappu_DefaultCheckInData_CheckInDailyInfo.startclz_Torappu_DefaultCheckInData_CheckInDailyInfo(builder);
  clz_Torappu_DefaultCheckInData_CheckInDailyInfo.addItemList(builder, itemListOffset);
  clz_Torappu_DefaultCheckInData_CheckInDailyInfo.addOrder(builder, order);
  clz_Torappu_DefaultCheckInData_CheckInDailyInfo.addColor(builder, color);
  clz_Torappu_DefaultCheckInData_CheckInDailyInfo.addKeyItem(builder, keyItem);
  clz_Torappu_DefaultCheckInData_CheckInDailyInfo.addShowItemOrder(builder, showItemOrder);
  clz_Torappu_DefaultCheckInData_CheckInDailyInfo.addIsDynItem(builder, isDynItem);
  return clz_Torappu_DefaultCheckInData_CheckInDailyInfo.endclz_Torappu_DefaultCheckInData_CheckInDailyInfo(builder);
}

unpack(): clz_Torappu_DefaultCheckInData_CheckInDailyInfoT {
  return new clz_Torappu_DefaultCheckInData_CheckInDailyInfoT(
    this.bb!.createObjList<clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT>(this.itemList.bind(this), this.itemListLength()),
    this.order(),
    this.color(),
    this.keyItem(),
    this.showItemOrder(),
    this.isDynItem()
  );
}


unpackTo(_o: clz_Torappu_DefaultCheckInData_CheckInDailyInfoT): void {
  _o.itemList = this.bb!.createObjList<clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT>(this.itemList.bind(this), this.itemListLength());
  _o.order = this.order();
  _o.color = this.color();
  _o.keyItem = this.keyItem();
  _o.showItemOrder = this.showItemOrder();
  _o.isDynItem = this.isDynItem();
}
}

export class clz_Torappu_DefaultCheckInData_CheckInDailyInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public itemList: (clz_Torappu_ItemBundleT)[] = [],
  public order: number = 0,
  public color: number = 0,
  public keyItem: number = 0,
  public showItemOrder: number = 0,
  public isDynItem: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const itemList = clz_Torappu_DefaultCheckInData_CheckInDailyInfo.createItemListVector(builder, builder.createObjectOffsetList(this.itemList));

  return clz_Torappu_DefaultCheckInData_CheckInDailyInfo.createclz_Torappu_DefaultCheckInData_CheckInDailyInfo(builder,
    itemList,
    this.order,
    this.color,
    this.keyItem,
    this.showItemOrder,
    this.isDynItem
  );
}
}
