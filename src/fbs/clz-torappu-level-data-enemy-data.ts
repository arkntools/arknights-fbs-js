// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_AttributesData, clz_Torappu_AttributesDataT } from './clz-torappu-attributes-data.js';
import { clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT } from './clz-torappu-blackboard-data-pair.js';
import { clz_Torappu_LevelData_EnemyData_ESkillData, clz_Torappu_LevelData_EnemyData_ESkillDataT } from './clz-torappu-level-data-enemy-data-eskill-data.js';
import { clz_Torappu_LevelData_EnemyData_ESpData, clz_Torappu_LevelData_EnemyData_ESpDataT } from './clz-torappu-level-data-enemy-data-esp-data.js';
import { enum__Torappu_EnemyLevelType } from './enum--torappu-enemy-level-type.js';
import { enum__Torappu_MotionMode } from './enum--torappu-motion-mode.js';
import { enum__Torappu_SourceApplyWay } from './enum--torappu-source-apply-way.js';


export class clz_Torappu_LevelData_EnemyData implements flatbuffers.IUnpackableObject<clz_Torappu_LevelData_EnemyDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_LevelData_EnemyData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_LevelData_EnemyData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_LevelData_EnemyData):clz_Torappu_LevelData_EnemyData {
  return (obj || new clz_Torappu_LevelData_EnemyData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_LevelData_EnemyData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_LevelData_EnemyData):clz_Torappu_LevelData_EnemyData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_LevelData_EnemyData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

description():string|null
description(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
description(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

key():string|null
key(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
key(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

attributes(obj?:clz_Torappu_AttributesData):clz_Torappu_AttributesData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_Torappu_AttributesData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

applyWay():enum__Torappu_SourceApplyWay {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_SourceApplyWay.NONE;
}

motion():enum__Torappu_MotionMode {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_MotionMode.WALK;
}

enemyTags(index: number):string
enemyTags(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
enemyTags(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

enemyTagsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

notCountInTotal():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

alias():string|null
alias(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
alias(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

lifePointReduce():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

rangeRadius():number {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

numOfExtraDrops():number {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

viewRadius():number {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

levelType():enum__Torappu_EnemyLevelType {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_EnemyLevelType.NORMAL;
}

talentBlackboard(index: number, obj?:clz_Torappu_Blackboard_DataPair):clz_Torappu_Blackboard_DataPair|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? (obj || new clz_Torappu_Blackboard_DataPair()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

talentBlackboardLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

skills(index: number, obj?:clz_Torappu_LevelData_EnemyData_ESkillData):clz_Torappu_LevelData_EnemyData_ESkillData|null {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? (obj || new clz_Torappu_LevelData_EnemyData_ESkillData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

skillsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

spData(obj?:clz_Torappu_LevelData_EnemyData_ESpData):clz_Torappu_LevelData_EnemyData_ESpData|null {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? (obj || new clz_Torappu_LevelData_EnemyData_ESpData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startclz_Torappu_LevelData_EnemyData(builder:flatbuffers.Builder) {
  builder.startObject(17);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, nameOffset, 0);
}

static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, descriptionOffset, 0);
}

static addKey(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, keyOffset, 0);
}

static addAttributes(builder:flatbuffers.Builder, attributesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, attributesOffset, 0);
}

static addApplyWay(builder:flatbuffers.Builder, applyWay:enum__Torappu_SourceApplyWay) {
  builder.addFieldInt32(4, applyWay, enum__Torappu_SourceApplyWay.NONE);
}

static addMotion(builder:flatbuffers.Builder, motion:enum__Torappu_MotionMode) {
  builder.addFieldInt32(5, motion, enum__Torappu_MotionMode.WALK);
}

static addEnemyTags(builder:flatbuffers.Builder, enemyTagsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, enemyTagsOffset, 0);
}

static createEnemyTagsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEnemyTagsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addNotCountInTotal(builder:flatbuffers.Builder, notCountInTotal:boolean) {
  builder.addFieldInt8(7, +notCountInTotal, +false);
}

static addAlias(builder:flatbuffers.Builder, aliasOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, aliasOffset, 0);
}

static addLifePointReduce(builder:flatbuffers.Builder, lifePointReduce:number) {
  builder.addFieldInt32(9, lifePointReduce, 0);
}

static addRangeRadius(builder:flatbuffers.Builder, rangeRadius:number) {
  builder.addFieldFloat32(10, rangeRadius, 0.0);
}

static addNumOfExtraDrops(builder:flatbuffers.Builder, numOfExtraDrops:number) {
  builder.addFieldInt32(11, numOfExtraDrops, 0);
}

static addViewRadius(builder:flatbuffers.Builder, viewRadius:number) {
  builder.addFieldFloat32(12, viewRadius, 0.0);
}

static addLevelType(builder:flatbuffers.Builder, levelType:enum__Torappu_EnemyLevelType) {
  builder.addFieldInt32(13, levelType, enum__Torappu_EnemyLevelType.NORMAL);
}

static addTalentBlackboard(builder:flatbuffers.Builder, talentBlackboardOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, talentBlackboardOffset, 0);
}

static createTalentBlackboardVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTalentBlackboardVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addSkills(builder:flatbuffers.Builder, skillsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(15, skillsOffset, 0);
}

static createSkillsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startSkillsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addSpData(builder:flatbuffers.Builder, spDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(16, spDataOffset, 0);
}

static endclz_Torappu_LevelData_EnemyData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_LevelData_EnemyDataT {
  return new clz_Torappu_LevelData_EnemyDataT(
    this.name(),
    this.description(),
    this.key(),
    (this.attributes() !== null ? this.attributes()!.unpack() : null),
    this.applyWay(),
    this.motion(),
    this.bb!.createScalarList<string>(this.enemyTags.bind(this), this.enemyTagsLength()),
    this.notCountInTotal(),
    this.alias(),
    this.lifePointReduce(),
    this.rangeRadius(),
    this.numOfExtraDrops(),
    this.viewRadius(),
    this.levelType(),
    this.bb!.createObjList<clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT>(this.talentBlackboard.bind(this), this.talentBlackboardLength()),
    this.bb!.createObjList<clz_Torappu_LevelData_EnemyData_ESkillData, clz_Torappu_LevelData_EnemyData_ESkillDataT>(this.skills.bind(this), this.skillsLength()),
    (this.spData() !== null ? this.spData()!.unpack() : null)
  );
}


unpackTo(_o: clz_Torappu_LevelData_EnemyDataT): void {
  _o.name = this.name();
  _o.description = this.description();
  _o.key = this.key();
  _o.attributes = (this.attributes() !== null ? this.attributes()!.unpack() : null);
  _o.applyWay = this.applyWay();
  _o.motion = this.motion();
  _o.enemyTags = this.bb!.createScalarList<string>(this.enemyTags.bind(this), this.enemyTagsLength());
  _o.notCountInTotal = this.notCountInTotal();
  _o.alias = this.alias();
  _o.lifePointReduce = this.lifePointReduce();
  _o.rangeRadius = this.rangeRadius();
  _o.numOfExtraDrops = this.numOfExtraDrops();
  _o.viewRadius = this.viewRadius();
  _o.levelType = this.levelType();
  _o.talentBlackboard = this.bb!.createObjList<clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT>(this.talentBlackboard.bind(this), this.talentBlackboardLength());
  _o.skills = this.bb!.createObjList<clz_Torappu_LevelData_EnemyData_ESkillData, clz_Torappu_LevelData_EnemyData_ESkillDataT>(this.skills.bind(this), this.skillsLength());
  _o.spData = (this.spData() !== null ? this.spData()!.unpack() : null);
}
}

export class clz_Torappu_LevelData_EnemyDataT implements flatbuffers.IGeneratedObject {
constructor(
  public name: string|Uint8Array|null = null,
  public description: string|Uint8Array|null = null,
  public key: string|Uint8Array|null = null,
  public attributes: clz_Torappu_AttributesDataT|null = null,
  public applyWay: enum__Torappu_SourceApplyWay = enum__Torappu_SourceApplyWay.NONE,
  public motion: enum__Torappu_MotionMode = enum__Torappu_MotionMode.WALK,
  public enemyTags: (string)[] = [],
  public notCountInTotal: boolean = false,
  public alias: string|Uint8Array|null = null,
  public lifePointReduce: number = 0,
  public rangeRadius: number = 0.0,
  public numOfExtraDrops: number = 0,
  public viewRadius: number = 0.0,
  public levelType: enum__Torappu_EnemyLevelType = enum__Torappu_EnemyLevelType.NORMAL,
  public talentBlackboard: (clz_Torappu_Blackboard_DataPairT)[] = [],
  public skills: (clz_Torappu_LevelData_EnemyData_ESkillDataT)[] = [],
  public spData: clz_Torappu_LevelData_EnemyData_ESpDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const name = (this.name !== null ? builder.createString(this.name!) : 0);
  const description = (this.description !== null ? builder.createString(this.description!) : 0);
  const key = (this.key !== null ? builder.createString(this.key!) : 0);
  const attributes = (this.attributes !== null ? this.attributes!.pack(builder) : 0);
  const enemyTags = clz_Torappu_LevelData_EnemyData.createEnemyTagsVector(builder, builder.createObjectOffsetList(this.enemyTags));
  const alias = (this.alias !== null ? builder.createString(this.alias!) : 0);
  const talentBlackboard = clz_Torappu_LevelData_EnemyData.createTalentBlackboardVector(builder, builder.createObjectOffsetList(this.talentBlackboard));
  const skills = clz_Torappu_LevelData_EnemyData.createSkillsVector(builder, builder.createObjectOffsetList(this.skills));
  const spData = (this.spData !== null ? this.spData!.pack(builder) : 0);

  clz_Torappu_LevelData_EnemyData.startclz_Torappu_LevelData_EnemyData(builder);
  clz_Torappu_LevelData_EnemyData.addName(builder, name);
  clz_Torappu_LevelData_EnemyData.addDescription(builder, description);
  clz_Torappu_LevelData_EnemyData.addKey(builder, key);
  clz_Torappu_LevelData_EnemyData.addAttributes(builder, attributes);
  clz_Torappu_LevelData_EnemyData.addApplyWay(builder, this.applyWay);
  clz_Torappu_LevelData_EnemyData.addMotion(builder, this.motion);
  clz_Torappu_LevelData_EnemyData.addEnemyTags(builder, enemyTags);
  clz_Torappu_LevelData_EnemyData.addNotCountInTotal(builder, this.notCountInTotal);
  clz_Torappu_LevelData_EnemyData.addAlias(builder, alias);
  clz_Torappu_LevelData_EnemyData.addLifePointReduce(builder, this.lifePointReduce);
  clz_Torappu_LevelData_EnemyData.addRangeRadius(builder, this.rangeRadius);
  clz_Torappu_LevelData_EnemyData.addNumOfExtraDrops(builder, this.numOfExtraDrops);
  clz_Torappu_LevelData_EnemyData.addViewRadius(builder, this.viewRadius);
  clz_Torappu_LevelData_EnemyData.addLevelType(builder, this.levelType);
  clz_Torappu_LevelData_EnemyData.addTalentBlackboard(builder, talentBlackboard);
  clz_Torappu_LevelData_EnemyData.addSkills(builder, skills);
  clz_Torappu_LevelData_EnemyData.addSpData(builder, spData);

  return clz_Torappu_LevelData_EnemyData.endclz_Torappu_LevelData_EnemyData(builder);
}
}
