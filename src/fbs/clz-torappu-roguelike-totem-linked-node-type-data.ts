// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_RoguelikeEventType } from './enum--torappu-roguelike-event-type.js';
import { enum__Torappu_RoguelikeTotemBlurNodeType } from './enum--torappu-roguelike-totem-blur-node-type.js';


export class clz_Torappu_RoguelikeTotemLinkedNodeTypeData implements flatbuffers.IUnpackableObject<clz_Torappu_RoguelikeTotemLinkedNodeTypeDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RoguelikeTotemLinkedNodeTypeData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RoguelikeTotemLinkedNodeTypeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeTotemLinkedNodeTypeData):clz_Torappu_RoguelikeTotemLinkedNodeTypeData {
  return (obj || new clz_Torappu_RoguelikeTotemLinkedNodeTypeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RoguelikeTotemLinkedNodeTypeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeTotemLinkedNodeTypeData):clz_Torappu_RoguelikeTotemLinkedNodeTypeData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RoguelikeTotemLinkedNodeTypeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

effectiveNodeTypes(index: number):enum__Torappu_RoguelikeEventType|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : null;
}

effectiveNodeTypesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

effectiveNodeTypesArray():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

blurNodeTypes(index: number):enum__Torappu_RoguelikeTotemBlurNodeType|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : null;
}

blurNodeTypesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

blurNodeTypesArray():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

static startclz_Torappu_RoguelikeTotemLinkedNodeTypeData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addEffectiveNodeTypes(builder:flatbuffers.Builder, effectiveNodeTypesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, effectiveNodeTypesOffset, 0);
}

static createEffectiveNodeTypesVector(builder:flatbuffers.Builder, data:enum__Torappu_RoguelikeEventType[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static startEffectiveNodeTypesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBlurNodeTypes(builder:flatbuffers.Builder, blurNodeTypesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, blurNodeTypesOffset, 0);
}

static createBlurNodeTypesVector(builder:flatbuffers.Builder, data:enum__Torappu_RoguelikeTotemBlurNodeType[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static startBlurNodeTypesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_RoguelikeTotemLinkedNodeTypeData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_RoguelikeTotemLinkedNodeTypeData(builder:flatbuffers.Builder, effectiveNodeTypesOffset:flatbuffers.Offset, blurNodeTypesOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_RoguelikeTotemLinkedNodeTypeData.startclz_Torappu_RoguelikeTotemLinkedNodeTypeData(builder);
  clz_Torappu_RoguelikeTotemLinkedNodeTypeData.addEffectiveNodeTypes(builder, effectiveNodeTypesOffset);
  clz_Torappu_RoguelikeTotemLinkedNodeTypeData.addBlurNodeTypes(builder, blurNodeTypesOffset);
  return clz_Torappu_RoguelikeTotemLinkedNodeTypeData.endclz_Torappu_RoguelikeTotemLinkedNodeTypeData(builder);
}

unpack(): clz_Torappu_RoguelikeTotemLinkedNodeTypeDataT {
  return new clz_Torappu_RoguelikeTotemLinkedNodeTypeDataT(
    this.bb!.createScalarList<enum__Torappu_RoguelikeEventType>(this.effectiveNodeTypes.bind(this), this.effectiveNodeTypesLength()),
    this.bb!.createScalarList<enum__Torappu_RoguelikeTotemBlurNodeType>(this.blurNodeTypes.bind(this), this.blurNodeTypesLength())
  );
}


unpackTo(_o: clz_Torappu_RoguelikeTotemLinkedNodeTypeDataT): void {
  _o.effectiveNodeTypes = this.bb!.createScalarList<enum__Torappu_RoguelikeEventType>(this.effectiveNodeTypes.bind(this), this.effectiveNodeTypesLength());
  _o.blurNodeTypes = this.bb!.createScalarList<enum__Torappu_RoguelikeTotemBlurNodeType>(this.blurNodeTypes.bind(this), this.blurNodeTypesLength());
}
}

export class clz_Torappu_RoguelikeTotemLinkedNodeTypeDataT implements flatbuffers.IGeneratedObject {
constructor(
  public effectiveNodeTypes: (enum__Torappu_RoguelikeEventType)[] = [],
  public blurNodeTypes: (enum__Torappu_RoguelikeTotemBlurNodeType)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const effectiveNodeTypes = clz_Torappu_RoguelikeTotemLinkedNodeTypeData.createEffectiveNodeTypesVector(builder, this.effectiveNodeTypes);
  const blurNodeTypes = clz_Torappu_RoguelikeTotemLinkedNodeTypeData.createBlurNodeTypesVector(builder, this.blurNodeTypes);

  return clz_Torappu_RoguelikeTotemLinkedNodeTypeData.createclz_Torappu_RoguelikeTotemLinkedNodeTypeData(builder,
    effectiveNodeTypes,
    blurNodeTypes
  );
}
}
