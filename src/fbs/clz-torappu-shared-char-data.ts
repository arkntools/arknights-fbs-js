// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_SharedCharData_SharedCharSkillData, clz_Torappu_SharedCharData_SharedCharSkillDataT } from './clz-torappu-shared-char-data-shared-char-skill-data.js';
import { dict__string__clz_Torappu_SharedCharData_CharEquipInfo, dict__string__clz_Torappu_SharedCharData_CharEquipInfoT } from './dict--string--clz-torappu-shared-char-data-char-equip-info.js';
import { dict__string__clz_Torappu_SharedCharData_TmplData, dict__string__clz_Torappu_SharedCharData_TmplDataT } from './dict--string--clz-torappu-shared-char-data-tmpl-data.js';
import { dict__string__int, dict__string__intT } from './dict--string--int.js';


export class clz_Torappu_SharedCharData implements flatbuffers.IUnpackableObject<clz_Torappu_SharedCharDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SharedCharData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SharedCharData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SharedCharData):clz_Torappu_SharedCharData {
  return (obj || new clz_Torappu_SharedCharData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SharedCharData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SharedCharData):clz_Torappu_SharedCharData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SharedCharData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

charId():string|null
charId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
charId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

potentialRank():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

skillIndex():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

skinId():string|null
skinId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
skinId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

skills(index: number, obj?:clz_Torappu_SharedCharData_SharedCharSkillData):clz_Torappu_SharedCharData_SharedCharSkillData|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new clz_Torappu_SharedCharData_SharedCharSkillData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

skillsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

currentEquip():string|null
currentEquip(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
currentEquip(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

equip(index: number, obj?:dict__string__clz_Torappu_SharedCharData_CharEquipInfo):dict__string__clz_Torappu_SharedCharData_CharEquipInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new dict__string__clz_Torappu_SharedCharData_CharEquipInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

equipLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

mainSkillLvl():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

evolvePhase():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

level():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

favorPoint():number {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

crisisRecord(index: number, obj?:dict__string__int):dict__string__int|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? (obj || new dict__string__int()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

crisisRecordLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

crisisV2Record(index: number, obj?:dict__string__int):dict__string__int|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? (obj || new dict__string__int()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

crisisV2RecordLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

currentTmpl():string|null
currentTmpl(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
currentTmpl(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

tmpl(index: number, obj?:dict__string__clz_Torappu_SharedCharData_TmplData):dict__string__clz_Torappu_SharedCharData_TmplData|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? (obj || new dict__string__clz_Torappu_SharedCharData_TmplData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

tmplLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SharedCharData(builder:flatbuffers.Builder) {
  builder.startObject(15);
}

static addCharId(builder:flatbuffers.Builder, charIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, charIdOffset, 0);
}

static addPotentialRank(builder:flatbuffers.Builder, potentialRank:number) {
  builder.addFieldInt32(1, potentialRank, 0);
}

static addSkillIndex(builder:flatbuffers.Builder, skillIndex:number) {
  builder.addFieldInt32(2, skillIndex, 0);
}

static addSkinId(builder:flatbuffers.Builder, skinIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, skinIdOffset, 0);
}

static addSkills(builder:flatbuffers.Builder, skillsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, skillsOffset, 0);
}

static createSkillsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startSkillsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCurrentEquip(builder:flatbuffers.Builder, currentEquipOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, currentEquipOffset, 0);
}

static addEquip(builder:flatbuffers.Builder, equipOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, equipOffset, 0);
}

static createEquipVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEquipVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addMainSkillLvl(builder:flatbuffers.Builder, mainSkillLvl:number) {
  builder.addFieldInt32(7, mainSkillLvl, 0);
}

static addEvolvePhase(builder:flatbuffers.Builder, evolvePhase:number) {
  builder.addFieldInt32(8, evolvePhase, 0);
}

static addLevel(builder:flatbuffers.Builder, level:number) {
  builder.addFieldInt32(9, level, 0);
}

static addFavorPoint(builder:flatbuffers.Builder, favorPoint:number) {
  builder.addFieldInt32(10, favorPoint, 0);
}

static addCrisisRecord(builder:flatbuffers.Builder, crisisRecordOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, crisisRecordOffset, 0);
}

static createCrisisRecordVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCrisisRecordVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCrisisV2Record(builder:flatbuffers.Builder, crisisV2RecordOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, crisisV2RecordOffset, 0);
}

static createCrisisV2RecordVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCrisisV2RecordVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCurrentTmpl(builder:flatbuffers.Builder, currentTmplOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, currentTmplOffset, 0);
}

static addTmpl(builder:flatbuffers.Builder, tmplOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, tmplOffset, 0);
}

static createTmplVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTmplVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_SharedCharData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SharedCharData(builder:flatbuffers.Builder, charIdOffset:flatbuffers.Offset, potentialRank:number, skillIndex:number, skinIdOffset:flatbuffers.Offset, skillsOffset:flatbuffers.Offset, currentEquipOffset:flatbuffers.Offset, equipOffset:flatbuffers.Offset, mainSkillLvl:number, evolvePhase:number, level:number, favorPoint:number, crisisRecordOffset:flatbuffers.Offset, crisisV2RecordOffset:flatbuffers.Offset, currentTmplOffset:flatbuffers.Offset, tmplOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SharedCharData.startclz_Torappu_SharedCharData(builder);
  clz_Torappu_SharedCharData.addCharId(builder, charIdOffset);
  clz_Torappu_SharedCharData.addPotentialRank(builder, potentialRank);
  clz_Torappu_SharedCharData.addSkillIndex(builder, skillIndex);
  clz_Torappu_SharedCharData.addSkinId(builder, skinIdOffset);
  clz_Torappu_SharedCharData.addSkills(builder, skillsOffset);
  clz_Torappu_SharedCharData.addCurrentEquip(builder, currentEquipOffset);
  clz_Torappu_SharedCharData.addEquip(builder, equipOffset);
  clz_Torappu_SharedCharData.addMainSkillLvl(builder, mainSkillLvl);
  clz_Torappu_SharedCharData.addEvolvePhase(builder, evolvePhase);
  clz_Torappu_SharedCharData.addLevel(builder, level);
  clz_Torappu_SharedCharData.addFavorPoint(builder, favorPoint);
  clz_Torappu_SharedCharData.addCrisisRecord(builder, crisisRecordOffset);
  clz_Torappu_SharedCharData.addCrisisV2Record(builder, crisisV2RecordOffset);
  clz_Torappu_SharedCharData.addCurrentTmpl(builder, currentTmplOffset);
  clz_Torappu_SharedCharData.addTmpl(builder, tmplOffset);
  return clz_Torappu_SharedCharData.endclz_Torappu_SharedCharData(builder);
}

unpack(): clz_Torappu_SharedCharDataT {
  return new clz_Torappu_SharedCharDataT(
    this.charId(),
    this.potentialRank(),
    this.skillIndex(),
    this.skinId(),
    this.bb!.createObjList<clz_Torappu_SharedCharData_SharedCharSkillData, clz_Torappu_SharedCharData_SharedCharSkillDataT>(this.skills.bind(this), this.skillsLength()),
    this.currentEquip(),
    this.bb!.createObjList<dict__string__clz_Torappu_SharedCharData_CharEquipInfo, dict__string__clz_Torappu_SharedCharData_CharEquipInfoT>(this.equip.bind(this), this.equipLength()),
    this.mainSkillLvl(),
    this.evolvePhase(),
    this.level(),
    this.favorPoint(),
    this.bb!.createObjList<dict__string__int, dict__string__intT>(this.crisisRecord.bind(this), this.crisisRecordLength()),
    this.bb!.createObjList<dict__string__int, dict__string__intT>(this.crisisV2Record.bind(this), this.crisisV2RecordLength()),
    this.currentTmpl(),
    this.bb!.createObjList<dict__string__clz_Torappu_SharedCharData_TmplData, dict__string__clz_Torappu_SharedCharData_TmplDataT>(this.tmpl.bind(this), this.tmplLength())
  );
}


unpackTo(_o: clz_Torappu_SharedCharDataT): void {
  _o.charId = this.charId();
  _o.potentialRank = this.potentialRank();
  _o.skillIndex = this.skillIndex();
  _o.skinId = this.skinId();
  _o.skills = this.bb!.createObjList<clz_Torappu_SharedCharData_SharedCharSkillData, clz_Torappu_SharedCharData_SharedCharSkillDataT>(this.skills.bind(this), this.skillsLength());
  _o.currentEquip = this.currentEquip();
  _o.equip = this.bb!.createObjList<dict__string__clz_Torappu_SharedCharData_CharEquipInfo, dict__string__clz_Torappu_SharedCharData_CharEquipInfoT>(this.equip.bind(this), this.equipLength());
  _o.mainSkillLvl = this.mainSkillLvl();
  _o.evolvePhase = this.evolvePhase();
  _o.level = this.level();
  _o.favorPoint = this.favorPoint();
  _o.crisisRecord = this.bb!.createObjList<dict__string__int, dict__string__intT>(this.crisisRecord.bind(this), this.crisisRecordLength());
  _o.crisisV2Record = this.bb!.createObjList<dict__string__int, dict__string__intT>(this.crisisV2Record.bind(this), this.crisisV2RecordLength());
  _o.currentTmpl = this.currentTmpl();
  _o.tmpl = this.bb!.createObjList<dict__string__clz_Torappu_SharedCharData_TmplData, dict__string__clz_Torappu_SharedCharData_TmplDataT>(this.tmpl.bind(this), this.tmplLength());
}
}

export class clz_Torappu_SharedCharDataT implements flatbuffers.IGeneratedObject {
constructor(
  public charId: string|Uint8Array|null = null,
  public potentialRank: number = 0,
  public skillIndex: number = 0,
  public skinId: string|Uint8Array|null = null,
  public skills: (clz_Torappu_SharedCharData_SharedCharSkillDataT)[] = [],
  public currentEquip: string|Uint8Array|null = null,
  public equip: (dict__string__clz_Torappu_SharedCharData_CharEquipInfoT)[] = [],
  public mainSkillLvl: number = 0,
  public evolvePhase: number = 0,
  public level: number = 0,
  public favorPoint: number = 0,
  public crisisRecord: (dict__string__intT)[] = [],
  public crisisV2Record: (dict__string__intT)[] = [],
  public currentTmpl: string|Uint8Array|null = null,
  public tmpl: (dict__string__clz_Torappu_SharedCharData_TmplDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const charId = (this.charId !== null ? builder.createString(this.charId!) : 0);
  const skinId = (this.skinId !== null ? builder.createString(this.skinId!) : 0);
  const skills = clz_Torappu_SharedCharData.createSkillsVector(builder, builder.createObjectOffsetList(this.skills));
  const currentEquip = (this.currentEquip !== null ? builder.createString(this.currentEquip!) : 0);
  const equip = clz_Torappu_SharedCharData.createEquipVector(builder, builder.createObjectOffsetList(this.equip));
  const crisisRecord = clz_Torappu_SharedCharData.createCrisisRecordVector(builder, builder.createObjectOffsetList(this.crisisRecord));
  const crisisV2Record = clz_Torappu_SharedCharData.createCrisisV2RecordVector(builder, builder.createObjectOffsetList(this.crisisV2Record));
  const currentTmpl = (this.currentTmpl !== null ? builder.createString(this.currentTmpl!) : 0);
  const tmpl = clz_Torappu_SharedCharData.createTmplVector(builder, builder.createObjectOffsetList(this.tmpl));

  return clz_Torappu_SharedCharData.createclz_Torappu_SharedCharData(builder,
    charId,
    this.potentialRank,
    this.skillIndex,
    skinId,
    skills,
    currentEquip,
    equip,
    this.mainSkillLvl,
    this.evolvePhase,
    this.level,
    this.favorPoint,
    crisisRecord,
    crisisV2Record,
    currentTmpl,
    tmpl
  );
}
}
