// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_StageDiffGroupTable implements flatbuffers.IUnpackableObject<clz_Torappu_StageDiffGroupTableT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_StageDiffGroupTable {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_StageDiffGroupTable(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_StageDiffGroupTable):clz_Torappu_StageDiffGroupTable {
  return (obj || new clz_Torappu_StageDiffGroupTable()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_StageDiffGroupTable(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_StageDiffGroupTable):clz_Torappu_StageDiffGroupTable {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_StageDiffGroupTable()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

normalId():string|null
normalId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
normalId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

toughId():string|null
toughId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
toughId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

easyId():string|null
easyId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
easyId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_StageDiffGroupTable(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addNormalId(builder:flatbuffers.Builder, normalIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, normalIdOffset, 0);
}

static addToughId(builder:flatbuffers.Builder, toughIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, toughIdOffset, 0);
}

static addEasyId(builder:flatbuffers.Builder, easyIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, easyIdOffset, 0);
}

static endclz_Torappu_StageDiffGroupTable(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_StageDiffGroupTable(builder:flatbuffers.Builder, normalIdOffset:flatbuffers.Offset, toughIdOffset:flatbuffers.Offset, easyIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_StageDiffGroupTable.startclz_Torappu_StageDiffGroupTable(builder);
  clz_Torappu_StageDiffGroupTable.addNormalId(builder, normalIdOffset);
  clz_Torappu_StageDiffGroupTable.addToughId(builder, toughIdOffset);
  clz_Torappu_StageDiffGroupTable.addEasyId(builder, easyIdOffset);
  return clz_Torappu_StageDiffGroupTable.endclz_Torappu_StageDiffGroupTable(builder);
}

unpack(): clz_Torappu_StageDiffGroupTableT {
  return new clz_Torappu_StageDiffGroupTableT(
    this.normalId(),
    this.toughId(),
    this.easyId()
  );
}


unpackTo(_o: clz_Torappu_StageDiffGroupTableT): void {
  _o.normalId = this.normalId();
  _o.toughId = this.toughId();
  _o.easyId = this.easyId();
}
}

export class clz_Torappu_StageDiffGroupTableT implements flatbuffers.IGeneratedObject {
constructor(
  public normalId: string|Uint8Array|null = null,
  public toughId: string|Uint8Array|null = null,
  public easyId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const normalId = (this.normalId !== null ? builder.createString(this.normalId!) : 0);
  const toughId = (this.toughId !== null ? builder.createString(this.toughId!) : 0);
  const easyId = (this.easyId !== null ? builder.createString(this.easyId!) : 0);

  return clz_Torappu_StageDiffGroupTable.createclz_Torappu_StageDiffGroupTable(builder,
    normalId,
    toughId,
    easyId
  );
}
}
