// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT } from './clz-torappu-item-bundle.js';


export class clz_Torappu_AllPlayerCheckinData_PublicBehaviour implements flatbuffers.IUnpackableObject<clz_Torappu_AllPlayerCheckinData_PublicBehaviourT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_AllPlayerCheckinData_PublicBehaviour {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_AllPlayerCheckinData_PublicBehaviour(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_AllPlayerCheckinData_PublicBehaviour):clz_Torappu_AllPlayerCheckinData_PublicBehaviour {
  return (obj || new clz_Torappu_AllPlayerCheckinData_PublicBehaviour()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_AllPlayerCheckinData_PublicBehaviour(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_AllPlayerCheckinData_PublicBehaviour):clz_Torappu_AllPlayerCheckinData_PublicBehaviour {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_AllPlayerCheckinData_PublicBehaviour()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

allBehaviorId():string|null
allBehaviorId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
allBehaviorId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

displayOrder():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

allBehaviorDesc():string|null
allBehaviorDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
allBehaviorDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

requiringValue():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

requireRepeatCompletion():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

rewardReceivedDesc():string|null
rewardReceivedDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
rewardReceivedDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

rewards(index: number, obj?:clz_Torappu_ItemBundle):clz_Torappu_ItemBundle|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new clz_Torappu_ItemBundle()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

rewardsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_AllPlayerCheckinData_PublicBehaviour(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(0, sortId, 0);
}

static addAllBehaviorId(builder:flatbuffers.Builder, allBehaviorIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, allBehaviorIdOffset, 0);
}

static addDisplayOrder(builder:flatbuffers.Builder, displayOrder:number) {
  builder.addFieldInt32(2, displayOrder, 0);
}

static addAllBehaviorDesc(builder:flatbuffers.Builder, allBehaviorDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, allBehaviorDescOffset, 0);
}

static addRequiringValue(builder:flatbuffers.Builder, requiringValue:number) {
  builder.addFieldInt32(4, requiringValue, 0);
}

static addRequireRepeatCompletion(builder:flatbuffers.Builder, requireRepeatCompletion:boolean) {
  builder.addFieldInt8(5, +requireRepeatCompletion, +false);
}

static addRewardReceivedDesc(builder:flatbuffers.Builder, rewardReceivedDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, rewardReceivedDescOffset, 0);
}

static addRewards(builder:flatbuffers.Builder, rewardsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, rewardsOffset, 0);
}

static createRewardsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRewardsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_AllPlayerCheckinData_PublicBehaviour(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_AllPlayerCheckinData_PublicBehaviour(builder:flatbuffers.Builder, sortId:number, allBehaviorIdOffset:flatbuffers.Offset, displayOrder:number, allBehaviorDescOffset:flatbuffers.Offset, requiringValue:number, requireRepeatCompletion:boolean, rewardReceivedDescOffset:flatbuffers.Offset, rewardsOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_AllPlayerCheckinData_PublicBehaviour.startclz_Torappu_AllPlayerCheckinData_PublicBehaviour(builder);
  clz_Torappu_AllPlayerCheckinData_PublicBehaviour.addSortId(builder, sortId);
  clz_Torappu_AllPlayerCheckinData_PublicBehaviour.addAllBehaviorId(builder, allBehaviorIdOffset);
  clz_Torappu_AllPlayerCheckinData_PublicBehaviour.addDisplayOrder(builder, displayOrder);
  clz_Torappu_AllPlayerCheckinData_PublicBehaviour.addAllBehaviorDesc(builder, allBehaviorDescOffset);
  clz_Torappu_AllPlayerCheckinData_PublicBehaviour.addRequiringValue(builder, requiringValue);
  clz_Torappu_AllPlayerCheckinData_PublicBehaviour.addRequireRepeatCompletion(builder, requireRepeatCompletion);
  clz_Torappu_AllPlayerCheckinData_PublicBehaviour.addRewardReceivedDesc(builder, rewardReceivedDescOffset);
  clz_Torappu_AllPlayerCheckinData_PublicBehaviour.addRewards(builder, rewardsOffset);
  return clz_Torappu_AllPlayerCheckinData_PublicBehaviour.endclz_Torappu_AllPlayerCheckinData_PublicBehaviour(builder);
}

unpack(): clz_Torappu_AllPlayerCheckinData_PublicBehaviourT {
  return new clz_Torappu_AllPlayerCheckinData_PublicBehaviourT(
    this.sortId(),
    this.allBehaviorId(),
    this.displayOrder(),
    this.allBehaviorDesc(),
    this.requiringValue(),
    this.requireRepeatCompletion(),
    this.rewardReceivedDesc(),
    this.bb!.createObjList<clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT>(this.rewards.bind(this), this.rewardsLength())
  );
}


unpackTo(_o: clz_Torappu_AllPlayerCheckinData_PublicBehaviourT): void {
  _o.sortId = this.sortId();
  _o.allBehaviorId = this.allBehaviorId();
  _o.displayOrder = this.displayOrder();
  _o.allBehaviorDesc = this.allBehaviorDesc();
  _o.requiringValue = this.requiringValue();
  _o.requireRepeatCompletion = this.requireRepeatCompletion();
  _o.rewardReceivedDesc = this.rewardReceivedDesc();
  _o.rewards = this.bb!.createObjList<clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT>(this.rewards.bind(this), this.rewardsLength());
}
}

export class clz_Torappu_AllPlayerCheckinData_PublicBehaviourT implements flatbuffers.IGeneratedObject {
constructor(
  public sortId: number = 0,
  public allBehaviorId: string|Uint8Array|null = null,
  public displayOrder: number = 0,
  public allBehaviorDesc: string|Uint8Array|null = null,
  public requiringValue: number = 0,
  public requireRepeatCompletion: boolean = false,
  public rewardReceivedDesc: string|Uint8Array|null = null,
  public rewards: (clz_Torappu_ItemBundleT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const allBehaviorId = (this.allBehaviorId !== null ? builder.createString(this.allBehaviorId!) : 0);
  const allBehaviorDesc = (this.allBehaviorDesc !== null ? builder.createString(this.allBehaviorDesc!) : 0);
  const rewardReceivedDesc = (this.rewardReceivedDesc !== null ? builder.createString(this.rewardReceivedDesc!) : 0);
  const rewards = clz_Torappu_AllPlayerCheckinData_PublicBehaviour.createRewardsVector(builder, builder.createObjectOffsetList(this.rewards));

  return clz_Torappu_AllPlayerCheckinData_PublicBehaviour.createclz_Torappu_AllPlayerCheckinData_PublicBehaviour(builder,
    this.sortId,
    allBehaviorId,
    this.displayOrder,
    allBehaviorDesc,
    this.requiringValue,
    this.requireRepeatCompletion,
    rewardReceivedDesc,
    rewards
  );
}
}
