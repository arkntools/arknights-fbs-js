// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SandboxDevelopmentLimitData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxDevelopmentLimitDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxDevelopmentLimitData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxDevelopmentLimitData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxDevelopmentLimitData):clz_Torappu_SandboxDevelopmentLimitData {
  return (obj || new clz_Torappu_SandboxDevelopmentLimitData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxDevelopmentLimitData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxDevelopmentLimitData):clz_Torappu_SandboxDevelopmentLimitData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxDevelopmentLimitData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

buffLimitedId():string|null
buffLimitedId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
buffLimitedId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

positionX():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

buffCostLimitedCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SandboxDevelopmentLimitData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addBuffLimitedId(builder:flatbuffers.Builder, buffLimitedIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, buffLimitedIdOffset, 0);
}

static addPositionX(builder:flatbuffers.Builder, positionX:number) {
  builder.addFieldInt32(1, positionX, 0);
}

static addBuffCostLimitedCount(builder:flatbuffers.Builder, buffCostLimitedCount:number) {
  builder.addFieldInt32(2, buffCostLimitedCount, 0);
}

static endclz_Torappu_SandboxDevelopmentLimitData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxDevelopmentLimitData(builder:flatbuffers.Builder, buffLimitedIdOffset:flatbuffers.Offset, positionX:number, buffCostLimitedCount:number):flatbuffers.Offset {
  clz_Torappu_SandboxDevelopmentLimitData.startclz_Torappu_SandboxDevelopmentLimitData(builder);
  clz_Torappu_SandboxDevelopmentLimitData.addBuffLimitedId(builder, buffLimitedIdOffset);
  clz_Torappu_SandboxDevelopmentLimitData.addPositionX(builder, positionX);
  clz_Torappu_SandboxDevelopmentLimitData.addBuffCostLimitedCount(builder, buffCostLimitedCount);
  return clz_Torappu_SandboxDevelopmentLimitData.endclz_Torappu_SandboxDevelopmentLimitData(builder);
}

unpack(): clz_Torappu_SandboxDevelopmentLimitDataT {
  return new clz_Torappu_SandboxDevelopmentLimitDataT(
    this.buffLimitedId(),
    this.positionX(),
    this.buffCostLimitedCount()
  );
}


unpackTo(_o: clz_Torappu_SandboxDevelopmentLimitDataT): void {
  _o.buffLimitedId = this.buffLimitedId();
  _o.positionX = this.positionX();
  _o.buffCostLimitedCount = this.buffCostLimitedCount();
}
}

export class clz_Torappu_SandboxDevelopmentLimitDataT implements flatbuffers.IGeneratedObject {
constructor(
  public buffLimitedId: string|Uint8Array|null = null,
  public positionX: number = 0,
  public buffCostLimitedCount: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const buffLimitedId = (this.buffLimitedId !== null ? builder.createString(this.buffLimitedId!) : 0);

  return clz_Torappu_SandboxDevelopmentLimitData.createclz_Torappu_SandboxDevelopmentLimitData(builder,
    buffLimitedId,
    this.positionX,
    this.buffCostLimitedCount
  );
}
}
