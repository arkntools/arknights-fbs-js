// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_GachaTag implements flatbuffers.IUnpackableObject<clz_Torappu_GachaTagT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_GachaTag {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_GachaTag(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_GachaTag):clz_Torappu_GachaTag {
  return (obj || new clz_Torappu_GachaTag()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_GachaTag(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_GachaTag):clz_Torappu_GachaTag {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_GachaTag()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

tagId():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

tagName():string|null
tagName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
tagName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

tagGroup():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_GachaTag(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addTagId(builder:flatbuffers.Builder, tagId:number) {
  builder.addFieldInt32(0, tagId, 0);
}

static addTagName(builder:flatbuffers.Builder, tagNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, tagNameOffset, 0);
}

static addTagGroup(builder:flatbuffers.Builder, tagGroup:number) {
  builder.addFieldInt32(2, tagGroup, 0);
}

static endclz_Torappu_GachaTag(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_GachaTag(builder:flatbuffers.Builder, tagId:number, tagNameOffset:flatbuffers.Offset, tagGroup:number):flatbuffers.Offset {
  clz_Torappu_GachaTag.startclz_Torappu_GachaTag(builder);
  clz_Torappu_GachaTag.addTagId(builder, tagId);
  clz_Torappu_GachaTag.addTagName(builder, tagNameOffset);
  clz_Torappu_GachaTag.addTagGroup(builder, tagGroup);
  return clz_Torappu_GachaTag.endclz_Torappu_GachaTag(builder);
}

unpack(): clz_Torappu_GachaTagT {
  return new clz_Torappu_GachaTagT(
    this.tagId(),
    this.tagName(),
    this.tagGroup()
  );
}


unpackTo(_o: clz_Torappu_GachaTagT): void {
  _o.tagId = this.tagId();
  _o.tagName = this.tagName();
  _o.tagGroup = this.tagGroup();
}
}

export class clz_Torappu_GachaTagT implements flatbuffers.IGeneratedObject {
constructor(
  public tagId: number = 0,
  public tagName: string|Uint8Array|null = null,
  public tagGroup: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const tagName = (this.tagName !== null ? builder.createString(this.tagName!) : 0);

  return clz_Torappu_GachaTag.createclz_Torappu_GachaTag(builder,
    this.tagId,
    tagName,
    this.tagGroup
  );
}
}
