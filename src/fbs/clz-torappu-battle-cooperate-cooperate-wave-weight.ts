// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_Battle_Cooperate_CooperateWaveWeight implements flatbuffers.IUnpackableObject<clz_Torappu_Battle_Cooperate_CooperateWaveWeightT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Battle_Cooperate_CooperateWaveWeight {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Battle_Cooperate_CooperateWaveWeight(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Battle_Cooperate_CooperateWaveWeight):clz_Torappu_Battle_Cooperate_CooperateWaveWeight {
  return (obj || new clz_Torappu_Battle_Cooperate_CooperateWaveWeight()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Battle_Cooperate_CooperateWaveWeight(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Battle_Cooperate_CooperateWaveWeight):clz_Torappu_Battle_Cooperate_CooperateWaveWeight {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Battle_Cooperate_CooperateWaveWeight()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

wave():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

weight():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_Battle_Cooperate_CooperateWaveWeight(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addWave(builder:flatbuffers.Builder, wave:number) {
  builder.addFieldInt32(0, wave, 0);
}

static addWeight(builder:flatbuffers.Builder, weight:number) {
  builder.addFieldInt32(1, weight, 0);
}

static endclz_Torappu_Battle_Cooperate_CooperateWaveWeight(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Battle_Cooperate_CooperateWaveWeight(builder:flatbuffers.Builder, wave:number, weight:number):flatbuffers.Offset {
  clz_Torappu_Battle_Cooperate_CooperateWaveWeight.startclz_Torappu_Battle_Cooperate_CooperateWaveWeight(builder);
  clz_Torappu_Battle_Cooperate_CooperateWaveWeight.addWave(builder, wave);
  clz_Torappu_Battle_Cooperate_CooperateWaveWeight.addWeight(builder, weight);
  return clz_Torappu_Battle_Cooperate_CooperateWaveWeight.endclz_Torappu_Battle_Cooperate_CooperateWaveWeight(builder);
}

unpack(): clz_Torappu_Battle_Cooperate_CooperateWaveWeightT {
  return new clz_Torappu_Battle_Cooperate_CooperateWaveWeightT(
    this.wave(),
    this.weight()
  );
}


unpackTo(_o: clz_Torappu_Battle_Cooperate_CooperateWaveWeightT): void {
  _o.wave = this.wave();
  _o.weight = this.weight();
}
}

export class clz_Torappu_Battle_Cooperate_CooperateWaveWeightT implements flatbuffers.IGeneratedObject {
constructor(
  public wave: number = 0,
  public weight: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return clz_Torappu_Battle_Cooperate_CooperateWaveWeight.createclz_Torappu_Battle_Cooperate_CooperateWaveWeight(builder,
    this.wave,
    this.weight
  );
}
}
