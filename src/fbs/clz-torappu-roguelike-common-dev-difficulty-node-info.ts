// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo, clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfoT } from './clz-torappu-roguelike-common-dev-difficulty-node-pair-info.js';


export class clz_Torappu_RoguelikeCommonDevDifficultyNodeInfo implements flatbuffers.IUnpackableObject<clz_Torappu_RoguelikeCommonDevDifficultyNodeInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RoguelikeCommonDevDifficultyNodeInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RoguelikeCommonDevDifficultyNodeInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeCommonDevDifficultyNodeInfo):clz_Torappu_RoguelikeCommonDevDifficultyNodeInfo {
  return (obj || new clz_Torappu_RoguelikeCommonDevDifficultyNodeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RoguelikeCommonDevDifficultyNodeInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeCommonDevDifficultyNodeInfo):clz_Torappu_RoguelikeCommonDevDifficultyNodeInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RoguelikeCommonDevDifficultyNodeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

buffId():string|null
buffId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
buffId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

nodeMap(index: number, obj?:clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo):clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

nodeMapLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

enableGrade():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

enableDesc():string|null
enableDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
enableDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

lightId():string|null
lightId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
lightId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

decoId():string|null
decoId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
decoId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_RoguelikeCommonDevDifficultyNodeInfo(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addBuffId(builder:flatbuffers.Builder, buffIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, buffIdOffset, 0);
}

static addNodeMap(builder:flatbuffers.Builder, nodeMapOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nodeMapOffset, 0);
}

static createNodeMapVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startNodeMapVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addEnableGrade(builder:flatbuffers.Builder, enableGrade:number) {
  builder.addFieldInt32(2, enableGrade, 0);
}

static addEnableDesc(builder:flatbuffers.Builder, enableDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, enableDescOffset, 0);
}

static addLightId(builder:flatbuffers.Builder, lightIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, lightIdOffset, 0);
}

static addDecoId(builder:flatbuffers.Builder, decoIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, decoIdOffset, 0);
}

static endclz_Torappu_RoguelikeCommonDevDifficultyNodeInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_RoguelikeCommonDevDifficultyNodeInfo(builder:flatbuffers.Builder, buffIdOffset:flatbuffers.Offset, nodeMapOffset:flatbuffers.Offset, enableGrade:number, enableDescOffset:flatbuffers.Offset, lightIdOffset:flatbuffers.Offset, decoIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_RoguelikeCommonDevDifficultyNodeInfo.startclz_Torappu_RoguelikeCommonDevDifficultyNodeInfo(builder);
  clz_Torappu_RoguelikeCommonDevDifficultyNodeInfo.addBuffId(builder, buffIdOffset);
  clz_Torappu_RoguelikeCommonDevDifficultyNodeInfo.addNodeMap(builder, nodeMapOffset);
  clz_Torappu_RoguelikeCommonDevDifficultyNodeInfo.addEnableGrade(builder, enableGrade);
  clz_Torappu_RoguelikeCommonDevDifficultyNodeInfo.addEnableDesc(builder, enableDescOffset);
  clz_Torappu_RoguelikeCommonDevDifficultyNodeInfo.addLightId(builder, lightIdOffset);
  clz_Torappu_RoguelikeCommonDevDifficultyNodeInfo.addDecoId(builder, decoIdOffset);
  return clz_Torappu_RoguelikeCommonDevDifficultyNodeInfo.endclz_Torappu_RoguelikeCommonDevDifficultyNodeInfo(builder);
}

unpack(): clz_Torappu_RoguelikeCommonDevDifficultyNodeInfoT {
  return new clz_Torappu_RoguelikeCommonDevDifficultyNodeInfoT(
    this.buffId(),
    this.bb!.createObjList<clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo, clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfoT>(this.nodeMap.bind(this), this.nodeMapLength()),
    this.enableGrade(),
    this.enableDesc(),
    this.lightId(),
    this.decoId()
  );
}


unpackTo(_o: clz_Torappu_RoguelikeCommonDevDifficultyNodeInfoT): void {
  _o.buffId = this.buffId();
  _o.nodeMap = this.bb!.createObjList<clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfo, clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfoT>(this.nodeMap.bind(this), this.nodeMapLength());
  _o.enableGrade = this.enableGrade();
  _o.enableDesc = this.enableDesc();
  _o.lightId = this.lightId();
  _o.decoId = this.decoId();
}
}

export class clz_Torappu_RoguelikeCommonDevDifficultyNodeInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public buffId: string|Uint8Array|null = null,
  public nodeMap: (clz_Torappu_RoguelikeCommonDevDifficultyNodePairInfoT)[] = [],
  public enableGrade: number = 0,
  public enableDesc: string|Uint8Array|null = null,
  public lightId: string|Uint8Array|null = null,
  public decoId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const buffId = (this.buffId !== null ? builder.createString(this.buffId!) : 0);
  const nodeMap = clz_Torappu_RoguelikeCommonDevDifficultyNodeInfo.createNodeMapVector(builder, builder.createObjectOffsetList(this.nodeMap));
  const enableDesc = (this.enableDesc !== null ? builder.createString(this.enableDesc!) : 0);
  const lightId = (this.lightId !== null ? builder.createString(this.lightId!) : 0);
  const decoId = (this.decoId !== null ? builder.createString(this.decoId!) : 0);

  return clz_Torappu_RoguelikeCommonDevDifficultyNodeInfo.createclz_Torappu_RoguelikeCommonDevDifficultyNodeInfo(builder,
    buffId,
    nodeMap,
    this.enableGrade,
    enableDesc,
    lightId,
    decoId
  );
}
}
