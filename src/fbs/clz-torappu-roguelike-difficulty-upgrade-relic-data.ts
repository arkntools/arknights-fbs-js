// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_RoguelikeDifficultyUpgradeRelicData implements flatbuffers.IUnpackableObject<clz_Torappu_RoguelikeDifficultyUpgradeRelicDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RoguelikeDifficultyUpgradeRelicData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RoguelikeDifficultyUpgradeRelicData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeDifficultyUpgradeRelicData):clz_Torappu_RoguelikeDifficultyUpgradeRelicData {
  return (obj || new clz_Torappu_RoguelikeDifficultyUpgradeRelicData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RoguelikeDifficultyUpgradeRelicData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeDifficultyUpgradeRelicData):clz_Torappu_RoguelikeDifficultyUpgradeRelicData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RoguelikeDifficultyUpgradeRelicData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

relicId():string|null
relicId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
relicId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

equivalentGrade():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_RoguelikeDifficultyUpgradeRelicData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addRelicId(builder:flatbuffers.Builder, relicIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, relicIdOffset, 0);
}

static addEquivalentGrade(builder:flatbuffers.Builder, equivalentGrade:number) {
  builder.addFieldInt32(1, equivalentGrade, 0);
}

static endclz_Torappu_RoguelikeDifficultyUpgradeRelicData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_RoguelikeDifficultyUpgradeRelicData(builder:flatbuffers.Builder, relicIdOffset:flatbuffers.Offset, equivalentGrade:number):flatbuffers.Offset {
  clz_Torappu_RoguelikeDifficultyUpgradeRelicData.startclz_Torappu_RoguelikeDifficultyUpgradeRelicData(builder);
  clz_Torappu_RoguelikeDifficultyUpgradeRelicData.addRelicId(builder, relicIdOffset);
  clz_Torappu_RoguelikeDifficultyUpgradeRelicData.addEquivalentGrade(builder, equivalentGrade);
  return clz_Torappu_RoguelikeDifficultyUpgradeRelicData.endclz_Torappu_RoguelikeDifficultyUpgradeRelicData(builder);
}

unpack(): clz_Torappu_RoguelikeDifficultyUpgradeRelicDataT {
  return new clz_Torappu_RoguelikeDifficultyUpgradeRelicDataT(
    this.relicId(),
    this.equivalentGrade()
  );
}


unpackTo(_o: clz_Torappu_RoguelikeDifficultyUpgradeRelicDataT): void {
  _o.relicId = this.relicId();
  _o.equivalentGrade = this.equivalentGrade();
}
}

export class clz_Torappu_RoguelikeDifficultyUpgradeRelicDataT implements flatbuffers.IGeneratedObject {
constructor(
  public relicId: string|Uint8Array|null = null,
  public equivalentGrade: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const relicId = (this.relicId !== null ? builder.createString(this.relicId!) : 0);

  return clz_Torappu_RoguelikeDifficultyUpgradeRelicData.createclz_Torappu_RoguelikeDifficultyUpgradeRelicData(builder,
    relicId,
    this.equivalentGrade
  );
}
}
