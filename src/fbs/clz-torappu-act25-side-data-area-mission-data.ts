// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT } from './clz-torappu-item-bundle.js';


export class clz_Torappu_Act25SideData_AreaMissionData implements flatbuffers.IUnpackableObject<clz_Torappu_Act25SideData_AreaMissionDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Act25SideData_AreaMissionData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Act25SideData_AreaMissionData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act25SideData_AreaMissionData):clz_Torappu_Act25SideData_AreaMissionData {
  return (obj || new clz_Torappu_Act25SideData_AreaMissionData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Act25SideData_AreaMissionData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act25SideData_AreaMissionData):clz_Torappu_Act25SideData_AreaMissionData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Act25SideData_AreaMissionData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

areaId():string|null
areaId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
areaId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

preposedMissionId():string|null
preposedMissionId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
preposedMissionId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

isZone():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

stageId():string|null
stageId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
stageId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

costCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

transform():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

progress():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

progressPicId():string|null
progressPicId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
progressPicId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

template():string|null
template(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
template(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

templateType():number {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

desc():string|null
desc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
desc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

param(index: number):string
param(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
param(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

paramLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

rewards(index: number, obj?:clz_Torappu_ItemBundle):clz_Torappu_ItemBundle|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? (obj || new clz_Torappu_ItemBundle()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

rewardsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

archiveItems(index: number):string
archiveItems(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
archiveItems(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

archiveItemsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_Act25SideData_AreaMissionData(builder:flatbuffers.Builder) {
  builder.startObject(16);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addAreaId(builder:flatbuffers.Builder, areaIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, areaIdOffset, 0);
}

static addPreposedMissionId(builder:flatbuffers.Builder, preposedMissionIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, preposedMissionIdOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(3, sortId, 0);
}

static addIsZone(builder:flatbuffers.Builder, isZone:boolean) {
  builder.addFieldInt8(4, +isZone, +false);
}

static addStageId(builder:flatbuffers.Builder, stageIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, stageIdOffset, 0);
}

static addCostCount(builder:flatbuffers.Builder, costCount:number) {
  builder.addFieldInt32(6, costCount, 0);
}

static addTransform(builder:flatbuffers.Builder, transform:number) {
  builder.addFieldInt32(7, transform, 0);
}

static addProgress(builder:flatbuffers.Builder, progress:number) {
  builder.addFieldInt32(8, progress, 0);
}

static addProgressPicId(builder:flatbuffers.Builder, progressPicIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, progressPicIdOffset, 0);
}

static addTemplate(builder:flatbuffers.Builder, templateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, templateOffset, 0);
}

static addTemplateType(builder:flatbuffers.Builder, templateType:number) {
  builder.addFieldInt32(11, templateType, 0);
}

static addDesc(builder:flatbuffers.Builder, descOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, descOffset, 0);
}

static addParam(builder:flatbuffers.Builder, paramOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, paramOffset, 0);
}

static createParamVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startParamVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRewards(builder:flatbuffers.Builder, rewardsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, rewardsOffset, 0);
}

static createRewardsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRewardsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addArchiveItems(builder:flatbuffers.Builder, archiveItemsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(15, archiveItemsOffset, 0);
}

static createArchiveItemsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startArchiveItemsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_Act25SideData_AreaMissionData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Act25SideData_AreaMissionData(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset, areaIdOffset:flatbuffers.Offset, preposedMissionIdOffset:flatbuffers.Offset, sortId:number, isZone:boolean, stageIdOffset:flatbuffers.Offset, costCount:number, transform:number, progress:number, progressPicIdOffset:flatbuffers.Offset, templateOffset:flatbuffers.Offset, templateType:number, descOffset:flatbuffers.Offset, paramOffset:flatbuffers.Offset, rewardsOffset:flatbuffers.Offset, archiveItemsOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_Act25SideData_AreaMissionData.startclz_Torappu_Act25SideData_AreaMissionData(builder);
  clz_Torappu_Act25SideData_AreaMissionData.addId(builder, idOffset);
  clz_Torappu_Act25SideData_AreaMissionData.addAreaId(builder, areaIdOffset);
  clz_Torappu_Act25SideData_AreaMissionData.addPreposedMissionId(builder, preposedMissionIdOffset);
  clz_Torappu_Act25SideData_AreaMissionData.addSortId(builder, sortId);
  clz_Torappu_Act25SideData_AreaMissionData.addIsZone(builder, isZone);
  clz_Torappu_Act25SideData_AreaMissionData.addStageId(builder, stageIdOffset);
  clz_Torappu_Act25SideData_AreaMissionData.addCostCount(builder, costCount);
  clz_Torappu_Act25SideData_AreaMissionData.addTransform(builder, transform);
  clz_Torappu_Act25SideData_AreaMissionData.addProgress(builder, progress);
  clz_Torappu_Act25SideData_AreaMissionData.addProgressPicId(builder, progressPicIdOffset);
  clz_Torappu_Act25SideData_AreaMissionData.addTemplate(builder, templateOffset);
  clz_Torappu_Act25SideData_AreaMissionData.addTemplateType(builder, templateType);
  clz_Torappu_Act25SideData_AreaMissionData.addDesc(builder, descOffset);
  clz_Torappu_Act25SideData_AreaMissionData.addParam(builder, paramOffset);
  clz_Torappu_Act25SideData_AreaMissionData.addRewards(builder, rewardsOffset);
  clz_Torappu_Act25SideData_AreaMissionData.addArchiveItems(builder, archiveItemsOffset);
  return clz_Torappu_Act25SideData_AreaMissionData.endclz_Torappu_Act25SideData_AreaMissionData(builder);
}

unpack(): clz_Torappu_Act25SideData_AreaMissionDataT {
  return new clz_Torappu_Act25SideData_AreaMissionDataT(
    this.id(),
    this.areaId(),
    this.preposedMissionId(),
    this.sortId(),
    this.isZone(),
    this.stageId(),
    this.costCount(),
    this.transform(),
    this.progress(),
    this.progressPicId(),
    this.template(),
    this.templateType(),
    this.desc(),
    this.bb!.createScalarList<string>(this.param.bind(this), this.paramLength()),
    this.bb!.createObjList<clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT>(this.rewards.bind(this), this.rewardsLength()),
    this.bb!.createScalarList<string>(this.archiveItems.bind(this), this.archiveItemsLength())
  );
}


unpackTo(_o: clz_Torappu_Act25SideData_AreaMissionDataT): void {
  _o.id = this.id();
  _o.areaId = this.areaId();
  _o.preposedMissionId = this.preposedMissionId();
  _o.sortId = this.sortId();
  _o.isZone = this.isZone();
  _o.stageId = this.stageId();
  _o.costCount = this.costCount();
  _o.transform = this.transform();
  _o.progress = this.progress();
  _o.progressPicId = this.progressPicId();
  _o.template = this.template();
  _o.templateType = this.templateType();
  _o.desc = this.desc();
  _o.param = this.bb!.createScalarList<string>(this.param.bind(this), this.paramLength());
  _o.rewards = this.bb!.createObjList<clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT>(this.rewards.bind(this), this.rewardsLength());
  _o.archiveItems = this.bb!.createScalarList<string>(this.archiveItems.bind(this), this.archiveItemsLength());
}
}

export class clz_Torappu_Act25SideData_AreaMissionDataT implements flatbuffers.IGeneratedObject {
constructor(
  public id: string|Uint8Array|null = null,
  public areaId: string|Uint8Array|null = null,
  public preposedMissionId: string|Uint8Array|null = null,
  public sortId: number = 0,
  public isZone: boolean = false,
  public stageId: string|Uint8Array|null = null,
  public costCount: number = 0,
  public transform: number = 0,
  public progress: number = 0,
  public progressPicId: string|Uint8Array|null = null,
  public template: string|Uint8Array|null = null,
  public templateType: number = 0,
  public desc: string|Uint8Array|null = null,
  public param: (string)[] = [],
  public rewards: (clz_Torappu_ItemBundleT)[] = [],
  public archiveItems: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const id = (this.id !== null ? builder.createString(this.id!) : 0);
  const areaId = (this.areaId !== null ? builder.createString(this.areaId!) : 0);
  const preposedMissionId = (this.preposedMissionId !== null ? builder.createString(this.preposedMissionId!) : 0);
  const stageId = (this.stageId !== null ? builder.createString(this.stageId!) : 0);
  const progressPicId = (this.progressPicId !== null ? builder.createString(this.progressPicId!) : 0);
  const template = (this.template !== null ? builder.createString(this.template!) : 0);
  const desc = (this.desc !== null ? builder.createString(this.desc!) : 0);
  const param = clz_Torappu_Act25SideData_AreaMissionData.createParamVector(builder, builder.createObjectOffsetList(this.param));
  const rewards = clz_Torappu_Act25SideData_AreaMissionData.createRewardsVector(builder, builder.createObjectOffsetList(this.rewards));
  const archiveItems = clz_Torappu_Act25SideData_AreaMissionData.createArchiveItemsVector(builder, builder.createObjectOffsetList(this.archiveItems));

  return clz_Torappu_Act25SideData_AreaMissionData.createclz_Torappu_Act25SideData_AreaMissionData(builder,
    id,
    areaId,
    preposedMissionId,
    this.sortId,
    this.isZone,
    stageId,
    this.costCount,
    this.transform,
    this.progress,
    progressPicId,
    template,
    this.templateType,
    desc,
    param,
    rewards,
    archiveItems
  );
}
}
