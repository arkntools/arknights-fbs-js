// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_KVSwitchInfo implements flatbuffers.IUnpackableObject<clz_Torappu_KVSwitchInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_KVSwitchInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_KVSwitchInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_KVSwitchInfo):clz_Torappu_KVSwitchInfo {
  return (obj || new clz_Torappu_KVSwitchInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_KVSwitchInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_KVSwitchInfo):clz_Torappu_KVSwitchInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_KVSwitchInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

isDefault():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

displayTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

zoneId():string|null
zoneId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
zoneId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_KVSwitchInfo(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addIsDefault(builder:flatbuffers.Builder, isDefault:boolean) {
  builder.addFieldInt8(0, +isDefault, +false);
}

static addDisplayTime(builder:flatbuffers.Builder, displayTime:bigint) {
  builder.addFieldInt64(1, displayTime, BigInt('0'));
}

static addZoneId(builder:flatbuffers.Builder, zoneIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, zoneIdOffset, 0);
}

static endclz_Torappu_KVSwitchInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_KVSwitchInfo(builder:flatbuffers.Builder, isDefault:boolean, displayTime:bigint, zoneIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_KVSwitchInfo.startclz_Torappu_KVSwitchInfo(builder);
  clz_Torappu_KVSwitchInfo.addIsDefault(builder, isDefault);
  clz_Torappu_KVSwitchInfo.addDisplayTime(builder, displayTime);
  clz_Torappu_KVSwitchInfo.addZoneId(builder, zoneIdOffset);
  return clz_Torappu_KVSwitchInfo.endclz_Torappu_KVSwitchInfo(builder);
}

unpack(): clz_Torappu_KVSwitchInfoT {
  return new clz_Torappu_KVSwitchInfoT(
    this.isDefault(),
    this.displayTime(),
    this.zoneId()
  );
}


unpackTo(_o: clz_Torappu_KVSwitchInfoT): void {
  _o.isDefault = this.isDefault();
  _o.displayTime = this.displayTime();
  _o.zoneId = this.zoneId();
}
}

export class clz_Torappu_KVSwitchInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public isDefault: boolean = false,
  public displayTime: bigint = BigInt('0'),
  public zoneId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const zoneId = (this.zoneId !== null ? builder.createString(this.zoneId!) : 0);

  return clz_Torappu_KVSwitchInfo.createclz_Torappu_KVSwitchInfo(builder,
    this.isDefault,
    this.displayTime,
    zoneId
  );
}
}
