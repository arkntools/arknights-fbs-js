// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_Audio_Middleware_Data_SnapshotBank implements flatbuffers.IUnpackableObject<clz_Torappu_Audio_Middleware_Data_SnapshotBankT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Audio_Middleware_Data_SnapshotBank {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Audio_Middleware_Data_SnapshotBank(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Audio_Middleware_Data_SnapshotBank):clz_Torappu_Audio_Middleware_Data_SnapshotBank {
  return (obj || new clz_Torappu_Audio_Middleware_Data_SnapshotBank()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Audio_Middleware_Data_SnapshotBank(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Audio_Middleware_Data_SnapshotBank):clz_Torappu_Audio_Middleware_Data_SnapshotBank {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Audio_Middleware_Data_SnapshotBank()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

targetSnapshot():string|null
targetSnapshot(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
targetSnapshot(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

hookSoundFxBank():string|null
hookSoundFxBank(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
hookSoundFxBank(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

delay():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

duration():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_Audio_Middleware_Data_SnapshotBank(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addTargetSnapshot(builder:flatbuffers.Builder, targetSnapshotOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, targetSnapshotOffset, 0);
}

static addHookSoundFxBank(builder:flatbuffers.Builder, hookSoundFxBankOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, hookSoundFxBankOffset, 0);
}

static addDelay(builder:flatbuffers.Builder, delay:number) {
  builder.addFieldFloat32(2, delay, 0.0);
}

static addDuration(builder:flatbuffers.Builder, duration:number) {
  builder.addFieldFloat32(3, duration, 0.0);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, nameOffset, 0);
}

static endclz_Torappu_Audio_Middleware_Data_SnapshotBank(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Audio_Middleware_Data_SnapshotBank(builder:flatbuffers.Builder, targetSnapshotOffset:flatbuffers.Offset, hookSoundFxBankOffset:flatbuffers.Offset, delay:number, duration:number, nameOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_Audio_Middleware_Data_SnapshotBank.startclz_Torappu_Audio_Middleware_Data_SnapshotBank(builder);
  clz_Torappu_Audio_Middleware_Data_SnapshotBank.addTargetSnapshot(builder, targetSnapshotOffset);
  clz_Torappu_Audio_Middleware_Data_SnapshotBank.addHookSoundFxBank(builder, hookSoundFxBankOffset);
  clz_Torappu_Audio_Middleware_Data_SnapshotBank.addDelay(builder, delay);
  clz_Torappu_Audio_Middleware_Data_SnapshotBank.addDuration(builder, duration);
  clz_Torappu_Audio_Middleware_Data_SnapshotBank.addName(builder, nameOffset);
  return clz_Torappu_Audio_Middleware_Data_SnapshotBank.endclz_Torappu_Audio_Middleware_Data_SnapshotBank(builder);
}

unpack(): clz_Torappu_Audio_Middleware_Data_SnapshotBankT {
  return new clz_Torappu_Audio_Middleware_Data_SnapshotBankT(
    this.targetSnapshot(),
    this.hookSoundFxBank(),
    this.delay(),
    this.duration(),
    this.name()
  );
}


unpackTo(_o: clz_Torappu_Audio_Middleware_Data_SnapshotBankT): void {
  _o.targetSnapshot = this.targetSnapshot();
  _o.hookSoundFxBank = this.hookSoundFxBank();
  _o.delay = this.delay();
  _o.duration = this.duration();
  _o.name = this.name();
}
}

export class clz_Torappu_Audio_Middleware_Data_SnapshotBankT implements flatbuffers.IGeneratedObject {
constructor(
  public targetSnapshot: string|Uint8Array|null = null,
  public hookSoundFxBank: string|Uint8Array|null = null,
  public delay: number = 0.0,
  public duration: number = 0.0,
  public name: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const targetSnapshot = (this.targetSnapshot !== null ? builder.createString(this.targetSnapshot!) : 0);
  const hookSoundFxBank = (this.hookSoundFxBank !== null ? builder.createString(this.hookSoundFxBank!) : 0);
  const name = (this.name !== null ? builder.createString(this.name!) : 0);

  return clz_Torappu_Audio_Middleware_Data_SnapshotBank.createclz_Torappu_Audio_Middleware_Data_SnapshotBank(builder,
    targetSnapshot,
    hookSoundFxBank,
    this.delay,
    this.duration,
    name
  );
}
}
