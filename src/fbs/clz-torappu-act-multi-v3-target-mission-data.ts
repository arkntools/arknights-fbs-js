// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActMultiV3TargetMissionData implements flatbuffers.IUnpackableObject<clz_Torappu_ActMultiV3TargetMissionDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActMultiV3TargetMissionData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActMultiV3TargetMissionData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActMultiV3TargetMissionData):clz_Torappu_ActMultiV3TargetMissionData {
  return (obj || new clz_Torappu_ActMultiV3TargetMissionData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActMultiV3TargetMissionData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActMultiV3TargetMissionData):clz_Torappu_ActMultiV3TargetMissionData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActMultiV3TargetMissionData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

title():string|null
title(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
title(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

battleDesc():string|null
battleDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
battleDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

description():string|null
description(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
description(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_ActMultiV3TargetMissionData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(1, sortId, 0);
}

static addTitle(builder:flatbuffers.Builder, titleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, titleOffset, 0);
}

static addBattleDesc(builder:flatbuffers.Builder, battleDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, battleDescOffset, 0);
}

static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, descriptionOffset, 0);
}

static endclz_Torappu_ActMultiV3TargetMissionData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActMultiV3TargetMissionData(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset, sortId:number, titleOffset:flatbuffers.Offset, battleDescOffset:flatbuffers.Offset, descriptionOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActMultiV3TargetMissionData.startclz_Torappu_ActMultiV3TargetMissionData(builder);
  clz_Torappu_ActMultiV3TargetMissionData.addId(builder, idOffset);
  clz_Torappu_ActMultiV3TargetMissionData.addSortId(builder, sortId);
  clz_Torappu_ActMultiV3TargetMissionData.addTitle(builder, titleOffset);
  clz_Torappu_ActMultiV3TargetMissionData.addBattleDesc(builder, battleDescOffset);
  clz_Torappu_ActMultiV3TargetMissionData.addDescription(builder, descriptionOffset);
  return clz_Torappu_ActMultiV3TargetMissionData.endclz_Torappu_ActMultiV3TargetMissionData(builder);
}

unpack(): clz_Torappu_ActMultiV3TargetMissionDataT {
  return new clz_Torappu_ActMultiV3TargetMissionDataT(
    this.id(),
    this.sortId(),
    this.title(),
    this.battleDesc(),
    this.description()
  );
}


unpackTo(_o: clz_Torappu_ActMultiV3TargetMissionDataT): void {
  _o.id = this.id();
  _o.sortId = this.sortId();
  _o.title = this.title();
  _o.battleDesc = this.battleDesc();
  _o.description = this.description();
}
}

export class clz_Torappu_ActMultiV3TargetMissionDataT implements flatbuffers.IGeneratedObject {
constructor(
  public id: string|Uint8Array|null = null,
  public sortId: number = 0,
  public title: string|Uint8Array|null = null,
  public battleDesc: string|Uint8Array|null = null,
  public description: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const id = (this.id !== null ? builder.createString(this.id!) : 0);
  const title = (this.title !== null ? builder.createString(this.title!) : 0);
  const battleDesc = (this.battleDesc !== null ? builder.createString(this.battleDesc!) : 0);
  const description = (this.description !== null ? builder.createString(this.description!) : 0);

  return clz_Torappu_ActMultiV3TargetMissionData.createclz_Torappu_ActMultiV3TargetMissionData(builder,
    id,
    this.sortId,
    title,
    battleDesc,
    description
  );
}
}
