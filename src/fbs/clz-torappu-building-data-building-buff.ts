// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_BuildingData_BuffCategory } from './enum--torappu-building-data-buff-category.js';
import { enum__Torappu_BuildingData_RoomType } from './enum--torappu-building-data-room-type.js';


export class clz_Torappu_BuildingData_BuildingBuff implements flatbuffers.IUnpackableObject<clz_Torappu_BuildingData_BuildingBuffT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_BuildingData_BuildingBuff {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_BuildingData_BuildingBuff(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_BuildingBuff):clz_Torappu_BuildingData_BuildingBuff {
  return (obj || new clz_Torappu_BuildingData_BuildingBuff()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_BuildingData_BuildingBuff(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_BuildingBuff):clz_Torappu_BuildingData_BuildingBuff {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_BuildingData_BuildingBuff()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

buffId():string|null
buffId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
buffId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

buffName():string|null
buffName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
buffName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

buffIcon():string|null
buffIcon(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
buffIcon(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

skillIcon():string|null
skillIcon(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
skillIcon(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

buffColor():string|null
buffColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
buffColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

textColor():string|null
textColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
textColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

buffCategory():enum__Torappu_BuildingData_BuffCategory {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_BuildingData_BuffCategory.NONE;
}

roomType():enum__Torappu_BuildingData_RoomType {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_BuildingData_RoomType.NONE;
}

description():string|null
description(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
description(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

efficiency():number {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

targetGroupSortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

targets(index: number):string
targets(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
targets(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

targetsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_BuildingData_BuildingBuff(builder:flatbuffers.Builder) {
  builder.startObject(13);
}

static addBuffId(builder:flatbuffers.Builder, buffIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, buffIdOffset, 0);
}

static addBuffName(builder:flatbuffers.Builder, buffNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, buffNameOffset, 0);
}

static addBuffIcon(builder:flatbuffers.Builder, buffIconOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, buffIconOffset, 0);
}

static addSkillIcon(builder:flatbuffers.Builder, skillIconOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, skillIconOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(4, sortId, 0);
}

static addBuffColor(builder:flatbuffers.Builder, buffColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, buffColorOffset, 0);
}

static addTextColor(builder:flatbuffers.Builder, textColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, textColorOffset, 0);
}

static addBuffCategory(builder:flatbuffers.Builder, buffCategory:enum__Torappu_BuildingData_BuffCategory) {
  builder.addFieldInt32(7, buffCategory, enum__Torappu_BuildingData_BuffCategory.NONE);
}

static addRoomType(builder:flatbuffers.Builder, roomType:enum__Torappu_BuildingData_RoomType) {
  builder.addFieldInt32(8, roomType, enum__Torappu_BuildingData_RoomType.NONE);
}

static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, descriptionOffset, 0);
}

static addEfficiency(builder:flatbuffers.Builder, efficiency:number) {
  builder.addFieldInt32(10, efficiency, 0);
}

static addTargetGroupSortId(builder:flatbuffers.Builder, targetGroupSortId:number) {
  builder.addFieldInt32(11, targetGroupSortId, 0);
}

static addTargets(builder:flatbuffers.Builder, targetsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, targetsOffset, 0);
}

static createTargetsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTargetsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_BuildingData_BuildingBuff(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_BuildingData_BuildingBuff(builder:flatbuffers.Builder, buffIdOffset:flatbuffers.Offset, buffNameOffset:flatbuffers.Offset, buffIconOffset:flatbuffers.Offset, skillIconOffset:flatbuffers.Offset, sortId:number, buffColorOffset:flatbuffers.Offset, textColorOffset:flatbuffers.Offset, buffCategory:enum__Torappu_BuildingData_BuffCategory, roomType:enum__Torappu_BuildingData_RoomType, descriptionOffset:flatbuffers.Offset, efficiency:number, targetGroupSortId:number, targetsOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_BuildingData_BuildingBuff.startclz_Torappu_BuildingData_BuildingBuff(builder);
  clz_Torappu_BuildingData_BuildingBuff.addBuffId(builder, buffIdOffset);
  clz_Torappu_BuildingData_BuildingBuff.addBuffName(builder, buffNameOffset);
  clz_Torappu_BuildingData_BuildingBuff.addBuffIcon(builder, buffIconOffset);
  clz_Torappu_BuildingData_BuildingBuff.addSkillIcon(builder, skillIconOffset);
  clz_Torappu_BuildingData_BuildingBuff.addSortId(builder, sortId);
  clz_Torappu_BuildingData_BuildingBuff.addBuffColor(builder, buffColorOffset);
  clz_Torappu_BuildingData_BuildingBuff.addTextColor(builder, textColorOffset);
  clz_Torappu_BuildingData_BuildingBuff.addBuffCategory(builder, buffCategory);
  clz_Torappu_BuildingData_BuildingBuff.addRoomType(builder, roomType);
  clz_Torappu_BuildingData_BuildingBuff.addDescription(builder, descriptionOffset);
  clz_Torappu_BuildingData_BuildingBuff.addEfficiency(builder, efficiency);
  clz_Torappu_BuildingData_BuildingBuff.addTargetGroupSortId(builder, targetGroupSortId);
  clz_Torappu_BuildingData_BuildingBuff.addTargets(builder, targetsOffset);
  return clz_Torappu_BuildingData_BuildingBuff.endclz_Torappu_BuildingData_BuildingBuff(builder);
}

unpack(): clz_Torappu_BuildingData_BuildingBuffT {
  return new clz_Torappu_BuildingData_BuildingBuffT(
    this.buffId(),
    this.buffName(),
    this.buffIcon(),
    this.skillIcon(),
    this.sortId(),
    this.buffColor(),
    this.textColor(),
    this.buffCategory(),
    this.roomType(),
    this.description(),
    this.efficiency(),
    this.targetGroupSortId(),
    this.bb!.createScalarList<string>(this.targets.bind(this), this.targetsLength())
  );
}


unpackTo(_o: clz_Torappu_BuildingData_BuildingBuffT): void {
  _o.buffId = this.buffId();
  _o.buffName = this.buffName();
  _o.buffIcon = this.buffIcon();
  _o.skillIcon = this.skillIcon();
  _o.sortId = this.sortId();
  _o.buffColor = this.buffColor();
  _o.textColor = this.textColor();
  _o.buffCategory = this.buffCategory();
  _o.roomType = this.roomType();
  _o.description = this.description();
  _o.efficiency = this.efficiency();
  _o.targetGroupSortId = this.targetGroupSortId();
  _o.targets = this.bb!.createScalarList<string>(this.targets.bind(this), this.targetsLength());
}
}

export class clz_Torappu_BuildingData_BuildingBuffT implements flatbuffers.IGeneratedObject {
constructor(
  public buffId: string|Uint8Array|null = null,
  public buffName: string|Uint8Array|null = null,
  public buffIcon: string|Uint8Array|null = null,
  public skillIcon: string|Uint8Array|null = null,
  public sortId: number = 0,
  public buffColor: string|Uint8Array|null = null,
  public textColor: string|Uint8Array|null = null,
  public buffCategory: enum__Torappu_BuildingData_BuffCategory = enum__Torappu_BuildingData_BuffCategory.NONE,
  public roomType: enum__Torappu_BuildingData_RoomType = enum__Torappu_BuildingData_RoomType.NONE,
  public description: string|Uint8Array|null = null,
  public efficiency: number = 0,
  public targetGroupSortId: number = 0,
  public targets: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const buffId = (this.buffId !== null ? builder.createString(this.buffId!) : 0);
  const buffName = (this.buffName !== null ? builder.createString(this.buffName!) : 0);
  const buffIcon = (this.buffIcon !== null ? builder.createString(this.buffIcon!) : 0);
  const skillIcon = (this.skillIcon !== null ? builder.createString(this.skillIcon!) : 0);
  const buffColor = (this.buffColor !== null ? builder.createString(this.buffColor!) : 0);
  const textColor = (this.textColor !== null ? builder.createString(this.textColor!) : 0);
  const description = (this.description !== null ? builder.createString(this.description!) : 0);
  const targets = clz_Torappu_BuildingData_BuildingBuff.createTargetsVector(builder, builder.createObjectOffsetList(this.targets));

  return clz_Torappu_BuildingData_BuildingBuff.createclz_Torappu_BuildingData_BuildingBuff(builder,
    buffId,
    buffName,
    buffIcon,
    skillIcon,
    this.sortId,
    buffColor,
    textColor,
    this.buffCategory,
    this.roomType,
    description,
    this.efficiency,
    this.targetGroupSortId,
    targets
  );
}
}
