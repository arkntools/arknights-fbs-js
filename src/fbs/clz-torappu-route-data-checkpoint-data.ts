// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_GridPosition, clz_Torappu_GridPositionT } from './clz-torappu-grid-position.js';
import { clz_UnityEngine_Vector2, clz_UnityEngine_Vector2T } from './clz-unity-engine-vector2.js';
import { enum__Torappu_CheckpointType } from './enum--torappu-checkpoint-type.js';


export class clz_Torappu_RouteData_CheckpointData implements flatbuffers.IUnpackableObject<clz_Torappu_RouteData_CheckpointDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RouteData_CheckpointData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RouteData_CheckpointData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RouteData_CheckpointData):clz_Torappu_RouteData_CheckpointData {
  return (obj || new clz_Torappu_RouteData_CheckpointData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RouteData_CheckpointData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RouteData_CheckpointData):clz_Torappu_RouteData_CheckpointData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RouteData_CheckpointData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

type():enum__Torappu_CheckpointType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_CheckpointType.MOVE;
}

time():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

position(obj?:clz_Torappu_GridPosition):clz_Torappu_GridPosition|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new clz_Torappu_GridPosition()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

reachOffset(obj?:clz_UnityEngine_Vector2):clz_UnityEngine_Vector2|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_UnityEngine_Vector2()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

randomizeReachOffset():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

reachDistance():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

static startclz_Torappu_RouteData_CheckpointData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addType(builder:flatbuffers.Builder, type:enum__Torappu_CheckpointType) {
  builder.addFieldInt32(0, type, enum__Torappu_CheckpointType.MOVE);
}

static addTime(builder:flatbuffers.Builder, time:number) {
  builder.addFieldFloat32(1, time, 0.0);
}

static addPosition(builder:flatbuffers.Builder, positionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, positionOffset, 0);
}

static addReachOffset(builder:flatbuffers.Builder, reachOffsetOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, reachOffsetOffset, 0);
}

static addRandomizeReachOffset(builder:flatbuffers.Builder, randomizeReachOffset:boolean) {
  builder.addFieldInt8(4, +randomizeReachOffset, +false);
}

static addReachDistance(builder:flatbuffers.Builder, reachDistance:number) {
  builder.addFieldFloat32(5, reachDistance, 0.0);
}

static endclz_Torappu_RouteData_CheckpointData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_RouteData_CheckpointDataT {
  return new clz_Torappu_RouteData_CheckpointDataT(
    this.type(),
    this.time(),
    (this.position() !== null ? this.position()!.unpack() : null),
    (this.reachOffset() !== null ? this.reachOffset()!.unpack() : null),
    this.randomizeReachOffset(),
    this.reachDistance()
  );
}


unpackTo(_o: clz_Torappu_RouteData_CheckpointDataT): void {
  _o.type = this.type();
  _o.time = this.time();
  _o.position = (this.position() !== null ? this.position()!.unpack() : null);
  _o.reachOffset = (this.reachOffset() !== null ? this.reachOffset()!.unpack() : null);
  _o.randomizeReachOffset = this.randomizeReachOffset();
  _o.reachDistance = this.reachDistance();
}
}

export class clz_Torappu_RouteData_CheckpointDataT implements flatbuffers.IGeneratedObject {
constructor(
  public type: enum__Torappu_CheckpointType = enum__Torappu_CheckpointType.MOVE,
  public time: number = 0.0,
  public position: clz_Torappu_GridPositionT|null = null,
  public reachOffset: clz_UnityEngine_Vector2T|null = null,
  public randomizeReachOffset: boolean = false,
  public reachDistance: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const position = (this.position !== null ? this.position!.pack(builder) : 0);
  const reachOffset = (this.reachOffset !== null ? this.reachOffset!.pack(builder) : 0);

  clz_Torappu_RouteData_CheckpointData.startclz_Torappu_RouteData_CheckpointData(builder);
  clz_Torappu_RouteData_CheckpointData.addType(builder, this.type);
  clz_Torappu_RouteData_CheckpointData.addTime(builder, this.time);
  clz_Torappu_RouteData_CheckpointData.addPosition(builder, position);
  clz_Torappu_RouteData_CheckpointData.addReachOffset(builder, reachOffset);
  clz_Torappu_RouteData_CheckpointData.addRandomizeReachOffset(builder, this.randomizeReachOffset);
  clz_Torappu_RouteData_CheckpointData.addReachDistance(builder, this.reachDistance);

  return clz_Torappu_RouteData_CheckpointData.endclz_Torappu_RouteData_CheckpointData(builder);
}
}
