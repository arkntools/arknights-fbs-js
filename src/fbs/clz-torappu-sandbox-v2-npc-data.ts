// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { dict__enum__Torappu_BattleDialogType__string, dict__enum__Torappu_BattleDialogType__stringT } from './dict--enum--torappu-battle-dialog-type--string.js';
import { enum__Torappu_SandboxV2NpcType } from './enum--torappu-sandbox-v2-npc-type.js';
import { enum__Torappu_SharedConsts_Direction } from './enum--torappu-shared-consts-direction.js';


export class clz_Torappu_SandboxV2NpcData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxV2NpcDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxV2NpcData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxV2NpcData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2NpcData):clz_Torappu_SandboxV2NpcData {
  return (obj || new clz_Torappu_SandboxV2NpcData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxV2NpcData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2NpcData):clz_Torappu_SandboxV2NpcData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxV2NpcData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

npcId():string|null
npcId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
npcId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

trapId():string|null
trapId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
trapId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

npcType():enum__Torappu_SandboxV2NpcType {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_SandboxV2NpcType.NORMAL;
}

dialogIds(index: number, obj?:dict__enum__Torappu_BattleDialogType__string):dict__enum__Torappu_BattleDialogType__string|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new dict__enum__Torappu_BattleDialogType__string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

dialogIdsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

npcLocation(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

npcLocationLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

npcLocationArray():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

npcOrientation():enum__Torappu_SharedConsts_Direction {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_SharedConsts_Direction.UP;
}

picId():string|null
picId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
picId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

picName():string|null
picName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
picName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

showPic():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

reactSkillIndex():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SandboxV2NpcData(builder:flatbuffers.Builder) {
  builder.startObject(10);
}

static addNpcId(builder:flatbuffers.Builder, npcIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, npcIdOffset, 0);
}

static addTrapId(builder:flatbuffers.Builder, trapIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, trapIdOffset, 0);
}

static addNpcType(builder:flatbuffers.Builder, npcType:enum__Torappu_SandboxV2NpcType) {
  builder.addFieldInt32(2, npcType, enum__Torappu_SandboxV2NpcType.NORMAL);
}

static addDialogIds(builder:flatbuffers.Builder, dialogIdsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, dialogIdsOffset, 0);
}

static createDialogIdsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startDialogIdsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addNpcLocation(builder:flatbuffers.Builder, npcLocationOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, npcLocationOffset, 0);
}

static createNpcLocationVector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static createNpcLocationVector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static createNpcLocationVector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static startNpcLocationVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addNpcOrientation(builder:flatbuffers.Builder, npcOrientation:enum__Torappu_SharedConsts_Direction) {
  builder.addFieldInt32(5, npcOrientation, enum__Torappu_SharedConsts_Direction.UP);
}

static addPicId(builder:flatbuffers.Builder, picIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, picIdOffset, 0);
}

static addPicName(builder:flatbuffers.Builder, picNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, picNameOffset, 0);
}

static addShowPic(builder:flatbuffers.Builder, showPic:boolean) {
  builder.addFieldInt8(8, +showPic, +false);
}

static addReactSkillIndex(builder:flatbuffers.Builder, reactSkillIndex:number) {
  builder.addFieldInt32(9, reactSkillIndex, 0);
}

static endclz_Torappu_SandboxV2NpcData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxV2NpcData(builder:flatbuffers.Builder, npcIdOffset:flatbuffers.Offset, trapIdOffset:flatbuffers.Offset, npcType:enum__Torappu_SandboxV2NpcType, dialogIdsOffset:flatbuffers.Offset, npcLocationOffset:flatbuffers.Offset, npcOrientation:enum__Torappu_SharedConsts_Direction, picIdOffset:flatbuffers.Offset, picNameOffset:flatbuffers.Offset, showPic:boolean, reactSkillIndex:number):flatbuffers.Offset {
  clz_Torappu_SandboxV2NpcData.startclz_Torappu_SandboxV2NpcData(builder);
  clz_Torappu_SandboxV2NpcData.addNpcId(builder, npcIdOffset);
  clz_Torappu_SandboxV2NpcData.addTrapId(builder, trapIdOffset);
  clz_Torappu_SandboxV2NpcData.addNpcType(builder, npcType);
  clz_Torappu_SandboxV2NpcData.addDialogIds(builder, dialogIdsOffset);
  clz_Torappu_SandboxV2NpcData.addNpcLocation(builder, npcLocationOffset);
  clz_Torappu_SandboxV2NpcData.addNpcOrientation(builder, npcOrientation);
  clz_Torappu_SandboxV2NpcData.addPicId(builder, picIdOffset);
  clz_Torappu_SandboxV2NpcData.addPicName(builder, picNameOffset);
  clz_Torappu_SandboxV2NpcData.addShowPic(builder, showPic);
  clz_Torappu_SandboxV2NpcData.addReactSkillIndex(builder, reactSkillIndex);
  return clz_Torappu_SandboxV2NpcData.endclz_Torappu_SandboxV2NpcData(builder);
}

unpack(): clz_Torappu_SandboxV2NpcDataT {
  return new clz_Torappu_SandboxV2NpcDataT(
    this.npcId(),
    this.trapId(),
    this.npcType(),
    this.bb!.createObjList<dict__enum__Torappu_BattleDialogType__string, dict__enum__Torappu_BattleDialogType__stringT>(this.dialogIds.bind(this), this.dialogIdsLength()),
    this.bb!.createScalarList<number>(this.npcLocation.bind(this), this.npcLocationLength()),
    this.npcOrientation(),
    this.picId(),
    this.picName(),
    this.showPic(),
    this.reactSkillIndex()
  );
}


unpackTo(_o: clz_Torappu_SandboxV2NpcDataT): void {
  _o.npcId = this.npcId();
  _o.trapId = this.trapId();
  _o.npcType = this.npcType();
  _o.dialogIds = this.bb!.createObjList<dict__enum__Torappu_BattleDialogType__string, dict__enum__Torappu_BattleDialogType__stringT>(this.dialogIds.bind(this), this.dialogIdsLength());
  _o.npcLocation = this.bb!.createScalarList<number>(this.npcLocation.bind(this), this.npcLocationLength());
  _o.npcOrientation = this.npcOrientation();
  _o.picId = this.picId();
  _o.picName = this.picName();
  _o.showPic = this.showPic();
  _o.reactSkillIndex = this.reactSkillIndex();
}
}

export class clz_Torappu_SandboxV2NpcDataT implements flatbuffers.IGeneratedObject {
constructor(
  public npcId: string|Uint8Array|null = null,
  public trapId: string|Uint8Array|null = null,
  public npcType: enum__Torappu_SandboxV2NpcType = enum__Torappu_SandboxV2NpcType.NORMAL,
  public dialogIds: (dict__enum__Torappu_BattleDialogType__stringT)[] = [],
  public npcLocation: (number)[] = [],
  public npcOrientation: enum__Torappu_SharedConsts_Direction = enum__Torappu_SharedConsts_Direction.UP,
  public picId: string|Uint8Array|null = null,
  public picName: string|Uint8Array|null = null,
  public showPic: boolean = false,
  public reactSkillIndex: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const npcId = (this.npcId !== null ? builder.createString(this.npcId!) : 0);
  const trapId = (this.trapId !== null ? builder.createString(this.trapId!) : 0);
  const dialogIds = clz_Torappu_SandboxV2NpcData.createDialogIdsVector(builder, builder.createObjectOffsetList(this.dialogIds));
  const npcLocation = clz_Torappu_SandboxV2NpcData.createNpcLocationVector(builder, this.npcLocation);
  const picId = (this.picId !== null ? builder.createString(this.picId!) : 0);
  const picName = (this.picName !== null ? builder.createString(this.picName!) : 0);

  return clz_Torappu_SandboxV2NpcData.createclz_Torappu_SandboxV2NpcData(builder,
    npcId,
    trapId,
    this.npcType,
    dialogIds,
    npcLocation,
    this.npcOrientation,
    picId,
    picName,
    this.showPic,
    this.reactSkillIndex
  );
}
}
