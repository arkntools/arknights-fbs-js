// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_MissionArchiveNodeData, clz_Torappu_MissionArchiveNodeDataT } from './clz-torappu-mission-archive-node-data.js';
import { clz_Torappu_MissionArchiveVoiceClipData, clz_Torappu_MissionArchiveVoiceClipDataT } from './clz-torappu-mission-archive-voice-clip-data.js';


export class clz_Torappu_MissionArchiveData implements flatbuffers.IUnpackableObject<clz_Torappu_MissionArchiveDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_MissionArchiveData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_MissionArchiveData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_MissionArchiveData):clz_Torappu_MissionArchiveData {
  return (obj || new clz_Torappu_MissionArchiveData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_MissionArchiveData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_MissionArchiveData):clz_Torappu_MissionArchiveData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_MissionArchiveData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

topicId():string|null
topicId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
topicId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

zones(index: number):string
zones(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
zones(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

zonesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

nodes(index: number, obj?:clz_Torappu_MissionArchiveNodeData):clz_Torappu_MissionArchiveNodeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new clz_Torappu_MissionArchiveNodeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

nodesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

hiddenClips(index: number, obj?:clz_Torappu_MissionArchiveVoiceClipData):clz_Torappu_MissionArchiveVoiceClipData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_Torappu_MissionArchiveVoiceClipData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

hiddenClipsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

unlockDesc():string|null
unlockDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
unlockDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_MissionArchiveData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addTopicId(builder:flatbuffers.Builder, topicIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, topicIdOffset, 0);
}

static addZones(builder:flatbuffers.Builder, zonesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, zonesOffset, 0);
}

static createZonesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startZonesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addNodes(builder:flatbuffers.Builder, nodesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, nodesOffset, 0);
}

static createNodesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startNodesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addHiddenClips(builder:flatbuffers.Builder, hiddenClipsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, hiddenClipsOffset, 0);
}

static createHiddenClipsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startHiddenClipsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addUnlockDesc(builder:flatbuffers.Builder, unlockDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, unlockDescOffset, 0);
}

static endclz_Torappu_MissionArchiveData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_MissionArchiveData(builder:flatbuffers.Builder, topicIdOffset:flatbuffers.Offset, zonesOffset:flatbuffers.Offset, nodesOffset:flatbuffers.Offset, hiddenClipsOffset:flatbuffers.Offset, unlockDescOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_MissionArchiveData.startclz_Torappu_MissionArchiveData(builder);
  clz_Torappu_MissionArchiveData.addTopicId(builder, topicIdOffset);
  clz_Torappu_MissionArchiveData.addZones(builder, zonesOffset);
  clz_Torappu_MissionArchiveData.addNodes(builder, nodesOffset);
  clz_Torappu_MissionArchiveData.addHiddenClips(builder, hiddenClipsOffset);
  clz_Torappu_MissionArchiveData.addUnlockDesc(builder, unlockDescOffset);
  return clz_Torappu_MissionArchiveData.endclz_Torappu_MissionArchiveData(builder);
}

unpack(): clz_Torappu_MissionArchiveDataT {
  return new clz_Torappu_MissionArchiveDataT(
    this.topicId(),
    this.bb!.createScalarList<string>(this.zones.bind(this), this.zonesLength()),
    this.bb!.createObjList<clz_Torappu_MissionArchiveNodeData, clz_Torappu_MissionArchiveNodeDataT>(this.nodes.bind(this), this.nodesLength()),
    this.bb!.createObjList<clz_Torappu_MissionArchiveVoiceClipData, clz_Torappu_MissionArchiveVoiceClipDataT>(this.hiddenClips.bind(this), this.hiddenClipsLength()),
    this.unlockDesc()
  );
}


unpackTo(_o: clz_Torappu_MissionArchiveDataT): void {
  _o.topicId = this.topicId();
  _o.zones = this.bb!.createScalarList<string>(this.zones.bind(this), this.zonesLength());
  _o.nodes = this.bb!.createObjList<clz_Torappu_MissionArchiveNodeData, clz_Torappu_MissionArchiveNodeDataT>(this.nodes.bind(this), this.nodesLength());
  _o.hiddenClips = this.bb!.createObjList<clz_Torappu_MissionArchiveVoiceClipData, clz_Torappu_MissionArchiveVoiceClipDataT>(this.hiddenClips.bind(this), this.hiddenClipsLength());
  _o.unlockDesc = this.unlockDesc();
}
}

export class clz_Torappu_MissionArchiveDataT implements flatbuffers.IGeneratedObject {
constructor(
  public topicId: string|Uint8Array|null = null,
  public zones: (string)[] = [],
  public nodes: (clz_Torappu_MissionArchiveNodeDataT)[] = [],
  public hiddenClips: (clz_Torappu_MissionArchiveVoiceClipDataT)[] = [],
  public unlockDesc: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const topicId = (this.topicId !== null ? builder.createString(this.topicId!) : 0);
  const zones = clz_Torappu_MissionArchiveData.createZonesVector(builder, builder.createObjectOffsetList(this.zones));
  const nodes = clz_Torappu_MissionArchiveData.createNodesVector(builder, builder.createObjectOffsetList(this.nodes));
  const hiddenClips = clz_Torappu_MissionArchiveData.createHiddenClipsVector(builder, builder.createObjectOffsetList(this.hiddenClips));
  const unlockDesc = (this.unlockDesc !== null ? builder.createString(this.unlockDesc!) : 0);

  return clz_Torappu_MissionArchiveData.createclz_Torappu_MissionArchiveData(builder,
    topicId,
    zones,
    nodes,
    hiddenClips,
    unlockDesc
  );
}
}
