// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT } from './clz-torappu-item-bundle.js';
import { enum__Torappu_VersusCheckInData_TasteType } from './enum--torappu-versus-check-in-data-taste-type.js';


export class clz_Torappu_VersusCheckInData_TasteRewardData implements flatbuffers.IUnpackableObject<clz_Torappu_VersusCheckInData_TasteRewardDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_VersusCheckInData_TasteRewardData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_VersusCheckInData_TasteRewardData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_VersusCheckInData_TasteRewardData):clz_Torappu_VersusCheckInData_TasteRewardData {
  return (obj || new clz_Torappu_VersusCheckInData_TasteRewardData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_VersusCheckInData_TasteRewardData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_VersusCheckInData_TasteRewardData):clz_Torappu_VersusCheckInData_TasteRewardData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_VersusCheckInData_TasteRewardData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

tasteType():enum__Torappu_VersusCheckInData_TasteType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_VersusCheckInData_TasteType.DRAW;
}

rewardItem(obj?:clz_Torappu_ItemBundle):clz_Torappu_ItemBundle|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new clz_Torappu_ItemBundle()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startclz_Torappu_VersusCheckInData_TasteRewardData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addTasteType(builder:flatbuffers.Builder, tasteType:enum__Torappu_VersusCheckInData_TasteType) {
  builder.addFieldInt32(0, tasteType, enum__Torappu_VersusCheckInData_TasteType.DRAW);
}

static addRewardItem(builder:flatbuffers.Builder, rewardItemOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, rewardItemOffset, 0);
}

static endclz_Torappu_VersusCheckInData_TasteRewardData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_VersusCheckInData_TasteRewardDataT {
  return new clz_Torappu_VersusCheckInData_TasteRewardDataT(
    this.tasteType(),
    (this.rewardItem() !== null ? this.rewardItem()!.unpack() : null)
  );
}


unpackTo(_o: clz_Torappu_VersusCheckInData_TasteRewardDataT): void {
  _o.tasteType = this.tasteType();
  _o.rewardItem = (this.rewardItem() !== null ? this.rewardItem()!.unpack() : null);
}
}

export class clz_Torappu_VersusCheckInData_TasteRewardDataT implements flatbuffers.IGeneratedObject {
constructor(
  public tasteType: enum__Torappu_VersusCheckInData_TasteType = enum__Torappu_VersusCheckInData_TasteType.DRAW,
  public rewardItem: clz_Torappu_ItemBundleT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const rewardItem = (this.rewardItem !== null ? this.rewardItem!.pack(builder) : 0);

  clz_Torappu_VersusCheckInData_TasteRewardData.startclz_Torappu_VersusCheckInData_TasteRewardData(builder);
  clz_Torappu_VersusCheckInData_TasteRewardData.addTasteType(builder, this.tasteType);
  clz_Torappu_VersusCheckInData_TasteRewardData.addRewardItem(builder, rewardItem);

  return clz_Torappu_VersusCheckInData_TasteRewardData.endclz_Torappu_VersusCheckInData_TasteRewardData(builder);
}
}
