// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT } from './clz-torappu-blackboard-data-pair.js';


export class clz_Torappu_SandboxV2RacingItemInfo implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxV2RacingItemInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxV2RacingItemInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxV2RacingItemInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2RacingItemInfo):clz_Torappu_SandboxV2RacingItemInfo {
  return (obj || new clz_Torappu_SandboxV2RacingItemInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxV2RacingItemInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2RacingItemInfo):clz_Torappu_SandboxV2RacingItemInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxV2RacingItemInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

racerItemId():string|null
racerItemId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
racerItemId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

iconId():string|null
iconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
iconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

blackboard(index: number, obj?:clz_Torappu_Blackboard_DataPair):clz_Torappu_Blackboard_DataPair|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_Torappu_Blackboard_DataPair()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

blackboardLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SandboxV2RacingItemInfo(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addRacerItemId(builder:flatbuffers.Builder, racerItemIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, racerItemIdOffset, 0);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nameOffset, 0);
}

static addIconId(builder:flatbuffers.Builder, iconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, iconIdOffset, 0);
}

static addBlackboard(builder:flatbuffers.Builder, blackboardOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, blackboardOffset, 0);
}

static createBlackboardVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBlackboardVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_SandboxV2RacingItemInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxV2RacingItemInfo(builder:flatbuffers.Builder, racerItemIdOffset:flatbuffers.Offset, nameOffset:flatbuffers.Offset, iconIdOffset:flatbuffers.Offset, blackboardOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SandboxV2RacingItemInfo.startclz_Torappu_SandboxV2RacingItemInfo(builder);
  clz_Torappu_SandboxV2RacingItemInfo.addRacerItemId(builder, racerItemIdOffset);
  clz_Torappu_SandboxV2RacingItemInfo.addName(builder, nameOffset);
  clz_Torappu_SandboxV2RacingItemInfo.addIconId(builder, iconIdOffset);
  clz_Torappu_SandboxV2RacingItemInfo.addBlackboard(builder, blackboardOffset);
  return clz_Torappu_SandboxV2RacingItemInfo.endclz_Torappu_SandboxV2RacingItemInfo(builder);
}

unpack(): clz_Torappu_SandboxV2RacingItemInfoT {
  return new clz_Torappu_SandboxV2RacingItemInfoT(
    this.racerItemId(),
    this.name(),
    this.iconId(),
    this.bb!.createObjList<clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT>(this.blackboard.bind(this), this.blackboardLength())
  );
}


unpackTo(_o: clz_Torappu_SandboxV2RacingItemInfoT): void {
  _o.racerItemId = this.racerItemId();
  _o.name = this.name();
  _o.iconId = this.iconId();
  _o.blackboard = this.bb!.createObjList<clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT>(this.blackboard.bind(this), this.blackboardLength());
}
}

export class clz_Torappu_SandboxV2RacingItemInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public racerItemId: string|Uint8Array|null = null,
  public name: string|Uint8Array|null = null,
  public iconId: string|Uint8Array|null = null,
  public blackboard: (clz_Torappu_Blackboard_DataPairT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const racerItemId = (this.racerItemId !== null ? builder.createString(this.racerItemId!) : 0);
  const name = (this.name !== null ? builder.createString(this.name!) : 0);
  const iconId = (this.iconId !== null ? builder.createString(this.iconId!) : 0);
  const blackboard = clz_Torappu_SandboxV2RacingItemInfo.createBlackboardVector(builder, builder.createObjectOffsetList(this.blackboard));

  return clz_Torappu_SandboxV2RacingItemInfo.createclz_Torappu_SandboxV2RacingItemInfo(builder,
    racerItemId,
    name,
    iconId,
    blackboard
  );
}
}
