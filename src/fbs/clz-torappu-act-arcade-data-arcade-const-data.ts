// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActArcadeData_ArcadeConstData implements flatbuffers.IUnpackableObject<clz_Torappu_ActArcadeData_ArcadeConstDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActArcadeData_ArcadeConstData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActArcadeData_ArcadeConstData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActArcadeData_ArcadeConstData):clz_Torappu_ActArcadeData_ArcadeConstData {
  return (obj || new clz_Torappu_ActArcadeData_ArcadeConstData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActArcadeData_ArcadeConstData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActArcadeData_ArcadeConstData):clz_Torappu_ActArcadeData_ArcadeConstData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActArcadeData_ArcadeConstData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

milestoneName():string|null
milestoneName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
milestoneName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

milestoneNameEn():string|null
milestoneNameEn(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
milestoneNameEn(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

milestoneItemId():string|null
milestoneItemId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
milestoneItemId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

rewardHomeThemeId():string|null
rewardHomeThemeId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
rewardHomeThemeId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

rewardHomeThemeText():string|null
rewardHomeThemeText(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
rewardHomeThemeText(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

rewardAvatarId():string|null
rewardAvatarId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
rewardAvatarId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

rewardAvatarText():string|null
rewardAvatarText(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
rewardAvatarText(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

badgeCollectionName():string|null
badgeCollectionName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
badgeCollectionName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

collectionEntryRelatedBadge():string|null
collectionEntryRelatedBadge(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
collectionEntryRelatedBadge(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

zoneEntryUnlockToast():string|null
zoneEntryUnlockToast(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
zoneEntryUnlockToast(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

zoneEntryEndText():string|null
zoneEntryEndText(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
zoneEntryEndText(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

zoneEntryEndToast():string|null
zoneEntryEndToast(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
zoneEntryEndToast(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

rankUnlockNextStage():string|null
rankUnlockNextStage(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
rankUnlockNextStage(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

stageScoreDisplayLimit():number {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

zoneUltiScoreDisplayLimit():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

enemyHudScore(index: number):string
enemyHudScore(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
enemyHudScore(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

enemyHudScoreLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

trapNotBuildableInRest(index: number):string
trapNotBuildableInRest(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
trapNotBuildableInRest(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

trapNotBuildableInRestLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_ActArcadeData_ArcadeConstData(builder:flatbuffers.Builder) {
  builder.startObject(17);
}

static addMilestoneName(builder:flatbuffers.Builder, milestoneNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, milestoneNameOffset, 0);
}

static addMilestoneNameEn(builder:flatbuffers.Builder, milestoneNameEnOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, milestoneNameEnOffset, 0);
}

static addMilestoneItemId(builder:flatbuffers.Builder, milestoneItemIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, milestoneItemIdOffset, 0);
}

static addRewardHomeThemeId(builder:flatbuffers.Builder, rewardHomeThemeIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, rewardHomeThemeIdOffset, 0);
}

static addRewardHomeThemeText(builder:flatbuffers.Builder, rewardHomeThemeTextOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, rewardHomeThemeTextOffset, 0);
}

static addRewardAvatarId(builder:flatbuffers.Builder, rewardAvatarIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, rewardAvatarIdOffset, 0);
}

static addRewardAvatarText(builder:flatbuffers.Builder, rewardAvatarTextOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, rewardAvatarTextOffset, 0);
}

static addBadgeCollectionName(builder:flatbuffers.Builder, badgeCollectionNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, badgeCollectionNameOffset, 0);
}

static addCollectionEntryRelatedBadge(builder:flatbuffers.Builder, collectionEntryRelatedBadgeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, collectionEntryRelatedBadgeOffset, 0);
}

static addZoneEntryUnlockToast(builder:flatbuffers.Builder, zoneEntryUnlockToastOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, zoneEntryUnlockToastOffset, 0);
}

static addZoneEntryEndText(builder:flatbuffers.Builder, zoneEntryEndTextOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, zoneEntryEndTextOffset, 0);
}

static addZoneEntryEndToast(builder:flatbuffers.Builder, zoneEntryEndToastOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, zoneEntryEndToastOffset, 0);
}

static addRankUnlockNextStage(builder:flatbuffers.Builder, rankUnlockNextStageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, rankUnlockNextStageOffset, 0);
}

static addStageScoreDisplayLimit(builder:flatbuffers.Builder, stageScoreDisplayLimit:number) {
  builder.addFieldInt32(13, stageScoreDisplayLimit, 0);
}

static addZoneUltiScoreDisplayLimit(builder:flatbuffers.Builder, zoneUltiScoreDisplayLimit:number) {
  builder.addFieldInt32(14, zoneUltiScoreDisplayLimit, 0);
}

static addEnemyHudScore(builder:flatbuffers.Builder, enemyHudScoreOffset:flatbuffers.Offset) {
  builder.addFieldOffset(15, enemyHudScoreOffset, 0);
}

static createEnemyHudScoreVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEnemyHudScoreVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTrapNotBuildableInRest(builder:flatbuffers.Builder, trapNotBuildableInRestOffset:flatbuffers.Offset) {
  builder.addFieldOffset(16, trapNotBuildableInRestOffset, 0);
}

static createTrapNotBuildableInRestVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTrapNotBuildableInRestVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_ActArcadeData_ArcadeConstData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActArcadeData_ArcadeConstData(builder:flatbuffers.Builder, milestoneNameOffset:flatbuffers.Offset, milestoneNameEnOffset:flatbuffers.Offset, milestoneItemIdOffset:flatbuffers.Offset, rewardHomeThemeIdOffset:flatbuffers.Offset, rewardHomeThemeTextOffset:flatbuffers.Offset, rewardAvatarIdOffset:flatbuffers.Offset, rewardAvatarTextOffset:flatbuffers.Offset, badgeCollectionNameOffset:flatbuffers.Offset, collectionEntryRelatedBadgeOffset:flatbuffers.Offset, zoneEntryUnlockToastOffset:flatbuffers.Offset, zoneEntryEndTextOffset:flatbuffers.Offset, zoneEntryEndToastOffset:flatbuffers.Offset, rankUnlockNextStageOffset:flatbuffers.Offset, stageScoreDisplayLimit:number, zoneUltiScoreDisplayLimit:number, enemyHudScoreOffset:flatbuffers.Offset, trapNotBuildableInRestOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActArcadeData_ArcadeConstData.startclz_Torappu_ActArcadeData_ArcadeConstData(builder);
  clz_Torappu_ActArcadeData_ArcadeConstData.addMilestoneName(builder, milestoneNameOffset);
  clz_Torappu_ActArcadeData_ArcadeConstData.addMilestoneNameEn(builder, milestoneNameEnOffset);
  clz_Torappu_ActArcadeData_ArcadeConstData.addMilestoneItemId(builder, milestoneItemIdOffset);
  clz_Torappu_ActArcadeData_ArcadeConstData.addRewardHomeThemeId(builder, rewardHomeThemeIdOffset);
  clz_Torappu_ActArcadeData_ArcadeConstData.addRewardHomeThemeText(builder, rewardHomeThemeTextOffset);
  clz_Torappu_ActArcadeData_ArcadeConstData.addRewardAvatarId(builder, rewardAvatarIdOffset);
  clz_Torappu_ActArcadeData_ArcadeConstData.addRewardAvatarText(builder, rewardAvatarTextOffset);
  clz_Torappu_ActArcadeData_ArcadeConstData.addBadgeCollectionName(builder, badgeCollectionNameOffset);
  clz_Torappu_ActArcadeData_ArcadeConstData.addCollectionEntryRelatedBadge(builder, collectionEntryRelatedBadgeOffset);
  clz_Torappu_ActArcadeData_ArcadeConstData.addZoneEntryUnlockToast(builder, zoneEntryUnlockToastOffset);
  clz_Torappu_ActArcadeData_ArcadeConstData.addZoneEntryEndText(builder, zoneEntryEndTextOffset);
  clz_Torappu_ActArcadeData_ArcadeConstData.addZoneEntryEndToast(builder, zoneEntryEndToastOffset);
  clz_Torappu_ActArcadeData_ArcadeConstData.addRankUnlockNextStage(builder, rankUnlockNextStageOffset);
  clz_Torappu_ActArcadeData_ArcadeConstData.addStageScoreDisplayLimit(builder, stageScoreDisplayLimit);
  clz_Torappu_ActArcadeData_ArcadeConstData.addZoneUltiScoreDisplayLimit(builder, zoneUltiScoreDisplayLimit);
  clz_Torappu_ActArcadeData_ArcadeConstData.addEnemyHudScore(builder, enemyHudScoreOffset);
  clz_Torappu_ActArcadeData_ArcadeConstData.addTrapNotBuildableInRest(builder, trapNotBuildableInRestOffset);
  return clz_Torappu_ActArcadeData_ArcadeConstData.endclz_Torappu_ActArcadeData_ArcadeConstData(builder);
}

unpack(): clz_Torappu_ActArcadeData_ArcadeConstDataT {
  return new clz_Torappu_ActArcadeData_ArcadeConstDataT(
    this.milestoneName(),
    this.milestoneNameEn(),
    this.milestoneItemId(),
    this.rewardHomeThemeId(),
    this.rewardHomeThemeText(),
    this.rewardAvatarId(),
    this.rewardAvatarText(),
    this.badgeCollectionName(),
    this.collectionEntryRelatedBadge(),
    this.zoneEntryUnlockToast(),
    this.zoneEntryEndText(),
    this.zoneEntryEndToast(),
    this.rankUnlockNextStage(),
    this.stageScoreDisplayLimit(),
    this.zoneUltiScoreDisplayLimit(),
    this.bb!.createScalarList<string>(this.enemyHudScore.bind(this), this.enemyHudScoreLength()),
    this.bb!.createScalarList<string>(this.trapNotBuildableInRest.bind(this), this.trapNotBuildableInRestLength())
  );
}


unpackTo(_o: clz_Torappu_ActArcadeData_ArcadeConstDataT): void {
  _o.milestoneName = this.milestoneName();
  _o.milestoneNameEn = this.milestoneNameEn();
  _o.milestoneItemId = this.milestoneItemId();
  _o.rewardHomeThemeId = this.rewardHomeThemeId();
  _o.rewardHomeThemeText = this.rewardHomeThemeText();
  _o.rewardAvatarId = this.rewardAvatarId();
  _o.rewardAvatarText = this.rewardAvatarText();
  _o.badgeCollectionName = this.badgeCollectionName();
  _o.collectionEntryRelatedBadge = this.collectionEntryRelatedBadge();
  _o.zoneEntryUnlockToast = this.zoneEntryUnlockToast();
  _o.zoneEntryEndText = this.zoneEntryEndText();
  _o.zoneEntryEndToast = this.zoneEntryEndToast();
  _o.rankUnlockNextStage = this.rankUnlockNextStage();
  _o.stageScoreDisplayLimit = this.stageScoreDisplayLimit();
  _o.zoneUltiScoreDisplayLimit = this.zoneUltiScoreDisplayLimit();
  _o.enemyHudScore = this.bb!.createScalarList<string>(this.enemyHudScore.bind(this), this.enemyHudScoreLength());
  _o.trapNotBuildableInRest = this.bb!.createScalarList<string>(this.trapNotBuildableInRest.bind(this), this.trapNotBuildableInRestLength());
}
}

export class clz_Torappu_ActArcadeData_ArcadeConstDataT implements flatbuffers.IGeneratedObject {
constructor(
  public milestoneName: string|Uint8Array|null = null,
  public milestoneNameEn: string|Uint8Array|null = null,
  public milestoneItemId: string|Uint8Array|null = null,
  public rewardHomeThemeId: string|Uint8Array|null = null,
  public rewardHomeThemeText: string|Uint8Array|null = null,
  public rewardAvatarId: string|Uint8Array|null = null,
  public rewardAvatarText: string|Uint8Array|null = null,
  public badgeCollectionName: string|Uint8Array|null = null,
  public collectionEntryRelatedBadge: string|Uint8Array|null = null,
  public zoneEntryUnlockToast: string|Uint8Array|null = null,
  public zoneEntryEndText: string|Uint8Array|null = null,
  public zoneEntryEndToast: string|Uint8Array|null = null,
  public rankUnlockNextStage: string|Uint8Array|null = null,
  public stageScoreDisplayLimit: number = 0,
  public zoneUltiScoreDisplayLimit: number = 0,
  public enemyHudScore: (string)[] = [],
  public trapNotBuildableInRest: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const milestoneName = (this.milestoneName !== null ? builder.createString(this.milestoneName!) : 0);
  const milestoneNameEn = (this.milestoneNameEn !== null ? builder.createString(this.milestoneNameEn!) : 0);
  const milestoneItemId = (this.milestoneItemId !== null ? builder.createString(this.milestoneItemId!) : 0);
  const rewardHomeThemeId = (this.rewardHomeThemeId !== null ? builder.createString(this.rewardHomeThemeId!) : 0);
  const rewardHomeThemeText = (this.rewardHomeThemeText !== null ? builder.createString(this.rewardHomeThemeText!) : 0);
  const rewardAvatarId = (this.rewardAvatarId !== null ? builder.createString(this.rewardAvatarId!) : 0);
  const rewardAvatarText = (this.rewardAvatarText !== null ? builder.createString(this.rewardAvatarText!) : 0);
  const badgeCollectionName = (this.badgeCollectionName !== null ? builder.createString(this.badgeCollectionName!) : 0);
  const collectionEntryRelatedBadge = (this.collectionEntryRelatedBadge !== null ? builder.createString(this.collectionEntryRelatedBadge!) : 0);
  const zoneEntryUnlockToast = (this.zoneEntryUnlockToast !== null ? builder.createString(this.zoneEntryUnlockToast!) : 0);
  const zoneEntryEndText = (this.zoneEntryEndText !== null ? builder.createString(this.zoneEntryEndText!) : 0);
  const zoneEntryEndToast = (this.zoneEntryEndToast !== null ? builder.createString(this.zoneEntryEndToast!) : 0);
  const rankUnlockNextStage = (this.rankUnlockNextStage !== null ? builder.createString(this.rankUnlockNextStage!) : 0);
  const enemyHudScore = clz_Torappu_ActArcadeData_ArcadeConstData.createEnemyHudScoreVector(builder, builder.createObjectOffsetList(this.enemyHudScore));
  const trapNotBuildableInRest = clz_Torappu_ActArcadeData_ArcadeConstData.createTrapNotBuildableInRestVector(builder, builder.createObjectOffsetList(this.trapNotBuildableInRest));

  return clz_Torappu_ActArcadeData_ArcadeConstData.createclz_Torappu_ActArcadeData_ArcadeConstData(builder,
    milestoneName,
    milestoneNameEn,
    milestoneItemId,
    rewardHomeThemeId,
    rewardHomeThemeText,
    rewardAvatarId,
    rewardAvatarText,
    badgeCollectionName,
    collectionEntryRelatedBadge,
    zoneEntryUnlockToast,
    zoneEntryEndText,
    zoneEntryEndToast,
    rankUnlockNextStage,
    this.stageScoreDisplayLimit,
    this.zoneUltiScoreDisplayLimit,
    enemyHudScore,
    trapNotBuildableInRest
  );
}
}
