// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SubProfessionData implements flatbuffers.IUnpackableObject<clz_Torappu_SubProfessionDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SubProfessionData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SubProfessionData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SubProfessionData):clz_Torappu_SubProfessionData {
  return (obj || new clz_Torappu_SubProfessionData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SubProfessionData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SubProfessionData):clz_Torappu_SubProfessionData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SubProfessionData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

subProfessionId():string|null
subProfessionId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
subProfessionId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

subProfessionName():string|null
subProfessionName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
subProfessionName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

subProfessionCatagory():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SubProfessionData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addSubProfessionId(builder:flatbuffers.Builder, subProfessionIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, subProfessionIdOffset, 0);
}

static addSubProfessionName(builder:flatbuffers.Builder, subProfessionNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, subProfessionNameOffset, 0);
}

static addSubProfessionCatagory(builder:flatbuffers.Builder, subProfessionCatagory:number) {
  builder.addFieldInt32(2, subProfessionCatagory, 0);
}

static endclz_Torappu_SubProfessionData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SubProfessionData(builder:flatbuffers.Builder, subProfessionIdOffset:flatbuffers.Offset, subProfessionNameOffset:flatbuffers.Offset, subProfessionCatagory:number):flatbuffers.Offset {
  clz_Torappu_SubProfessionData.startclz_Torappu_SubProfessionData(builder);
  clz_Torappu_SubProfessionData.addSubProfessionId(builder, subProfessionIdOffset);
  clz_Torappu_SubProfessionData.addSubProfessionName(builder, subProfessionNameOffset);
  clz_Torappu_SubProfessionData.addSubProfessionCatagory(builder, subProfessionCatagory);
  return clz_Torappu_SubProfessionData.endclz_Torappu_SubProfessionData(builder);
}

unpack(): clz_Torappu_SubProfessionDataT {
  return new clz_Torappu_SubProfessionDataT(
    this.subProfessionId(),
    this.subProfessionName(),
    this.subProfessionCatagory()
  );
}


unpackTo(_o: clz_Torappu_SubProfessionDataT): void {
  _o.subProfessionId = this.subProfessionId();
  _o.subProfessionName = this.subProfessionName();
  _o.subProfessionCatagory = this.subProfessionCatagory();
}
}

export class clz_Torappu_SubProfessionDataT implements flatbuffers.IGeneratedObject {
constructor(
  public subProfessionId: string|Uint8Array|null = null,
  public subProfessionName: string|Uint8Array|null = null,
  public subProfessionCatagory: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const subProfessionId = (this.subProfessionId !== null ? builder.createString(this.subProfessionId!) : 0);
  const subProfessionName = (this.subProfessionName !== null ? builder.createString(this.subProfessionName!) : 0);

  return clz_Torappu_SubProfessionData.createclz_Torappu_SubProfessionData(builder,
    subProfessionId,
    subProfessionName,
    this.subProfessionCatagory
  );
}
}
