// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_RoguelikeTopicMode } from './enum--torappu-roguelike-topic-mode.js';


export class clz_Torappu_RL05DifficultyExt implements flatbuffers.IUnpackableObject<clz_Torappu_RL05DifficultyExtT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RL05DifficultyExt {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RL05DifficultyExt(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RL05DifficultyExt):clz_Torappu_RL05DifficultyExt {
  return (obj || new clz_Torappu_RL05DifficultyExt()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RL05DifficultyExt(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RL05DifficultyExt):clz_Torappu_RL05DifficultyExt {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RL05DifficultyExt()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

modeDifficulty():enum__Torappu_RoguelikeTopicMode {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_RoguelikeTopicMode.NONE;
}

grade():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

buffs(index: number):string
buffs(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
buffs(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

buffsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

buffDesc(index: number):string
buffDesc(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
buffDesc(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

buffDescLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

leftWrathDesc():string|null
leftWrathDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
leftWrathDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

relicDevLevel():string|null
relicDevLevel(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
relicDevLevel(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

gildProbDisplay():string|null
gildProbDisplay(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
gildProbDisplay(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

skyStepDescription():string|null
skyStepDescription(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
skyStepDescription(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_RL05DifficultyExt(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addModeDifficulty(builder:flatbuffers.Builder, modeDifficulty:enum__Torappu_RoguelikeTopicMode) {
  builder.addFieldInt32(0, modeDifficulty, enum__Torappu_RoguelikeTopicMode.NONE);
}

static addGrade(builder:flatbuffers.Builder, grade:number) {
  builder.addFieldInt32(1, grade, 0);
}

static addBuffs(builder:flatbuffers.Builder, buffsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, buffsOffset, 0);
}

static createBuffsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBuffsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBuffDesc(builder:flatbuffers.Builder, buffDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, buffDescOffset, 0);
}

static createBuffDescVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBuffDescVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addLeftWrathDesc(builder:flatbuffers.Builder, leftWrathDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, leftWrathDescOffset, 0);
}

static addRelicDevLevel(builder:flatbuffers.Builder, relicDevLevelOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, relicDevLevelOffset, 0);
}

static addGildProbDisplay(builder:flatbuffers.Builder, gildProbDisplayOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, gildProbDisplayOffset, 0);
}

static addSkyStepDescription(builder:flatbuffers.Builder, skyStepDescriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, skyStepDescriptionOffset, 0);
}

static endclz_Torappu_RL05DifficultyExt(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_RL05DifficultyExt(builder:flatbuffers.Builder, modeDifficulty:enum__Torappu_RoguelikeTopicMode, grade:number, buffsOffset:flatbuffers.Offset, buffDescOffset:flatbuffers.Offset, leftWrathDescOffset:flatbuffers.Offset, relicDevLevelOffset:flatbuffers.Offset, gildProbDisplayOffset:flatbuffers.Offset, skyStepDescriptionOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_RL05DifficultyExt.startclz_Torappu_RL05DifficultyExt(builder);
  clz_Torappu_RL05DifficultyExt.addModeDifficulty(builder, modeDifficulty);
  clz_Torappu_RL05DifficultyExt.addGrade(builder, grade);
  clz_Torappu_RL05DifficultyExt.addBuffs(builder, buffsOffset);
  clz_Torappu_RL05DifficultyExt.addBuffDesc(builder, buffDescOffset);
  clz_Torappu_RL05DifficultyExt.addLeftWrathDesc(builder, leftWrathDescOffset);
  clz_Torappu_RL05DifficultyExt.addRelicDevLevel(builder, relicDevLevelOffset);
  clz_Torappu_RL05DifficultyExt.addGildProbDisplay(builder, gildProbDisplayOffset);
  clz_Torappu_RL05DifficultyExt.addSkyStepDescription(builder, skyStepDescriptionOffset);
  return clz_Torappu_RL05DifficultyExt.endclz_Torappu_RL05DifficultyExt(builder);
}

unpack(): clz_Torappu_RL05DifficultyExtT {
  return new clz_Torappu_RL05DifficultyExtT(
    this.modeDifficulty(),
    this.grade(),
    this.bb!.createScalarList<string>(this.buffs.bind(this), this.buffsLength()),
    this.bb!.createScalarList<string>(this.buffDesc.bind(this), this.buffDescLength()),
    this.leftWrathDesc(),
    this.relicDevLevel(),
    this.gildProbDisplay(),
    this.skyStepDescription()
  );
}


unpackTo(_o: clz_Torappu_RL05DifficultyExtT): void {
  _o.modeDifficulty = this.modeDifficulty();
  _o.grade = this.grade();
  _o.buffs = this.bb!.createScalarList<string>(this.buffs.bind(this), this.buffsLength());
  _o.buffDesc = this.bb!.createScalarList<string>(this.buffDesc.bind(this), this.buffDescLength());
  _o.leftWrathDesc = this.leftWrathDesc();
  _o.relicDevLevel = this.relicDevLevel();
  _o.gildProbDisplay = this.gildProbDisplay();
  _o.skyStepDescription = this.skyStepDescription();
}
}

export class clz_Torappu_RL05DifficultyExtT implements flatbuffers.IGeneratedObject {
constructor(
  public modeDifficulty: enum__Torappu_RoguelikeTopicMode = enum__Torappu_RoguelikeTopicMode.NONE,
  public grade: number = 0,
  public buffs: (string)[] = [],
  public buffDesc: (string)[] = [],
  public leftWrathDesc: string|Uint8Array|null = null,
  public relicDevLevel: string|Uint8Array|null = null,
  public gildProbDisplay: string|Uint8Array|null = null,
  public skyStepDescription: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const buffs = clz_Torappu_RL05DifficultyExt.createBuffsVector(builder, builder.createObjectOffsetList(this.buffs));
  const buffDesc = clz_Torappu_RL05DifficultyExt.createBuffDescVector(builder, builder.createObjectOffsetList(this.buffDesc));
  const leftWrathDesc = (this.leftWrathDesc !== null ? builder.createString(this.leftWrathDesc!) : 0);
  const relicDevLevel = (this.relicDevLevel !== null ? builder.createString(this.relicDevLevel!) : 0);
  const gildProbDisplay = (this.gildProbDisplay !== null ? builder.createString(this.gildProbDisplay!) : 0);
  const skyStepDescription = (this.skyStepDescription !== null ? builder.createString(this.skyStepDescription!) : 0);

  return clz_Torappu_RL05DifficultyExt.createclz_Torappu_RL05DifficultyExt(builder,
    this.modeDifficulty,
    this.grade,
    buffs,
    buffDesc,
    leftWrathDesc,
    relicDevLevel,
    gildProbDisplay,
    skyStepDescription
  );
}
}
