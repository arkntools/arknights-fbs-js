// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_AutoChessData_AutoChessBandData implements flatbuffers.IUnpackableObject<clz_Torappu_AutoChessData_AutoChessBandDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_AutoChessData_AutoChessBandData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_AutoChessData_AutoChessBandData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_AutoChessData_AutoChessBandData):clz_Torappu_AutoChessData_AutoChessBandData {
  return (obj || new clz_Torappu_AutoChessData_AutoChessBandData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_AutoChessData_AutoChessBandData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_AutoChessData_AutoChessBandData):clz_Torappu_AutoChessData_AutoChessBandData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_AutoChessData_AutoChessBandData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

bandId():string|null
bandId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
bandId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

bandName():string|null
bandName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
bandName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

bandIconId():string|null
bandIconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
bandIconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

unlockDesc():string|null
unlockDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
unlockDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_AutoChessData_AutoChessBandData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addBandId(builder:flatbuffers.Builder, bandIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, bandIdOffset, 0);
}

static addBandName(builder:flatbuffers.Builder, bandNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, bandNameOffset, 0);
}

static addBandIconId(builder:flatbuffers.Builder, bandIconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, bandIconIdOffset, 0);
}

static addUnlockDesc(builder:flatbuffers.Builder, unlockDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, unlockDescOffset, 0);
}

static endclz_Torappu_AutoChessData_AutoChessBandData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_AutoChessData_AutoChessBandData(builder:flatbuffers.Builder, bandIdOffset:flatbuffers.Offset, bandNameOffset:flatbuffers.Offset, bandIconIdOffset:flatbuffers.Offset, unlockDescOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_AutoChessData_AutoChessBandData.startclz_Torappu_AutoChessData_AutoChessBandData(builder);
  clz_Torappu_AutoChessData_AutoChessBandData.addBandId(builder, bandIdOffset);
  clz_Torappu_AutoChessData_AutoChessBandData.addBandName(builder, bandNameOffset);
  clz_Torappu_AutoChessData_AutoChessBandData.addBandIconId(builder, bandIconIdOffset);
  clz_Torappu_AutoChessData_AutoChessBandData.addUnlockDesc(builder, unlockDescOffset);
  return clz_Torappu_AutoChessData_AutoChessBandData.endclz_Torappu_AutoChessData_AutoChessBandData(builder);
}

unpack(): clz_Torappu_AutoChessData_AutoChessBandDataT {
  return new clz_Torappu_AutoChessData_AutoChessBandDataT(
    this.bandId(),
    this.bandName(),
    this.bandIconId(),
    this.unlockDesc()
  );
}


unpackTo(_o: clz_Torappu_AutoChessData_AutoChessBandDataT): void {
  _o.bandId = this.bandId();
  _o.bandName = this.bandName();
  _o.bandIconId = this.bandIconId();
  _o.unlockDesc = this.unlockDesc();
}
}

export class clz_Torappu_AutoChessData_AutoChessBandDataT implements flatbuffers.IGeneratedObject {
constructor(
  public bandId: string|Uint8Array|null = null,
  public bandName: string|Uint8Array|null = null,
  public bandIconId: string|Uint8Array|null = null,
  public unlockDesc: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const bandId = (this.bandId !== null ? builder.createString(this.bandId!) : 0);
  const bandName = (this.bandName !== null ? builder.createString(this.bandName!) : 0);
  const bandIconId = (this.bandIconId !== null ? builder.createString(this.bandIconId!) : 0);
  const unlockDesc = (this.unlockDesc !== null ? builder.createString(this.unlockDesc!) : 0);

  return clz_Torappu_AutoChessData_AutoChessBandData.createclz_Torappu_AutoChessData_AutoChessBandData(builder,
    bandId,
    bandName,
    bandIconId,
    unlockDesc
  );
}
}
