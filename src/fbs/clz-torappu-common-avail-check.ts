// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_CharUnlockParam, clz_Torappu_CharUnlockParamT } from './clz-torappu-char-unlock-param.js';
import { clz_Torappu_StageUnlockParam, clz_Torappu_StageUnlockParamT } from './clz-torappu-stage-unlock-param.js';
import { enum__Torappu_CommonUnlockType } from './enum--torappu-common-unlock-type.js';


export class clz_Torappu_CommonAvailCheck implements flatbuffers.IUnpackableObject<clz_Torappu_CommonAvailCheckT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_CommonAvailCheck {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_CommonAvailCheck(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CommonAvailCheck):clz_Torappu_CommonAvailCheck {
  return (obj || new clz_Torappu_CommonAvailCheck()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_CommonAvailCheck(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CommonAvailCheck):clz_Torappu_CommonAvailCheck {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_CommonAvailCheck()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

startTs():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

endTs():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

type():enum__Torappu_CommonUnlockType {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_CommonUnlockType.STAGECLEAR;
}

rate():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

stageUnlockParam(obj?:clz_Torappu_StageUnlockParam):clz_Torappu_StageUnlockParam|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new clz_Torappu_StageUnlockParam()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

charUnlockParam(obj?:clz_Torappu_CharUnlockParam):clz_Torappu_CharUnlockParam|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new clz_Torappu_CharUnlockParam()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startclz_Torappu_CommonAvailCheck(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addStartTs(builder:flatbuffers.Builder, startTs:bigint) {
  builder.addFieldInt64(0, startTs, BigInt('0'));
}

static addEndTs(builder:flatbuffers.Builder, endTs:bigint) {
  builder.addFieldInt64(1, endTs, BigInt('0'));
}

static addType(builder:flatbuffers.Builder, type:enum__Torappu_CommonUnlockType) {
  builder.addFieldInt32(2, type, enum__Torappu_CommonUnlockType.STAGECLEAR);
}

static addRate(builder:flatbuffers.Builder, rate:number) {
  builder.addFieldFloat32(3, rate, 0.0);
}

static addStageUnlockParam(builder:flatbuffers.Builder, stageUnlockParamOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, stageUnlockParamOffset, 0);
}

static addCharUnlockParam(builder:flatbuffers.Builder, charUnlockParamOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, charUnlockParamOffset, 0);
}

static endclz_Torappu_CommonAvailCheck(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_CommonAvailCheckT {
  return new clz_Torappu_CommonAvailCheckT(
    this.startTs(),
    this.endTs(),
    this.type(),
    this.rate(),
    (this.stageUnlockParam() !== null ? this.stageUnlockParam()!.unpack() : null),
    (this.charUnlockParam() !== null ? this.charUnlockParam()!.unpack() : null)
  );
}


unpackTo(_o: clz_Torappu_CommonAvailCheckT): void {
  _o.startTs = this.startTs();
  _o.endTs = this.endTs();
  _o.type = this.type();
  _o.rate = this.rate();
  _o.stageUnlockParam = (this.stageUnlockParam() !== null ? this.stageUnlockParam()!.unpack() : null);
  _o.charUnlockParam = (this.charUnlockParam() !== null ? this.charUnlockParam()!.unpack() : null);
}
}

export class clz_Torappu_CommonAvailCheckT implements flatbuffers.IGeneratedObject {
constructor(
  public startTs: bigint = BigInt('0'),
  public endTs: bigint = BigInt('0'),
  public type: enum__Torappu_CommonUnlockType = enum__Torappu_CommonUnlockType.STAGECLEAR,
  public rate: number = 0.0,
  public stageUnlockParam: clz_Torappu_StageUnlockParamT|null = null,
  public charUnlockParam: clz_Torappu_CharUnlockParamT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const stageUnlockParam = (this.stageUnlockParam !== null ? this.stageUnlockParam!.pack(builder) : 0);
  const charUnlockParam = (this.charUnlockParam !== null ? this.charUnlockParam!.pack(builder) : 0);

  clz_Torappu_CommonAvailCheck.startclz_Torappu_CommonAvailCheck(builder);
  clz_Torappu_CommonAvailCheck.addStartTs(builder, this.startTs);
  clz_Torappu_CommonAvailCheck.addEndTs(builder, this.endTs);
  clz_Torappu_CommonAvailCheck.addType(builder, this.type);
  clz_Torappu_CommonAvailCheck.addRate(builder, this.rate);
  clz_Torappu_CommonAvailCheck.addStageUnlockParam(builder, stageUnlockParam);
  clz_Torappu_CommonAvailCheck.addCharUnlockParam(builder, charUnlockParam);

  return clz_Torappu_CommonAvailCheck.endclz_Torappu_CommonAvailCheck(builder);
}
}
