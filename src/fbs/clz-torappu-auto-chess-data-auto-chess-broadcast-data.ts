// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_AutoChessBroadcastType } from './enum--torappu-auto-chess-broadcast-type.js';


export class clz_Torappu_AutoChessData_AutoChessBroadcastData implements flatbuffers.IUnpackableObject<clz_Torappu_AutoChessData_AutoChessBroadcastDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_AutoChessData_AutoChessBroadcastData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_AutoChessData_AutoChessBroadcastData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_AutoChessData_AutoChessBroadcastData):clz_Torappu_AutoChessData_AutoChessBroadcastData {
  return (obj || new clz_Torappu_AutoChessData_AutoChessBroadcastData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_AutoChessData_AutoChessBroadcastData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_AutoChessData_AutoChessBroadcastData):clz_Torappu_AutoChessData_AutoChessBroadcastData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_AutoChessData_AutoChessBroadcastData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

desc():string|null
desc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
desc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

priority():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

type():enum__Torappu_AutoChessBroadcastType {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_AutoChessBroadcastType.NONE;
}

paramList(index: number):string
paramList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
paramList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

paramListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_AutoChessData_AutoChessBroadcastData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addDesc(builder:flatbuffers.Builder, descOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, descOffset, 0);
}

static addPriority(builder:flatbuffers.Builder, priority:number) {
  builder.addFieldInt32(2, priority, 0);
}

static addType(builder:flatbuffers.Builder, type:enum__Torappu_AutoChessBroadcastType) {
  builder.addFieldInt32(3, type, enum__Torappu_AutoChessBroadcastType.NONE);
}

static addParamList(builder:flatbuffers.Builder, paramListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, paramListOffset, 0);
}

static createParamListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startParamListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_AutoChessData_AutoChessBroadcastData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_AutoChessData_AutoChessBroadcastData(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset, descOffset:flatbuffers.Offset, priority:number, type:enum__Torappu_AutoChessBroadcastType, paramListOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_AutoChessData_AutoChessBroadcastData.startclz_Torappu_AutoChessData_AutoChessBroadcastData(builder);
  clz_Torappu_AutoChessData_AutoChessBroadcastData.addId(builder, idOffset);
  clz_Torappu_AutoChessData_AutoChessBroadcastData.addDesc(builder, descOffset);
  clz_Torappu_AutoChessData_AutoChessBroadcastData.addPriority(builder, priority);
  clz_Torappu_AutoChessData_AutoChessBroadcastData.addType(builder, type);
  clz_Torappu_AutoChessData_AutoChessBroadcastData.addParamList(builder, paramListOffset);
  return clz_Torappu_AutoChessData_AutoChessBroadcastData.endclz_Torappu_AutoChessData_AutoChessBroadcastData(builder);
}

unpack(): clz_Torappu_AutoChessData_AutoChessBroadcastDataT {
  return new clz_Torappu_AutoChessData_AutoChessBroadcastDataT(
    this.id(),
    this.desc(),
    this.priority(),
    this.type(),
    this.bb!.createScalarList<string>(this.paramList.bind(this), this.paramListLength())
  );
}


unpackTo(_o: clz_Torappu_AutoChessData_AutoChessBroadcastDataT): void {
  _o.id = this.id();
  _o.desc = this.desc();
  _o.priority = this.priority();
  _o.type = this.type();
  _o.paramList = this.bb!.createScalarList<string>(this.paramList.bind(this), this.paramListLength());
}
}

export class clz_Torappu_AutoChessData_AutoChessBroadcastDataT implements flatbuffers.IGeneratedObject {
constructor(
  public id: string|Uint8Array|null = null,
  public desc: string|Uint8Array|null = null,
  public priority: number = 0,
  public type: enum__Torappu_AutoChessBroadcastType = enum__Torappu_AutoChessBroadcastType.NONE,
  public paramList: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const id = (this.id !== null ? builder.createString(this.id!) : 0);
  const desc = (this.desc !== null ? builder.createString(this.desc!) : 0);
  const paramList = clz_Torappu_AutoChessData_AutoChessBroadcastData.createParamListVector(builder, builder.createObjectOffsetList(this.paramList));

  return clz_Torappu_AutoChessData_AutoChessBroadcastData.createclz_Torappu_AutoChessData_AutoChessBroadcastData(builder,
    id,
    desc,
    this.priority,
    this.type,
    paramList
  );
}
}
