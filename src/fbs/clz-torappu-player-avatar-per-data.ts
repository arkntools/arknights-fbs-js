// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_PlayerAvatarGroupType } from './enum--torappu-player-avatar-group-type.js';


export class clz_Torappu_PlayerAvatarPerData implements flatbuffers.IUnpackableObject<clz_Torappu_PlayerAvatarPerDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_PlayerAvatarPerData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_PlayerAvatarPerData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_PlayerAvatarPerData):clz_Torappu_PlayerAvatarPerData {
  return (obj || new clz_Torappu_PlayerAvatarPerData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_PlayerAvatarPerData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_PlayerAvatarPerData):clz_Torappu_PlayerAvatarPerData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_PlayerAvatarPerData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

avatarId():string|null
avatarId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
avatarId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

avatarType():enum__Torappu_PlayerAvatarGroupType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_PlayerAvatarGroupType.NONE;
}

avatarIdSort():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

avatarIdDesc():string|null
avatarIdDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
avatarIdDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

avatarItemName():string|null
avatarItemName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
avatarItemName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

avatarItemDesc():string|null
avatarItemDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
avatarItemDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

avatarItemUsage():string|null
avatarItemUsage(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
avatarItemUsage(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

obtainApproach():string|null
obtainApproach(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
obtainApproach(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

dynAvatarId():string|null
dynAvatarId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
dynAvatarId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_PlayerAvatarPerData(builder:flatbuffers.Builder) {
  builder.startObject(9);
}

static addAvatarId(builder:flatbuffers.Builder, avatarIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, avatarIdOffset, 0);
}

static addAvatarType(builder:flatbuffers.Builder, avatarType:enum__Torappu_PlayerAvatarGroupType) {
  builder.addFieldInt32(1, avatarType, enum__Torappu_PlayerAvatarGroupType.NONE);
}

static addAvatarIdSort(builder:flatbuffers.Builder, avatarIdSort:number) {
  builder.addFieldInt32(2, avatarIdSort, 0);
}

static addAvatarIdDesc(builder:flatbuffers.Builder, avatarIdDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, avatarIdDescOffset, 0);
}

static addAvatarItemName(builder:flatbuffers.Builder, avatarItemNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, avatarItemNameOffset, 0);
}

static addAvatarItemDesc(builder:flatbuffers.Builder, avatarItemDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, avatarItemDescOffset, 0);
}

static addAvatarItemUsage(builder:flatbuffers.Builder, avatarItemUsageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, avatarItemUsageOffset, 0);
}

static addObtainApproach(builder:flatbuffers.Builder, obtainApproachOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, obtainApproachOffset, 0);
}

static addDynAvatarId(builder:flatbuffers.Builder, dynAvatarIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, dynAvatarIdOffset, 0);
}

static endclz_Torappu_PlayerAvatarPerData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_PlayerAvatarPerData(builder:flatbuffers.Builder, avatarIdOffset:flatbuffers.Offset, avatarType:enum__Torappu_PlayerAvatarGroupType, avatarIdSort:number, avatarIdDescOffset:flatbuffers.Offset, avatarItemNameOffset:flatbuffers.Offset, avatarItemDescOffset:flatbuffers.Offset, avatarItemUsageOffset:flatbuffers.Offset, obtainApproachOffset:flatbuffers.Offset, dynAvatarIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_PlayerAvatarPerData.startclz_Torappu_PlayerAvatarPerData(builder);
  clz_Torappu_PlayerAvatarPerData.addAvatarId(builder, avatarIdOffset);
  clz_Torappu_PlayerAvatarPerData.addAvatarType(builder, avatarType);
  clz_Torappu_PlayerAvatarPerData.addAvatarIdSort(builder, avatarIdSort);
  clz_Torappu_PlayerAvatarPerData.addAvatarIdDesc(builder, avatarIdDescOffset);
  clz_Torappu_PlayerAvatarPerData.addAvatarItemName(builder, avatarItemNameOffset);
  clz_Torappu_PlayerAvatarPerData.addAvatarItemDesc(builder, avatarItemDescOffset);
  clz_Torappu_PlayerAvatarPerData.addAvatarItemUsage(builder, avatarItemUsageOffset);
  clz_Torappu_PlayerAvatarPerData.addObtainApproach(builder, obtainApproachOffset);
  clz_Torappu_PlayerAvatarPerData.addDynAvatarId(builder, dynAvatarIdOffset);
  return clz_Torappu_PlayerAvatarPerData.endclz_Torappu_PlayerAvatarPerData(builder);
}

unpack(): clz_Torappu_PlayerAvatarPerDataT {
  return new clz_Torappu_PlayerAvatarPerDataT(
    this.avatarId(),
    this.avatarType(),
    this.avatarIdSort(),
    this.avatarIdDesc(),
    this.avatarItemName(),
    this.avatarItemDesc(),
    this.avatarItemUsage(),
    this.obtainApproach(),
    this.dynAvatarId()
  );
}


unpackTo(_o: clz_Torappu_PlayerAvatarPerDataT): void {
  _o.avatarId = this.avatarId();
  _o.avatarType = this.avatarType();
  _o.avatarIdSort = this.avatarIdSort();
  _o.avatarIdDesc = this.avatarIdDesc();
  _o.avatarItemName = this.avatarItemName();
  _o.avatarItemDesc = this.avatarItemDesc();
  _o.avatarItemUsage = this.avatarItemUsage();
  _o.obtainApproach = this.obtainApproach();
  _o.dynAvatarId = this.dynAvatarId();
}
}

export class clz_Torappu_PlayerAvatarPerDataT implements flatbuffers.IGeneratedObject {
constructor(
  public avatarId: string|Uint8Array|null = null,
  public avatarType: enum__Torappu_PlayerAvatarGroupType = enum__Torappu_PlayerAvatarGroupType.NONE,
  public avatarIdSort: number = 0,
  public avatarIdDesc: string|Uint8Array|null = null,
  public avatarItemName: string|Uint8Array|null = null,
  public avatarItemDesc: string|Uint8Array|null = null,
  public avatarItemUsage: string|Uint8Array|null = null,
  public obtainApproach: string|Uint8Array|null = null,
  public dynAvatarId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const avatarId = (this.avatarId !== null ? builder.createString(this.avatarId!) : 0);
  const avatarIdDesc = (this.avatarIdDesc !== null ? builder.createString(this.avatarIdDesc!) : 0);
  const avatarItemName = (this.avatarItemName !== null ? builder.createString(this.avatarItemName!) : 0);
  const avatarItemDesc = (this.avatarItemDesc !== null ? builder.createString(this.avatarItemDesc!) : 0);
  const avatarItemUsage = (this.avatarItemUsage !== null ? builder.createString(this.avatarItemUsage!) : 0);
  const obtainApproach = (this.obtainApproach !== null ? builder.createString(this.obtainApproach!) : 0);
  const dynAvatarId = (this.dynAvatarId !== null ? builder.createString(this.dynAvatarId!) : 0);

  return clz_Torappu_PlayerAvatarPerData.createclz_Torappu_PlayerAvatarPerData(builder,
    avatarId,
    this.avatarType,
    this.avatarIdSort,
    avatarIdDesc,
    avatarItemName,
    avatarItemDesc,
    avatarItemUsage,
    obtainApproach,
    dynAvatarId
  );
}
}
