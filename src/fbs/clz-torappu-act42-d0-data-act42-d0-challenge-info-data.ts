// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_Act42D0Data_Act42D0ChallengeMissionData, clz_Torappu_Act42D0Data_Act42D0ChallengeMissionDataT } from './clz-torappu-act42-d0-data-act42-d0-challenge-mission-data.js';


export class clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData implements flatbuffers.IUnpackableObject<clz_Torappu_Act42D0Data_Act42D0ChallengeInfoDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Act42D0Data_Act42D0ChallengeInfoData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData):clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData {
  return (obj || new clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Act42D0Data_Act42D0ChallengeInfoData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData):clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

stageId():string|null
stageId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
stageId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

stageDesc():string|null
stageDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
stageDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

startTs():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

endTs():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

levelId():string|null
levelId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
levelId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

code():string|null
code(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
code(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

loadingPicId():string|null
loadingPicId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
loadingPicId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

challengeMissionData(index: number, obj?:clz_Torappu_Act42D0Data_Act42D0ChallengeMissionData):clz_Torappu_Act42D0Data_Act42D0ChallengeMissionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? (obj || new clz_Torappu_Act42D0Data_Act42D0ChallengeMissionData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

challengeMissionDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_Act42D0Data_Act42D0ChallengeInfoData(builder:flatbuffers.Builder) {
  builder.startObject(9);
}

static addStageId(builder:flatbuffers.Builder, stageIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, stageIdOffset, 0);
}

static addStageDesc(builder:flatbuffers.Builder, stageDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, stageDescOffset, 0);
}

static addStartTs(builder:flatbuffers.Builder, startTs:bigint) {
  builder.addFieldInt64(2, startTs, BigInt('0'));
}

static addEndTs(builder:flatbuffers.Builder, endTs:bigint) {
  builder.addFieldInt64(3, endTs, BigInt('0'));
}

static addLevelId(builder:flatbuffers.Builder, levelIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, levelIdOffset, 0);
}

static addCode(builder:flatbuffers.Builder, codeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, codeOffset, 0);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, nameOffset, 0);
}

static addLoadingPicId(builder:flatbuffers.Builder, loadingPicIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, loadingPicIdOffset, 0);
}

static addChallengeMissionData(builder:flatbuffers.Builder, challengeMissionDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, challengeMissionDataOffset, 0);
}

static createChallengeMissionDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startChallengeMissionDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_Act42D0Data_Act42D0ChallengeInfoData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Act42D0Data_Act42D0ChallengeInfoData(builder:flatbuffers.Builder, stageIdOffset:flatbuffers.Offset, stageDescOffset:flatbuffers.Offset, startTs:bigint, endTs:bigint, levelIdOffset:flatbuffers.Offset, codeOffset:flatbuffers.Offset, nameOffset:flatbuffers.Offset, loadingPicIdOffset:flatbuffers.Offset, challengeMissionDataOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData.startclz_Torappu_Act42D0Data_Act42D0ChallengeInfoData(builder);
  clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData.addStageId(builder, stageIdOffset);
  clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData.addStageDesc(builder, stageDescOffset);
  clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData.addStartTs(builder, startTs);
  clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData.addEndTs(builder, endTs);
  clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData.addLevelId(builder, levelIdOffset);
  clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData.addCode(builder, codeOffset);
  clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData.addName(builder, nameOffset);
  clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData.addLoadingPicId(builder, loadingPicIdOffset);
  clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData.addChallengeMissionData(builder, challengeMissionDataOffset);
  return clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData.endclz_Torappu_Act42D0Data_Act42D0ChallengeInfoData(builder);
}

unpack(): clz_Torappu_Act42D0Data_Act42D0ChallengeInfoDataT {
  return new clz_Torappu_Act42D0Data_Act42D0ChallengeInfoDataT(
    this.stageId(),
    this.stageDesc(),
    this.startTs(),
    this.endTs(),
    this.levelId(),
    this.code(),
    this.name(),
    this.loadingPicId(),
    this.bb!.createObjList<clz_Torappu_Act42D0Data_Act42D0ChallengeMissionData, clz_Torappu_Act42D0Data_Act42D0ChallengeMissionDataT>(this.challengeMissionData.bind(this), this.challengeMissionDataLength())
  );
}


unpackTo(_o: clz_Torappu_Act42D0Data_Act42D0ChallengeInfoDataT): void {
  _o.stageId = this.stageId();
  _o.stageDesc = this.stageDesc();
  _o.startTs = this.startTs();
  _o.endTs = this.endTs();
  _o.levelId = this.levelId();
  _o.code = this.code();
  _o.name = this.name();
  _o.loadingPicId = this.loadingPicId();
  _o.challengeMissionData = this.bb!.createObjList<clz_Torappu_Act42D0Data_Act42D0ChallengeMissionData, clz_Torappu_Act42D0Data_Act42D0ChallengeMissionDataT>(this.challengeMissionData.bind(this), this.challengeMissionDataLength());
}
}

export class clz_Torappu_Act42D0Data_Act42D0ChallengeInfoDataT implements flatbuffers.IGeneratedObject {
constructor(
  public stageId: string|Uint8Array|null = null,
  public stageDesc: string|Uint8Array|null = null,
  public startTs: bigint = BigInt('0'),
  public endTs: bigint = BigInt('0'),
  public levelId: string|Uint8Array|null = null,
  public code: string|Uint8Array|null = null,
  public name: string|Uint8Array|null = null,
  public loadingPicId: string|Uint8Array|null = null,
  public challengeMissionData: (clz_Torappu_Act42D0Data_Act42D0ChallengeMissionDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const stageId = (this.stageId !== null ? builder.createString(this.stageId!) : 0);
  const stageDesc = (this.stageDesc !== null ? builder.createString(this.stageDesc!) : 0);
  const levelId = (this.levelId !== null ? builder.createString(this.levelId!) : 0);
  const code = (this.code !== null ? builder.createString(this.code!) : 0);
  const name = (this.name !== null ? builder.createString(this.name!) : 0);
  const loadingPicId = (this.loadingPicId !== null ? builder.createString(this.loadingPicId!) : 0);
  const challengeMissionData = clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData.createChallengeMissionDataVector(builder, builder.createObjectOffsetList(this.challengeMissionData));

  return clz_Torappu_Act42D0Data_Act42D0ChallengeInfoData.createclz_Torappu_Act42D0Data_Act42D0ChallengeInfoData(builder,
    stageId,
    stageDesc,
    this.startTs,
    this.endTs,
    levelId,
    code,
    name,
    loadingPicId,
    challengeMissionData
  );
}
}
