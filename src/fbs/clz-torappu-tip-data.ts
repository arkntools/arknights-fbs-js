// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_TipData_Category } from './enum--torappu-tip-data-category.js';


export class clz_Torappu_TipData implements flatbuffers.IUnpackableObject<clz_Torappu_TipDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_TipData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_TipData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_TipData):clz_Torappu_TipData {
  return (obj || new clz_Torappu_TipData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_TipData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_TipData):clz_Torappu_TipData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_TipData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

tip():string|null
tip(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
tip(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

weight():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

category():enum__Torappu_TipData_Category {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_TipData_Category.NONE;
}

static startclz_Torappu_TipData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addTip(builder:flatbuffers.Builder, tipOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, tipOffset, 0);
}

static addWeight(builder:flatbuffers.Builder, weight:number) {
  builder.addFieldFloat32(1, weight, 0.0);
}

static addCategory(builder:flatbuffers.Builder, category:enum__Torappu_TipData_Category) {
  builder.addFieldInt32(2, category, enum__Torappu_TipData_Category.NONE);
}

static endclz_Torappu_TipData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_TipData(builder:flatbuffers.Builder, tipOffset:flatbuffers.Offset, weight:number, category:enum__Torappu_TipData_Category):flatbuffers.Offset {
  clz_Torappu_TipData.startclz_Torappu_TipData(builder);
  clz_Torappu_TipData.addTip(builder, tipOffset);
  clz_Torappu_TipData.addWeight(builder, weight);
  clz_Torappu_TipData.addCategory(builder, category);
  return clz_Torappu_TipData.endclz_Torappu_TipData(builder);
}

unpack(): clz_Torappu_TipDataT {
  return new clz_Torappu_TipDataT(
    this.tip(),
    this.weight(),
    this.category()
  );
}


unpackTo(_o: clz_Torappu_TipDataT): void {
  _o.tip = this.tip();
  _o.weight = this.weight();
  _o.category = this.category();
}
}

export class clz_Torappu_TipDataT implements flatbuffers.IGeneratedObject {
constructor(
  public tip: string|Uint8Array|null = null,
  public weight: number = 0.0,
  public category: enum__Torappu_TipData_Category = enum__Torappu_TipData_Category.NONE
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const tip = (this.tip !== null ? builder.createString(this.tip!) : 0);

  return clz_Torappu_TipData.createclz_Torappu_TipData(builder,
    tip,
    this.weight,
    this.category
  );
}
}
