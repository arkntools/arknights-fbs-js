// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData implements flatbuffers.IUnpackableObject<clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData):clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData {
  return (obj || new clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData):clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

plotId():string|null
plotId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
plotId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

plotCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addPlotId(builder:flatbuffers.Builder, plotIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, plotIdOffset, 0);
}

static addPlotCount(builder:flatbuffers.Builder, plotCount:number) {
  builder.addFieldInt32(1, plotCount, 0);
}

static endclz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData(builder:flatbuffers.Builder, plotIdOffset:flatbuffers.Offset, plotCount:number):flatbuffers.Offset {
  clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData.startclz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData(builder);
  clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData.addPlotId(builder, plotIdOffset);
  clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData.addPlotCount(builder, plotCount);
  return clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData.endclz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData(builder);
}

unpack(): clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemDataT {
  return new clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemDataT(
    this.plotId(),
    this.plotCount()
  );
}


unpackTo(_o: clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemDataT): void {
  _o.plotId = this.plotId();
  _o.plotCount = this.plotCount();
}
}

export class clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemDataT implements flatbuffers.IGeneratedObject {
constructor(
  public plotId: string|Uint8Array|null = null,
  public plotCount: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const plotId = (this.plotId !== null ? builder.createString(this.plotId!) : 0);

  return clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData.createclz_Torappu_Act1VHalfIdlePlotData_PlotCombineData_CombineItemData(builder,
    plotId,
    this.plotCount
  );
}
}
