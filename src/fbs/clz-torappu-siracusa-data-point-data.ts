// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SiracusaData_PointData implements flatbuffers.IUnpackableObject<clz_Torappu_SiracusaData_PointDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SiracusaData_PointData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SiracusaData_PointData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SiracusaData_PointData):clz_Torappu_SiracusaData_PointData {
  return (obj || new clz_Torappu_SiracusaData_PointData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SiracusaData_PointData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SiracusaData_PointData):clz_Torappu_SiracusaData_PointData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SiracusaData_PointData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

pointId():string|null
pointId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
pointId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

areaId():string|null
areaId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
areaId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

pointName():string|null
pointName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
pointName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

pointDesc():string|null
pointDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
pointDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

pointIconId():string|null
pointIconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
pointIconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

pointItaName():string|null
pointItaName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
pointItaName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_SiracusaData_PointData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addPointId(builder:flatbuffers.Builder, pointIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, pointIdOffset, 0);
}

static addAreaId(builder:flatbuffers.Builder, areaIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, areaIdOffset, 0);
}

static addPointName(builder:flatbuffers.Builder, pointNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, pointNameOffset, 0);
}

static addPointDesc(builder:flatbuffers.Builder, pointDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, pointDescOffset, 0);
}

static addPointIconId(builder:flatbuffers.Builder, pointIconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, pointIconIdOffset, 0);
}

static addPointItaName(builder:flatbuffers.Builder, pointItaNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, pointItaNameOffset, 0);
}

static endclz_Torappu_SiracusaData_PointData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SiracusaData_PointData(builder:flatbuffers.Builder, pointIdOffset:flatbuffers.Offset, areaIdOffset:flatbuffers.Offset, pointNameOffset:flatbuffers.Offset, pointDescOffset:flatbuffers.Offset, pointIconIdOffset:flatbuffers.Offset, pointItaNameOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SiracusaData_PointData.startclz_Torappu_SiracusaData_PointData(builder);
  clz_Torappu_SiracusaData_PointData.addPointId(builder, pointIdOffset);
  clz_Torappu_SiracusaData_PointData.addAreaId(builder, areaIdOffset);
  clz_Torappu_SiracusaData_PointData.addPointName(builder, pointNameOffset);
  clz_Torappu_SiracusaData_PointData.addPointDesc(builder, pointDescOffset);
  clz_Torappu_SiracusaData_PointData.addPointIconId(builder, pointIconIdOffset);
  clz_Torappu_SiracusaData_PointData.addPointItaName(builder, pointItaNameOffset);
  return clz_Torappu_SiracusaData_PointData.endclz_Torappu_SiracusaData_PointData(builder);
}

unpack(): clz_Torappu_SiracusaData_PointDataT {
  return new clz_Torappu_SiracusaData_PointDataT(
    this.pointId(),
    this.areaId(),
    this.pointName(),
    this.pointDesc(),
    this.pointIconId(),
    this.pointItaName()
  );
}


unpackTo(_o: clz_Torappu_SiracusaData_PointDataT): void {
  _o.pointId = this.pointId();
  _o.areaId = this.areaId();
  _o.pointName = this.pointName();
  _o.pointDesc = this.pointDesc();
  _o.pointIconId = this.pointIconId();
  _o.pointItaName = this.pointItaName();
}
}

export class clz_Torappu_SiracusaData_PointDataT implements flatbuffers.IGeneratedObject {
constructor(
  public pointId: string|Uint8Array|null = null,
  public areaId: string|Uint8Array|null = null,
  public pointName: string|Uint8Array|null = null,
  public pointDesc: string|Uint8Array|null = null,
  public pointIconId: string|Uint8Array|null = null,
  public pointItaName: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const pointId = (this.pointId !== null ? builder.createString(this.pointId!) : 0);
  const areaId = (this.areaId !== null ? builder.createString(this.areaId!) : 0);
  const pointName = (this.pointName !== null ? builder.createString(this.pointName!) : 0);
  const pointDesc = (this.pointDesc !== null ? builder.createString(this.pointDesc!) : 0);
  const pointIconId = (this.pointIconId !== null ? builder.createString(this.pointIconId!) : 0);
  const pointItaName = (this.pointItaName !== null ? builder.createString(this.pointItaName!) : 0);

  return clz_Torappu_SiracusaData_PointData.createclz_Torappu_SiracusaData_PointData(builder,
    pointId,
    areaId,
    pointName,
    pointDesc,
    pointIconId,
    pointItaName
  );
}
}
