// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_RuneTable_PackedRuneData, clz_Torappu_RuneTable_PackedRuneDataT } from './clz-torappu-rune-table-packed-rune-data.js';


export class clz_Torappu_RecalRuneRuneData implements flatbuffers.IUnpackableObject<clz_Torappu_RecalRuneRuneDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RecalRuneRuneData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RecalRuneRuneData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RecalRuneRuneData):clz_Torappu_RecalRuneRuneData {
  return (obj || new clz_Torappu_RecalRuneRuneData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RecalRuneRuneData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RecalRuneRuneData):clz_Torappu_RecalRuneRuneData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RecalRuneRuneData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

runeId():string|null
runeId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
runeId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

score():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

essential():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

exclusiveGroupId():string|null
exclusiveGroupId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
exclusiveGroupId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

runeIcon():string|null
runeIcon(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
runeIcon(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

packedRune(obj?:clz_Torappu_RuneTable_PackedRuneData):clz_Torappu_RuneTable_PackedRuneData|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new clz_Torappu_RuneTable_PackedRuneData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startclz_Torappu_RecalRuneRuneData(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static addRuneId(builder:flatbuffers.Builder, runeIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, runeIdOffset, 0);
}

static addScore(builder:flatbuffers.Builder, score:number) {
  builder.addFieldInt32(1, score, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(2, sortId, 0);
}

static addEssential(builder:flatbuffers.Builder, essential:boolean) {
  builder.addFieldInt8(3, +essential, +false);
}

static addExclusiveGroupId(builder:flatbuffers.Builder, exclusiveGroupIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, exclusiveGroupIdOffset, 0);
}

static addRuneIcon(builder:flatbuffers.Builder, runeIconOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, runeIconOffset, 0);
}

static addPackedRune(builder:flatbuffers.Builder, packedRuneOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, packedRuneOffset, 0);
}

static endclz_Torappu_RecalRuneRuneData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_RecalRuneRuneDataT {
  return new clz_Torappu_RecalRuneRuneDataT(
    this.runeId(),
    this.score(),
    this.sortId(),
    this.essential(),
    this.exclusiveGroupId(),
    this.runeIcon(),
    (this.packedRune() !== null ? this.packedRune()!.unpack() : null)
  );
}


unpackTo(_o: clz_Torappu_RecalRuneRuneDataT): void {
  _o.runeId = this.runeId();
  _o.score = this.score();
  _o.sortId = this.sortId();
  _o.essential = this.essential();
  _o.exclusiveGroupId = this.exclusiveGroupId();
  _o.runeIcon = this.runeIcon();
  _o.packedRune = (this.packedRune() !== null ? this.packedRune()!.unpack() : null);
}
}

export class clz_Torappu_RecalRuneRuneDataT implements flatbuffers.IGeneratedObject {
constructor(
  public runeId: string|Uint8Array|null = null,
  public score: number = 0,
  public sortId: number = 0,
  public essential: boolean = false,
  public exclusiveGroupId: string|Uint8Array|null = null,
  public runeIcon: string|Uint8Array|null = null,
  public packedRune: clz_Torappu_RuneTable_PackedRuneDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const runeId = (this.runeId !== null ? builder.createString(this.runeId!) : 0);
  const exclusiveGroupId = (this.exclusiveGroupId !== null ? builder.createString(this.exclusiveGroupId!) : 0);
  const runeIcon = (this.runeIcon !== null ? builder.createString(this.runeIcon!) : 0);
  const packedRune = (this.packedRune !== null ? this.packedRune!.pack(builder) : 0);

  clz_Torappu_RecalRuneRuneData.startclz_Torappu_RecalRuneRuneData(builder);
  clz_Torappu_RecalRuneRuneData.addRuneId(builder, runeId);
  clz_Torappu_RecalRuneRuneData.addScore(builder, this.score);
  clz_Torappu_RecalRuneRuneData.addSortId(builder, this.sortId);
  clz_Torappu_RecalRuneRuneData.addEssential(builder, this.essential);
  clz_Torappu_RecalRuneRuneData.addExclusiveGroupId(builder, exclusiveGroupId);
  clz_Torappu_RecalRuneRuneData.addRuneIcon(builder, runeIcon);
  clz_Torappu_RecalRuneRuneData.addPackedRune(builder, packedRune);

  return clz_Torappu_RecalRuneRuneData.endclz_Torappu_RecalRuneRuneData(builder);
}
}
