// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActivityEnemyDuelSingleCommentData implements flatbuffers.IUnpackableObject<clz_Torappu_ActivityEnemyDuelSingleCommentDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActivityEnemyDuelSingleCommentData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActivityEnemyDuelSingleCommentData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityEnemyDuelSingleCommentData):clz_Torappu_ActivityEnemyDuelSingleCommentData {
  return (obj || new clz_Torappu_ActivityEnemyDuelSingleCommentData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActivityEnemyDuelSingleCommentData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityEnemyDuelSingleCommentData):clz_Torappu_ActivityEnemyDuelSingleCommentData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActivityEnemyDuelSingleCommentData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

commentId():string|null
commentId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
commentId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

priority():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

template():string|null
template(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
template(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

param(index: number):string
param(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
param(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

paramLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

commentText():string|null
commentText(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
commentText(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_ActivityEnemyDuelSingleCommentData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addCommentId(builder:flatbuffers.Builder, commentIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, commentIdOffset, 0);
}

static addPriority(builder:flatbuffers.Builder, priority:number) {
  builder.addFieldInt32(1, priority, 0);
}

static addTemplate(builder:flatbuffers.Builder, templateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, templateOffset, 0);
}

static addParam(builder:flatbuffers.Builder, paramOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, paramOffset, 0);
}

static createParamVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startParamVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCommentText(builder:flatbuffers.Builder, commentTextOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, commentTextOffset, 0);
}

static endclz_Torappu_ActivityEnemyDuelSingleCommentData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActivityEnemyDuelSingleCommentData(builder:flatbuffers.Builder, commentIdOffset:flatbuffers.Offset, priority:number, templateOffset:flatbuffers.Offset, paramOffset:flatbuffers.Offset, commentTextOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActivityEnemyDuelSingleCommentData.startclz_Torappu_ActivityEnemyDuelSingleCommentData(builder);
  clz_Torappu_ActivityEnemyDuelSingleCommentData.addCommentId(builder, commentIdOffset);
  clz_Torappu_ActivityEnemyDuelSingleCommentData.addPriority(builder, priority);
  clz_Torappu_ActivityEnemyDuelSingleCommentData.addTemplate(builder, templateOffset);
  clz_Torappu_ActivityEnemyDuelSingleCommentData.addParam(builder, paramOffset);
  clz_Torappu_ActivityEnemyDuelSingleCommentData.addCommentText(builder, commentTextOffset);
  return clz_Torappu_ActivityEnemyDuelSingleCommentData.endclz_Torappu_ActivityEnemyDuelSingleCommentData(builder);
}

unpack(): clz_Torappu_ActivityEnemyDuelSingleCommentDataT {
  return new clz_Torappu_ActivityEnemyDuelSingleCommentDataT(
    this.commentId(),
    this.priority(),
    this.template(),
    this.bb!.createScalarList<string>(this.param.bind(this), this.paramLength()),
    this.commentText()
  );
}


unpackTo(_o: clz_Torappu_ActivityEnemyDuelSingleCommentDataT): void {
  _o.commentId = this.commentId();
  _o.priority = this.priority();
  _o.template = this.template();
  _o.param = this.bb!.createScalarList<string>(this.param.bind(this), this.paramLength());
  _o.commentText = this.commentText();
}
}

export class clz_Torappu_ActivityEnemyDuelSingleCommentDataT implements flatbuffers.IGeneratedObject {
constructor(
  public commentId: string|Uint8Array|null = null,
  public priority: number = 0,
  public template: string|Uint8Array|null = null,
  public param: (string)[] = [],
  public commentText: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const commentId = (this.commentId !== null ? builder.createString(this.commentId!) : 0);
  const template = (this.template !== null ? builder.createString(this.template!) : 0);
  const param = clz_Torappu_ActivityEnemyDuelSingleCommentData.createParamVector(builder, builder.createObjectOffsetList(this.param));
  const commentText = (this.commentText !== null ? builder.createString(this.commentText!) : 0);

  return clz_Torappu_ActivityEnemyDuelSingleCommentData.createclz_Torappu_ActivityEnemyDuelSingleCommentData(builder,
    commentId,
    this.priority,
    template,
    param,
    commentText
  );
}
}
