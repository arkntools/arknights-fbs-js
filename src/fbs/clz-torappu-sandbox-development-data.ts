// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SandboxDevelopmentData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxDevelopmentDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxDevelopmentData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxDevelopmentData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxDevelopmentData):clz_Torappu_SandboxDevelopmentData {
  return (obj || new clz_Torappu_SandboxDevelopmentData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxDevelopmentData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxDevelopmentData):clz_Torappu_SandboxDevelopmentData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxDevelopmentData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

buffId():string|null
buffId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
buffId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

positionX():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

positionY():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

frontNodeId():string|null
frontNodeId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
frontNodeId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

nextNodeIds(index: number):string
nextNodeIds(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
nextNodeIds(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

nextNodeIdsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

buffLimitedId():string|null
buffLimitedId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
buffLimitedId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

tokenCost():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

canBuffResearch():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

buffResearchDesc():string|null
buffResearchDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
buffResearchDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

buffName():string|null
buffName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
buffName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

buffIconId():string|null
buffIconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
buffIconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

nodeTitle():string|null
nodeTitle(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
nodeTitle(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

buffEffectDesc():string|null
buffEffectDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
buffEffectDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_SandboxDevelopmentData(builder:flatbuffers.Builder) {
  builder.startObject(13);
}

static addBuffId(builder:flatbuffers.Builder, buffIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, buffIdOffset, 0);
}

static addPositionX(builder:flatbuffers.Builder, positionX:number) {
  builder.addFieldInt32(1, positionX, 0);
}

static addPositionY(builder:flatbuffers.Builder, positionY:number) {
  builder.addFieldInt32(2, positionY, 0);
}

static addFrontNodeId(builder:flatbuffers.Builder, frontNodeIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, frontNodeIdOffset, 0);
}

static addNextNodeIds(builder:flatbuffers.Builder, nextNodeIdsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, nextNodeIdsOffset, 0);
}

static createNextNodeIdsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startNextNodeIdsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBuffLimitedId(builder:flatbuffers.Builder, buffLimitedIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, buffLimitedIdOffset, 0);
}

static addTokenCost(builder:flatbuffers.Builder, tokenCost:number) {
  builder.addFieldInt32(6, tokenCost, 0);
}

static addCanBuffResearch(builder:flatbuffers.Builder, canBuffResearch:boolean) {
  builder.addFieldInt8(7, +canBuffResearch, +false);
}

static addBuffResearchDesc(builder:flatbuffers.Builder, buffResearchDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, buffResearchDescOffset, 0);
}

static addBuffName(builder:flatbuffers.Builder, buffNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, buffNameOffset, 0);
}

static addBuffIconId(builder:flatbuffers.Builder, buffIconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, buffIconIdOffset, 0);
}

static addNodeTitle(builder:flatbuffers.Builder, nodeTitleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, nodeTitleOffset, 0);
}

static addBuffEffectDesc(builder:flatbuffers.Builder, buffEffectDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, buffEffectDescOffset, 0);
}

static endclz_Torappu_SandboxDevelopmentData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxDevelopmentData(builder:flatbuffers.Builder, buffIdOffset:flatbuffers.Offset, positionX:number, positionY:number, frontNodeIdOffset:flatbuffers.Offset, nextNodeIdsOffset:flatbuffers.Offset, buffLimitedIdOffset:flatbuffers.Offset, tokenCost:number, canBuffResearch:boolean, buffResearchDescOffset:flatbuffers.Offset, buffNameOffset:flatbuffers.Offset, buffIconIdOffset:flatbuffers.Offset, nodeTitleOffset:flatbuffers.Offset, buffEffectDescOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SandboxDevelopmentData.startclz_Torappu_SandboxDevelopmentData(builder);
  clz_Torappu_SandboxDevelopmentData.addBuffId(builder, buffIdOffset);
  clz_Torappu_SandboxDevelopmentData.addPositionX(builder, positionX);
  clz_Torappu_SandboxDevelopmentData.addPositionY(builder, positionY);
  clz_Torappu_SandboxDevelopmentData.addFrontNodeId(builder, frontNodeIdOffset);
  clz_Torappu_SandboxDevelopmentData.addNextNodeIds(builder, nextNodeIdsOffset);
  clz_Torappu_SandboxDevelopmentData.addBuffLimitedId(builder, buffLimitedIdOffset);
  clz_Torappu_SandboxDevelopmentData.addTokenCost(builder, tokenCost);
  clz_Torappu_SandboxDevelopmentData.addCanBuffResearch(builder, canBuffResearch);
  clz_Torappu_SandboxDevelopmentData.addBuffResearchDesc(builder, buffResearchDescOffset);
  clz_Torappu_SandboxDevelopmentData.addBuffName(builder, buffNameOffset);
  clz_Torappu_SandboxDevelopmentData.addBuffIconId(builder, buffIconIdOffset);
  clz_Torappu_SandboxDevelopmentData.addNodeTitle(builder, nodeTitleOffset);
  clz_Torappu_SandboxDevelopmentData.addBuffEffectDesc(builder, buffEffectDescOffset);
  return clz_Torappu_SandboxDevelopmentData.endclz_Torappu_SandboxDevelopmentData(builder);
}

unpack(): clz_Torappu_SandboxDevelopmentDataT {
  return new clz_Torappu_SandboxDevelopmentDataT(
    this.buffId(),
    this.positionX(),
    this.positionY(),
    this.frontNodeId(),
    this.bb!.createScalarList<string>(this.nextNodeIds.bind(this), this.nextNodeIdsLength()),
    this.buffLimitedId(),
    this.tokenCost(),
    this.canBuffResearch(),
    this.buffResearchDesc(),
    this.buffName(),
    this.buffIconId(),
    this.nodeTitle(),
    this.buffEffectDesc()
  );
}


unpackTo(_o: clz_Torappu_SandboxDevelopmentDataT): void {
  _o.buffId = this.buffId();
  _o.positionX = this.positionX();
  _o.positionY = this.positionY();
  _o.frontNodeId = this.frontNodeId();
  _o.nextNodeIds = this.bb!.createScalarList<string>(this.nextNodeIds.bind(this), this.nextNodeIdsLength());
  _o.buffLimitedId = this.buffLimitedId();
  _o.tokenCost = this.tokenCost();
  _o.canBuffResearch = this.canBuffResearch();
  _o.buffResearchDesc = this.buffResearchDesc();
  _o.buffName = this.buffName();
  _o.buffIconId = this.buffIconId();
  _o.nodeTitle = this.nodeTitle();
  _o.buffEffectDesc = this.buffEffectDesc();
}
}

export class clz_Torappu_SandboxDevelopmentDataT implements flatbuffers.IGeneratedObject {
constructor(
  public buffId: string|Uint8Array|null = null,
  public positionX: number = 0,
  public positionY: number = 0,
  public frontNodeId: string|Uint8Array|null = null,
  public nextNodeIds: (string)[] = [],
  public buffLimitedId: string|Uint8Array|null = null,
  public tokenCost: number = 0,
  public canBuffResearch: boolean = false,
  public buffResearchDesc: string|Uint8Array|null = null,
  public buffName: string|Uint8Array|null = null,
  public buffIconId: string|Uint8Array|null = null,
  public nodeTitle: string|Uint8Array|null = null,
  public buffEffectDesc: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const buffId = (this.buffId !== null ? builder.createString(this.buffId!) : 0);
  const frontNodeId = (this.frontNodeId !== null ? builder.createString(this.frontNodeId!) : 0);
  const nextNodeIds = clz_Torappu_SandboxDevelopmentData.createNextNodeIdsVector(builder, builder.createObjectOffsetList(this.nextNodeIds));
  const buffLimitedId = (this.buffLimitedId !== null ? builder.createString(this.buffLimitedId!) : 0);
  const buffResearchDesc = (this.buffResearchDesc !== null ? builder.createString(this.buffResearchDesc!) : 0);
  const buffName = (this.buffName !== null ? builder.createString(this.buffName!) : 0);
  const buffIconId = (this.buffIconId !== null ? builder.createString(this.buffIconId!) : 0);
  const nodeTitle = (this.nodeTitle !== null ? builder.createString(this.nodeTitle!) : 0);
  const buffEffectDesc = (this.buffEffectDesc !== null ? builder.createString(this.buffEffectDesc!) : 0);

  return clz_Torappu_SandboxDevelopmentData.createclz_Torappu_SandboxDevelopmentData(builder,
    buffId,
    this.positionX,
    this.positionY,
    frontNodeId,
    nextNodeIds,
    buffLimitedId,
    this.tokenCost,
    this.canBuffResearch,
    buffResearchDesc,
    buffName,
    buffIconId,
    nodeTitle,
    buffEffectDesc
  );
}
}
