// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_LMTGSShopSchedule implements flatbuffers.IUnpackableObject<clz_Torappu_LMTGSShopScheduleT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_LMTGSShopSchedule {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_LMTGSShopSchedule(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_LMTGSShopSchedule):clz_Torappu_LMTGSShopSchedule {
  return (obj || new clz_Torappu_LMTGSShopSchedule()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_LMTGSShopSchedule(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_LMTGSShopSchedule):clz_Torappu_LMTGSShopSchedule {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_LMTGSShopSchedule()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

gachaPoolId():string|null
gachaPoolId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
gachaPoolId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

lmtgsid():string|null
lmtgsid(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
lmtgsid(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

iconColor():string|null
iconColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
iconColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

iconBackColor():string|null
iconBackColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
iconBackColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

storeTextColor():string|null
storeTextColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
storeTextColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

startTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

endTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startclz_Torappu_LMTGSShopSchedule(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static addGachaPoolId(builder:flatbuffers.Builder, gachaPoolIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, gachaPoolIdOffset, 0);
}

static addLmtgsid(builder:flatbuffers.Builder, lmtgsidOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, lmtgsidOffset, 0);
}

static addIconColor(builder:flatbuffers.Builder, iconColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, iconColorOffset, 0);
}

static addIconBackColor(builder:flatbuffers.Builder, iconBackColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, iconBackColorOffset, 0);
}

static addStoreTextColor(builder:flatbuffers.Builder, storeTextColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, storeTextColorOffset, 0);
}

static addStartTime(builder:flatbuffers.Builder, startTime:bigint) {
  builder.addFieldInt64(5, startTime, BigInt('0'));
}

static addEndTime(builder:flatbuffers.Builder, endTime:bigint) {
  builder.addFieldInt64(6, endTime, BigInt('0'));
}

static endclz_Torappu_LMTGSShopSchedule(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_LMTGSShopSchedule(builder:flatbuffers.Builder, gachaPoolIdOffset:flatbuffers.Offset, lmtgsidOffset:flatbuffers.Offset, iconColorOffset:flatbuffers.Offset, iconBackColorOffset:flatbuffers.Offset, storeTextColorOffset:flatbuffers.Offset, startTime:bigint, endTime:bigint):flatbuffers.Offset {
  clz_Torappu_LMTGSShopSchedule.startclz_Torappu_LMTGSShopSchedule(builder);
  clz_Torappu_LMTGSShopSchedule.addGachaPoolId(builder, gachaPoolIdOffset);
  clz_Torappu_LMTGSShopSchedule.addLmtgsid(builder, lmtgsidOffset);
  clz_Torappu_LMTGSShopSchedule.addIconColor(builder, iconColorOffset);
  clz_Torappu_LMTGSShopSchedule.addIconBackColor(builder, iconBackColorOffset);
  clz_Torappu_LMTGSShopSchedule.addStoreTextColor(builder, storeTextColorOffset);
  clz_Torappu_LMTGSShopSchedule.addStartTime(builder, startTime);
  clz_Torappu_LMTGSShopSchedule.addEndTime(builder, endTime);
  return clz_Torappu_LMTGSShopSchedule.endclz_Torappu_LMTGSShopSchedule(builder);
}

unpack(): clz_Torappu_LMTGSShopScheduleT {
  return new clz_Torappu_LMTGSShopScheduleT(
    this.gachaPoolId(),
    this.lmtgsid(),
    this.iconColor(),
    this.iconBackColor(),
    this.storeTextColor(),
    this.startTime(),
    this.endTime()
  );
}


unpackTo(_o: clz_Torappu_LMTGSShopScheduleT): void {
  _o.gachaPoolId = this.gachaPoolId();
  _o.lmtgsid = this.lmtgsid();
  _o.iconColor = this.iconColor();
  _o.iconBackColor = this.iconBackColor();
  _o.storeTextColor = this.storeTextColor();
  _o.startTime = this.startTime();
  _o.endTime = this.endTime();
}
}

export class clz_Torappu_LMTGSShopScheduleT implements flatbuffers.IGeneratedObject {
constructor(
  public gachaPoolId: string|Uint8Array|null = null,
  public lmtgsid: string|Uint8Array|null = null,
  public iconColor: string|Uint8Array|null = null,
  public iconBackColor: string|Uint8Array|null = null,
  public storeTextColor: string|Uint8Array|null = null,
  public startTime: bigint = BigInt('0'),
  public endTime: bigint = BigInt('0')
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const gachaPoolId = (this.gachaPoolId !== null ? builder.createString(this.gachaPoolId!) : 0);
  const lmtgsid = (this.lmtgsid !== null ? builder.createString(this.lmtgsid!) : 0);
  const iconColor = (this.iconColor !== null ? builder.createString(this.iconColor!) : 0);
  const iconBackColor = (this.iconBackColor !== null ? builder.createString(this.iconBackColor!) : 0);
  const storeTextColor = (this.storeTextColor !== null ? builder.createString(this.storeTextColor!) : 0);

  return clz_Torappu_LMTGSShopSchedule.createclz_Torappu_LMTGSShopSchedule(builder,
    gachaPoolId,
    lmtgsid,
    iconColor,
    iconBackColor,
    storeTextColor,
    this.startTime,
    this.endTime
  );
}
}
