// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_Act1VHalfIdleTechTreeData_Effect, clz_Torappu_Act1VHalfIdleTechTreeData_EffectT } from './clz-torappu-act1-vhalf-idle-tech-tree-data-effect.js';
import { enum__Torappu_Act1VHalfIdleTechTreeNodeType } from './enum--torappu-act1-vhalf-idle-tech-tree-node-type.js';


export class clz_Torappu_Act1VHalfIdleTechTreeData implements flatbuffers.IUnpackableObject<clz_Torappu_Act1VHalfIdleTechTreeDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Act1VHalfIdleTechTreeData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Act1VHalfIdleTechTreeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act1VHalfIdleTechTreeData):clz_Torappu_Act1VHalfIdleTechTreeData {
  return (obj || new clz_Torappu_Act1VHalfIdleTechTreeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Act1VHalfIdleTechTreeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act1VHalfIdleTechTreeData):clz_Torappu_Act1VHalfIdleTechTreeData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Act1VHalfIdleTechTreeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

nodeId():string|null
nodeId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
nodeId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

nodeType():enum__Torappu_Act1VHalfIdleTechTreeNodeType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_Act1VHalfIdleTechTreeNodeType.NONE;
}

prevNodeId(index: number):string
prevNodeId(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
prevNodeId(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

prevNodeIdLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

tokenCost():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

iconId():string|null
iconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
iconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

showPrevLockTips():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

effect(index: number, obj?:clz_Torappu_Act1VHalfIdleTechTreeData_Effect):clz_Torappu_Act1VHalfIdleTechTreeData_Effect|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new clz_Torappu_Act1VHalfIdleTechTreeData_Effect()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

effectLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_Act1VHalfIdleTechTreeData(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addNodeId(builder:flatbuffers.Builder, nodeIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, nodeIdOffset, 0);
}

static addNodeType(builder:flatbuffers.Builder, nodeType:enum__Torappu_Act1VHalfIdleTechTreeNodeType) {
  builder.addFieldInt32(1, nodeType, enum__Torappu_Act1VHalfIdleTechTreeNodeType.NONE);
}

static addPrevNodeId(builder:flatbuffers.Builder, prevNodeIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, prevNodeIdOffset, 0);
}

static createPrevNodeIdVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPrevNodeIdVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTokenCost(builder:flatbuffers.Builder, tokenCost:number) {
  builder.addFieldInt32(3, tokenCost, 0);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, nameOffset, 0);
}

static addIconId(builder:flatbuffers.Builder, iconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, iconIdOffset, 0);
}

static addShowPrevLockTips(builder:flatbuffers.Builder, showPrevLockTips:boolean) {
  builder.addFieldInt8(6, +showPrevLockTips, +false);
}

static addEffect(builder:flatbuffers.Builder, effectOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, effectOffset, 0);
}

static createEffectVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEffectVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_Act1VHalfIdleTechTreeData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Act1VHalfIdleTechTreeData(builder:flatbuffers.Builder, nodeIdOffset:flatbuffers.Offset, nodeType:enum__Torappu_Act1VHalfIdleTechTreeNodeType, prevNodeIdOffset:flatbuffers.Offset, tokenCost:number, nameOffset:flatbuffers.Offset, iconIdOffset:flatbuffers.Offset, showPrevLockTips:boolean, effectOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_Act1VHalfIdleTechTreeData.startclz_Torappu_Act1VHalfIdleTechTreeData(builder);
  clz_Torappu_Act1VHalfIdleTechTreeData.addNodeId(builder, nodeIdOffset);
  clz_Torappu_Act1VHalfIdleTechTreeData.addNodeType(builder, nodeType);
  clz_Torappu_Act1VHalfIdleTechTreeData.addPrevNodeId(builder, prevNodeIdOffset);
  clz_Torappu_Act1VHalfIdleTechTreeData.addTokenCost(builder, tokenCost);
  clz_Torappu_Act1VHalfIdleTechTreeData.addName(builder, nameOffset);
  clz_Torappu_Act1VHalfIdleTechTreeData.addIconId(builder, iconIdOffset);
  clz_Torappu_Act1VHalfIdleTechTreeData.addShowPrevLockTips(builder, showPrevLockTips);
  clz_Torappu_Act1VHalfIdleTechTreeData.addEffect(builder, effectOffset);
  return clz_Torappu_Act1VHalfIdleTechTreeData.endclz_Torappu_Act1VHalfIdleTechTreeData(builder);
}

unpack(): clz_Torappu_Act1VHalfIdleTechTreeDataT {
  return new clz_Torappu_Act1VHalfIdleTechTreeDataT(
    this.nodeId(),
    this.nodeType(),
    this.bb!.createScalarList<string>(this.prevNodeId.bind(this), this.prevNodeIdLength()),
    this.tokenCost(),
    this.name(),
    this.iconId(),
    this.showPrevLockTips(),
    this.bb!.createObjList<clz_Torappu_Act1VHalfIdleTechTreeData_Effect, clz_Torappu_Act1VHalfIdleTechTreeData_EffectT>(this.effect.bind(this), this.effectLength())
  );
}


unpackTo(_o: clz_Torappu_Act1VHalfIdleTechTreeDataT): void {
  _o.nodeId = this.nodeId();
  _o.nodeType = this.nodeType();
  _o.prevNodeId = this.bb!.createScalarList<string>(this.prevNodeId.bind(this), this.prevNodeIdLength());
  _o.tokenCost = this.tokenCost();
  _o.name = this.name();
  _o.iconId = this.iconId();
  _o.showPrevLockTips = this.showPrevLockTips();
  _o.effect = this.bb!.createObjList<clz_Torappu_Act1VHalfIdleTechTreeData_Effect, clz_Torappu_Act1VHalfIdleTechTreeData_EffectT>(this.effect.bind(this), this.effectLength());
}
}

export class clz_Torappu_Act1VHalfIdleTechTreeDataT implements flatbuffers.IGeneratedObject {
constructor(
  public nodeId: string|Uint8Array|null = null,
  public nodeType: enum__Torappu_Act1VHalfIdleTechTreeNodeType = enum__Torappu_Act1VHalfIdleTechTreeNodeType.NONE,
  public prevNodeId: (string)[] = [],
  public tokenCost: number = 0,
  public name: string|Uint8Array|null = null,
  public iconId: string|Uint8Array|null = null,
  public showPrevLockTips: boolean = false,
  public effect: (clz_Torappu_Act1VHalfIdleTechTreeData_EffectT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const nodeId = (this.nodeId !== null ? builder.createString(this.nodeId!) : 0);
  const prevNodeId = clz_Torappu_Act1VHalfIdleTechTreeData.createPrevNodeIdVector(builder, builder.createObjectOffsetList(this.prevNodeId));
  const name = (this.name !== null ? builder.createString(this.name!) : 0);
  const iconId = (this.iconId !== null ? builder.createString(this.iconId!) : 0);
  const effect = clz_Torappu_Act1VHalfIdleTechTreeData.createEffectVector(builder, builder.createObjectOffsetList(this.effect));

  return clz_Torappu_Act1VHalfIdleTechTreeData.createclz_Torappu_Act1VHalfIdleTechTreeData(builder,
    nodeId,
    this.nodeType,
    prevNodeId,
    this.tokenCost,
    name,
    iconId,
    this.showPrevLockTips,
    effect
  );
}
}
