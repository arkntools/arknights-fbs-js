// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SandboxV2FixedRiftData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxV2FixedRiftDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxV2FixedRiftData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxV2FixedRiftData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2FixedRiftData):clz_Torappu_SandboxV2FixedRiftData {
  return (obj || new clz_Torappu_SandboxV2FixedRiftData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxV2FixedRiftData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2FixedRiftData):clz_Torappu_SandboxV2FixedRiftData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxV2FixedRiftData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

riftId():string|null
riftId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
riftId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

riftName():string|null
riftName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
riftName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

rewardGroupId():string|null
rewardGroupId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
rewardGroupId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_SandboxV2FixedRiftData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addRiftId(builder:flatbuffers.Builder, riftIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, riftIdOffset, 0);
}

static addRiftName(builder:flatbuffers.Builder, riftNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, riftNameOffset, 0);
}

static addRewardGroupId(builder:flatbuffers.Builder, rewardGroupIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, rewardGroupIdOffset, 0);
}

static endclz_Torappu_SandboxV2FixedRiftData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxV2FixedRiftData(builder:flatbuffers.Builder, riftIdOffset:flatbuffers.Offset, riftNameOffset:flatbuffers.Offset, rewardGroupIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SandboxV2FixedRiftData.startclz_Torappu_SandboxV2FixedRiftData(builder);
  clz_Torappu_SandboxV2FixedRiftData.addRiftId(builder, riftIdOffset);
  clz_Torappu_SandboxV2FixedRiftData.addRiftName(builder, riftNameOffset);
  clz_Torappu_SandboxV2FixedRiftData.addRewardGroupId(builder, rewardGroupIdOffset);
  return clz_Torappu_SandboxV2FixedRiftData.endclz_Torappu_SandboxV2FixedRiftData(builder);
}

unpack(): clz_Torappu_SandboxV2FixedRiftDataT {
  return new clz_Torappu_SandboxV2FixedRiftDataT(
    this.riftId(),
    this.riftName(),
    this.rewardGroupId()
  );
}


unpackTo(_o: clz_Torappu_SandboxV2FixedRiftDataT): void {
  _o.riftId = this.riftId();
  _o.riftName = this.riftName();
  _o.rewardGroupId = this.rewardGroupId();
}
}

export class clz_Torappu_SandboxV2FixedRiftDataT implements flatbuffers.IGeneratedObject {
constructor(
  public riftId: string|Uint8Array|null = null,
  public riftName: string|Uint8Array|null = null,
  public rewardGroupId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const riftId = (this.riftId !== null ? builder.createString(this.riftId!) : 0);
  const riftName = (this.riftName !== null ? builder.createString(this.riftName!) : 0);
  const rewardGroupId = (this.rewardGroupId !== null ? builder.createString(this.rewardGroupId!) : 0);

  return clz_Torappu_SandboxV2FixedRiftData.createclz_Torappu_SandboxV2FixedRiftData(builder,
    riftId,
    riftName,
    rewardGroupId
  );
}
}
