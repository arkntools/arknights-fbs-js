// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_CharWordShowType } from './enum--torappu-char-word-show-type.js';


export class clz_Torappu_FestivalVoiceWeightData implements flatbuffers.IUnpackableObject<clz_Torappu_FestivalVoiceWeightDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_FestivalVoiceWeightData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_FestivalVoiceWeightData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_FestivalVoiceWeightData):clz_Torappu_FestivalVoiceWeightData {
  return (obj || new clz_Torappu_FestivalVoiceWeightData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_FestivalVoiceWeightData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_FestivalVoiceWeightData):clz_Torappu_FestivalVoiceWeightData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_FestivalVoiceWeightData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

showType():enum__Torappu_CharWordShowType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_CharWordShowType.HOME_SHOW;
}

weight():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

priority():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_FestivalVoiceWeightData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addShowType(builder:flatbuffers.Builder, showType:enum__Torappu_CharWordShowType) {
  builder.addFieldInt32(0, showType, enum__Torappu_CharWordShowType.HOME_SHOW);
}

static addWeight(builder:flatbuffers.Builder, weight:number) {
  builder.addFieldFloat32(1, weight, 0.0);
}

static addPriority(builder:flatbuffers.Builder, priority:number) {
  builder.addFieldInt32(2, priority, 0);
}

static endclz_Torappu_FestivalVoiceWeightData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_FestivalVoiceWeightData(builder:flatbuffers.Builder, showType:enum__Torappu_CharWordShowType, weight:number, priority:number):flatbuffers.Offset {
  clz_Torappu_FestivalVoiceWeightData.startclz_Torappu_FestivalVoiceWeightData(builder);
  clz_Torappu_FestivalVoiceWeightData.addShowType(builder, showType);
  clz_Torappu_FestivalVoiceWeightData.addWeight(builder, weight);
  clz_Torappu_FestivalVoiceWeightData.addPriority(builder, priority);
  return clz_Torappu_FestivalVoiceWeightData.endclz_Torappu_FestivalVoiceWeightData(builder);
}

unpack(): clz_Torappu_FestivalVoiceWeightDataT {
  return new clz_Torappu_FestivalVoiceWeightDataT(
    this.showType(),
    this.weight(),
    this.priority()
  );
}


unpackTo(_o: clz_Torappu_FestivalVoiceWeightDataT): void {
  _o.showType = this.showType();
  _o.weight = this.weight();
  _o.priority = this.priority();
}
}

export class clz_Torappu_FestivalVoiceWeightDataT implements flatbuffers.IGeneratedObject {
constructor(
  public showType: enum__Torappu_CharWordShowType = enum__Torappu_CharWordShowType.HOME_SHOW,
  public weight: number = 0.0,
  public priority: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return clz_Torappu_FestivalVoiceWeightData.createclz_Torappu_FestivalVoiceWeightData(builder,
    this.showType,
    this.weight,
    this.priority
  );
}
}
