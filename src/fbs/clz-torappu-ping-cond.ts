// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_PingCond implements flatbuffers.IUnpackableObject<clz_Torappu_PingCondT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_PingCond {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_PingCond(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_PingCond):clz_Torappu_PingCond {
  return (obj || new clz_Torappu_PingCond()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_PingCond(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_PingCond):clz_Torappu_PingCond {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_PingCond()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

cond():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

txt():string|null
txt(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
txt(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_PingCond(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addCond(builder:flatbuffers.Builder, cond:number) {
  builder.addFieldInt32(0, cond, 0);
}

static addTxt(builder:flatbuffers.Builder, txtOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, txtOffset, 0);
}

static endclz_Torappu_PingCond(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_PingCond(builder:flatbuffers.Builder, cond:number, txtOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_PingCond.startclz_Torappu_PingCond(builder);
  clz_Torappu_PingCond.addCond(builder, cond);
  clz_Torappu_PingCond.addTxt(builder, txtOffset);
  return clz_Torappu_PingCond.endclz_Torappu_PingCond(builder);
}

unpack(): clz_Torappu_PingCondT {
  return new clz_Torappu_PingCondT(
    this.cond(),
    this.txt()
  );
}


unpackTo(_o: clz_Torappu_PingCondT): void {
  _o.cond = this.cond();
  _o.txt = this.txt();
}
}

export class clz_Torappu_PingCondT implements flatbuffers.IGeneratedObject {
constructor(
  public cond: number = 0,
  public txt: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const txt = (this.txt !== null ? builder.createString(this.txt!) : 0);

  return clz_Torappu_PingCond.createclz_Torappu_PingCond(builder,
    this.cond,
    txt
  );
}
}
