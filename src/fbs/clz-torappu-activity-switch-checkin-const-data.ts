// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActivitySwitchCheckinConstData implements flatbuffers.IUnpackableObject<clz_Torappu_ActivitySwitchCheckinConstDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActivitySwitchCheckinConstData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActivitySwitchCheckinConstData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivitySwitchCheckinConstData):clz_Torappu_ActivitySwitchCheckinConstData {
  return (obj || new clz_Torappu_ActivitySwitchCheckinConstData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActivitySwitchCheckinConstData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivitySwitchCheckinConstData):clz_Torappu_ActivitySwitchCheckinConstData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActivitySwitchCheckinConstData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

activityTime():string|null
activityTime(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
activityTime(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

activityRule():string|null
activityRule(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
activityRule(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_ActivitySwitchCheckinConstData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addActivityTime(builder:flatbuffers.Builder, activityTimeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, activityTimeOffset, 0);
}

static addActivityRule(builder:flatbuffers.Builder, activityRuleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, activityRuleOffset, 0);
}

static endclz_Torappu_ActivitySwitchCheckinConstData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActivitySwitchCheckinConstData(builder:flatbuffers.Builder, activityTimeOffset:flatbuffers.Offset, activityRuleOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActivitySwitchCheckinConstData.startclz_Torappu_ActivitySwitchCheckinConstData(builder);
  clz_Torappu_ActivitySwitchCheckinConstData.addActivityTime(builder, activityTimeOffset);
  clz_Torappu_ActivitySwitchCheckinConstData.addActivityRule(builder, activityRuleOffset);
  return clz_Torappu_ActivitySwitchCheckinConstData.endclz_Torappu_ActivitySwitchCheckinConstData(builder);
}

unpack(): clz_Torappu_ActivitySwitchCheckinConstDataT {
  return new clz_Torappu_ActivitySwitchCheckinConstDataT(
    this.activityTime(),
    this.activityRule()
  );
}


unpackTo(_o: clz_Torappu_ActivitySwitchCheckinConstDataT): void {
  _o.activityTime = this.activityTime();
  _o.activityRule = this.activityRule();
}
}

export class clz_Torappu_ActivitySwitchCheckinConstDataT implements flatbuffers.IGeneratedObject {
constructor(
  public activityTime: string|Uint8Array|null = null,
  public activityRule: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const activityTime = (this.activityTime !== null ? builder.createString(this.activityTime!) : 0);
  const activityRule = (this.activityRule !== null ? builder.createString(this.activityRule!) : 0);

  return clz_Torappu_ActivitySwitchCheckinConstData.createclz_Torappu_ActivitySwitchCheckinConstData(builder,
    activityTime,
    activityRule
  );
}
}
