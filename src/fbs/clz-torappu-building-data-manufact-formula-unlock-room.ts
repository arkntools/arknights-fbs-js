// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_BuildingData_RoomType } from './enum--torappu-building-data-room-type.js';


export class clz_Torappu_BuildingData_ManufactFormula_UnlockRoom implements flatbuffers.IUnpackableObject<clz_Torappu_BuildingData_ManufactFormula_UnlockRoomT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_BuildingData_ManufactFormula_UnlockRoom {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_BuildingData_ManufactFormula_UnlockRoom(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_ManufactFormula_UnlockRoom):clz_Torappu_BuildingData_ManufactFormula_UnlockRoom {
  return (obj || new clz_Torappu_BuildingData_ManufactFormula_UnlockRoom()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_BuildingData_ManufactFormula_UnlockRoom(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_ManufactFormula_UnlockRoom):clz_Torappu_BuildingData_ManufactFormula_UnlockRoom {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_BuildingData_ManufactFormula_UnlockRoom()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

roomId():enum__Torappu_BuildingData_RoomType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_BuildingData_RoomType.NONE;
}

roomLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

roomCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_BuildingData_ManufactFormula_UnlockRoom(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addRoomId(builder:flatbuffers.Builder, roomId:enum__Torappu_BuildingData_RoomType) {
  builder.addFieldInt32(0, roomId, enum__Torappu_BuildingData_RoomType.NONE);
}

static addRoomLevel(builder:flatbuffers.Builder, roomLevel:number) {
  builder.addFieldInt32(1, roomLevel, 0);
}

static addRoomCount(builder:flatbuffers.Builder, roomCount:number) {
  builder.addFieldInt32(2, roomCount, 0);
}

static endclz_Torappu_BuildingData_ManufactFormula_UnlockRoom(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_BuildingData_ManufactFormula_UnlockRoom(builder:flatbuffers.Builder, roomId:enum__Torappu_BuildingData_RoomType, roomLevel:number, roomCount:number):flatbuffers.Offset {
  clz_Torappu_BuildingData_ManufactFormula_UnlockRoom.startclz_Torappu_BuildingData_ManufactFormula_UnlockRoom(builder);
  clz_Torappu_BuildingData_ManufactFormula_UnlockRoom.addRoomId(builder, roomId);
  clz_Torappu_BuildingData_ManufactFormula_UnlockRoom.addRoomLevel(builder, roomLevel);
  clz_Torappu_BuildingData_ManufactFormula_UnlockRoom.addRoomCount(builder, roomCount);
  return clz_Torappu_BuildingData_ManufactFormula_UnlockRoom.endclz_Torappu_BuildingData_ManufactFormula_UnlockRoom(builder);
}

unpack(): clz_Torappu_BuildingData_ManufactFormula_UnlockRoomT {
  return new clz_Torappu_BuildingData_ManufactFormula_UnlockRoomT(
    this.roomId(),
    this.roomLevel(),
    this.roomCount()
  );
}


unpackTo(_o: clz_Torappu_BuildingData_ManufactFormula_UnlockRoomT): void {
  _o.roomId = this.roomId();
  _o.roomLevel = this.roomLevel();
  _o.roomCount = this.roomCount();
}
}

export class clz_Torappu_BuildingData_ManufactFormula_UnlockRoomT implements flatbuffers.IGeneratedObject {
constructor(
  public roomId: enum__Torappu_BuildingData_RoomType = enum__Torappu_BuildingData_RoomType.NONE,
  public roomLevel: number = 0,
  public roomCount: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return clz_Torappu_BuildingData_ManufactFormula_UnlockRoom.createclz_Torappu_BuildingData_ManufactFormula_UnlockRoom(builder,
    this.roomId,
    this.roomLevel,
    this.roomCount
  );
}
}
