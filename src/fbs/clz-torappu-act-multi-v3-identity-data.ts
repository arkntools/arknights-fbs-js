// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_ActMultiV3IdentityType } from './enum--torappu-act-multi-v3-identity-type.js';


export class clz_Torappu_ActMultiV3IdentityData implements flatbuffers.IUnpackableObject<clz_Torappu_ActMultiV3IdentityDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActMultiV3IdentityData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActMultiV3IdentityData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActMultiV3IdentityData):clz_Torappu_ActMultiV3IdentityData {
  return (obj || new clz_Torappu_ActMultiV3IdentityData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActMultiV3IdentityData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActMultiV3IdentityData):clz_Torappu_ActMultiV3IdentityData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActMultiV3IdentityData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

picId():string|null
picId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
picId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

type():enum__Torappu_ActMultiV3IdentityType {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_ActMultiV3IdentityType.NONE;
}

maxNum():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

color():string|null
color(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
color(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_ActMultiV3IdentityData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(1, sortId, 0);
}

static addPicId(builder:flatbuffers.Builder, picIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, picIdOffset, 0);
}

static addType(builder:flatbuffers.Builder, type:enum__Torappu_ActMultiV3IdentityType) {
  builder.addFieldInt32(3, type, enum__Torappu_ActMultiV3IdentityType.NONE);
}

static addMaxNum(builder:flatbuffers.Builder, maxNum:number) {
  builder.addFieldInt32(4, maxNum, 0);
}

static addColor(builder:flatbuffers.Builder, colorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, colorOffset, 0);
}

static endclz_Torappu_ActMultiV3IdentityData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActMultiV3IdentityData(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset, sortId:number, picIdOffset:flatbuffers.Offset, type:enum__Torappu_ActMultiV3IdentityType, maxNum:number, colorOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActMultiV3IdentityData.startclz_Torappu_ActMultiV3IdentityData(builder);
  clz_Torappu_ActMultiV3IdentityData.addId(builder, idOffset);
  clz_Torappu_ActMultiV3IdentityData.addSortId(builder, sortId);
  clz_Torappu_ActMultiV3IdentityData.addPicId(builder, picIdOffset);
  clz_Torappu_ActMultiV3IdentityData.addType(builder, type);
  clz_Torappu_ActMultiV3IdentityData.addMaxNum(builder, maxNum);
  clz_Torappu_ActMultiV3IdentityData.addColor(builder, colorOffset);
  return clz_Torappu_ActMultiV3IdentityData.endclz_Torappu_ActMultiV3IdentityData(builder);
}

unpack(): clz_Torappu_ActMultiV3IdentityDataT {
  return new clz_Torappu_ActMultiV3IdentityDataT(
    this.id(),
    this.sortId(),
    this.picId(),
    this.type(),
    this.maxNum(),
    this.color()
  );
}


unpackTo(_o: clz_Torappu_ActMultiV3IdentityDataT): void {
  _o.id = this.id();
  _o.sortId = this.sortId();
  _o.picId = this.picId();
  _o.type = this.type();
  _o.maxNum = this.maxNum();
  _o.color = this.color();
}
}

export class clz_Torappu_ActMultiV3IdentityDataT implements flatbuffers.IGeneratedObject {
constructor(
  public id: string|Uint8Array|null = null,
  public sortId: number = 0,
  public picId: string|Uint8Array|null = null,
  public type: enum__Torappu_ActMultiV3IdentityType = enum__Torappu_ActMultiV3IdentityType.NONE,
  public maxNum: number = 0,
  public color: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const id = (this.id !== null ? builder.createString(this.id!) : 0);
  const picId = (this.picId !== null ? builder.createString(this.picId!) : 0);
  const color = (this.color !== null ? builder.createString(this.color!) : 0);

  return clz_Torappu_ActMultiV3IdentityData.createclz_Torappu_ActMultiV3IdentityData(builder,
    id,
    this.sortId,
    picId,
    this.type,
    this.maxNum,
    color
  );
}
}
