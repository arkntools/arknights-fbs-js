// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_DailyMissionGroupInfo_periodInfo, clz_Torappu_DailyMissionGroupInfo_periodInfoT } from './clz-torappu-daily-mission-group-info-period-info.js';


export class clz_Torappu_DailyMissionGroupInfo implements flatbuffers.IUnpackableObject<clz_Torappu_DailyMissionGroupInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_DailyMissionGroupInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_DailyMissionGroupInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_DailyMissionGroupInfo):clz_Torappu_DailyMissionGroupInfo {
  return (obj || new clz_Torappu_DailyMissionGroupInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_DailyMissionGroupInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_DailyMissionGroupInfo):clz_Torappu_DailyMissionGroupInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_DailyMissionGroupInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

startTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

endTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

tagState():string|null
tagState(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
tagState(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

periodList(index: number, obj?:clz_Torappu_DailyMissionGroupInfo_periodInfo):clz_Torappu_DailyMissionGroupInfo_periodInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_Torappu_DailyMissionGroupInfo_periodInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

periodListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_DailyMissionGroupInfo(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addStartTime(builder:flatbuffers.Builder, startTime:bigint) {
  builder.addFieldInt64(0, startTime, BigInt('0'));
}

static addEndTime(builder:flatbuffers.Builder, endTime:bigint) {
  builder.addFieldInt64(1, endTime, BigInt('0'));
}

static addTagState(builder:flatbuffers.Builder, tagStateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, tagStateOffset, 0);
}

static addPeriodList(builder:flatbuffers.Builder, periodListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, periodListOffset, 0);
}

static createPeriodListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPeriodListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_DailyMissionGroupInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_DailyMissionGroupInfo(builder:flatbuffers.Builder, startTime:bigint, endTime:bigint, tagStateOffset:flatbuffers.Offset, periodListOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_DailyMissionGroupInfo.startclz_Torappu_DailyMissionGroupInfo(builder);
  clz_Torappu_DailyMissionGroupInfo.addStartTime(builder, startTime);
  clz_Torappu_DailyMissionGroupInfo.addEndTime(builder, endTime);
  clz_Torappu_DailyMissionGroupInfo.addTagState(builder, tagStateOffset);
  clz_Torappu_DailyMissionGroupInfo.addPeriodList(builder, periodListOffset);
  return clz_Torappu_DailyMissionGroupInfo.endclz_Torappu_DailyMissionGroupInfo(builder);
}

unpack(): clz_Torappu_DailyMissionGroupInfoT {
  return new clz_Torappu_DailyMissionGroupInfoT(
    this.startTime(),
    this.endTime(),
    this.tagState(),
    this.bb!.createObjList<clz_Torappu_DailyMissionGroupInfo_periodInfo, clz_Torappu_DailyMissionGroupInfo_periodInfoT>(this.periodList.bind(this), this.periodListLength())
  );
}


unpackTo(_o: clz_Torappu_DailyMissionGroupInfoT): void {
  _o.startTime = this.startTime();
  _o.endTime = this.endTime();
  _o.tagState = this.tagState();
  _o.periodList = this.bb!.createObjList<clz_Torappu_DailyMissionGroupInfo_periodInfo, clz_Torappu_DailyMissionGroupInfo_periodInfoT>(this.periodList.bind(this), this.periodListLength());
}
}

export class clz_Torappu_DailyMissionGroupInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public startTime: bigint = BigInt('0'),
  public endTime: bigint = BigInt('0'),
  public tagState: string|Uint8Array|null = null,
  public periodList: (clz_Torappu_DailyMissionGroupInfo_periodInfoT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const tagState = (this.tagState !== null ? builder.createString(this.tagState!) : 0);
  const periodList = clz_Torappu_DailyMissionGroupInfo.createPeriodListVector(builder, builder.createObjectOffsetList(this.periodList));

  return clz_Torappu_DailyMissionGroupInfo.createclz_Torappu_DailyMissionGroupInfo(builder,
    this.startTime,
    this.endTime,
    tagState,
    periodList
  );
}
}
