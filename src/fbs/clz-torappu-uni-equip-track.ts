// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_UniEquipType } from './enum--torappu-uni-equip-type.js';


export class clz_Torappu_UniEquipTrack implements flatbuffers.IUnpackableObject<clz_Torappu_UniEquipTrackT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_UniEquipTrack {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_UniEquipTrack(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_UniEquipTrack):clz_Torappu_UniEquipTrack {
  return (obj || new clz_Torappu_UniEquipTrack()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_UniEquipTrack(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_UniEquipTrack):clz_Torappu_UniEquipTrack {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_UniEquipTrack()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

charId():string|null
charId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
charId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

equipId():string|null
equipId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
equipId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

type():enum__Torappu_UniEquipType {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_UniEquipType.INITIAL;
}

archiveShowTimeEnd():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startclz_Torappu_UniEquipTrack(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addCharId(builder:flatbuffers.Builder, charIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, charIdOffset, 0);
}

static addEquipId(builder:flatbuffers.Builder, equipIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, equipIdOffset, 0);
}

static addType(builder:flatbuffers.Builder, type:enum__Torappu_UniEquipType) {
  builder.addFieldInt32(2, type, enum__Torappu_UniEquipType.INITIAL);
}

static addArchiveShowTimeEnd(builder:flatbuffers.Builder, archiveShowTimeEnd:bigint) {
  builder.addFieldInt64(3, archiveShowTimeEnd, BigInt('0'));
}

static endclz_Torappu_UniEquipTrack(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_UniEquipTrack(builder:flatbuffers.Builder, charIdOffset:flatbuffers.Offset, equipIdOffset:flatbuffers.Offset, type:enum__Torappu_UniEquipType, archiveShowTimeEnd:bigint):flatbuffers.Offset {
  clz_Torappu_UniEquipTrack.startclz_Torappu_UniEquipTrack(builder);
  clz_Torappu_UniEquipTrack.addCharId(builder, charIdOffset);
  clz_Torappu_UniEquipTrack.addEquipId(builder, equipIdOffset);
  clz_Torappu_UniEquipTrack.addType(builder, type);
  clz_Torappu_UniEquipTrack.addArchiveShowTimeEnd(builder, archiveShowTimeEnd);
  return clz_Torappu_UniEquipTrack.endclz_Torappu_UniEquipTrack(builder);
}

unpack(): clz_Torappu_UniEquipTrackT {
  return new clz_Torappu_UniEquipTrackT(
    this.charId(),
    this.equipId(),
    this.type(),
    this.archiveShowTimeEnd()
  );
}


unpackTo(_o: clz_Torappu_UniEquipTrackT): void {
  _o.charId = this.charId();
  _o.equipId = this.equipId();
  _o.type = this.type();
  _o.archiveShowTimeEnd = this.archiveShowTimeEnd();
}
}

export class clz_Torappu_UniEquipTrackT implements flatbuffers.IGeneratedObject {
constructor(
  public charId: string|Uint8Array|null = null,
  public equipId: string|Uint8Array|null = null,
  public type: enum__Torappu_UniEquipType = enum__Torappu_UniEquipType.INITIAL,
  public archiveShowTimeEnd: bigint = BigInt('0')
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const charId = (this.charId !== null ? builder.createString(this.charId!) : 0);
  const equipId = (this.equipId !== null ? builder.createString(this.equipId!) : 0);

  return clz_Torappu_UniEquipTrack.createclz_Torappu_UniEquipTrack(builder,
    charId,
    equipId,
    this.type,
    this.archiveShowTimeEnd
  );
}
}
