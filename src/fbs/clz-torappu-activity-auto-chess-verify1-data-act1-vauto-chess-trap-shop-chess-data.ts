// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_Act1VAutoChessTrapChessType } from './enum--torappu-act1-vauto-chess-trap-chess-type.js';


export class clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData implements flatbuffers.IUnpackableObject<clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData):clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData {
  return (obj || new clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData):clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

itemId():string|null
itemId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
itemId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

goldenItemId():string|null
goldenItemId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
goldenItemId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

hideInChessShop():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

itemLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

iconLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

shopLevelSortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

itemType():enum__Torappu_Act1VAutoChessTrapChessType {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_Act1VAutoChessTrapChessType.NONE;
}

trapId():string|null
trapId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
trapId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addItemId(builder:flatbuffers.Builder, itemIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, itemIdOffset, 0);
}

static addGoldenItemId(builder:flatbuffers.Builder, goldenItemIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, goldenItemIdOffset, 0);
}

static addHideInChessShop(builder:flatbuffers.Builder, hideInChessShop:boolean) {
  builder.addFieldInt8(2, +hideInChessShop, +false);
}

static addItemLevel(builder:flatbuffers.Builder, itemLevel:number) {
  builder.addFieldInt32(3, itemLevel, 0);
}

static addIconLevel(builder:flatbuffers.Builder, iconLevel:number) {
  builder.addFieldInt32(4, iconLevel, 0);
}

static addShopLevelSortId(builder:flatbuffers.Builder, shopLevelSortId:number) {
  builder.addFieldInt32(5, shopLevelSortId, 0);
}

static addItemType(builder:flatbuffers.Builder, itemType:enum__Torappu_Act1VAutoChessTrapChessType) {
  builder.addFieldInt32(6, itemType, enum__Torappu_Act1VAutoChessTrapChessType.NONE);
}

static addTrapId(builder:flatbuffers.Builder, trapIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, trapIdOffset, 0);
}

static endclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData(builder:flatbuffers.Builder, itemIdOffset:flatbuffers.Offset, goldenItemIdOffset:flatbuffers.Offset, hideInChessShop:boolean, itemLevel:number, iconLevel:number, shopLevelSortId:number, itemType:enum__Torappu_Act1VAutoChessTrapChessType, trapIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData.startclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData(builder);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData.addItemId(builder, itemIdOffset);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData.addGoldenItemId(builder, goldenItemIdOffset);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData.addHideInChessShop(builder, hideInChessShop);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData.addItemLevel(builder, itemLevel);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData.addIconLevel(builder, iconLevel);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData.addShopLevelSortId(builder, shopLevelSortId);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData.addItemType(builder, itemType);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData.addTrapId(builder, trapIdOffset);
  return clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData.endclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData(builder);
}

unpack(): clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessDataT {
  return new clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessDataT(
    this.itemId(),
    this.goldenItemId(),
    this.hideInChessShop(),
    this.itemLevel(),
    this.iconLevel(),
    this.shopLevelSortId(),
    this.itemType(),
    this.trapId()
  );
}


unpackTo(_o: clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessDataT): void {
  _o.itemId = this.itemId();
  _o.goldenItemId = this.goldenItemId();
  _o.hideInChessShop = this.hideInChessShop();
  _o.itemLevel = this.itemLevel();
  _o.iconLevel = this.iconLevel();
  _o.shopLevelSortId = this.shopLevelSortId();
  _o.itemType = this.itemType();
  _o.trapId = this.trapId();
}
}

export class clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessDataT implements flatbuffers.IGeneratedObject {
constructor(
  public itemId: string|Uint8Array|null = null,
  public goldenItemId: string|Uint8Array|null = null,
  public hideInChessShop: boolean = false,
  public itemLevel: number = 0,
  public iconLevel: number = 0,
  public shopLevelSortId: number = 0,
  public itemType: enum__Torappu_Act1VAutoChessTrapChessType = enum__Torappu_Act1VAutoChessTrapChessType.NONE,
  public trapId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const itemId = (this.itemId !== null ? builder.createString(this.itemId!) : 0);
  const goldenItemId = (this.goldenItemId !== null ? builder.createString(this.goldenItemId!) : 0);
  const trapId = (this.trapId !== null ? builder.createString(this.trapId!) : 0);

  return clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData.createclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessTrapShopChessData(builder,
    itemId,
    goldenItemId,
    this.hideInChessShop,
    this.itemLevel,
    this.iconLevel,
    this.shopLevelSortId,
    this.itemType,
    trapId
  );
}
}
