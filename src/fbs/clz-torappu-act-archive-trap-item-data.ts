// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActArchiveTrapItemData implements flatbuffers.IUnpackableObject<clz_Torappu_ActArchiveTrapItemDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActArchiveTrapItemData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActArchiveTrapItemData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActArchiveTrapItemData):clz_Torappu_ActArchiveTrapItemData {
  return (obj || new clz_Torappu_ActArchiveTrapItemData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActArchiveTrapItemData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActArchiveTrapItemData):clz_Torappu_ActArchiveTrapItemData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActArchiveTrapItemData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

trapId():string|null
trapId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
trapId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

trapSortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

orderId():string|null
orderId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
orderId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

enrollId():string|null
enrollId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
enrollId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_ActArchiveTrapItemData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addTrapId(builder:flatbuffers.Builder, trapIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, trapIdOffset, 0);
}

static addTrapSortId(builder:flatbuffers.Builder, trapSortId:number) {
  builder.addFieldInt32(1, trapSortId, 0);
}

static addOrderId(builder:flatbuffers.Builder, orderIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, orderIdOffset, 0);
}

static addEnrollId(builder:flatbuffers.Builder, enrollIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, enrollIdOffset, 0);
}

static endclz_Torappu_ActArchiveTrapItemData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActArchiveTrapItemData(builder:flatbuffers.Builder, trapIdOffset:flatbuffers.Offset, trapSortId:number, orderIdOffset:flatbuffers.Offset, enrollIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActArchiveTrapItemData.startclz_Torappu_ActArchiveTrapItemData(builder);
  clz_Torappu_ActArchiveTrapItemData.addTrapId(builder, trapIdOffset);
  clz_Torappu_ActArchiveTrapItemData.addTrapSortId(builder, trapSortId);
  clz_Torappu_ActArchiveTrapItemData.addOrderId(builder, orderIdOffset);
  clz_Torappu_ActArchiveTrapItemData.addEnrollId(builder, enrollIdOffset);
  return clz_Torappu_ActArchiveTrapItemData.endclz_Torappu_ActArchiveTrapItemData(builder);
}

unpack(): clz_Torappu_ActArchiveTrapItemDataT {
  return new clz_Torappu_ActArchiveTrapItemDataT(
    this.trapId(),
    this.trapSortId(),
    this.orderId(),
    this.enrollId()
  );
}


unpackTo(_o: clz_Torappu_ActArchiveTrapItemDataT): void {
  _o.trapId = this.trapId();
  _o.trapSortId = this.trapSortId();
  _o.orderId = this.orderId();
  _o.enrollId = this.enrollId();
}
}

export class clz_Torappu_ActArchiveTrapItemDataT implements flatbuffers.IGeneratedObject {
constructor(
  public trapId: string|Uint8Array|null = null,
  public trapSortId: number = 0,
  public orderId: string|Uint8Array|null = null,
  public enrollId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const trapId = (this.trapId !== null ? builder.createString(this.trapId!) : 0);
  const orderId = (this.orderId !== null ? builder.createString(this.orderId!) : 0);
  const enrollId = (this.enrollId !== null ? builder.createString(this.enrollId!) : 0);

  return clz_Torappu_ActArchiveTrapItemData.createclz_Torappu_ActArchiveTrapItemData(builder,
    trapId,
    this.trapSortId,
    orderId,
    enrollId
  );
}
}
