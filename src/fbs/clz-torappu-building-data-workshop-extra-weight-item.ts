// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_BuildingData_WorkshopExtraWeightItem implements flatbuffers.IUnpackableObject<clz_Torappu_BuildingData_WorkshopExtraWeightItemT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_BuildingData_WorkshopExtraWeightItem {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_BuildingData_WorkshopExtraWeightItem(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_WorkshopExtraWeightItem):clz_Torappu_BuildingData_WorkshopExtraWeightItem {
  return (obj || new clz_Torappu_BuildingData_WorkshopExtraWeightItem()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_BuildingData_WorkshopExtraWeightItem(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_WorkshopExtraWeightItem):clz_Torappu_BuildingData_WorkshopExtraWeightItem {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_BuildingData_WorkshopExtraWeightItem()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

weight():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

itemId():string|null
itemId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
itemId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

itemCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_BuildingData_WorkshopExtraWeightItem(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addWeight(builder:flatbuffers.Builder, weight:number) {
  builder.addFieldInt32(0, weight, 0);
}

static addItemId(builder:flatbuffers.Builder, itemIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, itemIdOffset, 0);
}

static addItemCount(builder:flatbuffers.Builder, itemCount:number) {
  builder.addFieldInt32(2, itemCount, 0);
}

static endclz_Torappu_BuildingData_WorkshopExtraWeightItem(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_BuildingData_WorkshopExtraWeightItem(builder:flatbuffers.Builder, weight:number, itemIdOffset:flatbuffers.Offset, itemCount:number):flatbuffers.Offset {
  clz_Torappu_BuildingData_WorkshopExtraWeightItem.startclz_Torappu_BuildingData_WorkshopExtraWeightItem(builder);
  clz_Torappu_BuildingData_WorkshopExtraWeightItem.addWeight(builder, weight);
  clz_Torappu_BuildingData_WorkshopExtraWeightItem.addItemId(builder, itemIdOffset);
  clz_Torappu_BuildingData_WorkshopExtraWeightItem.addItemCount(builder, itemCount);
  return clz_Torappu_BuildingData_WorkshopExtraWeightItem.endclz_Torappu_BuildingData_WorkshopExtraWeightItem(builder);
}

unpack(): clz_Torappu_BuildingData_WorkshopExtraWeightItemT {
  return new clz_Torappu_BuildingData_WorkshopExtraWeightItemT(
    this.weight(),
    this.itemId(),
    this.itemCount()
  );
}


unpackTo(_o: clz_Torappu_BuildingData_WorkshopExtraWeightItemT): void {
  _o.weight = this.weight();
  _o.itemId = this.itemId();
  _o.itemCount = this.itemCount();
}
}

export class clz_Torappu_BuildingData_WorkshopExtraWeightItemT implements flatbuffers.IGeneratedObject {
constructor(
  public weight: number = 0,
  public itemId: string|Uint8Array|null = null,
  public itemCount: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const itemId = (this.itemId !== null ? builder.createString(this.itemId!) : 0);

  return clz_Torappu_BuildingData_WorkshopExtraWeightItem.createclz_Torappu_BuildingData_WorkshopExtraWeightItem(builder,
    this.weight,
    itemId,
    this.itemCount
  );
}
}
