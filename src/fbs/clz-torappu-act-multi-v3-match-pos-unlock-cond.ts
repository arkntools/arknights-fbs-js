// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_ActMultiV3MapDiffType } from './enum--torappu-act-multi-v3-map-diff-type.js';


export class clz_Torappu_ActMultiV3MatchPosUnlockCond implements flatbuffers.IUnpackableObject<clz_Torappu_ActMultiV3MatchPosUnlockCondT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActMultiV3MatchPosUnlockCond {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActMultiV3MatchPosUnlockCond(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActMultiV3MatchPosUnlockCond):clz_Torappu_ActMultiV3MatchPosUnlockCond {
  return (obj || new clz_Torappu_ActMultiV3MatchPosUnlockCond()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActMultiV3MatchPosUnlockCond(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActMultiV3MatchPosUnlockCond):clz_Torappu_ActMultiV3MatchPosUnlockCond {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActMultiV3MatchPosUnlockCond()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

diff():enum__Torappu_ActMultiV3MapDiffType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_ActMultiV3MapDiffType.NONE;
}

completeMapCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

requireMapStar():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

unlockHint():string|null
unlockHint(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
unlockHint(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_ActMultiV3MatchPosUnlockCond(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addDiff(builder:flatbuffers.Builder, diff:enum__Torappu_ActMultiV3MapDiffType) {
  builder.addFieldInt32(0, diff, enum__Torappu_ActMultiV3MapDiffType.NONE);
}

static addCompleteMapCount(builder:flatbuffers.Builder, completeMapCount:number) {
  builder.addFieldInt32(1, completeMapCount, 0);
}

static addRequireMapStar(builder:flatbuffers.Builder, requireMapStar:number) {
  builder.addFieldInt32(2, requireMapStar, 0);
}

static addUnlockHint(builder:flatbuffers.Builder, unlockHintOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, unlockHintOffset, 0);
}

static endclz_Torappu_ActMultiV3MatchPosUnlockCond(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActMultiV3MatchPosUnlockCond(builder:flatbuffers.Builder, diff:enum__Torappu_ActMultiV3MapDiffType, completeMapCount:number, requireMapStar:number, unlockHintOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActMultiV3MatchPosUnlockCond.startclz_Torappu_ActMultiV3MatchPosUnlockCond(builder);
  clz_Torappu_ActMultiV3MatchPosUnlockCond.addDiff(builder, diff);
  clz_Torappu_ActMultiV3MatchPosUnlockCond.addCompleteMapCount(builder, completeMapCount);
  clz_Torappu_ActMultiV3MatchPosUnlockCond.addRequireMapStar(builder, requireMapStar);
  clz_Torappu_ActMultiV3MatchPosUnlockCond.addUnlockHint(builder, unlockHintOffset);
  return clz_Torappu_ActMultiV3MatchPosUnlockCond.endclz_Torappu_ActMultiV3MatchPosUnlockCond(builder);
}

unpack(): clz_Torappu_ActMultiV3MatchPosUnlockCondT {
  return new clz_Torappu_ActMultiV3MatchPosUnlockCondT(
    this.diff(),
    this.completeMapCount(),
    this.requireMapStar(),
    this.unlockHint()
  );
}


unpackTo(_o: clz_Torappu_ActMultiV3MatchPosUnlockCondT): void {
  _o.diff = this.diff();
  _o.completeMapCount = this.completeMapCount();
  _o.requireMapStar = this.requireMapStar();
  _o.unlockHint = this.unlockHint();
}
}

export class clz_Torappu_ActMultiV3MatchPosUnlockCondT implements flatbuffers.IGeneratedObject {
constructor(
  public diff: enum__Torappu_ActMultiV3MapDiffType = enum__Torappu_ActMultiV3MapDiffType.NONE,
  public completeMapCount: number = 0,
  public requireMapStar: number = 0,
  public unlockHint: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const unlockHint = (this.unlockHint !== null ? builder.createString(this.unlockHint!) : 0);

  return clz_Torappu_ActMultiV3MatchPosUnlockCond.createclz_Torappu_ActMultiV3MatchPosUnlockCond(builder,
    this.diff,
    this.completeMapCount,
    this.requireMapStar,
    unlockHint
  );
}
}
