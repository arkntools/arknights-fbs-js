// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { dict__string__int, dict__string__intT } from './dict--string--int.js';


export class clz_Torappu_SandboxBuildProduceData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxBuildProduceDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxBuildProduceData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxBuildProduceData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxBuildProduceData):clz_Torappu_SandboxBuildProduceData {
  return (obj || new clz_Torappu_SandboxBuildProduceData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxBuildProduceData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxBuildProduceData):clz_Torappu_SandboxBuildProduceData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxBuildProduceData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

itemProduceId():string|null
itemProduceId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
itemProduceId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

itemId():string|null
itemId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
itemId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

itemTypeText():string|null
itemTypeText(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
itemTypeText(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

materialItems(index: number, obj?:dict__string__int):dict__string__int|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new dict__string__int()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

materialItemsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SandboxBuildProduceData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addItemProduceId(builder:flatbuffers.Builder, itemProduceIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, itemProduceIdOffset, 0);
}

static addItemId(builder:flatbuffers.Builder, itemIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, itemIdOffset, 0);
}

static addItemTypeText(builder:flatbuffers.Builder, itemTypeTextOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, itemTypeTextOffset, 0);
}

static addMaterialItems(builder:flatbuffers.Builder, materialItemsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, materialItemsOffset, 0);
}

static createMaterialItemsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startMaterialItemsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_SandboxBuildProduceData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxBuildProduceData(builder:flatbuffers.Builder, itemProduceIdOffset:flatbuffers.Offset, itemIdOffset:flatbuffers.Offset, itemTypeTextOffset:flatbuffers.Offset, materialItemsOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SandboxBuildProduceData.startclz_Torappu_SandboxBuildProduceData(builder);
  clz_Torappu_SandboxBuildProduceData.addItemProduceId(builder, itemProduceIdOffset);
  clz_Torappu_SandboxBuildProduceData.addItemId(builder, itemIdOffset);
  clz_Torappu_SandboxBuildProduceData.addItemTypeText(builder, itemTypeTextOffset);
  clz_Torappu_SandboxBuildProduceData.addMaterialItems(builder, materialItemsOffset);
  return clz_Torappu_SandboxBuildProduceData.endclz_Torappu_SandboxBuildProduceData(builder);
}

unpack(): clz_Torappu_SandboxBuildProduceDataT {
  return new clz_Torappu_SandboxBuildProduceDataT(
    this.itemProduceId(),
    this.itemId(),
    this.itemTypeText(),
    this.bb!.createObjList<dict__string__int, dict__string__intT>(this.materialItems.bind(this), this.materialItemsLength())
  );
}


unpackTo(_o: clz_Torappu_SandboxBuildProduceDataT): void {
  _o.itemProduceId = this.itemProduceId();
  _o.itemId = this.itemId();
  _o.itemTypeText = this.itemTypeText();
  _o.materialItems = this.bb!.createObjList<dict__string__int, dict__string__intT>(this.materialItems.bind(this), this.materialItemsLength());
}
}

export class clz_Torappu_SandboxBuildProduceDataT implements flatbuffers.IGeneratedObject {
constructor(
  public itemProduceId: string|Uint8Array|null = null,
  public itemId: string|Uint8Array|null = null,
  public itemTypeText: string|Uint8Array|null = null,
  public materialItems: (dict__string__intT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const itemProduceId = (this.itemProduceId !== null ? builder.createString(this.itemProduceId!) : 0);
  const itemId = (this.itemId !== null ? builder.createString(this.itemId!) : 0);
  const itemTypeText = (this.itemTypeText !== null ? builder.createString(this.itemTypeText!) : 0);
  const materialItems = clz_Torappu_SandboxBuildProduceData.createMaterialItemsVector(builder, builder.createObjectOffsetList(this.materialItems));

  return clz_Torappu_SandboxBuildProduceData.createclz_Torappu_SandboxBuildProduceData(builder,
    itemProduceId,
    itemId,
    itemTypeText,
    materialItems
  );
}
}
