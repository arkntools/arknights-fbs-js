// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { dict__enum__Torappu_ActivityBossRushData_BossRushStageType__string, dict__enum__Torappu_ActivityBossRushData_BossRushStageType__stringT } from './dict--enum--torappu-activity-boss-rush-data-boss-rush-stage-type--string.js';
import { list_string, list_stringT } from './list-string.js';


export class clz_Torappu_ActivityBossRushData_BossRushStageGroupData implements flatbuffers.IUnpackableObject<clz_Torappu_ActivityBossRushData_BossRushStageGroupDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActivityBossRushData_BossRushStageGroupData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActivityBossRushData_BossRushStageGroupData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityBossRushData_BossRushStageGroupData):clz_Torappu_ActivityBossRushData_BossRushStageGroupData {
  return (obj || new clz_Torappu_ActivityBossRushData_BossRushStageGroupData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActivityBossRushData_BossRushStageGroupData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityBossRushData_BossRushStageGroupData):clz_Torappu_ActivityBossRushData_BossRushStageGroupData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActivityBossRushData_BossRushStageGroupData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

stageGroupId():string|null
stageGroupId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
stageGroupId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

stageGroupName():string|null
stageGroupName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
stageGroupName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

stageIdMap(index: number, obj?:dict__enum__Torappu_ActivityBossRushData_BossRushStageType__string):dict__enum__Torappu_ActivityBossRushData_BossRushStageType__string|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new dict__enum__Torappu_ActivityBossRushData_BossRushStageType__string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

stageIdMapLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

waveBossInfo(index: number, obj?:list_string):list_string|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new list_string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

waveBossInfoLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

normalStageCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

isHardStageGroup():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

unlockCondtion():string|null
unlockCondtion(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
unlockCondtion(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_ActivityBossRushData_BossRushStageGroupData(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addStageGroupId(builder:flatbuffers.Builder, stageGroupIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, stageGroupIdOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(1, sortId, 0);
}

static addStageGroupName(builder:flatbuffers.Builder, stageGroupNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, stageGroupNameOffset, 0);
}

static addStageIdMap(builder:flatbuffers.Builder, stageIdMapOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, stageIdMapOffset, 0);
}

static createStageIdMapVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startStageIdMapVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addWaveBossInfo(builder:flatbuffers.Builder, waveBossInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, waveBossInfoOffset, 0);
}

static createWaveBossInfoVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startWaveBossInfoVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addNormalStageCount(builder:flatbuffers.Builder, normalStageCount:number) {
  builder.addFieldInt32(5, normalStageCount, 0);
}

static addIsHardStageGroup(builder:flatbuffers.Builder, isHardStageGroup:boolean) {
  builder.addFieldInt8(6, +isHardStageGroup, +false);
}

static addUnlockCondtion(builder:flatbuffers.Builder, unlockCondtionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, unlockCondtionOffset, 0);
}

static endclz_Torappu_ActivityBossRushData_BossRushStageGroupData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActivityBossRushData_BossRushStageGroupData(builder:flatbuffers.Builder, stageGroupIdOffset:flatbuffers.Offset, sortId:number, stageGroupNameOffset:flatbuffers.Offset, stageIdMapOffset:flatbuffers.Offset, waveBossInfoOffset:flatbuffers.Offset, normalStageCount:number, isHardStageGroup:boolean, unlockCondtionOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActivityBossRushData_BossRushStageGroupData.startclz_Torappu_ActivityBossRushData_BossRushStageGroupData(builder);
  clz_Torappu_ActivityBossRushData_BossRushStageGroupData.addStageGroupId(builder, stageGroupIdOffset);
  clz_Torappu_ActivityBossRushData_BossRushStageGroupData.addSortId(builder, sortId);
  clz_Torappu_ActivityBossRushData_BossRushStageGroupData.addStageGroupName(builder, stageGroupNameOffset);
  clz_Torappu_ActivityBossRushData_BossRushStageGroupData.addStageIdMap(builder, stageIdMapOffset);
  clz_Torappu_ActivityBossRushData_BossRushStageGroupData.addWaveBossInfo(builder, waveBossInfoOffset);
  clz_Torappu_ActivityBossRushData_BossRushStageGroupData.addNormalStageCount(builder, normalStageCount);
  clz_Torappu_ActivityBossRushData_BossRushStageGroupData.addIsHardStageGroup(builder, isHardStageGroup);
  clz_Torappu_ActivityBossRushData_BossRushStageGroupData.addUnlockCondtion(builder, unlockCondtionOffset);
  return clz_Torappu_ActivityBossRushData_BossRushStageGroupData.endclz_Torappu_ActivityBossRushData_BossRushStageGroupData(builder);
}

unpack(): clz_Torappu_ActivityBossRushData_BossRushStageGroupDataT {
  return new clz_Torappu_ActivityBossRushData_BossRushStageGroupDataT(
    this.stageGroupId(),
    this.sortId(),
    this.stageGroupName(),
    this.bb!.createObjList<dict__enum__Torappu_ActivityBossRushData_BossRushStageType__string, dict__enum__Torappu_ActivityBossRushData_BossRushStageType__stringT>(this.stageIdMap.bind(this), this.stageIdMapLength()),
    this.bb!.createObjList<list_string, list_stringT>(this.waveBossInfo.bind(this), this.waveBossInfoLength()),
    this.normalStageCount(),
    this.isHardStageGroup(),
    this.unlockCondtion()
  );
}


unpackTo(_o: clz_Torappu_ActivityBossRushData_BossRushStageGroupDataT): void {
  _o.stageGroupId = this.stageGroupId();
  _o.sortId = this.sortId();
  _o.stageGroupName = this.stageGroupName();
  _o.stageIdMap = this.bb!.createObjList<dict__enum__Torappu_ActivityBossRushData_BossRushStageType__string, dict__enum__Torappu_ActivityBossRushData_BossRushStageType__stringT>(this.stageIdMap.bind(this), this.stageIdMapLength());
  _o.waveBossInfo = this.bb!.createObjList<list_string, list_stringT>(this.waveBossInfo.bind(this), this.waveBossInfoLength());
  _o.normalStageCount = this.normalStageCount();
  _o.isHardStageGroup = this.isHardStageGroup();
  _o.unlockCondtion = this.unlockCondtion();
}
}

export class clz_Torappu_ActivityBossRushData_BossRushStageGroupDataT implements flatbuffers.IGeneratedObject {
constructor(
  public stageGroupId: string|Uint8Array|null = null,
  public sortId: number = 0,
  public stageGroupName: string|Uint8Array|null = null,
  public stageIdMap: (dict__enum__Torappu_ActivityBossRushData_BossRushStageType__stringT)[] = [],
  public waveBossInfo: (list_stringT)[] = [],
  public normalStageCount: number = 0,
  public isHardStageGroup: boolean = false,
  public unlockCondtion: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const stageGroupId = (this.stageGroupId !== null ? builder.createString(this.stageGroupId!) : 0);
  const stageGroupName = (this.stageGroupName !== null ? builder.createString(this.stageGroupName!) : 0);
  const stageIdMap = clz_Torappu_ActivityBossRushData_BossRushStageGroupData.createStageIdMapVector(builder, builder.createObjectOffsetList(this.stageIdMap));
  const waveBossInfo = clz_Torappu_ActivityBossRushData_BossRushStageGroupData.createWaveBossInfoVector(builder, builder.createObjectOffsetList(this.waveBossInfo));
  const unlockCondtion = (this.unlockCondtion !== null ? builder.createString(this.unlockCondtion!) : 0);

  return clz_Torappu_ActivityBossRushData_BossRushStageGroupData.createclz_Torappu_ActivityBossRushData_BossRushStageGroupData(builder,
    stageGroupId,
    this.sortId,
    stageGroupName,
    stageIdMap,
    waveBossInfo,
    this.normalStageCount,
    this.isHardStageGroup,
    unlockCondtion
  );
}
}
