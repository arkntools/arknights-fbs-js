// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActivityInterlockData_FinalStageProgressData implements flatbuffers.IUnpackableObject<clz_Torappu_ActivityInterlockData_FinalStageProgressDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActivityInterlockData_FinalStageProgressData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActivityInterlockData_FinalStageProgressData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityInterlockData_FinalStageProgressData):clz_Torappu_ActivityInterlockData_FinalStageProgressData {
  return (obj || new clz_Torappu_ActivityInterlockData_FinalStageProgressData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActivityInterlockData_FinalStageProgressData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityInterlockData_FinalStageProgressData):clz_Torappu_ActivityInterlockData_FinalStageProgressData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActivityInterlockData_FinalStageProgressData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

stageId():string|null
stageId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
stageId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

killCnt():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

apCost():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

favor():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

exp():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

gold():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_ActivityInterlockData_FinalStageProgressData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addStageId(builder:flatbuffers.Builder, stageIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, stageIdOffset, 0);
}

static addKillCnt(builder:flatbuffers.Builder, killCnt:number) {
  builder.addFieldInt32(1, killCnt, 0);
}

static addApCost(builder:flatbuffers.Builder, apCost:number) {
  builder.addFieldInt32(2, apCost, 0);
}

static addFavor(builder:flatbuffers.Builder, favor:number) {
  builder.addFieldInt32(3, favor, 0);
}

static addExp(builder:flatbuffers.Builder, exp:number) {
  builder.addFieldInt32(4, exp, 0);
}

static addGold(builder:flatbuffers.Builder, gold:number) {
  builder.addFieldInt32(5, gold, 0);
}

static endclz_Torappu_ActivityInterlockData_FinalStageProgressData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActivityInterlockData_FinalStageProgressData(builder:flatbuffers.Builder, stageIdOffset:flatbuffers.Offset, killCnt:number, apCost:number, favor:number, exp:number, gold:number):flatbuffers.Offset {
  clz_Torappu_ActivityInterlockData_FinalStageProgressData.startclz_Torappu_ActivityInterlockData_FinalStageProgressData(builder);
  clz_Torappu_ActivityInterlockData_FinalStageProgressData.addStageId(builder, stageIdOffset);
  clz_Torappu_ActivityInterlockData_FinalStageProgressData.addKillCnt(builder, killCnt);
  clz_Torappu_ActivityInterlockData_FinalStageProgressData.addApCost(builder, apCost);
  clz_Torappu_ActivityInterlockData_FinalStageProgressData.addFavor(builder, favor);
  clz_Torappu_ActivityInterlockData_FinalStageProgressData.addExp(builder, exp);
  clz_Torappu_ActivityInterlockData_FinalStageProgressData.addGold(builder, gold);
  return clz_Torappu_ActivityInterlockData_FinalStageProgressData.endclz_Torappu_ActivityInterlockData_FinalStageProgressData(builder);
}

unpack(): clz_Torappu_ActivityInterlockData_FinalStageProgressDataT {
  return new clz_Torappu_ActivityInterlockData_FinalStageProgressDataT(
    this.stageId(),
    this.killCnt(),
    this.apCost(),
    this.favor(),
    this.exp(),
    this.gold()
  );
}


unpackTo(_o: clz_Torappu_ActivityInterlockData_FinalStageProgressDataT): void {
  _o.stageId = this.stageId();
  _o.killCnt = this.killCnt();
  _o.apCost = this.apCost();
  _o.favor = this.favor();
  _o.exp = this.exp();
  _o.gold = this.gold();
}
}

export class clz_Torappu_ActivityInterlockData_FinalStageProgressDataT implements flatbuffers.IGeneratedObject {
constructor(
  public stageId: string|Uint8Array|null = null,
  public killCnt: number = 0,
  public apCost: number = 0,
  public favor: number = 0,
  public exp: number = 0,
  public gold: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const stageId = (this.stageId !== null ? builder.createString(this.stageId!) : 0);

  return clz_Torappu_ActivityInterlockData_FinalStageProgressData.createclz_Torappu_ActivityInterlockData_FinalStageProgressData(builder,
    stageId,
    this.killCnt,
    this.apCost,
    this.favor,
    this.exp,
    this.gold
  );
}
}
