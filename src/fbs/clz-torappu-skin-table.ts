// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_SpecialSkinInfo, clz_Torappu_SpecialSkinInfoT } from './clz-torappu-special-skin-info.js';
import { dict__string__clz_Torappu_CharSkinBrandInfo, dict__string__clz_Torappu_CharSkinBrandInfoT } from './dict--string--clz-torappu-char-skin-brand-info.js';
import { dict__string__clz_Torappu_CharSkinData, dict__string__clz_Torappu_CharSkinDataT } from './dict--string--clz-torappu-char-skin-data.js';
import { dict__string__clz_Torappu_SpDynIllustInfo, dict__string__clz_Torappu_SpDynIllustInfoT } from './dict--string--clz-torappu-sp-dyn-illust-info.js';
import { dict__string__list_dict__int__string, dict__string__list_dict__int__stringT } from './dict--string--list-dict--int--string.js';
import { dict__string__list_dict__string__string, dict__string__list_dict__string__stringT } from './dict--string--list-dict--string--string.js';
import { dict__string__string, dict__string__stringT } from './dict--string--string.js';


export class clz_Torappu_SkinTable implements flatbuffers.IUnpackableObject<clz_Torappu_SkinTableT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SkinTable {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SkinTable(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SkinTable):clz_Torappu_SkinTable {
  return (obj || new clz_Torappu_SkinTable()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SkinTable(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SkinTable):clz_Torappu_SkinTable {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SkinTable()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

charSkins(index: number, obj?:dict__string__clz_Torappu_CharSkinData):dict__string__clz_Torappu_CharSkinData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new dict__string__clz_Torappu_CharSkinData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

charSkinsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

buildinEvolveMap(index: number, obj?:dict__string__list_dict__int__string):dict__string__list_dict__int__string|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new dict__string__list_dict__int__string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

buildinEvolveMapLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

buildinPatchMap(index: number, obj?:dict__string__list_dict__string__string):dict__string__list_dict__string__string|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new dict__string__list_dict__string__string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

buildinPatchMapLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

brandList(index: number, obj?:dict__string__clz_Torappu_CharSkinBrandInfo):dict__string__clz_Torappu_CharSkinBrandInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new dict__string__clz_Torappu_CharSkinBrandInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

brandListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

specialSkinInfoList(index: number, obj?:clz_Torappu_SpecialSkinInfo):clz_Torappu_SpecialSkinInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new clz_Torappu_SpecialSkinInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

specialSkinInfoListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

spDynSkins(index: number, obj?:dict__string__clz_Torappu_SpDynIllustInfo):dict__string__clz_Torappu_SpDynIllustInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new dict__string__clz_Torappu_SpDynIllustInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

spDynSkinsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

spDynIllustSkinTagsMap(index: number, obj?:dict__string__string):dict__string__string|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new dict__string__string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

spDynIllustSkinTagsMapLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SkinTable(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static addCharSkins(builder:flatbuffers.Builder, charSkinsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, charSkinsOffset, 0);
}

static createCharSkinsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCharSkinsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBuildinEvolveMap(builder:flatbuffers.Builder, buildinEvolveMapOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, buildinEvolveMapOffset, 0);
}

static createBuildinEvolveMapVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBuildinEvolveMapVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBuildinPatchMap(builder:flatbuffers.Builder, buildinPatchMapOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, buildinPatchMapOffset, 0);
}

static createBuildinPatchMapVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBuildinPatchMapVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBrandList(builder:flatbuffers.Builder, brandListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, brandListOffset, 0);
}

static createBrandListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBrandListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addSpecialSkinInfoList(builder:flatbuffers.Builder, specialSkinInfoListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, specialSkinInfoListOffset, 0);
}

static createSpecialSkinInfoListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startSpecialSkinInfoListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addSpDynSkins(builder:flatbuffers.Builder, spDynSkinsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, spDynSkinsOffset, 0);
}

static createSpDynSkinsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startSpDynSkinsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addSpDynIllustSkinTagsMap(builder:flatbuffers.Builder, spDynIllustSkinTagsMapOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, spDynIllustSkinTagsMapOffset, 0);
}

static createSpDynIllustSkinTagsMapVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startSpDynIllustSkinTagsMapVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_SkinTable(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishclz_Torappu_SkinTableBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedclz_Torappu_SkinTableBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createclz_Torappu_SkinTable(builder:flatbuffers.Builder, charSkinsOffset:flatbuffers.Offset, buildinEvolveMapOffset:flatbuffers.Offset, buildinPatchMapOffset:flatbuffers.Offset, brandListOffset:flatbuffers.Offset, specialSkinInfoListOffset:flatbuffers.Offset, spDynSkinsOffset:flatbuffers.Offset, spDynIllustSkinTagsMapOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SkinTable.startclz_Torappu_SkinTable(builder);
  clz_Torappu_SkinTable.addCharSkins(builder, charSkinsOffset);
  clz_Torappu_SkinTable.addBuildinEvolveMap(builder, buildinEvolveMapOffset);
  clz_Torappu_SkinTable.addBuildinPatchMap(builder, buildinPatchMapOffset);
  clz_Torappu_SkinTable.addBrandList(builder, brandListOffset);
  clz_Torappu_SkinTable.addSpecialSkinInfoList(builder, specialSkinInfoListOffset);
  clz_Torappu_SkinTable.addSpDynSkins(builder, spDynSkinsOffset);
  clz_Torappu_SkinTable.addSpDynIllustSkinTagsMap(builder, spDynIllustSkinTagsMapOffset);
  return clz_Torappu_SkinTable.endclz_Torappu_SkinTable(builder);
}

unpack(): clz_Torappu_SkinTableT {
  return new clz_Torappu_SkinTableT(
    this.bb!.createObjList<dict__string__clz_Torappu_CharSkinData, dict__string__clz_Torappu_CharSkinDataT>(this.charSkins.bind(this), this.charSkinsLength()),
    this.bb!.createObjList<dict__string__list_dict__int__string, dict__string__list_dict__int__stringT>(this.buildinEvolveMap.bind(this), this.buildinEvolveMapLength()),
    this.bb!.createObjList<dict__string__list_dict__string__string, dict__string__list_dict__string__stringT>(this.buildinPatchMap.bind(this), this.buildinPatchMapLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_CharSkinBrandInfo, dict__string__clz_Torappu_CharSkinBrandInfoT>(this.brandList.bind(this), this.brandListLength()),
    this.bb!.createObjList<clz_Torappu_SpecialSkinInfo, clz_Torappu_SpecialSkinInfoT>(this.specialSkinInfoList.bind(this), this.specialSkinInfoListLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SpDynIllustInfo, dict__string__clz_Torappu_SpDynIllustInfoT>(this.spDynSkins.bind(this), this.spDynSkinsLength()),
    this.bb!.createObjList<dict__string__string, dict__string__stringT>(this.spDynIllustSkinTagsMap.bind(this), this.spDynIllustSkinTagsMapLength())
  );
}


unpackTo(_o: clz_Torappu_SkinTableT): void {
  _o.charSkins = this.bb!.createObjList<dict__string__clz_Torappu_CharSkinData, dict__string__clz_Torappu_CharSkinDataT>(this.charSkins.bind(this), this.charSkinsLength());
  _o.buildinEvolveMap = this.bb!.createObjList<dict__string__list_dict__int__string, dict__string__list_dict__int__stringT>(this.buildinEvolveMap.bind(this), this.buildinEvolveMapLength());
  _o.buildinPatchMap = this.bb!.createObjList<dict__string__list_dict__string__string, dict__string__list_dict__string__stringT>(this.buildinPatchMap.bind(this), this.buildinPatchMapLength());
  _o.brandList = this.bb!.createObjList<dict__string__clz_Torappu_CharSkinBrandInfo, dict__string__clz_Torappu_CharSkinBrandInfoT>(this.brandList.bind(this), this.brandListLength());
  _o.specialSkinInfoList = this.bb!.createObjList<clz_Torappu_SpecialSkinInfo, clz_Torappu_SpecialSkinInfoT>(this.specialSkinInfoList.bind(this), this.specialSkinInfoListLength());
  _o.spDynSkins = this.bb!.createObjList<dict__string__clz_Torappu_SpDynIllustInfo, dict__string__clz_Torappu_SpDynIllustInfoT>(this.spDynSkins.bind(this), this.spDynSkinsLength());
  _o.spDynIllustSkinTagsMap = this.bb!.createObjList<dict__string__string, dict__string__stringT>(this.spDynIllustSkinTagsMap.bind(this), this.spDynIllustSkinTagsMapLength());
}
}

export class clz_Torappu_SkinTableT implements flatbuffers.IGeneratedObject {
constructor(
  public charSkins: (dict__string__clz_Torappu_CharSkinDataT)[] = [],
  public buildinEvolveMap: (dict__string__list_dict__int__stringT)[] = [],
  public buildinPatchMap: (dict__string__list_dict__string__stringT)[] = [],
  public brandList: (dict__string__clz_Torappu_CharSkinBrandInfoT)[] = [],
  public specialSkinInfoList: (clz_Torappu_SpecialSkinInfoT)[] = [],
  public spDynSkins: (dict__string__clz_Torappu_SpDynIllustInfoT)[] = [],
  public spDynIllustSkinTagsMap: (dict__string__stringT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const charSkins = clz_Torappu_SkinTable.createCharSkinsVector(builder, builder.createObjectOffsetList(this.charSkins));
  const buildinEvolveMap = clz_Torappu_SkinTable.createBuildinEvolveMapVector(builder, builder.createObjectOffsetList(this.buildinEvolveMap));
  const buildinPatchMap = clz_Torappu_SkinTable.createBuildinPatchMapVector(builder, builder.createObjectOffsetList(this.buildinPatchMap));
  const brandList = clz_Torappu_SkinTable.createBrandListVector(builder, builder.createObjectOffsetList(this.brandList));
  const specialSkinInfoList = clz_Torappu_SkinTable.createSpecialSkinInfoListVector(builder, builder.createObjectOffsetList(this.specialSkinInfoList));
  const spDynSkins = clz_Torappu_SkinTable.createSpDynSkinsVector(builder, builder.createObjectOffsetList(this.spDynSkins));
  const spDynIllustSkinTagsMap = clz_Torappu_SkinTable.createSpDynIllustSkinTagsMapVector(builder, builder.createObjectOffsetList(this.spDynIllustSkinTagsMap));

  return clz_Torappu_SkinTable.createclz_Torappu_SkinTable(builder,
    charSkins,
    buildinEvolveMap,
    buildinPatchMap,
    brandList,
    specialSkinInfoList,
    spDynSkins,
    spDynIllustSkinTagsMap
  );
}
}
