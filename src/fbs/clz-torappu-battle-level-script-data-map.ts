// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { dict__string__list_string, dict__string__list_stringT } from './dict--string--list-string.js';


export class clz_Torappu_Battle_LevelScriptDataMap implements flatbuffers.IUnpackableObject<clz_Torappu_Battle_LevelScriptDataMapT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Battle_LevelScriptDataMap {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Battle_LevelScriptDataMap(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Battle_LevelScriptDataMap):clz_Torappu_Battle_LevelScriptDataMap {
  return (obj || new clz_Torappu_Battle_LevelScriptDataMap()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Battle_LevelScriptDataMap(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Battle_LevelScriptDataMap):clz_Torappu_Battle_LevelScriptDataMap {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Battle_LevelScriptDataMap()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

levelScriptDataCharacterDict(index: number, obj?:dict__string__list_string):dict__string__list_string|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new dict__string__list_string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

levelScriptDataCharacterDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

levelScriptDataEnemyDict(index: number, obj?:dict__string__list_string):dict__string__list_string|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new dict__string__list_string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

levelScriptDataEnemyDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

levelScriptDataLevelDict(index: number, obj?:dict__string__list_string):dict__string__list_string|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new dict__string__list_string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

levelScriptDataLevelDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

levelScriptDataGameModeDict(index: number, obj?:dict__string__list_string):dict__string__list_string|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new dict__string__list_string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

levelScriptDataGameModeDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

levelScriptDataMiscList(index: number):string
levelScriptDataMiscList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
levelScriptDataMiscList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

levelScriptDataMiscListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_Battle_LevelScriptDataMap(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addLevelScriptDataCharacterDict(builder:flatbuffers.Builder, levelScriptDataCharacterDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, levelScriptDataCharacterDictOffset, 0);
}

static createLevelScriptDataCharacterDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startLevelScriptDataCharacterDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addLevelScriptDataEnemyDict(builder:flatbuffers.Builder, levelScriptDataEnemyDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, levelScriptDataEnemyDictOffset, 0);
}

static createLevelScriptDataEnemyDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startLevelScriptDataEnemyDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addLevelScriptDataLevelDict(builder:flatbuffers.Builder, levelScriptDataLevelDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, levelScriptDataLevelDictOffset, 0);
}

static createLevelScriptDataLevelDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startLevelScriptDataLevelDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addLevelScriptDataGameModeDict(builder:flatbuffers.Builder, levelScriptDataGameModeDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, levelScriptDataGameModeDictOffset, 0);
}

static createLevelScriptDataGameModeDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startLevelScriptDataGameModeDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addLevelScriptDataMiscList(builder:flatbuffers.Builder, levelScriptDataMiscListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, levelScriptDataMiscListOffset, 0);
}

static createLevelScriptDataMiscListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startLevelScriptDataMiscListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_Battle_LevelScriptDataMap(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishclz_Torappu_Battle_LevelScriptDataMapBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedclz_Torappu_Battle_LevelScriptDataMapBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createclz_Torappu_Battle_LevelScriptDataMap(builder:flatbuffers.Builder, levelScriptDataCharacterDictOffset:flatbuffers.Offset, levelScriptDataEnemyDictOffset:flatbuffers.Offset, levelScriptDataLevelDictOffset:flatbuffers.Offset, levelScriptDataGameModeDictOffset:flatbuffers.Offset, levelScriptDataMiscListOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_Battle_LevelScriptDataMap.startclz_Torappu_Battle_LevelScriptDataMap(builder);
  clz_Torappu_Battle_LevelScriptDataMap.addLevelScriptDataCharacterDict(builder, levelScriptDataCharacterDictOffset);
  clz_Torappu_Battle_LevelScriptDataMap.addLevelScriptDataEnemyDict(builder, levelScriptDataEnemyDictOffset);
  clz_Torappu_Battle_LevelScriptDataMap.addLevelScriptDataLevelDict(builder, levelScriptDataLevelDictOffset);
  clz_Torappu_Battle_LevelScriptDataMap.addLevelScriptDataGameModeDict(builder, levelScriptDataGameModeDictOffset);
  clz_Torappu_Battle_LevelScriptDataMap.addLevelScriptDataMiscList(builder, levelScriptDataMiscListOffset);
  return clz_Torappu_Battle_LevelScriptDataMap.endclz_Torappu_Battle_LevelScriptDataMap(builder);
}

unpack(): clz_Torappu_Battle_LevelScriptDataMapT {
  return new clz_Torappu_Battle_LevelScriptDataMapT(
    this.bb!.createObjList<dict__string__list_string, dict__string__list_stringT>(this.levelScriptDataCharacterDict.bind(this), this.levelScriptDataCharacterDictLength()),
    this.bb!.createObjList<dict__string__list_string, dict__string__list_stringT>(this.levelScriptDataEnemyDict.bind(this), this.levelScriptDataEnemyDictLength()),
    this.bb!.createObjList<dict__string__list_string, dict__string__list_stringT>(this.levelScriptDataLevelDict.bind(this), this.levelScriptDataLevelDictLength()),
    this.bb!.createObjList<dict__string__list_string, dict__string__list_stringT>(this.levelScriptDataGameModeDict.bind(this), this.levelScriptDataGameModeDictLength()),
    this.bb!.createScalarList<string>(this.levelScriptDataMiscList.bind(this), this.levelScriptDataMiscListLength())
  );
}


unpackTo(_o: clz_Torappu_Battle_LevelScriptDataMapT): void {
  _o.levelScriptDataCharacterDict = this.bb!.createObjList<dict__string__list_string, dict__string__list_stringT>(this.levelScriptDataCharacterDict.bind(this), this.levelScriptDataCharacterDictLength());
  _o.levelScriptDataEnemyDict = this.bb!.createObjList<dict__string__list_string, dict__string__list_stringT>(this.levelScriptDataEnemyDict.bind(this), this.levelScriptDataEnemyDictLength());
  _o.levelScriptDataLevelDict = this.bb!.createObjList<dict__string__list_string, dict__string__list_stringT>(this.levelScriptDataLevelDict.bind(this), this.levelScriptDataLevelDictLength());
  _o.levelScriptDataGameModeDict = this.bb!.createObjList<dict__string__list_string, dict__string__list_stringT>(this.levelScriptDataGameModeDict.bind(this), this.levelScriptDataGameModeDictLength());
  _o.levelScriptDataMiscList = this.bb!.createScalarList<string>(this.levelScriptDataMiscList.bind(this), this.levelScriptDataMiscListLength());
}
}

export class clz_Torappu_Battle_LevelScriptDataMapT implements flatbuffers.IGeneratedObject {
constructor(
  public levelScriptDataCharacterDict: (dict__string__list_stringT)[] = [],
  public levelScriptDataEnemyDict: (dict__string__list_stringT)[] = [],
  public levelScriptDataLevelDict: (dict__string__list_stringT)[] = [],
  public levelScriptDataGameModeDict: (dict__string__list_stringT)[] = [],
  public levelScriptDataMiscList: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const levelScriptDataCharacterDict = clz_Torappu_Battle_LevelScriptDataMap.createLevelScriptDataCharacterDictVector(builder, builder.createObjectOffsetList(this.levelScriptDataCharacterDict));
  const levelScriptDataEnemyDict = clz_Torappu_Battle_LevelScriptDataMap.createLevelScriptDataEnemyDictVector(builder, builder.createObjectOffsetList(this.levelScriptDataEnemyDict));
  const levelScriptDataLevelDict = clz_Torappu_Battle_LevelScriptDataMap.createLevelScriptDataLevelDictVector(builder, builder.createObjectOffsetList(this.levelScriptDataLevelDict));
  const levelScriptDataGameModeDict = clz_Torappu_Battle_LevelScriptDataMap.createLevelScriptDataGameModeDictVector(builder, builder.createObjectOffsetList(this.levelScriptDataGameModeDict));
  const levelScriptDataMiscList = clz_Torappu_Battle_LevelScriptDataMap.createLevelScriptDataMiscListVector(builder, builder.createObjectOffsetList(this.levelScriptDataMiscList));

  return clz_Torappu_Battle_LevelScriptDataMap.createclz_Torappu_Battle_LevelScriptDataMap(builder,
    levelScriptDataCharacterDict,
    levelScriptDataEnemyDict,
    levelScriptDataLevelDict,
    levelScriptDataGameModeDict,
    levelScriptDataMiscList
  );
}
}
