// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_FireworkData_LevelData implements flatbuffers.IUnpackableObject<clz_Torappu_FireworkData_LevelDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_FireworkData_LevelData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_FireworkData_LevelData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_FireworkData_LevelData):clz_Torappu_FireworkData_LevelData {
  return (obj || new clz_Torappu_FireworkData_LevelData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_FireworkData_LevelData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_FireworkData_LevelData):clz_Torappu_FireworkData_LevelData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_FireworkData_LevelData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

levelId():string|null
levelId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
levelId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

trapPosX():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

trapPosY():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

isSplevel():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startclz_Torappu_FireworkData_LevelData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addLevelId(builder:flatbuffers.Builder, levelIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, levelIdOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(1, sortId, 0);
}

static addTrapPosX(builder:flatbuffers.Builder, trapPosX:number) {
  builder.addFieldInt32(2, trapPosX, 0);
}

static addTrapPosY(builder:flatbuffers.Builder, trapPosY:number) {
  builder.addFieldInt32(3, trapPosY, 0);
}

static addIsSplevel(builder:flatbuffers.Builder, isSplevel:boolean) {
  builder.addFieldInt8(4, +isSplevel, +false);
}

static endclz_Torappu_FireworkData_LevelData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_FireworkData_LevelData(builder:flatbuffers.Builder, levelIdOffset:flatbuffers.Offset, sortId:number, trapPosX:number, trapPosY:number, isSplevel:boolean):flatbuffers.Offset {
  clz_Torappu_FireworkData_LevelData.startclz_Torappu_FireworkData_LevelData(builder);
  clz_Torappu_FireworkData_LevelData.addLevelId(builder, levelIdOffset);
  clz_Torappu_FireworkData_LevelData.addSortId(builder, sortId);
  clz_Torappu_FireworkData_LevelData.addTrapPosX(builder, trapPosX);
  clz_Torappu_FireworkData_LevelData.addTrapPosY(builder, trapPosY);
  clz_Torappu_FireworkData_LevelData.addIsSplevel(builder, isSplevel);
  return clz_Torappu_FireworkData_LevelData.endclz_Torappu_FireworkData_LevelData(builder);
}

unpack(): clz_Torappu_FireworkData_LevelDataT {
  return new clz_Torappu_FireworkData_LevelDataT(
    this.levelId(),
    this.sortId(),
    this.trapPosX(),
    this.trapPosY(),
    this.isSplevel()
  );
}


unpackTo(_o: clz_Torappu_FireworkData_LevelDataT): void {
  _o.levelId = this.levelId();
  _o.sortId = this.sortId();
  _o.trapPosX = this.trapPosX();
  _o.trapPosY = this.trapPosY();
  _o.isSplevel = this.isSplevel();
}
}

export class clz_Torappu_FireworkData_LevelDataT implements flatbuffers.IGeneratedObject {
constructor(
  public levelId: string|Uint8Array|null = null,
  public sortId: number = 0,
  public trapPosX: number = 0,
  public trapPosY: number = 0,
  public isSplevel: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const levelId = (this.levelId !== null ? builder.createString(this.levelId!) : 0);

  return clz_Torappu_FireworkData_LevelData.createclz_Torappu_FireworkData_LevelData(builder,
    levelId,
    this.sortId,
    this.trapPosX,
    this.trapPosY,
    this.isSplevel
  );
}
}
