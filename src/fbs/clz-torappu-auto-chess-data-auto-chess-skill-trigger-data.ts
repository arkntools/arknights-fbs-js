// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_AutoChessSkillTriggerType } from './enum--torappu-auto-chess-skill-trigger-type.js';
import { enum__Torappu_ProfessionCategory } from './enum--torappu-profession-category.js';


export class clz_Torappu_AutoChessData_AutoChessSkillTriggerData implements flatbuffers.IUnpackableObject<clz_Torappu_AutoChessData_AutoChessSkillTriggerDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_AutoChessData_AutoChessSkillTriggerData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_AutoChessData_AutoChessSkillTriggerData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_AutoChessData_AutoChessSkillTriggerData):clz_Torappu_AutoChessData_AutoChessSkillTriggerData {
  return (obj || new clz_Torappu_AutoChessData_AutoChessSkillTriggerData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_AutoChessData_AutoChessSkillTriggerData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_AutoChessData_AutoChessSkillTriggerData):clz_Torappu_AutoChessData_AutoChessSkillTriggerData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_AutoChessData_AutoChessSkillTriggerData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

profession():enum__Torappu_ProfessionCategory {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_ProfessionCategory.NONE;
}

subProfessionId():string|null
subProfessionId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
subProfessionId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

charId():string|null
charId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
charId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

skillIndex():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

skillTriggerType():enum__Torappu_AutoChessSkillTriggerType {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_AutoChessSkillTriggerType.DEFAULT;
}

static startclz_Torappu_AutoChessData_AutoChessSkillTriggerData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addProfession(builder:flatbuffers.Builder, profession:enum__Torappu_ProfessionCategory) {
  builder.addFieldInt32(0, profession, enum__Torappu_ProfessionCategory.NONE);
}

static addSubProfessionId(builder:flatbuffers.Builder, subProfessionIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, subProfessionIdOffset, 0);
}

static addCharId(builder:flatbuffers.Builder, charIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, charIdOffset, 0);
}

static addSkillIndex(builder:flatbuffers.Builder, skillIndex:number) {
  builder.addFieldInt32(3, skillIndex, 0);
}

static addSkillTriggerType(builder:flatbuffers.Builder, skillTriggerType:enum__Torappu_AutoChessSkillTriggerType) {
  builder.addFieldInt32(4, skillTriggerType, enum__Torappu_AutoChessSkillTriggerType.DEFAULT);
}

static endclz_Torappu_AutoChessData_AutoChessSkillTriggerData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_AutoChessData_AutoChessSkillTriggerData(builder:flatbuffers.Builder, profession:enum__Torappu_ProfessionCategory, subProfessionIdOffset:flatbuffers.Offset, charIdOffset:flatbuffers.Offset, skillIndex:number, skillTriggerType:enum__Torappu_AutoChessSkillTriggerType):flatbuffers.Offset {
  clz_Torappu_AutoChessData_AutoChessSkillTriggerData.startclz_Torappu_AutoChessData_AutoChessSkillTriggerData(builder);
  clz_Torappu_AutoChessData_AutoChessSkillTriggerData.addProfession(builder, profession);
  clz_Torappu_AutoChessData_AutoChessSkillTriggerData.addSubProfessionId(builder, subProfessionIdOffset);
  clz_Torappu_AutoChessData_AutoChessSkillTriggerData.addCharId(builder, charIdOffset);
  clz_Torappu_AutoChessData_AutoChessSkillTriggerData.addSkillIndex(builder, skillIndex);
  clz_Torappu_AutoChessData_AutoChessSkillTriggerData.addSkillTriggerType(builder, skillTriggerType);
  return clz_Torappu_AutoChessData_AutoChessSkillTriggerData.endclz_Torappu_AutoChessData_AutoChessSkillTriggerData(builder);
}

unpack(): clz_Torappu_AutoChessData_AutoChessSkillTriggerDataT {
  return new clz_Torappu_AutoChessData_AutoChessSkillTriggerDataT(
    this.profession(),
    this.subProfessionId(),
    this.charId(),
    this.skillIndex(),
    this.skillTriggerType()
  );
}


unpackTo(_o: clz_Torappu_AutoChessData_AutoChessSkillTriggerDataT): void {
  _o.profession = this.profession();
  _o.subProfessionId = this.subProfessionId();
  _o.charId = this.charId();
  _o.skillIndex = this.skillIndex();
  _o.skillTriggerType = this.skillTriggerType();
}
}

export class clz_Torappu_AutoChessData_AutoChessSkillTriggerDataT implements flatbuffers.IGeneratedObject {
constructor(
  public profession: enum__Torappu_ProfessionCategory = enum__Torappu_ProfessionCategory.NONE,
  public subProfessionId: string|Uint8Array|null = null,
  public charId: string|Uint8Array|null = null,
  public skillIndex: number = 0,
  public skillTriggerType: enum__Torappu_AutoChessSkillTriggerType = enum__Torappu_AutoChessSkillTriggerType.DEFAULT
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const subProfessionId = (this.subProfessionId !== null ? builder.createString(this.subProfessionId!) : 0);
  const charId = (this.charId !== null ? builder.createString(this.charId!) : 0);

  return clz_Torappu_AutoChessData_AutoChessSkillTriggerData.createclz_Torappu_AutoChessData_AutoChessSkillTriggerData(builder,
    this.profession,
    subProfessionId,
    charId,
    this.skillIndex,
    this.skillTriggerType
  );
}
}
