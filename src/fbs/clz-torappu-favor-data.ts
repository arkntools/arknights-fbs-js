// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_FavorData implements flatbuffers.IUnpackableObject<clz_Torappu_FavorDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_FavorData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_FavorData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_FavorData):clz_Torappu_FavorData {
  return (obj || new clz_Torappu_FavorData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_FavorData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_FavorData):clz_Torappu_FavorData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_FavorData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

favorPoint():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

percent():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

battlePhase():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_FavorData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addFavorPoint(builder:flatbuffers.Builder, favorPoint:number) {
  builder.addFieldInt32(0, favorPoint, 0);
}

static addPercent(builder:flatbuffers.Builder, percent:number) {
  builder.addFieldInt32(1, percent, 0);
}

static addBattlePhase(builder:flatbuffers.Builder, battlePhase:number) {
  builder.addFieldInt32(2, battlePhase, 0);
}

static endclz_Torappu_FavorData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_FavorData(builder:flatbuffers.Builder, favorPoint:number, percent:number, battlePhase:number):flatbuffers.Offset {
  clz_Torappu_FavorData.startclz_Torappu_FavorData(builder);
  clz_Torappu_FavorData.addFavorPoint(builder, favorPoint);
  clz_Torappu_FavorData.addPercent(builder, percent);
  clz_Torappu_FavorData.addBattlePhase(builder, battlePhase);
  return clz_Torappu_FavorData.endclz_Torappu_FavorData(builder);
}

unpack(): clz_Torappu_FavorDataT {
  return new clz_Torappu_FavorDataT(
    this.favorPoint(),
    this.percent(),
    this.battlePhase()
  );
}


unpackTo(_o: clz_Torappu_FavorDataT): void {
  _o.favorPoint = this.favorPoint();
  _o.percent = this.percent();
  _o.battlePhase = this.battlePhase();
}
}

export class clz_Torappu_FavorDataT implements flatbuffers.IGeneratedObject {
constructor(
  public favorPoint: number = 0,
  public percent: number = 0,
  public battlePhase: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return clz_Torappu_FavorData.createclz_Torappu_FavorData(builder,
    this.favorPoint,
    this.percent,
    this.battlePhase
  );
}
}
