// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_Act17sideData_ConstData implements flatbuffers.IUnpackableObject<clz_Torappu_Act17sideData_ConstDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Act17sideData_ConstData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Act17sideData_ConstData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act17sideData_ConstData):clz_Torappu_Act17sideData_ConstData {
  return (obj || new clz_Torappu_Act17sideData_ConstData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Act17sideData_ConstData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act17sideData_ConstData):clz_Torappu_Act17sideData_ConstData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Act17sideData_ConstData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

techTreeUnlockEventId():string|null
techTreeUnlockEventId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
techTreeUnlockEventId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_Act17sideData_ConstData(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addTechTreeUnlockEventId(builder:flatbuffers.Builder, techTreeUnlockEventIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, techTreeUnlockEventIdOffset, 0);
}

static endclz_Torappu_Act17sideData_ConstData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Act17sideData_ConstData(builder:flatbuffers.Builder, techTreeUnlockEventIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_Act17sideData_ConstData.startclz_Torappu_Act17sideData_ConstData(builder);
  clz_Torappu_Act17sideData_ConstData.addTechTreeUnlockEventId(builder, techTreeUnlockEventIdOffset);
  return clz_Torappu_Act17sideData_ConstData.endclz_Torappu_Act17sideData_ConstData(builder);
}

unpack(): clz_Torappu_Act17sideData_ConstDataT {
  return new clz_Torappu_Act17sideData_ConstDataT(
    this.techTreeUnlockEventId()
  );
}


unpackTo(_o: clz_Torappu_Act17sideData_ConstDataT): void {
  _o.techTreeUnlockEventId = this.techTreeUnlockEventId();
}
}

export class clz_Torappu_Act17sideData_ConstDataT implements flatbuffers.IGeneratedObject {
constructor(
  public techTreeUnlockEventId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const techTreeUnlockEventId = (this.techTreeUnlockEventId !== null ? builder.createString(this.techTreeUnlockEventId!) : 0);

  return clz_Torappu_Act17sideData_ConstData.createclz_Torappu_Act17sideData_ConstData(builder,
    techTreeUnlockEventId
  );
}
}
