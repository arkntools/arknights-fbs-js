// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_Act35SideData_Act35SideChallengeData implements flatbuffers.IUnpackableObject<clz_Torappu_Act35SideData_Act35SideChallengeDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Act35SideData_Act35SideChallengeData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Act35SideData_Act35SideChallengeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act35SideData_Act35SideChallengeData):clz_Torappu_Act35SideData_Act35SideChallengeData {
  return (obj || new clz_Torappu_Act35SideData_Act35SideChallengeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Act35SideData_Act35SideChallengeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act35SideData_Act35SideChallengeData):clz_Torappu_Act35SideData_Act35SideChallengeData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Act35SideData_Act35SideChallengeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

challengeId():string|null
challengeId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
challengeId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

challengeName():string|null
challengeName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
challengeName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

challengeDesc():string|null
challengeDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
challengeDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

challengePicId():string|null
challengePicId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
challengePicId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

challengeIconId():string|null
challengeIconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
challengeIconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

openTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

preposedChallengeId():string|null
preposedChallengeId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
preposedChallengeId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

passRound():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

passRoundScore():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

roundIdList(index: number):string
roundIdList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
roundIdList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

roundIdListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_Act35SideData_Act35SideChallengeData(builder:flatbuffers.Builder) {
  builder.startObject(11);
}

static addChallengeId(builder:flatbuffers.Builder, challengeIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, challengeIdOffset, 0);
}

static addChallengeName(builder:flatbuffers.Builder, challengeNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, challengeNameOffset, 0);
}

static addChallengeDesc(builder:flatbuffers.Builder, challengeDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, challengeDescOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(3, sortId, 0);
}

static addChallengePicId(builder:flatbuffers.Builder, challengePicIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, challengePicIdOffset, 0);
}

static addChallengeIconId(builder:flatbuffers.Builder, challengeIconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, challengeIconIdOffset, 0);
}

static addOpenTime(builder:flatbuffers.Builder, openTime:bigint) {
  builder.addFieldInt64(6, openTime, BigInt('0'));
}

static addPreposedChallengeId(builder:flatbuffers.Builder, preposedChallengeIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, preposedChallengeIdOffset, 0);
}

static addPassRound(builder:flatbuffers.Builder, passRound:number) {
  builder.addFieldInt32(8, passRound, 0);
}

static addPassRoundScore(builder:flatbuffers.Builder, passRoundScore:number) {
  builder.addFieldInt32(9, passRoundScore, 0);
}

static addRoundIdList(builder:flatbuffers.Builder, roundIdListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, roundIdListOffset, 0);
}

static createRoundIdListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRoundIdListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_Act35SideData_Act35SideChallengeData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Act35SideData_Act35SideChallengeData(builder:flatbuffers.Builder, challengeIdOffset:flatbuffers.Offset, challengeNameOffset:flatbuffers.Offset, challengeDescOffset:flatbuffers.Offset, sortId:number, challengePicIdOffset:flatbuffers.Offset, challengeIconIdOffset:flatbuffers.Offset, openTime:bigint, preposedChallengeIdOffset:flatbuffers.Offset, passRound:number, passRoundScore:number, roundIdListOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_Act35SideData_Act35SideChallengeData.startclz_Torappu_Act35SideData_Act35SideChallengeData(builder);
  clz_Torappu_Act35SideData_Act35SideChallengeData.addChallengeId(builder, challengeIdOffset);
  clz_Torappu_Act35SideData_Act35SideChallengeData.addChallengeName(builder, challengeNameOffset);
  clz_Torappu_Act35SideData_Act35SideChallengeData.addChallengeDesc(builder, challengeDescOffset);
  clz_Torappu_Act35SideData_Act35SideChallengeData.addSortId(builder, sortId);
  clz_Torappu_Act35SideData_Act35SideChallengeData.addChallengePicId(builder, challengePicIdOffset);
  clz_Torappu_Act35SideData_Act35SideChallengeData.addChallengeIconId(builder, challengeIconIdOffset);
  clz_Torappu_Act35SideData_Act35SideChallengeData.addOpenTime(builder, openTime);
  clz_Torappu_Act35SideData_Act35SideChallengeData.addPreposedChallengeId(builder, preposedChallengeIdOffset);
  clz_Torappu_Act35SideData_Act35SideChallengeData.addPassRound(builder, passRound);
  clz_Torappu_Act35SideData_Act35SideChallengeData.addPassRoundScore(builder, passRoundScore);
  clz_Torappu_Act35SideData_Act35SideChallengeData.addRoundIdList(builder, roundIdListOffset);
  return clz_Torappu_Act35SideData_Act35SideChallengeData.endclz_Torappu_Act35SideData_Act35SideChallengeData(builder);
}

unpack(): clz_Torappu_Act35SideData_Act35SideChallengeDataT {
  return new clz_Torappu_Act35SideData_Act35SideChallengeDataT(
    this.challengeId(),
    this.challengeName(),
    this.challengeDesc(),
    this.sortId(),
    this.challengePicId(),
    this.challengeIconId(),
    this.openTime(),
    this.preposedChallengeId(),
    this.passRound(),
    this.passRoundScore(),
    this.bb!.createScalarList<string>(this.roundIdList.bind(this), this.roundIdListLength())
  );
}


unpackTo(_o: clz_Torappu_Act35SideData_Act35SideChallengeDataT): void {
  _o.challengeId = this.challengeId();
  _o.challengeName = this.challengeName();
  _o.challengeDesc = this.challengeDesc();
  _o.sortId = this.sortId();
  _o.challengePicId = this.challengePicId();
  _o.challengeIconId = this.challengeIconId();
  _o.openTime = this.openTime();
  _o.preposedChallengeId = this.preposedChallengeId();
  _o.passRound = this.passRound();
  _o.passRoundScore = this.passRoundScore();
  _o.roundIdList = this.bb!.createScalarList<string>(this.roundIdList.bind(this), this.roundIdListLength());
}
}

export class clz_Torappu_Act35SideData_Act35SideChallengeDataT implements flatbuffers.IGeneratedObject {
constructor(
  public challengeId: string|Uint8Array|null = null,
  public challengeName: string|Uint8Array|null = null,
  public challengeDesc: string|Uint8Array|null = null,
  public sortId: number = 0,
  public challengePicId: string|Uint8Array|null = null,
  public challengeIconId: string|Uint8Array|null = null,
  public openTime: bigint = BigInt('0'),
  public preposedChallengeId: string|Uint8Array|null = null,
  public passRound: number = 0,
  public passRoundScore: number = 0,
  public roundIdList: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const challengeId = (this.challengeId !== null ? builder.createString(this.challengeId!) : 0);
  const challengeName = (this.challengeName !== null ? builder.createString(this.challengeName!) : 0);
  const challengeDesc = (this.challengeDesc !== null ? builder.createString(this.challengeDesc!) : 0);
  const challengePicId = (this.challengePicId !== null ? builder.createString(this.challengePicId!) : 0);
  const challengeIconId = (this.challengeIconId !== null ? builder.createString(this.challengeIconId!) : 0);
  const preposedChallengeId = (this.preposedChallengeId !== null ? builder.createString(this.preposedChallengeId!) : 0);
  const roundIdList = clz_Torappu_Act35SideData_Act35SideChallengeData.createRoundIdListVector(builder, builder.createObjectOffsetList(this.roundIdList));

  return clz_Torappu_Act35SideData_Act35SideChallengeData.createclz_Torappu_Act35SideData_Act35SideChallengeData(builder,
    challengeId,
    challengeName,
    challengeDesc,
    this.sortId,
    challengePicId,
    challengeIconId,
    this.openTime,
    preposedChallengeId,
    this.passRound,
    this.passRoundScore,
    roundIdList
  );
}
}
