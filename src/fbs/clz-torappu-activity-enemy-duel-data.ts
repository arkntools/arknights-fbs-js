// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_ActivityEnemyDuelAnnounceData, clz_Torappu_ActivityEnemyDuelAnnounceDataT } from './clz-torappu-activity-enemy-duel-announce-data.js';
import { clz_Torappu_ActivityEnemyDuelConstData, clz_Torappu_ActivityEnemyDuelConstDataT } from './clz-torappu-activity-enemy-duel-const-data.js';
import { clz_Torappu_ActivityEnemyDuelConstToastData, clz_Torappu_ActivityEnemyDuelConstToastDataT } from './clz-torappu-activity-enemy-duel-const-toast-data.js';
import { clz_Torappu_ActivityEnemyDuelMilestoneItemData, clz_Torappu_ActivityEnemyDuelMilestoneItemDataT } from './clz-torappu-activity-enemy-duel-milestone-item-data.js';
import { clz_Torappu_ActivityEnemyDuelTipsData, clz_Torappu_ActivityEnemyDuelTipsDataT } from './clz-torappu-activity-enemy-duel-tips-data.js';
import { dict__string__clz_Torappu_ActivityEnemyDuelEnemyData, dict__string__clz_Torappu_ActivityEnemyDuelEnemyDataT } from './dict--string--clz-torappu-activity-enemy-duel-enemy-data.js';
import { dict__string__clz_Torappu_ActivityEnemyDuelExtraScoreGroupData, dict__string__clz_Torappu_ActivityEnemyDuelExtraScoreGroupDataT } from './dict--string--clz-torappu-activity-enemy-duel-extra-score-group-data.js';
import { dict__string__clz_Torappu_ActivityEnemyDuelModeData, dict__string__clz_Torappu_ActivityEnemyDuelModeDataT } from './dict--string--clz-torappu-activity-enemy-duel-mode-data.js';
import { dict__string__clz_Torappu_ActivityEnemyDuelNpcData, dict__string__clz_Torappu_ActivityEnemyDuelNpcDataT } from './dict--string--clz-torappu-activity-enemy-duel-npc-data.js';
import { dict__string__clz_Torappu_ActivityEnemyDuelNpcSelectorGroupData, dict__string__clz_Torappu_ActivityEnemyDuelNpcSelectorGroupDataT } from './dict--string--clz-torappu-activity-enemy-duel-npc-selector-group-data.js';
import { dict__string__clz_Torappu_ActivityEnemyDuelPoolData, dict__string__clz_Torappu_ActivityEnemyDuelPoolDataT } from './dict--string--clz-torappu-activity-enemy-duel-pool-data.js';
import { dict__string__clz_Torappu_ActivityEnemyDuelRoundData, dict__string__clz_Torappu_ActivityEnemyDuelRoundDataT } from './dict--string--clz-torappu-activity-enemy-duel-round-data.js';
import { dict__string__list_dict__string__clz_Torappu_ActivityEnemyDuelSingleCommentData, dict__string__list_dict__string__clz_Torappu_ActivityEnemyDuelSingleCommentDataT } from './dict--string--list-dict--string--clz-torappu-activity-enemy-duel-single-comment-data.js';


export class clz_Torappu_ActivityEnemyDuelData implements flatbuffers.IUnpackableObject<clz_Torappu_ActivityEnemyDuelDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActivityEnemyDuelData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActivityEnemyDuelData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityEnemyDuelData):clz_Torappu_ActivityEnemyDuelData {
  return (obj || new clz_Torappu_ActivityEnemyDuelData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActivityEnemyDuelData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityEnemyDuelData):clz_Torappu_ActivityEnemyDuelData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActivityEnemyDuelData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

milestoneList(index: number, obj?:clz_Torappu_ActivityEnemyDuelMilestoneItemData):clz_Torappu_ActivityEnemyDuelMilestoneItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new clz_Torappu_ActivityEnemyDuelMilestoneItemData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

milestoneListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

modeData(index: number, obj?:dict__string__clz_Torappu_ActivityEnemyDuelModeData):dict__string__clz_Torappu_ActivityEnemyDuelModeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new dict__string__clz_Torappu_ActivityEnemyDuelModeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

modeDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

roundData(index: number, obj?:dict__string__clz_Torappu_ActivityEnemyDuelRoundData):dict__string__clz_Torappu_ActivityEnemyDuelRoundData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new dict__string__clz_Torappu_ActivityEnemyDuelRoundData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

roundDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

poolData(index: number, obj?:dict__string__clz_Torappu_ActivityEnemyDuelPoolData):dict__string__clz_Torappu_ActivityEnemyDuelPoolData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new dict__string__clz_Torappu_ActivityEnemyDuelPoolData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

poolDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

npcData(index: number, obj?:dict__string__clz_Torappu_ActivityEnemyDuelNpcData):dict__string__clz_Torappu_ActivityEnemyDuelNpcData|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new dict__string__clz_Torappu_ActivityEnemyDuelNpcData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

npcDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

npcSelectorData(index: number, obj?:dict__string__clz_Torappu_ActivityEnemyDuelNpcSelectorGroupData):dict__string__clz_Torappu_ActivityEnemyDuelNpcSelectorGroupData|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new dict__string__clz_Torappu_ActivityEnemyDuelNpcSelectorGroupData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

npcSelectorDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

enemyData(index: number, obj?:dict__string__clz_Torappu_ActivityEnemyDuelEnemyData):dict__string__clz_Torappu_ActivityEnemyDuelEnemyData|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new dict__string__clz_Torappu_ActivityEnemyDuelEnemyData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

enemyDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

extraScoreData(index: number, obj?:dict__string__clz_Torappu_ActivityEnemyDuelExtraScoreGroupData):dict__string__clz_Torappu_ActivityEnemyDuelExtraScoreGroupData|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new dict__string__clz_Torappu_ActivityEnemyDuelExtraScoreGroupData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

extraScoreDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

basicScores(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

basicScoresLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

basicScoresArray():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

announceData(index: number, obj?:clz_Torappu_ActivityEnemyDuelAnnounceData):clz_Torappu_ActivityEnemyDuelAnnounceData|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? (obj || new clz_Torappu_ActivityEnemyDuelAnnounceData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

announceDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

commentData(index: number, obj?:dict__string__list_dict__string__clz_Torappu_ActivityEnemyDuelSingleCommentData):dict__string__list_dict__string__clz_Torappu_ActivityEnemyDuelSingleCommentData|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? (obj || new dict__string__list_dict__string__clz_Torappu_ActivityEnemyDuelSingleCommentData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

commentDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

constData(obj?:clz_Torappu_ActivityEnemyDuelConstData):clz_Torappu_ActivityEnemyDuelConstData|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? (obj || new clz_Torappu_ActivityEnemyDuelConstData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

constToastData(obj?:clz_Torappu_ActivityEnemyDuelConstToastData):clz_Torappu_ActivityEnemyDuelConstToastData|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? (obj || new clz_Torappu_ActivityEnemyDuelConstToastData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

tipsData(index: number, obj?:clz_Torappu_ActivityEnemyDuelTipsData):clz_Torappu_ActivityEnemyDuelTipsData|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? (obj || new clz_Torappu_ActivityEnemyDuelTipsData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

tipsDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

enabledEmoticonThemeIdList(index: number):string
enabledEmoticonThemeIdList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
enabledEmoticonThemeIdList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

enabledEmoticonThemeIdListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_ActivityEnemyDuelData(builder:flatbuffers.Builder) {
  builder.startObject(15);
}

static addMilestoneList(builder:flatbuffers.Builder, milestoneListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, milestoneListOffset, 0);
}

static createMilestoneListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startMilestoneListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addModeData(builder:flatbuffers.Builder, modeDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, modeDataOffset, 0);
}

static createModeDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startModeDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRoundData(builder:flatbuffers.Builder, roundDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, roundDataOffset, 0);
}

static createRoundDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRoundDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addPoolData(builder:flatbuffers.Builder, poolDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, poolDataOffset, 0);
}

static createPoolDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPoolDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addNpcData(builder:flatbuffers.Builder, npcDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, npcDataOffset, 0);
}

static createNpcDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startNpcDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addNpcSelectorData(builder:flatbuffers.Builder, npcSelectorDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, npcSelectorDataOffset, 0);
}

static createNpcSelectorDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startNpcSelectorDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addEnemyData(builder:flatbuffers.Builder, enemyDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, enemyDataOffset, 0);
}

static createEnemyDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEnemyDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addExtraScoreData(builder:flatbuffers.Builder, extraScoreDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, extraScoreDataOffset, 0);
}

static createExtraScoreDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startExtraScoreDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBasicScores(builder:flatbuffers.Builder, basicScoresOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, basicScoresOffset, 0);
}

static createBasicScoresVector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static createBasicScoresVector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static createBasicScoresVector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static startBasicScoresVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addAnnounceData(builder:flatbuffers.Builder, announceDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, announceDataOffset, 0);
}

static createAnnounceDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startAnnounceDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCommentData(builder:flatbuffers.Builder, commentDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, commentDataOffset, 0);
}

static createCommentDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCommentDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addConstData(builder:flatbuffers.Builder, constDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, constDataOffset, 0);
}

static addConstToastData(builder:flatbuffers.Builder, constToastDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, constToastDataOffset, 0);
}

static addTipsData(builder:flatbuffers.Builder, tipsDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, tipsDataOffset, 0);
}

static createTipsDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTipsDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addEnabledEmoticonThemeIdList(builder:flatbuffers.Builder, enabledEmoticonThemeIdListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, enabledEmoticonThemeIdListOffset, 0);
}

static createEnabledEmoticonThemeIdListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEnabledEmoticonThemeIdListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_ActivityEnemyDuelData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_ActivityEnemyDuelDataT {
  return new clz_Torappu_ActivityEnemyDuelDataT(
    this.bb!.createObjList<clz_Torappu_ActivityEnemyDuelMilestoneItemData, clz_Torappu_ActivityEnemyDuelMilestoneItemDataT>(this.milestoneList.bind(this), this.milestoneListLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActivityEnemyDuelModeData, dict__string__clz_Torappu_ActivityEnemyDuelModeDataT>(this.modeData.bind(this), this.modeDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActivityEnemyDuelRoundData, dict__string__clz_Torappu_ActivityEnemyDuelRoundDataT>(this.roundData.bind(this), this.roundDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActivityEnemyDuelPoolData, dict__string__clz_Torappu_ActivityEnemyDuelPoolDataT>(this.poolData.bind(this), this.poolDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActivityEnemyDuelNpcData, dict__string__clz_Torappu_ActivityEnemyDuelNpcDataT>(this.npcData.bind(this), this.npcDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActivityEnemyDuelNpcSelectorGroupData, dict__string__clz_Torappu_ActivityEnemyDuelNpcSelectorGroupDataT>(this.npcSelectorData.bind(this), this.npcSelectorDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActivityEnemyDuelEnemyData, dict__string__clz_Torappu_ActivityEnemyDuelEnemyDataT>(this.enemyData.bind(this), this.enemyDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_ActivityEnemyDuelExtraScoreGroupData, dict__string__clz_Torappu_ActivityEnemyDuelExtraScoreGroupDataT>(this.extraScoreData.bind(this), this.extraScoreDataLength()),
    this.bb!.createScalarList<number>(this.basicScores.bind(this), this.basicScoresLength()),
    this.bb!.createObjList<clz_Torappu_ActivityEnemyDuelAnnounceData, clz_Torappu_ActivityEnemyDuelAnnounceDataT>(this.announceData.bind(this), this.announceDataLength()),
    this.bb!.createObjList<dict__string__list_dict__string__clz_Torappu_ActivityEnemyDuelSingleCommentData, dict__string__list_dict__string__clz_Torappu_ActivityEnemyDuelSingleCommentDataT>(this.commentData.bind(this), this.commentDataLength()),
    (this.constData() !== null ? this.constData()!.unpack() : null),
    (this.constToastData() !== null ? this.constToastData()!.unpack() : null),
    this.bb!.createObjList<clz_Torappu_ActivityEnemyDuelTipsData, clz_Torappu_ActivityEnemyDuelTipsDataT>(this.tipsData.bind(this), this.tipsDataLength()),
    this.bb!.createScalarList<string>(this.enabledEmoticonThemeIdList.bind(this), this.enabledEmoticonThemeIdListLength())
  );
}


unpackTo(_o: clz_Torappu_ActivityEnemyDuelDataT): void {
  _o.milestoneList = this.bb!.createObjList<clz_Torappu_ActivityEnemyDuelMilestoneItemData, clz_Torappu_ActivityEnemyDuelMilestoneItemDataT>(this.milestoneList.bind(this), this.milestoneListLength());
  _o.modeData = this.bb!.createObjList<dict__string__clz_Torappu_ActivityEnemyDuelModeData, dict__string__clz_Torappu_ActivityEnemyDuelModeDataT>(this.modeData.bind(this), this.modeDataLength());
  _o.roundData = this.bb!.createObjList<dict__string__clz_Torappu_ActivityEnemyDuelRoundData, dict__string__clz_Torappu_ActivityEnemyDuelRoundDataT>(this.roundData.bind(this), this.roundDataLength());
  _o.poolData = this.bb!.createObjList<dict__string__clz_Torappu_ActivityEnemyDuelPoolData, dict__string__clz_Torappu_ActivityEnemyDuelPoolDataT>(this.poolData.bind(this), this.poolDataLength());
  _o.npcData = this.bb!.createObjList<dict__string__clz_Torappu_ActivityEnemyDuelNpcData, dict__string__clz_Torappu_ActivityEnemyDuelNpcDataT>(this.npcData.bind(this), this.npcDataLength());
  _o.npcSelectorData = this.bb!.createObjList<dict__string__clz_Torappu_ActivityEnemyDuelNpcSelectorGroupData, dict__string__clz_Torappu_ActivityEnemyDuelNpcSelectorGroupDataT>(this.npcSelectorData.bind(this), this.npcSelectorDataLength());
  _o.enemyData = this.bb!.createObjList<dict__string__clz_Torappu_ActivityEnemyDuelEnemyData, dict__string__clz_Torappu_ActivityEnemyDuelEnemyDataT>(this.enemyData.bind(this), this.enemyDataLength());
  _o.extraScoreData = this.bb!.createObjList<dict__string__clz_Torappu_ActivityEnemyDuelExtraScoreGroupData, dict__string__clz_Torappu_ActivityEnemyDuelExtraScoreGroupDataT>(this.extraScoreData.bind(this), this.extraScoreDataLength());
  _o.basicScores = this.bb!.createScalarList<number>(this.basicScores.bind(this), this.basicScoresLength());
  _o.announceData = this.bb!.createObjList<clz_Torappu_ActivityEnemyDuelAnnounceData, clz_Torappu_ActivityEnemyDuelAnnounceDataT>(this.announceData.bind(this), this.announceDataLength());
  _o.commentData = this.bb!.createObjList<dict__string__list_dict__string__clz_Torappu_ActivityEnemyDuelSingleCommentData, dict__string__list_dict__string__clz_Torappu_ActivityEnemyDuelSingleCommentDataT>(this.commentData.bind(this), this.commentDataLength());
  _o.constData = (this.constData() !== null ? this.constData()!.unpack() : null);
  _o.constToastData = (this.constToastData() !== null ? this.constToastData()!.unpack() : null);
  _o.tipsData = this.bb!.createObjList<clz_Torappu_ActivityEnemyDuelTipsData, clz_Torappu_ActivityEnemyDuelTipsDataT>(this.tipsData.bind(this), this.tipsDataLength());
  _o.enabledEmoticonThemeIdList = this.bb!.createScalarList<string>(this.enabledEmoticonThemeIdList.bind(this), this.enabledEmoticonThemeIdListLength());
}
}

export class clz_Torappu_ActivityEnemyDuelDataT implements flatbuffers.IGeneratedObject {
constructor(
  public milestoneList: (clz_Torappu_ActivityEnemyDuelMilestoneItemDataT)[] = [],
  public modeData: (dict__string__clz_Torappu_ActivityEnemyDuelModeDataT)[] = [],
  public roundData: (dict__string__clz_Torappu_ActivityEnemyDuelRoundDataT)[] = [],
  public poolData: (dict__string__clz_Torappu_ActivityEnemyDuelPoolDataT)[] = [],
  public npcData: (dict__string__clz_Torappu_ActivityEnemyDuelNpcDataT)[] = [],
  public npcSelectorData: (dict__string__clz_Torappu_ActivityEnemyDuelNpcSelectorGroupDataT)[] = [],
  public enemyData: (dict__string__clz_Torappu_ActivityEnemyDuelEnemyDataT)[] = [],
  public extraScoreData: (dict__string__clz_Torappu_ActivityEnemyDuelExtraScoreGroupDataT)[] = [],
  public basicScores: (number)[] = [],
  public announceData: (clz_Torappu_ActivityEnemyDuelAnnounceDataT)[] = [],
  public commentData: (dict__string__list_dict__string__clz_Torappu_ActivityEnemyDuelSingleCommentDataT)[] = [],
  public constData: clz_Torappu_ActivityEnemyDuelConstDataT|null = null,
  public constToastData: clz_Torappu_ActivityEnemyDuelConstToastDataT|null = null,
  public tipsData: (clz_Torappu_ActivityEnemyDuelTipsDataT)[] = [],
  public enabledEmoticonThemeIdList: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const milestoneList = clz_Torappu_ActivityEnemyDuelData.createMilestoneListVector(builder, builder.createObjectOffsetList(this.milestoneList));
  const modeData = clz_Torappu_ActivityEnemyDuelData.createModeDataVector(builder, builder.createObjectOffsetList(this.modeData));
  const roundData = clz_Torappu_ActivityEnemyDuelData.createRoundDataVector(builder, builder.createObjectOffsetList(this.roundData));
  const poolData = clz_Torappu_ActivityEnemyDuelData.createPoolDataVector(builder, builder.createObjectOffsetList(this.poolData));
  const npcData = clz_Torappu_ActivityEnemyDuelData.createNpcDataVector(builder, builder.createObjectOffsetList(this.npcData));
  const npcSelectorData = clz_Torappu_ActivityEnemyDuelData.createNpcSelectorDataVector(builder, builder.createObjectOffsetList(this.npcSelectorData));
  const enemyData = clz_Torappu_ActivityEnemyDuelData.createEnemyDataVector(builder, builder.createObjectOffsetList(this.enemyData));
  const extraScoreData = clz_Torappu_ActivityEnemyDuelData.createExtraScoreDataVector(builder, builder.createObjectOffsetList(this.extraScoreData));
  const basicScores = clz_Torappu_ActivityEnemyDuelData.createBasicScoresVector(builder, this.basicScores);
  const announceData = clz_Torappu_ActivityEnemyDuelData.createAnnounceDataVector(builder, builder.createObjectOffsetList(this.announceData));
  const commentData = clz_Torappu_ActivityEnemyDuelData.createCommentDataVector(builder, builder.createObjectOffsetList(this.commentData));
  const constData = (this.constData !== null ? this.constData!.pack(builder) : 0);
  const constToastData = (this.constToastData !== null ? this.constToastData!.pack(builder) : 0);
  const tipsData = clz_Torappu_ActivityEnemyDuelData.createTipsDataVector(builder, builder.createObjectOffsetList(this.tipsData));
  const enabledEmoticonThemeIdList = clz_Torappu_ActivityEnemyDuelData.createEnabledEmoticonThemeIdListVector(builder, builder.createObjectOffsetList(this.enabledEmoticonThemeIdList));

  clz_Torappu_ActivityEnemyDuelData.startclz_Torappu_ActivityEnemyDuelData(builder);
  clz_Torappu_ActivityEnemyDuelData.addMilestoneList(builder, milestoneList);
  clz_Torappu_ActivityEnemyDuelData.addModeData(builder, modeData);
  clz_Torappu_ActivityEnemyDuelData.addRoundData(builder, roundData);
  clz_Torappu_ActivityEnemyDuelData.addPoolData(builder, poolData);
  clz_Torappu_ActivityEnemyDuelData.addNpcData(builder, npcData);
  clz_Torappu_ActivityEnemyDuelData.addNpcSelectorData(builder, npcSelectorData);
  clz_Torappu_ActivityEnemyDuelData.addEnemyData(builder, enemyData);
  clz_Torappu_ActivityEnemyDuelData.addExtraScoreData(builder, extraScoreData);
  clz_Torappu_ActivityEnemyDuelData.addBasicScores(builder, basicScores);
  clz_Torappu_ActivityEnemyDuelData.addAnnounceData(builder, announceData);
  clz_Torappu_ActivityEnemyDuelData.addCommentData(builder, commentData);
  clz_Torappu_ActivityEnemyDuelData.addConstData(builder, constData);
  clz_Torappu_ActivityEnemyDuelData.addConstToastData(builder, constToastData);
  clz_Torappu_ActivityEnemyDuelData.addTipsData(builder, tipsData);
  clz_Torappu_ActivityEnemyDuelData.addEnabledEmoticonThemeIdList(builder, enabledEmoticonThemeIdList);

  return clz_Torappu_ActivityEnemyDuelData.endclz_Torappu_ActivityEnemyDuelData(builder);
}
}
