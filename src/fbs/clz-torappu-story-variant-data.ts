// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_StoryVariantData implements flatbuffers.IUnpackableObject<clz_Torappu_StoryVariantDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_StoryVariantData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_StoryVariantData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_StoryVariantData):clz_Torappu_StoryVariantData {
  return (obj || new clz_Torappu_StoryVariantData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_StoryVariantData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_StoryVariantData):clz_Torappu_StoryVariantData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_StoryVariantData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

plotTaskId():string|null
plotTaskId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
plotTaskId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

spStoryId():string|null
spStoryId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
spStoryId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

storyId():string|null
storyId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
storyId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

priority():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

startTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

endTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

template():string|null
template(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
template(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

param(index: number):string
param(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
param(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

paramLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_StoryVariantData(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addPlotTaskId(builder:flatbuffers.Builder, plotTaskIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, plotTaskIdOffset, 0);
}

static addSpStoryId(builder:flatbuffers.Builder, spStoryIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, spStoryIdOffset, 0);
}

static addStoryId(builder:flatbuffers.Builder, storyIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, storyIdOffset, 0);
}

static addPriority(builder:flatbuffers.Builder, priority:number) {
  builder.addFieldInt32(3, priority, 0);
}

static addStartTime(builder:flatbuffers.Builder, startTime:bigint) {
  builder.addFieldInt64(4, startTime, BigInt('0'));
}

static addEndTime(builder:flatbuffers.Builder, endTime:bigint) {
  builder.addFieldInt64(5, endTime, BigInt('0'));
}

static addTemplate(builder:flatbuffers.Builder, templateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, templateOffset, 0);
}

static addParam(builder:flatbuffers.Builder, paramOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, paramOffset, 0);
}

static createParamVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startParamVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_StoryVariantData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_StoryVariantData(builder:flatbuffers.Builder, plotTaskIdOffset:flatbuffers.Offset, spStoryIdOffset:flatbuffers.Offset, storyIdOffset:flatbuffers.Offset, priority:number, startTime:bigint, endTime:bigint, templateOffset:flatbuffers.Offset, paramOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_StoryVariantData.startclz_Torappu_StoryVariantData(builder);
  clz_Torappu_StoryVariantData.addPlotTaskId(builder, plotTaskIdOffset);
  clz_Torappu_StoryVariantData.addSpStoryId(builder, spStoryIdOffset);
  clz_Torappu_StoryVariantData.addStoryId(builder, storyIdOffset);
  clz_Torappu_StoryVariantData.addPriority(builder, priority);
  clz_Torappu_StoryVariantData.addStartTime(builder, startTime);
  clz_Torappu_StoryVariantData.addEndTime(builder, endTime);
  clz_Torappu_StoryVariantData.addTemplate(builder, templateOffset);
  clz_Torappu_StoryVariantData.addParam(builder, paramOffset);
  return clz_Torappu_StoryVariantData.endclz_Torappu_StoryVariantData(builder);
}

unpack(): clz_Torappu_StoryVariantDataT {
  return new clz_Torappu_StoryVariantDataT(
    this.plotTaskId(),
    this.spStoryId(),
    this.storyId(),
    this.priority(),
    this.startTime(),
    this.endTime(),
    this.template(),
    this.bb!.createScalarList<string>(this.param.bind(this), this.paramLength())
  );
}


unpackTo(_o: clz_Torappu_StoryVariantDataT): void {
  _o.plotTaskId = this.plotTaskId();
  _o.spStoryId = this.spStoryId();
  _o.storyId = this.storyId();
  _o.priority = this.priority();
  _o.startTime = this.startTime();
  _o.endTime = this.endTime();
  _o.template = this.template();
  _o.param = this.bb!.createScalarList<string>(this.param.bind(this), this.paramLength());
}
}

export class clz_Torappu_StoryVariantDataT implements flatbuffers.IGeneratedObject {
constructor(
  public plotTaskId: string|Uint8Array|null = null,
  public spStoryId: string|Uint8Array|null = null,
  public storyId: string|Uint8Array|null = null,
  public priority: number = 0,
  public startTime: bigint = BigInt('0'),
  public endTime: bigint = BigInt('0'),
  public template: string|Uint8Array|null = null,
  public param: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const plotTaskId = (this.plotTaskId !== null ? builder.createString(this.plotTaskId!) : 0);
  const spStoryId = (this.spStoryId !== null ? builder.createString(this.spStoryId!) : 0);
  const storyId = (this.storyId !== null ? builder.createString(this.storyId!) : 0);
  const template = (this.template !== null ? builder.createString(this.template!) : 0);
  const param = clz_Torappu_StoryVariantData.createParamVector(builder, builder.createObjectOffsetList(this.param));

  return clz_Torappu_StoryVariantData.createclz_Torappu_StoryVariantData(builder,
    plotTaskId,
    spStoryId,
    storyId,
    this.priority,
    this.startTime,
    this.endTime,
    template,
    param
  );
}
}
