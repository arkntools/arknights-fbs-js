// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_SandboxV2RacerNameType } from './enum--torappu-sandbox-v2-racer-name-type.js';


export class clz_Torappu_SandboxV2RacerNameInfo implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxV2RacerNameInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxV2RacerNameInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxV2RacerNameInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2RacerNameInfo):clz_Torappu_SandboxV2RacerNameInfo {
  return (obj || new clz_Torappu_SandboxV2RacerNameInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxV2RacerNameInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2RacerNameInfo):clz_Torappu_SandboxV2RacerNameInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxV2RacerNameInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

nameId():string|null
nameId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
nameId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

nameType():enum__Torappu_SandboxV2RacerNameType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_SandboxV2RacerNameType.PREFIX;
}

nameDesc():string|null
nameDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
nameDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_SandboxV2RacerNameInfo(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addNameId(builder:flatbuffers.Builder, nameIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, nameIdOffset, 0);
}

static addNameType(builder:flatbuffers.Builder, nameType:enum__Torappu_SandboxV2RacerNameType) {
  builder.addFieldInt32(1, nameType, enum__Torappu_SandboxV2RacerNameType.PREFIX);
}

static addNameDesc(builder:flatbuffers.Builder, nameDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, nameDescOffset, 0);
}

static endclz_Torappu_SandboxV2RacerNameInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxV2RacerNameInfo(builder:flatbuffers.Builder, nameIdOffset:flatbuffers.Offset, nameType:enum__Torappu_SandboxV2RacerNameType, nameDescOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SandboxV2RacerNameInfo.startclz_Torappu_SandboxV2RacerNameInfo(builder);
  clz_Torappu_SandboxV2RacerNameInfo.addNameId(builder, nameIdOffset);
  clz_Torappu_SandboxV2RacerNameInfo.addNameType(builder, nameType);
  clz_Torappu_SandboxV2RacerNameInfo.addNameDesc(builder, nameDescOffset);
  return clz_Torappu_SandboxV2RacerNameInfo.endclz_Torappu_SandboxV2RacerNameInfo(builder);
}

unpack(): clz_Torappu_SandboxV2RacerNameInfoT {
  return new clz_Torappu_SandboxV2RacerNameInfoT(
    this.nameId(),
    this.nameType(),
    this.nameDesc()
  );
}


unpackTo(_o: clz_Torappu_SandboxV2RacerNameInfoT): void {
  _o.nameId = this.nameId();
  _o.nameType = this.nameType();
  _o.nameDesc = this.nameDesc();
}
}

export class clz_Torappu_SandboxV2RacerNameInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public nameId: string|Uint8Array|null = null,
  public nameType: enum__Torappu_SandboxV2RacerNameType = enum__Torappu_SandboxV2RacerNameType.PREFIX,
  public nameDesc: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const nameId = (this.nameId !== null ? builder.createString(this.nameId!) : 0);
  const nameDesc = (this.nameDesc !== null ? builder.createString(this.nameDesc!) : 0);

  return clz_Torappu_SandboxV2RacerNameInfo.createclz_Torappu_SandboxV2RacerNameInfo(builder,
    nameId,
    this.nameType,
    nameDesc
  );
}
}
