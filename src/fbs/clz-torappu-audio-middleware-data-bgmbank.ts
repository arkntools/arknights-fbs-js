// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_Audio_Middleware_Data_BGMBank implements flatbuffers.IUnpackableObject<clz_Torappu_Audio_Middleware_Data_BGMBankT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Audio_Middleware_Data_BGMBank {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Audio_Middleware_Data_BGMBank(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Audio_Middleware_Data_BGMBank):clz_Torappu_Audio_Middleware_Data_BGMBank {
  return (obj || new clz_Torappu_Audio_Middleware_Data_BGMBank()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Audio_Middleware_Data_BGMBank(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Audio_Middleware_Data_BGMBank):clz_Torappu_Audio_Middleware_Data_BGMBank {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Audio_Middleware_Data_BGMBank()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

intro():string|null
intro(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
intro(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

loop():string|null
loop(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
loop(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

volume():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

crossfade():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

delay():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

fadeStyleId():string|null
fadeStyleId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
fadeStyleId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_Audio_Middleware_Data_BGMBank(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static addIntro(builder:flatbuffers.Builder, introOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, introOffset, 0);
}

static addLoop(builder:flatbuffers.Builder, loopOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, loopOffset, 0);
}

static addVolume(builder:flatbuffers.Builder, volume:number) {
  builder.addFieldFloat32(2, volume, 0.0);
}

static addCrossfade(builder:flatbuffers.Builder, crossfade:number) {
  builder.addFieldFloat32(3, crossfade, 0.0);
}

static addDelay(builder:flatbuffers.Builder, delay:number) {
  builder.addFieldFloat32(4, delay, 0.0);
}

static addFadeStyleId(builder:flatbuffers.Builder, fadeStyleIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, fadeStyleIdOffset, 0);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, nameOffset, 0);
}

static endclz_Torappu_Audio_Middleware_Data_BGMBank(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Audio_Middleware_Data_BGMBank(builder:flatbuffers.Builder, introOffset:flatbuffers.Offset, loopOffset:flatbuffers.Offset, volume:number, crossfade:number, delay:number, fadeStyleIdOffset:flatbuffers.Offset, nameOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_Audio_Middleware_Data_BGMBank.startclz_Torappu_Audio_Middleware_Data_BGMBank(builder);
  clz_Torappu_Audio_Middleware_Data_BGMBank.addIntro(builder, introOffset);
  clz_Torappu_Audio_Middleware_Data_BGMBank.addLoop(builder, loopOffset);
  clz_Torappu_Audio_Middleware_Data_BGMBank.addVolume(builder, volume);
  clz_Torappu_Audio_Middleware_Data_BGMBank.addCrossfade(builder, crossfade);
  clz_Torappu_Audio_Middleware_Data_BGMBank.addDelay(builder, delay);
  clz_Torappu_Audio_Middleware_Data_BGMBank.addFadeStyleId(builder, fadeStyleIdOffset);
  clz_Torappu_Audio_Middleware_Data_BGMBank.addName(builder, nameOffset);
  return clz_Torappu_Audio_Middleware_Data_BGMBank.endclz_Torappu_Audio_Middleware_Data_BGMBank(builder);
}

unpack(): clz_Torappu_Audio_Middleware_Data_BGMBankT {
  return new clz_Torappu_Audio_Middleware_Data_BGMBankT(
    this.intro(),
    this.loop(),
    this.volume(),
    this.crossfade(),
    this.delay(),
    this.fadeStyleId(),
    this.name()
  );
}


unpackTo(_o: clz_Torappu_Audio_Middleware_Data_BGMBankT): void {
  _o.intro = this.intro();
  _o.loop = this.loop();
  _o.volume = this.volume();
  _o.crossfade = this.crossfade();
  _o.delay = this.delay();
  _o.fadeStyleId = this.fadeStyleId();
  _o.name = this.name();
}
}

export class clz_Torappu_Audio_Middleware_Data_BGMBankT implements flatbuffers.IGeneratedObject {
constructor(
  public intro: string|Uint8Array|null = null,
  public loop: string|Uint8Array|null = null,
  public volume: number = 0.0,
  public crossfade: number = 0.0,
  public delay: number = 0.0,
  public fadeStyleId: string|Uint8Array|null = null,
  public name: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const intro = (this.intro !== null ? builder.createString(this.intro!) : 0);
  const loop = (this.loop !== null ? builder.createString(this.loop!) : 0);
  const fadeStyleId = (this.fadeStyleId !== null ? builder.createString(this.fadeStyleId!) : 0);
  const name = (this.name !== null ? builder.createString(this.name!) : 0);

  return clz_Torappu_Audio_Middleware_Data_BGMBank.createclz_Torappu_Audio_Middleware_Data_BGMBank(builder,
    intro,
    loop,
    this.volume,
    this.crossfade,
    this.delay,
    fadeStyleId,
    name
  );
}
}
