// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_RL01DifficultyExt, clz_Torappu_RL01DifficultyExtT } from './clz-torappu-rl01-difficulty-ext.js';
import { clz_Torappu_RL01EndingText, clz_Torappu_RL01EndingTextT } from './clz-torappu-rl01-ending-text.js';
import { dict__string__clz_Torappu_RoguelikeTopicDev, dict__string__clz_Torappu_RoguelikeTopicDevT } from './dict--string--clz-torappu-roguelike-topic-dev.js';
import { dict__string__clz_Torappu_RoguelikeTopicDevToken, dict__string__clz_Torappu_RoguelikeTopicDevTokenT } from './dict--string--clz-torappu-roguelike-topic-dev-token.js';


export class clz_Torappu_RL01CustomizeData implements flatbuffers.IUnpackableObject<clz_Torappu_RL01CustomizeDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RL01CustomizeData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RL01CustomizeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RL01CustomizeData):clz_Torappu_RL01CustomizeData {
  return (obj || new clz_Torappu_RL01CustomizeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RL01CustomizeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RL01CustomizeData):clz_Torappu_RL01CustomizeData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RL01CustomizeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

developments(index: number, obj?:dict__string__clz_Torappu_RoguelikeTopicDev):dict__string__clz_Torappu_RoguelikeTopicDev|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new dict__string__clz_Torappu_RoguelikeTopicDev()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

developmentsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

developmentTokens(index: number, obj?:dict__string__clz_Torappu_RoguelikeTopicDevToken):dict__string__clz_Torappu_RoguelikeTopicDevToken|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new dict__string__clz_Torappu_RoguelikeTopicDevToken()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

developmentTokensLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

endingText(obj?:clz_Torappu_RL01EndingText):clz_Torappu_RL01EndingText|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new clz_Torappu_RL01EndingText()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

difficulties(index: number, obj?:clz_Torappu_RL01DifficultyExt):clz_Torappu_RL01DifficultyExt|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_Torappu_RL01DifficultyExt()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

difficultiesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_RL01CustomizeData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addDevelopments(builder:flatbuffers.Builder, developmentsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, developmentsOffset, 0);
}

static createDevelopmentsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startDevelopmentsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addDevelopmentTokens(builder:flatbuffers.Builder, developmentTokensOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, developmentTokensOffset, 0);
}

static createDevelopmentTokensVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startDevelopmentTokensVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addEndingText(builder:flatbuffers.Builder, endingTextOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, endingTextOffset, 0);
}

static addDifficulties(builder:flatbuffers.Builder, difficultiesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, difficultiesOffset, 0);
}

static createDifficultiesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startDifficultiesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_RL01CustomizeData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_RL01CustomizeDataT {
  return new clz_Torappu_RL01CustomizeDataT(
    this.bb!.createObjList<dict__string__clz_Torappu_RoguelikeTopicDev, dict__string__clz_Torappu_RoguelikeTopicDevT>(this.developments.bind(this), this.developmentsLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_RoguelikeTopicDevToken, dict__string__clz_Torappu_RoguelikeTopicDevTokenT>(this.developmentTokens.bind(this), this.developmentTokensLength()),
    (this.endingText() !== null ? this.endingText()!.unpack() : null),
    this.bb!.createObjList<clz_Torappu_RL01DifficultyExt, clz_Torappu_RL01DifficultyExtT>(this.difficulties.bind(this), this.difficultiesLength())
  );
}


unpackTo(_o: clz_Torappu_RL01CustomizeDataT): void {
  _o.developments = this.bb!.createObjList<dict__string__clz_Torappu_RoguelikeTopicDev, dict__string__clz_Torappu_RoguelikeTopicDevT>(this.developments.bind(this), this.developmentsLength());
  _o.developmentTokens = this.bb!.createObjList<dict__string__clz_Torappu_RoguelikeTopicDevToken, dict__string__clz_Torappu_RoguelikeTopicDevTokenT>(this.developmentTokens.bind(this), this.developmentTokensLength());
  _o.endingText = (this.endingText() !== null ? this.endingText()!.unpack() : null);
  _o.difficulties = this.bb!.createObjList<clz_Torappu_RL01DifficultyExt, clz_Torappu_RL01DifficultyExtT>(this.difficulties.bind(this), this.difficultiesLength());
}
}

export class clz_Torappu_RL01CustomizeDataT implements flatbuffers.IGeneratedObject {
constructor(
  public developments: (dict__string__clz_Torappu_RoguelikeTopicDevT)[] = [],
  public developmentTokens: (dict__string__clz_Torappu_RoguelikeTopicDevTokenT)[] = [],
  public endingText: clz_Torappu_RL01EndingTextT|null = null,
  public difficulties: (clz_Torappu_RL01DifficultyExtT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const developments = clz_Torappu_RL01CustomizeData.createDevelopmentsVector(builder, builder.createObjectOffsetList(this.developments));
  const developmentTokens = clz_Torappu_RL01CustomizeData.createDevelopmentTokensVector(builder, builder.createObjectOffsetList(this.developmentTokens));
  const endingText = (this.endingText !== null ? this.endingText!.pack(builder) : 0);
  const difficulties = clz_Torappu_RL01CustomizeData.createDifficultiesVector(builder, builder.createObjectOffsetList(this.difficulties));

  clz_Torappu_RL01CustomizeData.startclz_Torappu_RL01CustomizeData(builder);
  clz_Torappu_RL01CustomizeData.addDevelopments(builder, developments);
  clz_Torappu_RL01CustomizeData.addDevelopmentTokens(builder, developmentTokens);
  clz_Torappu_RL01CustomizeData.addEndingText(builder, endingText);
  clz_Torappu_RL01CustomizeData.addDifficulties(builder, difficulties);

  return clz_Torappu_RL01CustomizeData.endclz_Torappu_RL01CustomizeData(builder);
}
}
