// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_CampaignConstTable, clz_Torappu_CampaignConstTableT } from './clz-torappu-campaign-const-table.js';
import { clz_Torappu_CampaignRotateOpenTimeData, clz_Torappu_CampaignRotateOpenTimeDataT } from './clz-torappu-campaign-rotate-open-time-data.js';
import { clz_Torappu_CampaignTrainingAllOpenTimeData, clz_Torappu_CampaignTrainingAllOpenTimeDataT } from './clz-torappu-campaign-training-all-open-time-data.js';
import { clz_Torappu_CampaignTrainingOpenTimeData, clz_Torappu_CampaignTrainingOpenTimeDataT } from './clz-torappu-campaign-training-open-time-data.js';
import { dict__string__clz_Torappu_CampaignData, dict__string__clz_Torappu_CampaignDataT } from './dict--string--clz-torappu-campaign-data.js';
import { dict__string__clz_Torappu_CampaignGroupData, dict__string__clz_Torappu_CampaignGroupDataT } from './dict--string--clz-torappu-campaign-group-data.js';
import { dict__string__clz_Torappu_CampaignMissionData, dict__string__clz_Torappu_CampaignMissionDataT } from './dict--string--clz-torappu-campaign-mission-data.js';
import { dict__string__clz_Torappu_CampaignRegionData, dict__string__clz_Torappu_CampaignRegionDataT } from './dict--string--clz-torappu-campaign-region-data.js';
import { dict__string__clz_Torappu_CampaignZoneData, dict__string__clz_Torappu_CampaignZoneDataT } from './dict--string--clz-torappu-campaign-zone-data.js';
import { dict__string__int, dict__string__intT } from './dict--string--int.js';


export class clz_Torappu_CampaignTable implements flatbuffers.IUnpackableObject<clz_Torappu_CampaignTableT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_CampaignTable {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_CampaignTable(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CampaignTable):clz_Torappu_CampaignTable {
  return (obj || new clz_Torappu_CampaignTable()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_CampaignTable(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CampaignTable):clz_Torappu_CampaignTable {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_CampaignTable()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

campaigns(index: number, obj?:dict__string__clz_Torappu_CampaignData):dict__string__clz_Torappu_CampaignData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new dict__string__clz_Torappu_CampaignData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

campaignsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

campaignGroups(index: number, obj?:dict__string__clz_Torappu_CampaignGroupData):dict__string__clz_Torappu_CampaignGroupData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new dict__string__clz_Torappu_CampaignGroupData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

campaignGroupsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

campaignRegions(index: number, obj?:dict__string__clz_Torappu_CampaignRegionData):dict__string__clz_Torappu_CampaignRegionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new dict__string__clz_Torappu_CampaignRegionData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

campaignRegionsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

campaignZones(index: number, obj?:dict__string__clz_Torappu_CampaignZoneData):dict__string__clz_Torappu_CampaignZoneData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new dict__string__clz_Torappu_CampaignZoneData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

campaignZonesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

campaignMissions(index: number, obj?:dict__string__clz_Torappu_CampaignMissionData):dict__string__clz_Torappu_CampaignMissionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new dict__string__clz_Torappu_CampaignMissionData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

campaignMissionsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

stageIndexInZoneMap(index: number, obj?:dict__string__int):dict__string__int|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new dict__string__int()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

stageIndexInZoneMapLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

campaignConstTable(obj?:clz_Torappu_CampaignConstTable):clz_Torappu_CampaignConstTable|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new clz_Torappu_CampaignConstTable()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

campaignRotateStageOpenTimes(index: number, obj?:clz_Torappu_CampaignRotateOpenTimeData):clz_Torappu_CampaignRotateOpenTimeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new clz_Torappu_CampaignRotateOpenTimeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

campaignRotateStageOpenTimesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

campaignTrainingStageOpenTimes(index: number, obj?:clz_Torappu_CampaignTrainingOpenTimeData):clz_Torappu_CampaignTrainingOpenTimeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? (obj || new clz_Torappu_CampaignTrainingOpenTimeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

campaignTrainingStageOpenTimesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

campaignTrainingAllOpenTimes(index: number, obj?:clz_Torappu_CampaignTrainingAllOpenTimeData):clz_Torappu_CampaignTrainingAllOpenTimeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? (obj || new clz_Torappu_CampaignTrainingAllOpenTimeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

campaignTrainingAllOpenTimesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_CampaignTable(builder:flatbuffers.Builder) {
  builder.startObject(10);
}

static addCampaigns(builder:flatbuffers.Builder, campaignsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, campaignsOffset, 0);
}

static createCampaignsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCampaignsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCampaignGroups(builder:flatbuffers.Builder, campaignGroupsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, campaignGroupsOffset, 0);
}

static createCampaignGroupsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCampaignGroupsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCampaignRegions(builder:flatbuffers.Builder, campaignRegionsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, campaignRegionsOffset, 0);
}

static createCampaignRegionsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCampaignRegionsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCampaignZones(builder:flatbuffers.Builder, campaignZonesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, campaignZonesOffset, 0);
}

static createCampaignZonesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCampaignZonesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCampaignMissions(builder:flatbuffers.Builder, campaignMissionsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, campaignMissionsOffset, 0);
}

static createCampaignMissionsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCampaignMissionsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addStageIndexInZoneMap(builder:flatbuffers.Builder, stageIndexInZoneMapOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, stageIndexInZoneMapOffset, 0);
}

static createStageIndexInZoneMapVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startStageIndexInZoneMapVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCampaignConstTable(builder:flatbuffers.Builder, campaignConstTableOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, campaignConstTableOffset, 0);
}

static addCampaignRotateStageOpenTimes(builder:flatbuffers.Builder, campaignRotateStageOpenTimesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, campaignRotateStageOpenTimesOffset, 0);
}

static createCampaignRotateStageOpenTimesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCampaignRotateStageOpenTimesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCampaignTrainingStageOpenTimes(builder:flatbuffers.Builder, campaignTrainingStageOpenTimesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, campaignTrainingStageOpenTimesOffset, 0);
}

static createCampaignTrainingStageOpenTimesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCampaignTrainingStageOpenTimesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCampaignTrainingAllOpenTimes(builder:flatbuffers.Builder, campaignTrainingAllOpenTimesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, campaignTrainingAllOpenTimesOffset, 0);
}

static createCampaignTrainingAllOpenTimesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCampaignTrainingAllOpenTimesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_CampaignTable(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishclz_Torappu_CampaignTableBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedclz_Torappu_CampaignTableBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}


unpack(): clz_Torappu_CampaignTableT {
  return new clz_Torappu_CampaignTableT(
    this.bb!.createObjList<dict__string__clz_Torappu_CampaignData, dict__string__clz_Torappu_CampaignDataT>(this.campaigns.bind(this), this.campaignsLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_CampaignGroupData, dict__string__clz_Torappu_CampaignGroupDataT>(this.campaignGroups.bind(this), this.campaignGroupsLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_CampaignRegionData, dict__string__clz_Torappu_CampaignRegionDataT>(this.campaignRegions.bind(this), this.campaignRegionsLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_CampaignZoneData, dict__string__clz_Torappu_CampaignZoneDataT>(this.campaignZones.bind(this), this.campaignZonesLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_CampaignMissionData, dict__string__clz_Torappu_CampaignMissionDataT>(this.campaignMissions.bind(this), this.campaignMissionsLength()),
    this.bb!.createObjList<dict__string__int, dict__string__intT>(this.stageIndexInZoneMap.bind(this), this.stageIndexInZoneMapLength()),
    (this.campaignConstTable() !== null ? this.campaignConstTable()!.unpack() : null),
    this.bb!.createObjList<clz_Torappu_CampaignRotateOpenTimeData, clz_Torappu_CampaignRotateOpenTimeDataT>(this.campaignRotateStageOpenTimes.bind(this), this.campaignRotateStageOpenTimesLength()),
    this.bb!.createObjList<clz_Torappu_CampaignTrainingOpenTimeData, clz_Torappu_CampaignTrainingOpenTimeDataT>(this.campaignTrainingStageOpenTimes.bind(this), this.campaignTrainingStageOpenTimesLength()),
    this.bb!.createObjList<clz_Torappu_CampaignTrainingAllOpenTimeData, clz_Torappu_CampaignTrainingAllOpenTimeDataT>(this.campaignTrainingAllOpenTimes.bind(this), this.campaignTrainingAllOpenTimesLength())
  );
}


unpackTo(_o: clz_Torappu_CampaignTableT): void {
  _o.campaigns = this.bb!.createObjList<dict__string__clz_Torappu_CampaignData, dict__string__clz_Torappu_CampaignDataT>(this.campaigns.bind(this), this.campaignsLength());
  _o.campaignGroups = this.bb!.createObjList<dict__string__clz_Torappu_CampaignGroupData, dict__string__clz_Torappu_CampaignGroupDataT>(this.campaignGroups.bind(this), this.campaignGroupsLength());
  _o.campaignRegions = this.bb!.createObjList<dict__string__clz_Torappu_CampaignRegionData, dict__string__clz_Torappu_CampaignRegionDataT>(this.campaignRegions.bind(this), this.campaignRegionsLength());
  _o.campaignZones = this.bb!.createObjList<dict__string__clz_Torappu_CampaignZoneData, dict__string__clz_Torappu_CampaignZoneDataT>(this.campaignZones.bind(this), this.campaignZonesLength());
  _o.campaignMissions = this.bb!.createObjList<dict__string__clz_Torappu_CampaignMissionData, dict__string__clz_Torappu_CampaignMissionDataT>(this.campaignMissions.bind(this), this.campaignMissionsLength());
  _o.stageIndexInZoneMap = this.bb!.createObjList<dict__string__int, dict__string__intT>(this.stageIndexInZoneMap.bind(this), this.stageIndexInZoneMapLength());
  _o.campaignConstTable = (this.campaignConstTable() !== null ? this.campaignConstTable()!.unpack() : null);
  _o.campaignRotateStageOpenTimes = this.bb!.createObjList<clz_Torappu_CampaignRotateOpenTimeData, clz_Torappu_CampaignRotateOpenTimeDataT>(this.campaignRotateStageOpenTimes.bind(this), this.campaignRotateStageOpenTimesLength());
  _o.campaignTrainingStageOpenTimes = this.bb!.createObjList<clz_Torappu_CampaignTrainingOpenTimeData, clz_Torappu_CampaignTrainingOpenTimeDataT>(this.campaignTrainingStageOpenTimes.bind(this), this.campaignTrainingStageOpenTimesLength());
  _o.campaignTrainingAllOpenTimes = this.bb!.createObjList<clz_Torappu_CampaignTrainingAllOpenTimeData, clz_Torappu_CampaignTrainingAllOpenTimeDataT>(this.campaignTrainingAllOpenTimes.bind(this), this.campaignTrainingAllOpenTimesLength());
}
}

export class clz_Torappu_CampaignTableT implements flatbuffers.IGeneratedObject {
constructor(
  public campaigns: (dict__string__clz_Torappu_CampaignDataT)[] = [],
  public campaignGroups: (dict__string__clz_Torappu_CampaignGroupDataT)[] = [],
  public campaignRegions: (dict__string__clz_Torappu_CampaignRegionDataT)[] = [],
  public campaignZones: (dict__string__clz_Torappu_CampaignZoneDataT)[] = [],
  public campaignMissions: (dict__string__clz_Torappu_CampaignMissionDataT)[] = [],
  public stageIndexInZoneMap: (dict__string__intT)[] = [],
  public campaignConstTable: clz_Torappu_CampaignConstTableT|null = null,
  public campaignRotateStageOpenTimes: (clz_Torappu_CampaignRotateOpenTimeDataT)[] = [],
  public campaignTrainingStageOpenTimes: (clz_Torappu_CampaignTrainingOpenTimeDataT)[] = [],
  public campaignTrainingAllOpenTimes: (clz_Torappu_CampaignTrainingAllOpenTimeDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const campaigns = clz_Torappu_CampaignTable.createCampaignsVector(builder, builder.createObjectOffsetList(this.campaigns));
  const campaignGroups = clz_Torappu_CampaignTable.createCampaignGroupsVector(builder, builder.createObjectOffsetList(this.campaignGroups));
  const campaignRegions = clz_Torappu_CampaignTable.createCampaignRegionsVector(builder, builder.createObjectOffsetList(this.campaignRegions));
  const campaignZones = clz_Torappu_CampaignTable.createCampaignZonesVector(builder, builder.createObjectOffsetList(this.campaignZones));
  const campaignMissions = clz_Torappu_CampaignTable.createCampaignMissionsVector(builder, builder.createObjectOffsetList(this.campaignMissions));
  const stageIndexInZoneMap = clz_Torappu_CampaignTable.createStageIndexInZoneMapVector(builder, builder.createObjectOffsetList(this.stageIndexInZoneMap));
  const campaignConstTable = (this.campaignConstTable !== null ? this.campaignConstTable!.pack(builder) : 0);
  const campaignRotateStageOpenTimes = clz_Torappu_CampaignTable.createCampaignRotateStageOpenTimesVector(builder, builder.createObjectOffsetList(this.campaignRotateStageOpenTimes));
  const campaignTrainingStageOpenTimes = clz_Torappu_CampaignTable.createCampaignTrainingStageOpenTimesVector(builder, builder.createObjectOffsetList(this.campaignTrainingStageOpenTimes));
  const campaignTrainingAllOpenTimes = clz_Torappu_CampaignTable.createCampaignTrainingAllOpenTimesVector(builder, builder.createObjectOffsetList(this.campaignTrainingAllOpenTimes));

  clz_Torappu_CampaignTable.startclz_Torappu_CampaignTable(builder);
  clz_Torappu_CampaignTable.addCampaigns(builder, campaigns);
  clz_Torappu_CampaignTable.addCampaignGroups(builder, campaignGroups);
  clz_Torappu_CampaignTable.addCampaignRegions(builder, campaignRegions);
  clz_Torappu_CampaignTable.addCampaignZones(builder, campaignZones);
  clz_Torappu_CampaignTable.addCampaignMissions(builder, campaignMissions);
  clz_Torappu_CampaignTable.addStageIndexInZoneMap(builder, stageIndexInZoneMap);
  clz_Torappu_CampaignTable.addCampaignConstTable(builder, campaignConstTable);
  clz_Torappu_CampaignTable.addCampaignRotateStageOpenTimes(builder, campaignRotateStageOpenTimes);
  clz_Torappu_CampaignTable.addCampaignTrainingStageOpenTimes(builder, campaignTrainingStageOpenTimes);
  clz_Torappu_CampaignTable.addCampaignTrainingAllOpenTimes(builder, campaignTrainingAllOpenTimes);

  return clz_Torappu_CampaignTable.endclz_Torappu_CampaignTable(builder);
}
}
