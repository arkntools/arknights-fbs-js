// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_RoguelikeGameItemRarity } from './enum--torappu-roguelike-game-item-rarity.js';
import { enum__Torappu_RoguelikeGameItemSubType } from './enum--torappu-roguelike-game-item-sub-type.js';
import { enum__Torappu_RoguelikeGameItemType } from './enum--torappu-roguelike-game-item-type.js';


export class clz_Torappu_RoguelikeGameItemData implements flatbuffers.IUnpackableObject<clz_Torappu_RoguelikeGameItemDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RoguelikeGameItemData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RoguelikeGameItemData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeGameItemData):clz_Torappu_RoguelikeGameItemData {
  return (obj || new clz_Torappu_RoguelikeGameItemData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RoguelikeGameItemData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeGameItemData):clz_Torappu_RoguelikeGameItemData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RoguelikeGameItemData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

description():string|null
description(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
description(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

usage():string|null
usage(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
usage(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

obtainApproach():string|null
obtainApproach(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
obtainApproach(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

iconId():string|null
iconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
iconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

itemIconGroupId():string|null
itemIconGroupId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
itemIconGroupId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

type():enum__Torappu_RoguelikeGameItemType {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_RoguelikeGameItemType.NONE;
}

subType():enum__Torappu_RoguelikeGameItemSubType {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_RoguelikeGameItemSubType.NONE;
}

rarity():enum__Torappu_RoguelikeGameItemRarity {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_RoguelikeGameItemRarity.NONE;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

canSacrifice():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

tinyIconColor():string|null
tinyIconColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
tinyIconColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

unlockCondDesc():string|null
unlockCondDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
unlockCondDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

shortUsage():string|null
shortUsage(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
shortUsage(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_RoguelikeGameItemData(builder:flatbuffers.Builder) {
  builder.startObject(15);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nameOffset, 0);
}

static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, descriptionOffset, 0);
}

static addUsage(builder:flatbuffers.Builder, usageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, usageOffset, 0);
}

static addObtainApproach(builder:flatbuffers.Builder, obtainApproachOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, obtainApproachOffset, 0);
}

static addIconId(builder:flatbuffers.Builder, iconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, iconIdOffset, 0);
}

static addItemIconGroupId(builder:flatbuffers.Builder, itemIconGroupIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, itemIconGroupIdOffset, 0);
}

static addType(builder:flatbuffers.Builder, type:enum__Torappu_RoguelikeGameItemType) {
  builder.addFieldInt32(7, type, enum__Torappu_RoguelikeGameItemType.NONE);
}

static addSubType(builder:flatbuffers.Builder, subType:enum__Torappu_RoguelikeGameItemSubType) {
  builder.addFieldInt32(8, subType, enum__Torappu_RoguelikeGameItemSubType.NONE);
}

static addRarity(builder:flatbuffers.Builder, rarity:enum__Torappu_RoguelikeGameItemRarity) {
  builder.addFieldInt32(9, rarity, enum__Torappu_RoguelikeGameItemRarity.NONE);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(10, sortId, 0);
}

static addCanSacrifice(builder:flatbuffers.Builder, canSacrifice:boolean) {
  builder.addFieldInt8(11, +canSacrifice, +false);
}

static addTinyIconColor(builder:flatbuffers.Builder, tinyIconColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, tinyIconColorOffset, 0);
}

static addUnlockCondDesc(builder:flatbuffers.Builder, unlockCondDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, unlockCondDescOffset, 0);
}

static addShortUsage(builder:flatbuffers.Builder, shortUsageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, shortUsageOffset, 0);
}

static endclz_Torappu_RoguelikeGameItemData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_RoguelikeGameItemData(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset, nameOffset:flatbuffers.Offset, descriptionOffset:flatbuffers.Offset, usageOffset:flatbuffers.Offset, obtainApproachOffset:flatbuffers.Offset, iconIdOffset:flatbuffers.Offset, itemIconGroupIdOffset:flatbuffers.Offset, type:enum__Torappu_RoguelikeGameItemType, subType:enum__Torappu_RoguelikeGameItemSubType, rarity:enum__Torappu_RoguelikeGameItemRarity, sortId:number, canSacrifice:boolean, tinyIconColorOffset:flatbuffers.Offset, unlockCondDescOffset:flatbuffers.Offset, shortUsageOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_RoguelikeGameItemData.startclz_Torappu_RoguelikeGameItemData(builder);
  clz_Torappu_RoguelikeGameItemData.addId(builder, idOffset);
  clz_Torappu_RoguelikeGameItemData.addName(builder, nameOffset);
  clz_Torappu_RoguelikeGameItemData.addDescription(builder, descriptionOffset);
  clz_Torappu_RoguelikeGameItemData.addUsage(builder, usageOffset);
  clz_Torappu_RoguelikeGameItemData.addObtainApproach(builder, obtainApproachOffset);
  clz_Torappu_RoguelikeGameItemData.addIconId(builder, iconIdOffset);
  clz_Torappu_RoguelikeGameItemData.addItemIconGroupId(builder, itemIconGroupIdOffset);
  clz_Torappu_RoguelikeGameItemData.addType(builder, type);
  clz_Torappu_RoguelikeGameItemData.addSubType(builder, subType);
  clz_Torappu_RoguelikeGameItemData.addRarity(builder, rarity);
  clz_Torappu_RoguelikeGameItemData.addSortId(builder, sortId);
  clz_Torappu_RoguelikeGameItemData.addCanSacrifice(builder, canSacrifice);
  clz_Torappu_RoguelikeGameItemData.addTinyIconColor(builder, tinyIconColorOffset);
  clz_Torappu_RoguelikeGameItemData.addUnlockCondDesc(builder, unlockCondDescOffset);
  clz_Torappu_RoguelikeGameItemData.addShortUsage(builder, shortUsageOffset);
  return clz_Torappu_RoguelikeGameItemData.endclz_Torappu_RoguelikeGameItemData(builder);
}

unpack(): clz_Torappu_RoguelikeGameItemDataT {
  return new clz_Torappu_RoguelikeGameItemDataT(
    this.id(),
    this.name(),
    this.description(),
    this.usage(),
    this.obtainApproach(),
    this.iconId(),
    this.itemIconGroupId(),
    this.type(),
    this.subType(),
    this.rarity(),
    this.sortId(),
    this.canSacrifice(),
    this.tinyIconColor(),
    this.unlockCondDesc(),
    this.shortUsage()
  );
}


unpackTo(_o: clz_Torappu_RoguelikeGameItemDataT): void {
  _o.id = this.id();
  _o.name = this.name();
  _o.description = this.description();
  _o.usage = this.usage();
  _o.obtainApproach = this.obtainApproach();
  _o.iconId = this.iconId();
  _o.itemIconGroupId = this.itemIconGroupId();
  _o.type = this.type();
  _o.subType = this.subType();
  _o.rarity = this.rarity();
  _o.sortId = this.sortId();
  _o.canSacrifice = this.canSacrifice();
  _o.tinyIconColor = this.tinyIconColor();
  _o.unlockCondDesc = this.unlockCondDesc();
  _o.shortUsage = this.shortUsage();
}
}

export class clz_Torappu_RoguelikeGameItemDataT implements flatbuffers.IGeneratedObject {
constructor(
  public id: string|Uint8Array|null = null,
  public name: string|Uint8Array|null = null,
  public description: string|Uint8Array|null = null,
  public usage: string|Uint8Array|null = null,
  public obtainApproach: string|Uint8Array|null = null,
  public iconId: string|Uint8Array|null = null,
  public itemIconGroupId: string|Uint8Array|null = null,
  public type: enum__Torappu_RoguelikeGameItemType = enum__Torappu_RoguelikeGameItemType.NONE,
  public subType: enum__Torappu_RoguelikeGameItemSubType = enum__Torappu_RoguelikeGameItemSubType.NONE,
  public rarity: enum__Torappu_RoguelikeGameItemRarity = enum__Torappu_RoguelikeGameItemRarity.NONE,
  public sortId: number = 0,
  public canSacrifice: boolean = false,
  public tinyIconColor: string|Uint8Array|null = null,
  public unlockCondDesc: string|Uint8Array|null = null,
  public shortUsage: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const id = (this.id !== null ? builder.createString(this.id!) : 0);
  const name = (this.name !== null ? builder.createString(this.name!) : 0);
  const description = (this.description !== null ? builder.createString(this.description!) : 0);
  const usage = (this.usage !== null ? builder.createString(this.usage!) : 0);
  const obtainApproach = (this.obtainApproach !== null ? builder.createString(this.obtainApproach!) : 0);
  const iconId = (this.iconId !== null ? builder.createString(this.iconId!) : 0);
  const itemIconGroupId = (this.itemIconGroupId !== null ? builder.createString(this.itemIconGroupId!) : 0);
  const tinyIconColor = (this.tinyIconColor !== null ? builder.createString(this.tinyIconColor!) : 0);
  const unlockCondDesc = (this.unlockCondDesc !== null ? builder.createString(this.unlockCondDesc!) : 0);
  const shortUsage = (this.shortUsage !== null ? builder.createString(this.shortUsage!) : 0);

  return clz_Torappu_RoguelikeGameItemData.createclz_Torappu_RoguelikeGameItemData(builder,
    id,
    name,
    description,
    usage,
    obtainApproach,
    iconId,
    itemIconGroupId,
    this.type,
    this.subType,
    this.rarity,
    this.sortId,
    this.canSacrifice,
    tinyIconColor,
    unlockCondDesc,
    shortUsage
  );
}
}
