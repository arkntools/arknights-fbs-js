// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_ActMultiV3MapDiffType } from './enum--torappu-act-multi-v3-map-diff-type.js';


export class clz_Torappu_ActMultiV3InverseUnlockCond implements flatbuffers.IUnpackableObject<clz_Torappu_ActMultiV3InverseUnlockCondT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActMultiV3InverseUnlockCond {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActMultiV3InverseUnlockCond(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActMultiV3InverseUnlockCond):clz_Torappu_ActMultiV3InverseUnlockCond {
  return (obj || new clz_Torappu_ActMultiV3InverseUnlockCond()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActMultiV3InverseUnlockCond(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActMultiV3InverseUnlockCond):clz_Torappu_ActMultiV3InverseUnlockCond {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActMultiV3InverseUnlockCond()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

diff():enum__Torappu_ActMultiV3MapDiffType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_ActMultiV3MapDiffType.NONE;
}

requireStarCnt():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_ActMultiV3InverseUnlockCond(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addDiff(builder:flatbuffers.Builder, diff:enum__Torappu_ActMultiV3MapDiffType) {
  builder.addFieldInt32(0, diff, enum__Torappu_ActMultiV3MapDiffType.NONE);
}

static addRequireStarCnt(builder:flatbuffers.Builder, requireStarCnt:number) {
  builder.addFieldInt32(1, requireStarCnt, 0);
}

static endclz_Torappu_ActMultiV3InverseUnlockCond(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActMultiV3InverseUnlockCond(builder:flatbuffers.Builder, diff:enum__Torappu_ActMultiV3MapDiffType, requireStarCnt:number):flatbuffers.Offset {
  clz_Torappu_ActMultiV3InverseUnlockCond.startclz_Torappu_ActMultiV3InverseUnlockCond(builder);
  clz_Torappu_ActMultiV3InverseUnlockCond.addDiff(builder, diff);
  clz_Torappu_ActMultiV3InverseUnlockCond.addRequireStarCnt(builder, requireStarCnt);
  return clz_Torappu_ActMultiV3InverseUnlockCond.endclz_Torappu_ActMultiV3InverseUnlockCond(builder);
}

unpack(): clz_Torappu_ActMultiV3InverseUnlockCondT {
  return new clz_Torappu_ActMultiV3InverseUnlockCondT(
    this.diff(),
    this.requireStarCnt()
  );
}


unpackTo(_o: clz_Torappu_ActMultiV3InverseUnlockCondT): void {
  _o.diff = this.diff();
  _o.requireStarCnt = this.requireStarCnt();
}
}

export class clz_Torappu_ActMultiV3InverseUnlockCondT implements flatbuffers.IGeneratedObject {
constructor(
  public diff: enum__Torappu_ActMultiV3MapDiffType = enum__Torappu_ActMultiV3MapDiffType.NONE,
  public requireStarCnt: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return clz_Torappu_ActMultiV3InverseUnlockCond.createclz_Torappu_ActMultiV3InverseUnlockCond(builder,
    this.diff,
    this.requireStarCnt
  );
}
}
