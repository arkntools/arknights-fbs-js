// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { dict__int__clz_Torappu_BuildingData_LayoutData_SlotCleanCost_CountCost, dict__int__clz_Torappu_BuildingData_LayoutData_SlotCleanCost_CountCostT } from './dict--int--clz-torappu-building-data-layout-data-slot-clean-cost-count-cost.js';


export class clz_Torappu_BuildingData_LayoutData_SlotCleanCost implements flatbuffers.IUnpackableObject<clz_Torappu_BuildingData_LayoutData_SlotCleanCostT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_BuildingData_LayoutData_SlotCleanCost {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_BuildingData_LayoutData_SlotCleanCost(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_LayoutData_SlotCleanCost):clz_Torappu_BuildingData_LayoutData_SlotCleanCost {
  return (obj || new clz_Torappu_BuildingData_LayoutData_SlotCleanCost()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_BuildingData_LayoutData_SlotCleanCost(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_LayoutData_SlotCleanCost):clz_Torappu_BuildingData_LayoutData_SlotCleanCost {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_BuildingData_LayoutData_SlotCleanCost()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

number(index: number, obj?:dict__int__clz_Torappu_BuildingData_LayoutData_SlotCleanCost_CountCost):dict__int__clz_Torappu_BuildingData_LayoutData_SlotCleanCost_CountCost|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new dict__int__clz_Torappu_BuildingData_LayoutData_SlotCleanCost_CountCost()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

numberLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_BuildingData_LayoutData_SlotCleanCost(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addNumber(builder:flatbuffers.Builder, numberOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, numberOffset, 0);
}

static createNumberVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startNumberVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_BuildingData_LayoutData_SlotCleanCost(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_BuildingData_LayoutData_SlotCleanCost(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset, numberOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_BuildingData_LayoutData_SlotCleanCost.startclz_Torappu_BuildingData_LayoutData_SlotCleanCost(builder);
  clz_Torappu_BuildingData_LayoutData_SlotCleanCost.addId(builder, idOffset);
  clz_Torappu_BuildingData_LayoutData_SlotCleanCost.addNumber(builder, numberOffset);
  return clz_Torappu_BuildingData_LayoutData_SlotCleanCost.endclz_Torappu_BuildingData_LayoutData_SlotCleanCost(builder);
}

unpack(): clz_Torappu_BuildingData_LayoutData_SlotCleanCostT {
  return new clz_Torappu_BuildingData_LayoutData_SlotCleanCostT(
    this.id(),
    this.bb!.createObjList<dict__int__clz_Torappu_BuildingData_LayoutData_SlotCleanCost_CountCost, dict__int__clz_Torappu_BuildingData_LayoutData_SlotCleanCost_CountCostT>(this.number.bind(this), this.numberLength())
  );
}


unpackTo(_o: clz_Torappu_BuildingData_LayoutData_SlotCleanCostT): void {
  _o.id = this.id();
  _o.number = this.bb!.createObjList<dict__int__clz_Torappu_BuildingData_LayoutData_SlotCleanCost_CountCost, dict__int__clz_Torappu_BuildingData_LayoutData_SlotCleanCost_CountCostT>(this.number.bind(this), this.numberLength());
}
}

export class clz_Torappu_BuildingData_LayoutData_SlotCleanCostT implements flatbuffers.IGeneratedObject {
constructor(
  public id: string|Uint8Array|null = null,
  public number: (dict__int__clz_Torappu_BuildingData_LayoutData_SlotCleanCost_CountCostT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const id = (this.id !== null ? builder.createString(this.id!) : 0);
  const number = clz_Torappu_BuildingData_LayoutData_SlotCleanCost.createNumberVector(builder, builder.createObjectOffsetList(this.number));

  return clz_Torappu_BuildingData_LayoutData_SlotCleanCost.createclz_Torappu_BuildingData_LayoutData_SlotCleanCost(builder,
    id,
    number
  );
}
}
