// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActArchiveTimelineItemData implements flatbuffers.IUnpackableObject<clz_Torappu_ActArchiveTimelineItemDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActArchiveTimelineItemData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActArchiveTimelineItemData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActArchiveTimelineItemData):clz_Torappu_ActArchiveTimelineItemData {
  return (obj || new clz_Torappu_ActArchiveTimelineItemData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActArchiveTimelineItemData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActArchiveTimelineItemData):clz_Torappu_ActArchiveTimelineItemData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActArchiveTimelineItemData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

timelineId():string|null
timelineId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
timelineId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

timelineSortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

timelineTitle():string|null
timelineTitle(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
timelineTitle(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

timelineDes():string|null
timelineDes(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
timelineDes(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

picIdList(index: number):string
picIdList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
picIdList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

picIdListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

audioIdList(index: number):string
audioIdList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
audioIdList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

audioIdListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

avgIdList(index: number):string
avgIdList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
avgIdList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

avgIdListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

storyIdList(index: number):string
storyIdList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
storyIdList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

storyIdListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

newsIdList(index: number):string
newsIdList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
newsIdList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

newsIdListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_ActArchiveTimelineItemData(builder:flatbuffers.Builder) {
  builder.startObject(9);
}

static addTimelineId(builder:flatbuffers.Builder, timelineIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, timelineIdOffset, 0);
}

static addTimelineSortId(builder:flatbuffers.Builder, timelineSortId:number) {
  builder.addFieldInt32(1, timelineSortId, 0);
}

static addTimelineTitle(builder:flatbuffers.Builder, timelineTitleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, timelineTitleOffset, 0);
}

static addTimelineDes(builder:flatbuffers.Builder, timelineDesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, timelineDesOffset, 0);
}

static addPicIdList(builder:flatbuffers.Builder, picIdListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, picIdListOffset, 0);
}

static createPicIdListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPicIdListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addAudioIdList(builder:flatbuffers.Builder, audioIdListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, audioIdListOffset, 0);
}

static createAudioIdListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startAudioIdListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addAvgIdList(builder:flatbuffers.Builder, avgIdListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, avgIdListOffset, 0);
}

static createAvgIdListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startAvgIdListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addStoryIdList(builder:flatbuffers.Builder, storyIdListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, storyIdListOffset, 0);
}

static createStoryIdListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startStoryIdListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addNewsIdList(builder:flatbuffers.Builder, newsIdListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, newsIdListOffset, 0);
}

static createNewsIdListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startNewsIdListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_ActArchiveTimelineItemData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActArchiveTimelineItemData(builder:flatbuffers.Builder, timelineIdOffset:flatbuffers.Offset, timelineSortId:number, timelineTitleOffset:flatbuffers.Offset, timelineDesOffset:flatbuffers.Offset, picIdListOffset:flatbuffers.Offset, audioIdListOffset:flatbuffers.Offset, avgIdListOffset:flatbuffers.Offset, storyIdListOffset:flatbuffers.Offset, newsIdListOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActArchiveTimelineItemData.startclz_Torappu_ActArchiveTimelineItemData(builder);
  clz_Torappu_ActArchiveTimelineItemData.addTimelineId(builder, timelineIdOffset);
  clz_Torappu_ActArchiveTimelineItemData.addTimelineSortId(builder, timelineSortId);
  clz_Torappu_ActArchiveTimelineItemData.addTimelineTitle(builder, timelineTitleOffset);
  clz_Torappu_ActArchiveTimelineItemData.addTimelineDes(builder, timelineDesOffset);
  clz_Torappu_ActArchiveTimelineItemData.addPicIdList(builder, picIdListOffset);
  clz_Torappu_ActArchiveTimelineItemData.addAudioIdList(builder, audioIdListOffset);
  clz_Torappu_ActArchiveTimelineItemData.addAvgIdList(builder, avgIdListOffset);
  clz_Torappu_ActArchiveTimelineItemData.addStoryIdList(builder, storyIdListOffset);
  clz_Torappu_ActArchiveTimelineItemData.addNewsIdList(builder, newsIdListOffset);
  return clz_Torappu_ActArchiveTimelineItemData.endclz_Torappu_ActArchiveTimelineItemData(builder);
}

unpack(): clz_Torappu_ActArchiveTimelineItemDataT {
  return new clz_Torappu_ActArchiveTimelineItemDataT(
    this.timelineId(),
    this.timelineSortId(),
    this.timelineTitle(),
    this.timelineDes(),
    this.bb!.createScalarList<string>(this.picIdList.bind(this), this.picIdListLength()),
    this.bb!.createScalarList<string>(this.audioIdList.bind(this), this.audioIdListLength()),
    this.bb!.createScalarList<string>(this.avgIdList.bind(this), this.avgIdListLength()),
    this.bb!.createScalarList<string>(this.storyIdList.bind(this), this.storyIdListLength()),
    this.bb!.createScalarList<string>(this.newsIdList.bind(this), this.newsIdListLength())
  );
}


unpackTo(_o: clz_Torappu_ActArchiveTimelineItemDataT): void {
  _o.timelineId = this.timelineId();
  _o.timelineSortId = this.timelineSortId();
  _o.timelineTitle = this.timelineTitle();
  _o.timelineDes = this.timelineDes();
  _o.picIdList = this.bb!.createScalarList<string>(this.picIdList.bind(this), this.picIdListLength());
  _o.audioIdList = this.bb!.createScalarList<string>(this.audioIdList.bind(this), this.audioIdListLength());
  _o.avgIdList = this.bb!.createScalarList<string>(this.avgIdList.bind(this), this.avgIdListLength());
  _o.storyIdList = this.bb!.createScalarList<string>(this.storyIdList.bind(this), this.storyIdListLength());
  _o.newsIdList = this.bb!.createScalarList<string>(this.newsIdList.bind(this), this.newsIdListLength());
}
}

export class clz_Torappu_ActArchiveTimelineItemDataT implements flatbuffers.IGeneratedObject {
constructor(
  public timelineId: string|Uint8Array|null = null,
  public timelineSortId: number = 0,
  public timelineTitle: string|Uint8Array|null = null,
  public timelineDes: string|Uint8Array|null = null,
  public picIdList: (string)[] = [],
  public audioIdList: (string)[] = [],
  public avgIdList: (string)[] = [],
  public storyIdList: (string)[] = [],
  public newsIdList: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const timelineId = (this.timelineId !== null ? builder.createString(this.timelineId!) : 0);
  const timelineTitle = (this.timelineTitle !== null ? builder.createString(this.timelineTitle!) : 0);
  const timelineDes = (this.timelineDes !== null ? builder.createString(this.timelineDes!) : 0);
  const picIdList = clz_Torappu_ActArchiveTimelineItemData.createPicIdListVector(builder, builder.createObjectOffsetList(this.picIdList));
  const audioIdList = clz_Torappu_ActArchiveTimelineItemData.createAudioIdListVector(builder, builder.createObjectOffsetList(this.audioIdList));
  const avgIdList = clz_Torappu_ActArchiveTimelineItemData.createAvgIdListVector(builder, builder.createObjectOffsetList(this.avgIdList));
  const storyIdList = clz_Torappu_ActArchiveTimelineItemData.createStoryIdListVector(builder, builder.createObjectOffsetList(this.storyIdList));
  const newsIdList = clz_Torappu_ActArchiveTimelineItemData.createNewsIdListVector(builder, builder.createObjectOffsetList(this.newsIdList));

  return clz_Torappu_ActArchiveTimelineItemData.createclz_Torappu_ActArchiveTimelineItemData(builder,
    timelineId,
    this.timelineSortId,
    timelineTitle,
    timelineDes,
    picIdList,
    audioIdList,
    avgIdList,
    storyIdList,
    newsIdList
  );
}
}
