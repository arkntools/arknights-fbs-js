// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_SandboxV2BaseUpdateData, clz_Torappu_SandboxV2BaseUpdateDataT } from './clz-torappu-sandbox-v2-base-update-data.js';
import { clz_Torappu_SandboxV2BasicConst, clz_Torappu_SandboxV2BasicConstT } from './clz-torappu-sandbox-v2-basic-const.js';
import { clz_Torappu_SandboxV2BattleRushEnemyData, clz_Torappu_SandboxV2BattleRushEnemyDataT } from './clz-torappu-sandbox-v2-battle-rush-enemy-data.js';
import { clz_Torappu_SandboxV2ChallengeModeData, clz_Torappu_SandboxV2ChallengeModeDataT } from './clz-torappu-sandbox-v2-challenge-mode-data.js';
import { clz_Torappu_SandboxV2ConfirmIconData, clz_Torappu_SandboxV2ConfirmIconDataT } from './clz-torappu-sandbox-v2-confirm-icon-data.js';
import { clz_Torappu_SandboxV2DevelopmentConst, clz_Torappu_SandboxV2DevelopmentConstT } from './clz-torappu-sandbox-v2-development-const.js';
import { clz_Torappu_SandboxV2DevelopmentLineSegmentData, clz_Torappu_SandboxV2DevelopmentLineSegmentDataT } from './clz-torappu-sandbox-v2-development-line-segment-data.js';
import { clz_Torappu_SandboxV2GameConst, clz_Torappu_SandboxV2GameConstT } from './clz-torappu-sandbox-v2-game-const.js';
import { clz_Torappu_SandboxV2LogisticsData, clz_Torappu_SandboxV2LogisticsDataT } from './clz-torappu-sandbox-v2-logistics-data.js';
import { clz_Torappu_SandboxV2MonthRushData, clz_Torappu_SandboxV2MonthRushDataT } from './clz-torappu-sandbox-v2-month-rush-data.js';
import { clz_Torappu_SandboxV2RacingData, clz_Torappu_SandboxV2RacingDataT } from './clz-torappu-sandbox-v2-racing-data.js';
import { clz_Torappu_SandboxV2RewardConfigGroupData, clz_Torappu_SandboxV2RewardConfigGroupDataT } from './clz-torappu-sandbox-v2-reward-config-group-data.js';
import { clz_Torappu_SandboxV2RiftConst, clz_Torappu_SandboxV2RiftConstT } from './clz-torappu-sandbox-v2-rift-const.js';
import { clz_Torappu_SandboxV2ShopDialogData, clz_Torappu_SandboxV2ShopDialogDataT } from './clz-torappu-sandbox-v2-shop-dialog-data.js';
import { clz_Torappu_SandboxV2TutorialData, clz_Torappu_SandboxV2TutorialDataT } from './clz-torappu-sandbox-v2-tutorial-data.js';
import { clz_Torappu_TipData, clz_Torappu_TipDataT } from './clz-torappu-tip-data.js';
import { dict__int__list_dict__int__list_clz_Torappu_SandboxV2LogisticsCharData, dict__int__list_dict__int__list_clz_Torappu_SandboxV2LogisticsCharDataT } from './dict--int--list-dict--int--list-clz-torappu-sandbox-v2-logistics-char-data.js';
import { dict__string__clz_Torappu_RuneTable_PackedRuneData, dict__string__clz_Torappu_RuneTable_PackedRuneDataT } from './dict--string--clz-torappu-rune-table-packed-rune-data.js';
import { dict__string__clz_Torappu_SandboxV2AlchemyRecipeData, dict__string__clz_Torappu_SandboxV2AlchemyRecipeDataT } from './dict--string--clz-torappu-sandbox-v2-alchemy-recipe-data.js';
import { dict__string__clz_Torappu_SandboxV2ArchiveAchievementData, dict__string__clz_Torappu_SandboxV2ArchiveAchievementDataT } from './dict--string--clz-torappu-sandbox-v2-archive-achievement-data.js';
import { dict__string__clz_Torappu_SandboxV2ArchiveAchievementTypeData, dict__string__clz_Torappu_SandboxV2ArchiveAchievementTypeDataT } from './dict--string--clz-torappu-sandbox-v2-archive-achievement-type-data.js';
import { dict__string__clz_Torappu_SandboxV2ArchiveMusicUnlockData, dict__string__clz_Torappu_SandboxV2ArchiveMusicUnlockDataT } from './dict--string--clz-torappu-sandbox-v2-archive-music-unlock-data.js';
import { dict__string__clz_Torappu_SandboxV2ArchiveQuestData, dict__string__clz_Torappu_SandboxV2ArchiveQuestDataT } from './dict--string--clz-torappu-sandbox-v2-archive-quest-data.js';
import { dict__string__clz_Torappu_SandboxV2ArchiveQuestTypeData, dict__string__clz_Torappu_SandboxV2ArchiveQuestTypeDataT } from './dict--string--clz-torappu-sandbox-v2-archive-quest-type-data.js';
import { dict__string__clz_Torappu_SandboxV2BuildingItemData, dict__string__clz_Torappu_SandboxV2BuildingItemDataT } from './dict--string--clz-torappu-sandbox-v2-building-item-data.js';
import { dict__string__clz_Torappu_SandboxV2BuildingNodeScoreData, dict__string__clz_Torappu_SandboxV2BuildingNodeScoreDataT } from './dict--string--clz-torappu-sandbox-v2-building-node-score-data.js';
import { dict__string__clz_Torappu_SandboxV2CraftGroupData, dict__string__clz_Torappu_SandboxV2CraftGroupDataT } from './dict--string--clz-torappu-sandbox-v2-craft-group-data.js';
import { dict__string__clz_Torappu_SandboxV2CraftItemData, dict__string__clz_Torappu_SandboxV2CraftItemDataT } from './dict--string--clz-torappu-sandbox-v2-craft-item-data.js';
import { dict__string__clz_Torappu_SandboxV2DevelopmentData, dict__string__clz_Torappu_SandboxV2DevelopmentDataT } from './dict--string--clz-torappu-sandbox-v2-development-data.js';
import { dict__string__clz_Torappu_SandboxV2DialogData, dict__string__clz_Torappu_SandboxV2DialogDataT } from './dict--string--clz-torappu-sandbox-v2-dialog-data.js';
import { dict__string__clz_Torappu_SandboxV2DrinkMatData, dict__string__clz_Torappu_SandboxV2DrinkMatDataT } from './dict--string--clz-torappu-sandbox-v2-drink-mat-data.js';
import { dict__string__clz_Torappu_SandboxV2EnemyRushTypeData, dict__string__clz_Torappu_SandboxV2EnemyRushTypeDataT } from './dict--string--clz-torappu-sandbox-v2-enemy-rush-type-data.js';
import { dict__string__clz_Torappu_SandboxV2EventChoiceData, dict__string__clz_Torappu_SandboxV2EventChoiceDataT } from './dict--string--clz-torappu-sandbox-v2-event-choice-data.js';
import { dict__string__clz_Torappu_SandboxV2EventData, dict__string__clz_Torappu_SandboxV2EventDataT } from './dict--string--clz-torappu-sandbox-v2-event-data.js';
import { dict__string__clz_Torappu_SandboxV2EventEffectData, dict__string__clz_Torappu_SandboxV2EventEffectDataT } from './dict--string--clz-torappu-sandbox-v2-event-effect-data.js';
import { dict__string__clz_Torappu_SandboxV2EventSceneData, dict__string__clz_Torappu_SandboxV2EventSceneDataT } from './dict--string--clz-torappu-sandbox-v2-event-scene-data.js';
import { dict__string__clz_Torappu_SandboxV2ExpeditionData, dict__string__clz_Torappu_SandboxV2ExpeditionDataT } from './dict--string--clz-torappu-sandbox-v2-expedition-data.js';
import { dict__string__clz_Torappu_SandboxV2FixedRiftData, dict__string__clz_Torappu_SandboxV2FixedRiftDataT } from './dict--string--clz-torappu-sandbox-v2-fixed-rift-data.js';
import { dict__string__clz_Torappu_SandboxV2FloatIconData, dict__string__clz_Torappu_SandboxV2FloatIconDataT } from './dict--string--clz-torappu-sandbox-v2-float-icon-data.js';
import { dict__string__clz_Torappu_SandboxV2FoodData, dict__string__clz_Torappu_SandboxV2FoodDataT } from './dict--string--clz-torappu-sandbox-v2-food-data.js';
import { dict__string__clz_Torappu_SandboxV2FoodMatData, dict__string__clz_Torappu_SandboxV2FoodMatDataT } from './dict--string--clz-torappu-sandbox-v2-food-mat-data.js';
import { dict__string__clz_Torappu_SandboxV2GuideQuestData, dict__string__clz_Torappu_SandboxV2GuideQuestDataT } from './dict--string--clz-torappu-sandbox-v2-guide-quest-data.js';
import { dict__string__clz_Torappu_SandboxV2ItemTrapData, dict__string__clz_Torappu_SandboxV2ItemTrapDataT } from './dict--string--clz-torappu-sandbox-v2-item-trap-data.js';
import { dict__string__clz_Torappu_SandboxV2ItemTrapTagData, dict__string__clz_Torappu_SandboxV2ItemTrapTagDataT } from './dict--string--clz-torappu-sandbox-v2-item-trap-tag-data.js';
import { dict__string__clz_Torappu_SandboxV2LivestockData, dict__string__clz_Torappu_SandboxV2LivestockDataT } from './dict--string--clz-torappu-sandbox-v2-livestock-data.js';
import { dict__string__clz_Torappu_SandboxV2MapData, dict__string__clz_Torappu_SandboxV2MapDataT } from './dict--string--clz-torappu-sandbox-v2-map-data.js';
import { dict__string__clz_Torappu_SandboxV2NodeBuffData, dict__string__clz_Torappu_SandboxV2NodeBuffDataT } from './dict--string--clz-torappu-sandbox-v2-node-buff-data.js';
import { dict__string__clz_Torappu_SandboxV2NodeTypeData, dict__string__clz_Torappu_SandboxV2NodeTypeDataT } from './dict--string--clz-torappu-sandbox-v2-node-type-data.js';
import { dict__string__clz_Torappu_SandboxV2NodeUpgradeData, dict__string__clz_Torappu_SandboxV2NodeUpgradeDataT } from './dict--string--clz-torappu-sandbox-v2-node-upgrade-data.js';
import { dict__string__clz_Torappu_SandboxV2NpcData, dict__string__clz_Torappu_SandboxV2NpcDataT } from './dict--string--clz-torappu-sandbox-v2-npc-data.js';
import { dict__string__clz_Torappu_SandboxV2QuestData, dict__string__clz_Torappu_SandboxV2QuestDataT } from './dict--string--clz-torappu-sandbox-v2-quest-data.js';
import { dict__string__clz_Torappu_SandboxV2QuestLineData, dict__string__clz_Torappu_SandboxV2QuestLineDataT } from './dict--string--clz-torappu-sandbox-v2-quest-line-data.js';
import { dict__string__clz_Torappu_SandboxV2RiftDifficultyData, dict__string__clz_Torappu_SandboxV2RiftDifficultyDataT } from './dict--string--clz-torappu-sandbox-v2-rift-difficulty-data.js';
import { dict__string__clz_Torappu_SandboxV2RiftGlobalEffectData, dict__string__clz_Torappu_SandboxV2RiftGlobalEffectDataT } from './dict--string--clz-torappu-sandbox-v2-rift-global-effect-data.js';
import { dict__string__clz_Torappu_SandboxV2RiftMainTargetData, dict__string__clz_Torappu_SandboxV2RiftMainTargetDataT } from './dict--string--clz-torappu-sandbox-v2-rift-main-target-data.js';
import { dict__string__clz_Torappu_SandboxV2RiftParamData, dict__string__clz_Torappu_SandboxV2RiftParamDataT } from './dict--string--clz-torappu-sandbox-v2-rift-param-data.js';
import { dict__string__clz_Torappu_SandboxV2RiftSubTargetData, dict__string__clz_Torappu_SandboxV2RiftSubTargetDataT } from './dict--string--clz-torappu-sandbox-v2-rift-sub-target-data.js';
import { dict__string__clz_Torappu_SandboxV2SeasonData, dict__string__clz_Torappu_SandboxV2SeasonDataT } from './dict--string--clz-torappu-sandbox-v2-season-data.js';
import { dict__string__clz_Torappu_SandboxV2ShopGoodData, dict__string__clz_Torappu_SandboxV2ShopGoodDataT } from './dict--string--clz-torappu-sandbox-v2-shop-good-data.js';
import { dict__string__clz_Torappu_SandboxV2StageData, dict__string__clz_Torappu_SandboxV2StageDataT } from './dict--string--clz-torappu-sandbox-v2-stage-data.js';
import { dict__string__clz_Torappu_SandboxV2WeatherData, dict__string__clz_Torappu_SandboxV2WeatherDataT } from './dict--string--clz-torappu-sandbox-v2-weather-data.js';
import { dict__string__clz_Torappu_SandboxV2ZoneData, dict__string__clz_Torappu_SandboxV2ZoneDataT } from './dict--string--clz-torappu-sandbox-v2-zone-data.js';
import { dict__string__list_clz_Torappu_LegacyInLevelRuneData, dict__string__list_clz_Torappu_LegacyInLevelRuneDataT } from './dict--string--list-clz-torappu-legacy-in-level-rune-data.js';
import { dict__string__list_clz_Torappu_SandboxV2RiftTeamBuffData, dict__string__list_clz_Torappu_SandboxV2RiftTeamBuffDataT } from './dict--string--list-clz-torappu-sandbox-v2-rift-team-buff-data.js';
import { dict__string__list_dict__string__string, dict__string__list_dict__string__stringT } from './dict--string--list-dict--string--string.js';
import { dict__string__list_string, dict__string__list_stringT } from './dict--string--list-string.js';
import { dict__string__string, dict__string__stringT } from './dict--string--string.js';


export class clz_Torappu_SandboxV2Data implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxV2DataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxV2Data {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxV2Data(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2Data):clz_Torappu_SandboxV2Data {
  return (obj || new clz_Torappu_SandboxV2Data()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxV2Data(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2Data):clz_Torappu_SandboxV2Data {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxV2Data()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

mapData(index: number, obj?:dict__string__clz_Torappu_SandboxV2MapData):dict__string__clz_Torappu_SandboxV2MapData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2MapData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

mapDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

itemTrapData(index: number, obj?:dict__string__clz_Torappu_SandboxV2ItemTrapData):dict__string__clz_Torappu_SandboxV2ItemTrapData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2ItemTrapData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

itemTrapDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

itemTrapTagData(index: number, obj?:dict__string__clz_Torappu_SandboxV2ItemTrapTagData):dict__string__clz_Torappu_SandboxV2ItemTrapTagData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2ItemTrapTagData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

itemTrapTagDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

buildingItemData(index: number, obj?:dict__string__clz_Torappu_SandboxV2BuildingItemData):dict__string__clz_Torappu_SandboxV2BuildingItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2BuildingItemData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

buildingItemDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

craftItemData(index: number, obj?:dict__string__clz_Torappu_SandboxV2CraftItemData):dict__string__clz_Torappu_SandboxV2CraftItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2CraftItemData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

craftItemDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

livestockProduceData(index: number, obj?:dict__string__clz_Torappu_SandboxV2LivestockData):dict__string__clz_Torappu_SandboxV2LivestockData|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2LivestockData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

livestockProduceDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

craftGroupData(index: number, obj?:dict__string__clz_Torappu_SandboxV2CraftGroupData):dict__string__clz_Torappu_SandboxV2CraftGroupData|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2CraftGroupData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

craftGroupDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

alchemyRecipeData(index: number, obj?:dict__string__clz_Torappu_SandboxV2AlchemyRecipeData):dict__string__clz_Torappu_SandboxV2AlchemyRecipeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2AlchemyRecipeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

alchemyRecipeDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

drinkMatData(index: number, obj?:dict__string__clz_Torappu_SandboxV2DrinkMatData):dict__string__clz_Torappu_SandboxV2DrinkMatData|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2DrinkMatData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

drinkMatDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

foodMatData(index: number, obj?:dict__string__clz_Torappu_SandboxV2FoodMatData):dict__string__clz_Torappu_SandboxV2FoodMatData|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2FoodMatData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

foodMatDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

foodData(index: number, obj?:dict__string__clz_Torappu_SandboxV2FoodData):dict__string__clz_Torappu_SandboxV2FoodData|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2FoodData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

foodDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

nodeTypeData(index: number, obj?:dict__string__clz_Torappu_SandboxV2NodeTypeData):dict__string__clz_Torappu_SandboxV2NodeTypeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2NodeTypeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

nodeTypeDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

nodeUpgradeData(index: number, obj?:dict__string__clz_Torappu_SandboxV2NodeUpgradeData):dict__string__clz_Torappu_SandboxV2NodeUpgradeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2NodeUpgradeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

nodeUpgradeDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

weatherData(index: number, obj?:dict__string__clz_Torappu_SandboxV2WeatherData):dict__string__clz_Torappu_SandboxV2WeatherData|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2WeatherData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

weatherDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

stageData(index: number, obj?:dict__string__clz_Torappu_SandboxV2StageData):dict__string__clz_Torappu_SandboxV2StageData|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2StageData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

stageDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

zoneData(index: number, obj?:dict__string__clz_Torappu_SandboxV2ZoneData):dict__string__clz_Torappu_SandboxV2ZoneData|null {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2ZoneData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

zoneDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

nodeBuffData(index: number, obj?:dict__string__clz_Torappu_SandboxV2NodeBuffData):dict__string__clz_Torappu_SandboxV2NodeBuffData|null {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2NodeBuffData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

nodeBuffDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

rewardConfigData(obj?:clz_Torappu_SandboxV2RewardConfigGroupData):clz_Torappu_SandboxV2RewardConfigGroupData|null {
  const offset = this.bb!.__offset(this.bb_pos, 38);
  return offset ? (obj || new clz_Torappu_SandboxV2RewardConfigGroupData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

floatIconData(index: number, obj?:dict__string__clz_Torappu_SandboxV2FloatIconData):dict__string__clz_Torappu_SandboxV2FloatIconData|null {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2FloatIconData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

floatIconDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

enemyRushTypeData(index: number, obj?:dict__string__clz_Torappu_SandboxV2EnemyRushTypeData):dict__string__clz_Torappu_SandboxV2EnemyRushTypeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2EnemyRushTypeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

enemyRushTypeDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

rushEnemyData(obj?:clz_Torappu_SandboxV2BattleRushEnemyData):clz_Torappu_SandboxV2BattleRushEnemyData|null {
  const offset = this.bb!.__offset(this.bb_pos, 44);
  return offset ? (obj || new clz_Torappu_SandboxV2BattleRushEnemyData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

gameConst(obj?:clz_Torappu_SandboxV2GameConst):clz_Torappu_SandboxV2GameConst|null {
  const offset = this.bb!.__offset(this.bb_pos, 46);
  return offset ? (obj || new clz_Torappu_SandboxV2GameConst()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

basicConst(obj?:clz_Torappu_SandboxV2BasicConst):clz_Torappu_SandboxV2BasicConst|null {
  const offset = this.bb!.__offset(this.bb_pos, 48);
  return offset ? (obj || new clz_Torappu_SandboxV2BasicConst()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

riftConst(obj?:clz_Torappu_SandboxV2RiftConst):clz_Torappu_SandboxV2RiftConst|null {
  const offset = this.bb!.__offset(this.bb_pos, 50);
  return offset ? (obj || new clz_Torappu_SandboxV2RiftConst()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

developmentConst(obj?:clz_Torappu_SandboxV2DevelopmentConst):clz_Torappu_SandboxV2DevelopmentConst|null {
  const offset = this.bb!.__offset(this.bb_pos, 52);
  return offset ? (obj || new clz_Torappu_SandboxV2DevelopmentConst()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

battleLoadingTips(index: number, obj?:clz_Torappu_TipData):clz_Torappu_TipData|null {
  const offset = this.bb!.__offset(this.bb_pos, 54);
  return offset ? (obj || new clz_Torappu_TipData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

battleLoadingTipsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 54);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

runeDatas(index: number, obj?:dict__string__clz_Torappu_RuneTable_PackedRuneData):dict__string__clz_Torappu_RuneTable_PackedRuneData|null {
  const offset = this.bb!.__offset(this.bb_pos, 56);
  return offset ? (obj || new dict__string__clz_Torappu_RuneTable_PackedRuneData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

runeDatasLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 56);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

itemRuneList(index: number, obj?:dict__string__list_clz_Torappu_LegacyInLevelRuneData):dict__string__list_clz_Torappu_LegacyInLevelRuneData|null {
  const offset = this.bb!.__offset(this.bb_pos, 58);
  return offset ? (obj || new dict__string__list_clz_Torappu_LegacyInLevelRuneData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

itemRuneListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 58);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

questData(index: number, obj?:dict__string__clz_Torappu_SandboxV2QuestData):dict__string__clz_Torappu_SandboxV2QuestData|null {
  const offset = this.bb!.__offset(this.bb_pos, 60);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2QuestData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

questDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 60);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

npcData(index: number, obj?:dict__string__clz_Torappu_SandboxV2NpcData):dict__string__clz_Torappu_SandboxV2NpcData|null {
  const offset = this.bb!.__offset(this.bb_pos, 62);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2NpcData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

npcDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 62);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

dialogData(index: number, obj?:dict__string__clz_Torappu_SandboxV2DialogData):dict__string__clz_Torappu_SandboxV2DialogData|null {
  const offset = this.bb!.__offset(this.bb_pos, 64);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2DialogData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

dialogDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 64);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

questLineData(index: number, obj?:dict__string__clz_Torappu_SandboxV2QuestLineData):dict__string__clz_Torappu_SandboxV2QuestLineData|null {
  const offset = this.bb!.__offset(this.bb_pos, 66);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2QuestLineData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

questLineDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 66);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

questLineStoryData(index: number, obj?:dict__string__string):dict__string__string|null {
  const offset = this.bb!.__offset(this.bb_pos, 68);
  return offset ? (obj || new dict__string__string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

questLineStoryDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 68);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

guideQuestData(index: number, obj?:dict__string__clz_Torappu_SandboxV2GuideQuestData):dict__string__clz_Torappu_SandboxV2GuideQuestData|null {
  const offset = this.bb!.__offset(this.bb_pos, 70);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2GuideQuestData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

guideQuestDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 70);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

developmentData(index: number, obj?:dict__string__clz_Torappu_SandboxV2DevelopmentData):dict__string__clz_Torappu_SandboxV2DevelopmentData|null {
  const offset = this.bb!.__offset(this.bb_pos, 72);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2DevelopmentData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

developmentDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 72);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

eventData(index: number, obj?:dict__string__clz_Torappu_SandboxV2EventData):dict__string__clz_Torappu_SandboxV2EventData|null {
  const offset = this.bb!.__offset(this.bb_pos, 74);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2EventData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

eventDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 74);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

eventSceneData(index: number, obj?:dict__string__clz_Torappu_SandboxV2EventSceneData):dict__string__clz_Torappu_SandboxV2EventSceneData|null {
  const offset = this.bb!.__offset(this.bb_pos, 76);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2EventSceneData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

eventSceneDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 76);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

eventChoiceData(index: number, obj?:dict__string__clz_Torappu_SandboxV2EventChoiceData):dict__string__clz_Torappu_SandboxV2EventChoiceData|null {
  const offset = this.bb!.__offset(this.bb_pos, 78);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2EventChoiceData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

eventChoiceDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 78);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

expeditionData(index: number, obj?:dict__string__clz_Torappu_SandboxV2ExpeditionData):dict__string__clz_Torappu_SandboxV2ExpeditionData|null {
  const offset = this.bb!.__offset(this.bb_pos, 80);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2ExpeditionData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

expeditionDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 80);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

eventEffectData(index: number, obj?:dict__string__clz_Torappu_SandboxV2EventEffectData):dict__string__clz_Torappu_SandboxV2EventEffectData|null {
  const offset = this.bb!.__offset(this.bb_pos, 82);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2EventEffectData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

eventEffectDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 82);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

shopGoodData(index: number, obj?:dict__string__clz_Torappu_SandboxV2ShopGoodData):dict__string__clz_Torappu_SandboxV2ShopGoodData|null {
  const offset = this.bb!.__offset(this.bb_pos, 84);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2ShopGoodData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

shopGoodDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 84);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

shopDialogData(obj?:clz_Torappu_SandboxV2ShopDialogData):clz_Torappu_SandboxV2ShopDialogData|null {
  const offset = this.bb!.__offset(this.bb_pos, 86);
  return offset ? (obj || new clz_Torappu_SandboxV2ShopDialogData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

logisticsData(index: number, obj?:clz_Torappu_SandboxV2LogisticsData):clz_Torappu_SandboxV2LogisticsData|null {
  const offset = this.bb!.__offset(this.bb_pos, 88);
  return offset ? (obj || new clz_Torappu_SandboxV2LogisticsData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

logisticsDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 88);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

logisticsCharMapping(index: number, obj?:dict__int__list_dict__int__list_clz_Torappu_SandboxV2LogisticsCharData):dict__int__list_dict__int__list_clz_Torappu_SandboxV2LogisticsCharData|null {
  const offset = this.bb!.__offset(this.bb_pos, 90);
  return offset ? (obj || new dict__int__list_dict__int__list_clz_Torappu_SandboxV2LogisticsCharData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

logisticsCharMappingLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 90);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

materialKeywordData(index: number, obj?:dict__string__string):dict__string__string|null {
  const offset = this.bb!.__offset(this.bb_pos, 92);
  return offset ? (obj || new dict__string__string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

materialKeywordDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 92);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

monthRushData(index: number, obj?:clz_Torappu_SandboxV2MonthRushData):clz_Torappu_SandboxV2MonthRushData|null {
  const offset = this.bb!.__offset(this.bb_pos, 94);
  return offset ? (obj || new clz_Torappu_SandboxV2MonthRushData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

monthRushDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 94);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

riftTerrainParamData(index: number, obj?:dict__string__clz_Torappu_SandboxV2RiftParamData):dict__string__clz_Torappu_SandboxV2RiftParamData|null {
  const offset = this.bb!.__offset(this.bb_pos, 96);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2RiftParamData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

riftTerrainParamDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 96);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

riftClimateParamData(index: number, obj?:dict__string__clz_Torappu_SandboxV2RiftParamData):dict__string__clz_Torappu_SandboxV2RiftParamData|null {
  const offset = this.bb!.__offset(this.bb_pos, 98);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2RiftParamData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

riftClimateParamDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 98);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

riftEnemyParamData(index: number, obj?:dict__string__clz_Torappu_SandboxV2RiftParamData):dict__string__clz_Torappu_SandboxV2RiftParamData|null {
  const offset = this.bb!.__offset(this.bb_pos, 100);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2RiftParamData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

riftEnemyParamDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 100);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

riftSubTargetData(index: number, obj?:dict__string__clz_Torappu_SandboxV2RiftSubTargetData):dict__string__clz_Torappu_SandboxV2RiftSubTargetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 102);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2RiftSubTargetData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

riftSubTargetDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 102);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

riftMainTargetData(index: number, obj?:dict__string__clz_Torappu_SandboxV2RiftMainTargetData):dict__string__clz_Torappu_SandboxV2RiftMainTargetData|null {
  const offset = this.bb!.__offset(this.bb_pos, 104);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2RiftMainTargetData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

riftMainTargetDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 104);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

riftGlobalEffectData(index: number, obj?:dict__string__clz_Torappu_SandboxV2RiftGlobalEffectData):dict__string__clz_Torappu_SandboxV2RiftGlobalEffectData|null {
  const offset = this.bb!.__offset(this.bb_pos, 106);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2RiftGlobalEffectData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

riftGlobalEffectDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 106);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

fixedRiftData(index: number, obj?:dict__string__clz_Torappu_SandboxV2FixedRiftData):dict__string__clz_Torappu_SandboxV2FixedRiftData|null {
  const offset = this.bb!.__offset(this.bb_pos, 108);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2FixedRiftData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

fixedRiftDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 108);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

riftTeamBuffData(index: number, obj?:dict__string__list_clz_Torappu_SandboxV2RiftTeamBuffData):dict__string__list_clz_Torappu_SandboxV2RiftTeamBuffData|null {
  const offset = this.bb!.__offset(this.bb_pos, 110);
  return offset ? (obj || new dict__string__list_clz_Torappu_SandboxV2RiftTeamBuffData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

riftTeamBuffDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 110);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

riftDifficultyData(index: number, obj?:dict__string__clz_Torappu_SandboxV2RiftDifficultyData):dict__string__clz_Torappu_SandboxV2RiftDifficultyData|null {
  const offset = this.bb!.__offset(this.bb_pos, 112);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2RiftDifficultyData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

riftDifficultyDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 112);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

riftRewardDisplayData(index: number, obj?:dict__string__list_string):dict__string__list_string|null {
  const offset = this.bb!.__offset(this.bb_pos, 114);
  return offset ? (obj || new dict__string__list_string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

riftRewardDisplayDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 114);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

enemyReplaceData(index: number, obj?:dict__string__list_dict__string__string):dict__string__list_dict__string__string|null {
  const offset = this.bb!.__offset(this.bb_pos, 116);
  return offset ? (obj || new dict__string__list_dict__string__string()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

enemyReplaceDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 116);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

archiveQuestData(index: number, obj?:dict__string__clz_Torappu_SandboxV2ArchiveQuestData):dict__string__clz_Torappu_SandboxV2ArchiveQuestData|null {
  const offset = this.bb!.__offset(this.bb_pos, 118);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2ArchiveQuestData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

archiveQuestDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 118);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

achievementData(index: number, obj?:dict__string__clz_Torappu_SandboxV2ArchiveAchievementData):dict__string__clz_Torappu_SandboxV2ArchiveAchievementData|null {
  const offset = this.bb!.__offset(this.bb_pos, 120);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2ArchiveAchievementData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

achievementDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 120);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

achievementTypeData(index: number, obj?:dict__string__clz_Torappu_SandboxV2ArchiveAchievementTypeData):dict__string__clz_Torappu_SandboxV2ArchiveAchievementTypeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 122);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2ArchiveAchievementTypeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

achievementTypeDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 122);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

archiveQuestTypeData(index: number, obj?:dict__string__clz_Torappu_SandboxV2ArchiveQuestTypeData):dict__string__clz_Torappu_SandboxV2ArchiveQuestTypeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 124);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2ArchiveQuestTypeData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

archiveQuestTypeDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 124);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

archiveMusicUnlockData(index: number, obj?:dict__string__clz_Torappu_SandboxV2ArchiveMusicUnlockData):dict__string__clz_Torappu_SandboxV2ArchiveMusicUnlockData|null {
  const offset = this.bb!.__offset(this.bb_pos, 126);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2ArchiveMusicUnlockData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

archiveMusicUnlockDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 126);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

baseUpdate(index: number, obj?:clz_Torappu_SandboxV2BaseUpdateData):clz_Torappu_SandboxV2BaseUpdateData|null {
  const offset = this.bb!.__offset(this.bb_pos, 128);
  return offset ? (obj || new clz_Torappu_SandboxV2BaseUpdateData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

baseUpdateLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 128);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

developmentLineSegmentDatas(index: number, obj?:clz_Torappu_SandboxV2DevelopmentLineSegmentData):clz_Torappu_SandboxV2DevelopmentLineSegmentData|null {
  const offset = this.bb!.__offset(this.bb_pos, 130);
  return offset ? (obj || new clz_Torappu_SandboxV2DevelopmentLineSegmentData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

developmentLineSegmentDatasLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 130);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

buildingNodeScoreData(index: number, obj?:dict__string__clz_Torappu_SandboxV2BuildingNodeScoreData):dict__string__clz_Torappu_SandboxV2BuildingNodeScoreData|null {
  const offset = this.bb!.__offset(this.bb_pos, 132);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2BuildingNodeScoreData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

buildingNodeScoreDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 132);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

seasonData(index: number, obj?:dict__string__clz_Torappu_SandboxV2SeasonData):dict__string__clz_Torappu_SandboxV2SeasonData|null {
  const offset = this.bb!.__offset(this.bb_pos, 134);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxV2SeasonData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

seasonDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 134);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

confirmIconData(index: number, obj?:clz_Torappu_SandboxV2ConfirmIconData):clz_Torappu_SandboxV2ConfirmIconData|null {
  const offset = this.bb!.__offset(this.bb_pos, 136);
  return offset ? (obj || new clz_Torappu_SandboxV2ConfirmIconData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

confirmIconDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 136);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

shopUpdateTimeData(index: number):bigint|null {
  const offset = this.bb!.__offset(this.bb_pos, 138);
  return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : BigInt(0);
}

shopUpdateTimeDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 138);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

tutorialData(obj?:clz_Torappu_SandboxV2TutorialData):clz_Torappu_SandboxV2TutorialData|null {
  const offset = this.bb!.__offset(this.bb_pos, 140);
  return offset ? (obj || new clz_Torappu_SandboxV2TutorialData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

racingData(obj?:clz_Torappu_SandboxV2RacingData):clz_Torappu_SandboxV2RacingData|null {
  const offset = this.bb!.__offset(this.bb_pos, 142);
  return offset ? (obj || new clz_Torappu_SandboxV2RacingData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

challengeModeData(obj?:clz_Torappu_SandboxV2ChallengeModeData):clz_Torappu_SandboxV2ChallengeModeData|null {
  const offset = this.bb!.__offset(this.bb_pos, 144);
  return offset ? (obj || new clz_Torappu_SandboxV2ChallengeModeData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startclz_Torappu_SandboxV2Data(builder:flatbuffers.Builder) {
  builder.startObject(71);
}

static addMapData(builder:flatbuffers.Builder, mapDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, mapDataOffset, 0);
}

static createMapDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startMapDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addItemTrapData(builder:flatbuffers.Builder, itemTrapDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, itemTrapDataOffset, 0);
}

static createItemTrapDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startItemTrapDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addItemTrapTagData(builder:flatbuffers.Builder, itemTrapTagDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, itemTrapTagDataOffset, 0);
}

static createItemTrapTagDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startItemTrapTagDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBuildingItemData(builder:flatbuffers.Builder, buildingItemDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, buildingItemDataOffset, 0);
}

static createBuildingItemDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBuildingItemDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCraftItemData(builder:flatbuffers.Builder, craftItemDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, craftItemDataOffset, 0);
}

static createCraftItemDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCraftItemDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addLivestockProduceData(builder:flatbuffers.Builder, livestockProduceDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, livestockProduceDataOffset, 0);
}

static createLivestockProduceDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startLivestockProduceDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCraftGroupData(builder:flatbuffers.Builder, craftGroupDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, craftGroupDataOffset, 0);
}

static createCraftGroupDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCraftGroupDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addAlchemyRecipeData(builder:flatbuffers.Builder, alchemyRecipeDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, alchemyRecipeDataOffset, 0);
}

static createAlchemyRecipeDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startAlchemyRecipeDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addDrinkMatData(builder:flatbuffers.Builder, drinkMatDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, drinkMatDataOffset, 0);
}

static createDrinkMatDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startDrinkMatDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addFoodMatData(builder:flatbuffers.Builder, foodMatDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, foodMatDataOffset, 0);
}

static createFoodMatDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startFoodMatDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addFoodData(builder:flatbuffers.Builder, foodDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, foodDataOffset, 0);
}

static createFoodDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startFoodDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addNodeTypeData(builder:flatbuffers.Builder, nodeTypeDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, nodeTypeDataOffset, 0);
}

static createNodeTypeDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startNodeTypeDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addNodeUpgradeData(builder:flatbuffers.Builder, nodeUpgradeDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, nodeUpgradeDataOffset, 0);
}

static createNodeUpgradeDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startNodeUpgradeDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addWeatherData(builder:flatbuffers.Builder, weatherDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, weatherDataOffset, 0);
}

static createWeatherDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startWeatherDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addStageData(builder:flatbuffers.Builder, stageDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, stageDataOffset, 0);
}

static createStageDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startStageDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addZoneData(builder:flatbuffers.Builder, zoneDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(15, zoneDataOffset, 0);
}

static createZoneDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startZoneDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addNodeBuffData(builder:flatbuffers.Builder, nodeBuffDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(16, nodeBuffDataOffset, 0);
}

static createNodeBuffDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startNodeBuffDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRewardConfigData(builder:flatbuffers.Builder, rewardConfigDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(17, rewardConfigDataOffset, 0);
}

static addFloatIconData(builder:flatbuffers.Builder, floatIconDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(18, floatIconDataOffset, 0);
}

static createFloatIconDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startFloatIconDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addEnemyRushTypeData(builder:flatbuffers.Builder, enemyRushTypeDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(19, enemyRushTypeDataOffset, 0);
}

static createEnemyRushTypeDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEnemyRushTypeDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRushEnemyData(builder:flatbuffers.Builder, rushEnemyDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(20, rushEnemyDataOffset, 0);
}

static addGameConst(builder:flatbuffers.Builder, gameConstOffset:flatbuffers.Offset) {
  builder.addFieldOffset(21, gameConstOffset, 0);
}

static addBasicConst(builder:flatbuffers.Builder, basicConstOffset:flatbuffers.Offset) {
  builder.addFieldOffset(22, basicConstOffset, 0);
}

static addRiftConst(builder:flatbuffers.Builder, riftConstOffset:flatbuffers.Offset) {
  builder.addFieldOffset(23, riftConstOffset, 0);
}

static addDevelopmentConst(builder:flatbuffers.Builder, developmentConstOffset:flatbuffers.Offset) {
  builder.addFieldOffset(24, developmentConstOffset, 0);
}

static addBattleLoadingTips(builder:flatbuffers.Builder, battleLoadingTipsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(25, battleLoadingTipsOffset, 0);
}

static createBattleLoadingTipsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBattleLoadingTipsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRuneDatas(builder:flatbuffers.Builder, runeDatasOffset:flatbuffers.Offset) {
  builder.addFieldOffset(26, runeDatasOffset, 0);
}

static createRuneDatasVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRuneDatasVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addItemRuneList(builder:flatbuffers.Builder, itemRuneListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(27, itemRuneListOffset, 0);
}

static createItemRuneListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startItemRuneListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addQuestData(builder:flatbuffers.Builder, questDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(28, questDataOffset, 0);
}

static createQuestDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startQuestDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addNpcData(builder:flatbuffers.Builder, npcDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(29, npcDataOffset, 0);
}

static createNpcDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startNpcDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addDialogData(builder:flatbuffers.Builder, dialogDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(30, dialogDataOffset, 0);
}

static createDialogDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startDialogDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addQuestLineData(builder:flatbuffers.Builder, questLineDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(31, questLineDataOffset, 0);
}

static createQuestLineDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startQuestLineDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addQuestLineStoryData(builder:flatbuffers.Builder, questLineStoryDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(32, questLineStoryDataOffset, 0);
}

static createQuestLineStoryDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startQuestLineStoryDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addGuideQuestData(builder:flatbuffers.Builder, guideQuestDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(33, guideQuestDataOffset, 0);
}

static createGuideQuestDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startGuideQuestDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addDevelopmentData(builder:flatbuffers.Builder, developmentDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(34, developmentDataOffset, 0);
}

static createDevelopmentDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startDevelopmentDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addEventData(builder:flatbuffers.Builder, eventDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(35, eventDataOffset, 0);
}

static createEventDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEventDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addEventSceneData(builder:flatbuffers.Builder, eventSceneDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(36, eventSceneDataOffset, 0);
}

static createEventSceneDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEventSceneDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addEventChoiceData(builder:flatbuffers.Builder, eventChoiceDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(37, eventChoiceDataOffset, 0);
}

static createEventChoiceDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEventChoiceDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addExpeditionData(builder:flatbuffers.Builder, expeditionDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(38, expeditionDataOffset, 0);
}

static createExpeditionDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startExpeditionDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addEventEffectData(builder:flatbuffers.Builder, eventEffectDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(39, eventEffectDataOffset, 0);
}

static createEventEffectDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEventEffectDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addShopGoodData(builder:flatbuffers.Builder, shopGoodDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(40, shopGoodDataOffset, 0);
}

static createShopGoodDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startShopGoodDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addShopDialogData(builder:flatbuffers.Builder, shopDialogDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(41, shopDialogDataOffset, 0);
}

static addLogisticsData(builder:flatbuffers.Builder, logisticsDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(42, logisticsDataOffset, 0);
}

static createLogisticsDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startLogisticsDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addLogisticsCharMapping(builder:flatbuffers.Builder, logisticsCharMappingOffset:flatbuffers.Offset) {
  builder.addFieldOffset(43, logisticsCharMappingOffset, 0);
}

static createLogisticsCharMappingVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startLogisticsCharMappingVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addMaterialKeywordData(builder:flatbuffers.Builder, materialKeywordDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(44, materialKeywordDataOffset, 0);
}

static createMaterialKeywordDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startMaterialKeywordDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addMonthRushData(builder:flatbuffers.Builder, monthRushDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(45, monthRushDataOffset, 0);
}

static createMonthRushDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startMonthRushDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRiftTerrainParamData(builder:flatbuffers.Builder, riftTerrainParamDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(46, riftTerrainParamDataOffset, 0);
}

static createRiftTerrainParamDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRiftTerrainParamDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRiftClimateParamData(builder:flatbuffers.Builder, riftClimateParamDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(47, riftClimateParamDataOffset, 0);
}

static createRiftClimateParamDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRiftClimateParamDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRiftEnemyParamData(builder:flatbuffers.Builder, riftEnemyParamDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(48, riftEnemyParamDataOffset, 0);
}

static createRiftEnemyParamDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRiftEnemyParamDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRiftSubTargetData(builder:flatbuffers.Builder, riftSubTargetDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(49, riftSubTargetDataOffset, 0);
}

static createRiftSubTargetDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRiftSubTargetDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRiftMainTargetData(builder:flatbuffers.Builder, riftMainTargetDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(50, riftMainTargetDataOffset, 0);
}

static createRiftMainTargetDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRiftMainTargetDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRiftGlobalEffectData(builder:flatbuffers.Builder, riftGlobalEffectDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(51, riftGlobalEffectDataOffset, 0);
}

static createRiftGlobalEffectDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRiftGlobalEffectDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addFixedRiftData(builder:flatbuffers.Builder, fixedRiftDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(52, fixedRiftDataOffset, 0);
}

static createFixedRiftDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startFixedRiftDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRiftTeamBuffData(builder:flatbuffers.Builder, riftTeamBuffDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(53, riftTeamBuffDataOffset, 0);
}

static createRiftTeamBuffDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRiftTeamBuffDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRiftDifficultyData(builder:flatbuffers.Builder, riftDifficultyDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(54, riftDifficultyDataOffset, 0);
}

static createRiftDifficultyDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRiftDifficultyDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRiftRewardDisplayData(builder:flatbuffers.Builder, riftRewardDisplayDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(55, riftRewardDisplayDataOffset, 0);
}

static createRiftRewardDisplayDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRiftRewardDisplayDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addEnemyReplaceData(builder:flatbuffers.Builder, enemyReplaceDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(56, enemyReplaceDataOffset, 0);
}

static createEnemyReplaceDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEnemyReplaceDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addArchiveQuestData(builder:flatbuffers.Builder, archiveQuestDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(57, archiveQuestDataOffset, 0);
}

static createArchiveQuestDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startArchiveQuestDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addAchievementData(builder:flatbuffers.Builder, achievementDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(58, achievementDataOffset, 0);
}

static createAchievementDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startAchievementDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addAchievementTypeData(builder:flatbuffers.Builder, achievementTypeDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(59, achievementTypeDataOffset, 0);
}

static createAchievementTypeDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startAchievementTypeDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addArchiveQuestTypeData(builder:flatbuffers.Builder, archiveQuestTypeDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(60, archiveQuestTypeDataOffset, 0);
}

static createArchiveQuestTypeDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startArchiveQuestTypeDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addArchiveMusicUnlockData(builder:flatbuffers.Builder, archiveMusicUnlockDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(61, archiveMusicUnlockDataOffset, 0);
}

static createArchiveMusicUnlockDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startArchiveMusicUnlockDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBaseUpdate(builder:flatbuffers.Builder, baseUpdateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(62, baseUpdateOffset, 0);
}

static createBaseUpdateVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBaseUpdateVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addDevelopmentLineSegmentDatas(builder:flatbuffers.Builder, developmentLineSegmentDatasOffset:flatbuffers.Offset) {
  builder.addFieldOffset(63, developmentLineSegmentDatasOffset, 0);
}

static createDevelopmentLineSegmentDatasVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startDevelopmentLineSegmentDatasVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBuildingNodeScoreData(builder:flatbuffers.Builder, buildingNodeScoreDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(64, buildingNodeScoreDataOffset, 0);
}

static createBuildingNodeScoreDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBuildingNodeScoreDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addSeasonData(builder:flatbuffers.Builder, seasonDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(65, seasonDataOffset, 0);
}

static createSeasonDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startSeasonDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addConfirmIconData(builder:flatbuffers.Builder, confirmIconDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(66, confirmIconDataOffset, 0);
}

static createConfirmIconDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startConfirmIconDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addShopUpdateTimeData(builder:flatbuffers.Builder, shopUpdateTimeDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(67, shopUpdateTimeDataOffset, 0);
}

static createShopUpdateTimeDataVector(builder:flatbuffers.Builder, data:bigint[]):flatbuffers.Offset {
  builder.startVector(8, data.length, 8);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt64(data[i]!);
  }
  return builder.endVector();
}

static startShopUpdateTimeDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 8);
}

static addTutorialData(builder:flatbuffers.Builder, tutorialDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(68, tutorialDataOffset, 0);
}

static addRacingData(builder:flatbuffers.Builder, racingDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(69, racingDataOffset, 0);
}

static addChallengeModeData(builder:flatbuffers.Builder, challengeModeDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(70, challengeModeDataOffset, 0);
}

static endclz_Torappu_SandboxV2Data(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_SandboxV2DataT {
  return new clz_Torappu_SandboxV2DataT(
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2MapData, dict__string__clz_Torappu_SandboxV2MapDataT>(this.mapData.bind(this), this.mapDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2ItemTrapData, dict__string__clz_Torappu_SandboxV2ItemTrapDataT>(this.itemTrapData.bind(this), this.itemTrapDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2ItemTrapTagData, dict__string__clz_Torappu_SandboxV2ItemTrapTagDataT>(this.itemTrapTagData.bind(this), this.itemTrapTagDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2BuildingItemData, dict__string__clz_Torappu_SandboxV2BuildingItemDataT>(this.buildingItemData.bind(this), this.buildingItemDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2CraftItemData, dict__string__clz_Torappu_SandboxV2CraftItemDataT>(this.craftItemData.bind(this), this.craftItemDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2LivestockData, dict__string__clz_Torappu_SandboxV2LivestockDataT>(this.livestockProduceData.bind(this), this.livestockProduceDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2CraftGroupData, dict__string__clz_Torappu_SandboxV2CraftGroupDataT>(this.craftGroupData.bind(this), this.craftGroupDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2AlchemyRecipeData, dict__string__clz_Torappu_SandboxV2AlchemyRecipeDataT>(this.alchemyRecipeData.bind(this), this.alchemyRecipeDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2DrinkMatData, dict__string__clz_Torappu_SandboxV2DrinkMatDataT>(this.drinkMatData.bind(this), this.drinkMatDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2FoodMatData, dict__string__clz_Torappu_SandboxV2FoodMatDataT>(this.foodMatData.bind(this), this.foodMatDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2FoodData, dict__string__clz_Torappu_SandboxV2FoodDataT>(this.foodData.bind(this), this.foodDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2NodeTypeData, dict__string__clz_Torappu_SandboxV2NodeTypeDataT>(this.nodeTypeData.bind(this), this.nodeTypeDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2NodeUpgradeData, dict__string__clz_Torappu_SandboxV2NodeUpgradeDataT>(this.nodeUpgradeData.bind(this), this.nodeUpgradeDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2WeatherData, dict__string__clz_Torappu_SandboxV2WeatherDataT>(this.weatherData.bind(this), this.weatherDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2StageData, dict__string__clz_Torappu_SandboxV2StageDataT>(this.stageData.bind(this), this.stageDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2ZoneData, dict__string__clz_Torappu_SandboxV2ZoneDataT>(this.zoneData.bind(this), this.zoneDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2NodeBuffData, dict__string__clz_Torappu_SandboxV2NodeBuffDataT>(this.nodeBuffData.bind(this), this.nodeBuffDataLength()),
    (this.rewardConfigData() !== null ? this.rewardConfigData()!.unpack() : null),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2FloatIconData, dict__string__clz_Torappu_SandboxV2FloatIconDataT>(this.floatIconData.bind(this), this.floatIconDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2EnemyRushTypeData, dict__string__clz_Torappu_SandboxV2EnemyRushTypeDataT>(this.enemyRushTypeData.bind(this), this.enemyRushTypeDataLength()),
    (this.rushEnemyData() !== null ? this.rushEnemyData()!.unpack() : null),
    (this.gameConst() !== null ? this.gameConst()!.unpack() : null),
    (this.basicConst() !== null ? this.basicConst()!.unpack() : null),
    (this.riftConst() !== null ? this.riftConst()!.unpack() : null),
    (this.developmentConst() !== null ? this.developmentConst()!.unpack() : null),
    this.bb!.createObjList<clz_Torappu_TipData, clz_Torappu_TipDataT>(this.battleLoadingTips.bind(this), this.battleLoadingTipsLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_RuneTable_PackedRuneData, dict__string__clz_Torappu_RuneTable_PackedRuneDataT>(this.runeDatas.bind(this), this.runeDatasLength()),
    this.bb!.createObjList<dict__string__list_clz_Torappu_LegacyInLevelRuneData, dict__string__list_clz_Torappu_LegacyInLevelRuneDataT>(this.itemRuneList.bind(this), this.itemRuneListLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2QuestData, dict__string__clz_Torappu_SandboxV2QuestDataT>(this.questData.bind(this), this.questDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2NpcData, dict__string__clz_Torappu_SandboxV2NpcDataT>(this.npcData.bind(this), this.npcDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2DialogData, dict__string__clz_Torappu_SandboxV2DialogDataT>(this.dialogData.bind(this), this.dialogDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2QuestLineData, dict__string__clz_Torappu_SandboxV2QuestLineDataT>(this.questLineData.bind(this), this.questLineDataLength()),
    this.bb!.createObjList<dict__string__string, dict__string__stringT>(this.questLineStoryData.bind(this), this.questLineStoryDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2GuideQuestData, dict__string__clz_Torappu_SandboxV2GuideQuestDataT>(this.guideQuestData.bind(this), this.guideQuestDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2DevelopmentData, dict__string__clz_Torappu_SandboxV2DevelopmentDataT>(this.developmentData.bind(this), this.developmentDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2EventData, dict__string__clz_Torappu_SandboxV2EventDataT>(this.eventData.bind(this), this.eventDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2EventSceneData, dict__string__clz_Torappu_SandboxV2EventSceneDataT>(this.eventSceneData.bind(this), this.eventSceneDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2EventChoiceData, dict__string__clz_Torappu_SandboxV2EventChoiceDataT>(this.eventChoiceData.bind(this), this.eventChoiceDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2ExpeditionData, dict__string__clz_Torappu_SandboxV2ExpeditionDataT>(this.expeditionData.bind(this), this.expeditionDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2EventEffectData, dict__string__clz_Torappu_SandboxV2EventEffectDataT>(this.eventEffectData.bind(this), this.eventEffectDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2ShopGoodData, dict__string__clz_Torappu_SandboxV2ShopGoodDataT>(this.shopGoodData.bind(this), this.shopGoodDataLength()),
    (this.shopDialogData() !== null ? this.shopDialogData()!.unpack() : null),
    this.bb!.createObjList<clz_Torappu_SandboxV2LogisticsData, clz_Torappu_SandboxV2LogisticsDataT>(this.logisticsData.bind(this), this.logisticsDataLength()),
    this.bb!.createObjList<dict__int__list_dict__int__list_clz_Torappu_SandboxV2LogisticsCharData, dict__int__list_dict__int__list_clz_Torappu_SandboxV2LogisticsCharDataT>(this.logisticsCharMapping.bind(this), this.logisticsCharMappingLength()),
    this.bb!.createObjList<dict__string__string, dict__string__stringT>(this.materialKeywordData.bind(this), this.materialKeywordDataLength()),
    this.bb!.createObjList<clz_Torappu_SandboxV2MonthRushData, clz_Torappu_SandboxV2MonthRushDataT>(this.monthRushData.bind(this), this.monthRushDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2RiftParamData, dict__string__clz_Torappu_SandboxV2RiftParamDataT>(this.riftTerrainParamData.bind(this), this.riftTerrainParamDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2RiftParamData, dict__string__clz_Torappu_SandboxV2RiftParamDataT>(this.riftClimateParamData.bind(this), this.riftClimateParamDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2RiftParamData, dict__string__clz_Torappu_SandboxV2RiftParamDataT>(this.riftEnemyParamData.bind(this), this.riftEnemyParamDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2RiftSubTargetData, dict__string__clz_Torappu_SandboxV2RiftSubTargetDataT>(this.riftSubTargetData.bind(this), this.riftSubTargetDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2RiftMainTargetData, dict__string__clz_Torappu_SandboxV2RiftMainTargetDataT>(this.riftMainTargetData.bind(this), this.riftMainTargetDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2RiftGlobalEffectData, dict__string__clz_Torappu_SandboxV2RiftGlobalEffectDataT>(this.riftGlobalEffectData.bind(this), this.riftGlobalEffectDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2FixedRiftData, dict__string__clz_Torappu_SandboxV2FixedRiftDataT>(this.fixedRiftData.bind(this), this.fixedRiftDataLength()),
    this.bb!.createObjList<dict__string__list_clz_Torappu_SandboxV2RiftTeamBuffData, dict__string__list_clz_Torappu_SandboxV2RiftTeamBuffDataT>(this.riftTeamBuffData.bind(this), this.riftTeamBuffDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2RiftDifficultyData, dict__string__clz_Torappu_SandboxV2RiftDifficultyDataT>(this.riftDifficultyData.bind(this), this.riftDifficultyDataLength()),
    this.bb!.createObjList<dict__string__list_string, dict__string__list_stringT>(this.riftRewardDisplayData.bind(this), this.riftRewardDisplayDataLength()),
    this.bb!.createObjList<dict__string__list_dict__string__string, dict__string__list_dict__string__stringT>(this.enemyReplaceData.bind(this), this.enemyReplaceDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2ArchiveQuestData, dict__string__clz_Torappu_SandboxV2ArchiveQuestDataT>(this.archiveQuestData.bind(this), this.archiveQuestDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2ArchiveAchievementData, dict__string__clz_Torappu_SandboxV2ArchiveAchievementDataT>(this.achievementData.bind(this), this.achievementDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2ArchiveAchievementTypeData, dict__string__clz_Torappu_SandboxV2ArchiveAchievementTypeDataT>(this.achievementTypeData.bind(this), this.achievementTypeDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2ArchiveQuestTypeData, dict__string__clz_Torappu_SandboxV2ArchiveQuestTypeDataT>(this.archiveQuestTypeData.bind(this), this.archiveQuestTypeDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2ArchiveMusicUnlockData, dict__string__clz_Torappu_SandboxV2ArchiveMusicUnlockDataT>(this.archiveMusicUnlockData.bind(this), this.archiveMusicUnlockDataLength()),
    this.bb!.createObjList<clz_Torappu_SandboxV2BaseUpdateData, clz_Torappu_SandboxV2BaseUpdateDataT>(this.baseUpdate.bind(this), this.baseUpdateLength()),
    this.bb!.createObjList<clz_Torappu_SandboxV2DevelopmentLineSegmentData, clz_Torappu_SandboxV2DevelopmentLineSegmentDataT>(this.developmentLineSegmentDatas.bind(this), this.developmentLineSegmentDatasLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2BuildingNodeScoreData, dict__string__clz_Torappu_SandboxV2BuildingNodeScoreDataT>(this.buildingNodeScoreData.bind(this), this.buildingNodeScoreDataLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2SeasonData, dict__string__clz_Torappu_SandboxV2SeasonDataT>(this.seasonData.bind(this), this.seasonDataLength()),
    this.bb!.createObjList<clz_Torappu_SandboxV2ConfirmIconData, clz_Torappu_SandboxV2ConfirmIconDataT>(this.confirmIconData.bind(this), this.confirmIconDataLength()),
    this.bb!.createScalarList<bigint>(this.shopUpdateTimeData.bind(this), this.shopUpdateTimeDataLength()),
    (this.tutorialData() !== null ? this.tutorialData()!.unpack() : null),
    (this.racingData() !== null ? this.racingData()!.unpack() : null),
    (this.challengeModeData() !== null ? this.challengeModeData()!.unpack() : null)
  );
}


unpackTo(_o: clz_Torappu_SandboxV2DataT): void {
  _o.mapData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2MapData, dict__string__clz_Torappu_SandboxV2MapDataT>(this.mapData.bind(this), this.mapDataLength());
  _o.itemTrapData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2ItemTrapData, dict__string__clz_Torappu_SandboxV2ItemTrapDataT>(this.itemTrapData.bind(this), this.itemTrapDataLength());
  _o.itemTrapTagData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2ItemTrapTagData, dict__string__clz_Torappu_SandboxV2ItemTrapTagDataT>(this.itemTrapTagData.bind(this), this.itemTrapTagDataLength());
  _o.buildingItemData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2BuildingItemData, dict__string__clz_Torappu_SandboxV2BuildingItemDataT>(this.buildingItemData.bind(this), this.buildingItemDataLength());
  _o.craftItemData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2CraftItemData, dict__string__clz_Torappu_SandboxV2CraftItemDataT>(this.craftItemData.bind(this), this.craftItemDataLength());
  _o.livestockProduceData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2LivestockData, dict__string__clz_Torappu_SandboxV2LivestockDataT>(this.livestockProduceData.bind(this), this.livestockProduceDataLength());
  _o.craftGroupData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2CraftGroupData, dict__string__clz_Torappu_SandboxV2CraftGroupDataT>(this.craftGroupData.bind(this), this.craftGroupDataLength());
  _o.alchemyRecipeData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2AlchemyRecipeData, dict__string__clz_Torappu_SandboxV2AlchemyRecipeDataT>(this.alchemyRecipeData.bind(this), this.alchemyRecipeDataLength());
  _o.drinkMatData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2DrinkMatData, dict__string__clz_Torappu_SandboxV2DrinkMatDataT>(this.drinkMatData.bind(this), this.drinkMatDataLength());
  _o.foodMatData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2FoodMatData, dict__string__clz_Torappu_SandboxV2FoodMatDataT>(this.foodMatData.bind(this), this.foodMatDataLength());
  _o.foodData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2FoodData, dict__string__clz_Torappu_SandboxV2FoodDataT>(this.foodData.bind(this), this.foodDataLength());
  _o.nodeTypeData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2NodeTypeData, dict__string__clz_Torappu_SandboxV2NodeTypeDataT>(this.nodeTypeData.bind(this), this.nodeTypeDataLength());
  _o.nodeUpgradeData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2NodeUpgradeData, dict__string__clz_Torappu_SandboxV2NodeUpgradeDataT>(this.nodeUpgradeData.bind(this), this.nodeUpgradeDataLength());
  _o.weatherData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2WeatherData, dict__string__clz_Torappu_SandboxV2WeatherDataT>(this.weatherData.bind(this), this.weatherDataLength());
  _o.stageData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2StageData, dict__string__clz_Torappu_SandboxV2StageDataT>(this.stageData.bind(this), this.stageDataLength());
  _o.zoneData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2ZoneData, dict__string__clz_Torappu_SandboxV2ZoneDataT>(this.zoneData.bind(this), this.zoneDataLength());
  _o.nodeBuffData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2NodeBuffData, dict__string__clz_Torappu_SandboxV2NodeBuffDataT>(this.nodeBuffData.bind(this), this.nodeBuffDataLength());
  _o.rewardConfigData = (this.rewardConfigData() !== null ? this.rewardConfigData()!.unpack() : null);
  _o.floatIconData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2FloatIconData, dict__string__clz_Torappu_SandboxV2FloatIconDataT>(this.floatIconData.bind(this), this.floatIconDataLength());
  _o.enemyRushTypeData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2EnemyRushTypeData, dict__string__clz_Torappu_SandboxV2EnemyRushTypeDataT>(this.enemyRushTypeData.bind(this), this.enemyRushTypeDataLength());
  _o.rushEnemyData = (this.rushEnemyData() !== null ? this.rushEnemyData()!.unpack() : null);
  _o.gameConst = (this.gameConst() !== null ? this.gameConst()!.unpack() : null);
  _o.basicConst = (this.basicConst() !== null ? this.basicConst()!.unpack() : null);
  _o.riftConst = (this.riftConst() !== null ? this.riftConst()!.unpack() : null);
  _o.developmentConst = (this.developmentConst() !== null ? this.developmentConst()!.unpack() : null);
  _o.battleLoadingTips = this.bb!.createObjList<clz_Torappu_TipData, clz_Torappu_TipDataT>(this.battleLoadingTips.bind(this), this.battleLoadingTipsLength());
  _o.runeDatas = this.bb!.createObjList<dict__string__clz_Torappu_RuneTable_PackedRuneData, dict__string__clz_Torappu_RuneTable_PackedRuneDataT>(this.runeDatas.bind(this), this.runeDatasLength());
  _o.itemRuneList = this.bb!.createObjList<dict__string__list_clz_Torappu_LegacyInLevelRuneData, dict__string__list_clz_Torappu_LegacyInLevelRuneDataT>(this.itemRuneList.bind(this), this.itemRuneListLength());
  _o.questData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2QuestData, dict__string__clz_Torappu_SandboxV2QuestDataT>(this.questData.bind(this), this.questDataLength());
  _o.npcData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2NpcData, dict__string__clz_Torappu_SandboxV2NpcDataT>(this.npcData.bind(this), this.npcDataLength());
  _o.dialogData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2DialogData, dict__string__clz_Torappu_SandboxV2DialogDataT>(this.dialogData.bind(this), this.dialogDataLength());
  _o.questLineData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2QuestLineData, dict__string__clz_Torappu_SandboxV2QuestLineDataT>(this.questLineData.bind(this), this.questLineDataLength());
  _o.questLineStoryData = this.bb!.createObjList<dict__string__string, dict__string__stringT>(this.questLineStoryData.bind(this), this.questLineStoryDataLength());
  _o.guideQuestData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2GuideQuestData, dict__string__clz_Torappu_SandboxV2GuideQuestDataT>(this.guideQuestData.bind(this), this.guideQuestDataLength());
  _o.developmentData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2DevelopmentData, dict__string__clz_Torappu_SandboxV2DevelopmentDataT>(this.developmentData.bind(this), this.developmentDataLength());
  _o.eventData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2EventData, dict__string__clz_Torappu_SandboxV2EventDataT>(this.eventData.bind(this), this.eventDataLength());
  _o.eventSceneData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2EventSceneData, dict__string__clz_Torappu_SandboxV2EventSceneDataT>(this.eventSceneData.bind(this), this.eventSceneDataLength());
  _o.eventChoiceData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2EventChoiceData, dict__string__clz_Torappu_SandboxV2EventChoiceDataT>(this.eventChoiceData.bind(this), this.eventChoiceDataLength());
  _o.expeditionData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2ExpeditionData, dict__string__clz_Torappu_SandboxV2ExpeditionDataT>(this.expeditionData.bind(this), this.expeditionDataLength());
  _o.eventEffectData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2EventEffectData, dict__string__clz_Torappu_SandboxV2EventEffectDataT>(this.eventEffectData.bind(this), this.eventEffectDataLength());
  _o.shopGoodData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2ShopGoodData, dict__string__clz_Torappu_SandboxV2ShopGoodDataT>(this.shopGoodData.bind(this), this.shopGoodDataLength());
  _o.shopDialogData = (this.shopDialogData() !== null ? this.shopDialogData()!.unpack() : null);
  _o.logisticsData = this.bb!.createObjList<clz_Torappu_SandboxV2LogisticsData, clz_Torappu_SandboxV2LogisticsDataT>(this.logisticsData.bind(this), this.logisticsDataLength());
  _o.logisticsCharMapping = this.bb!.createObjList<dict__int__list_dict__int__list_clz_Torappu_SandboxV2LogisticsCharData, dict__int__list_dict__int__list_clz_Torappu_SandboxV2LogisticsCharDataT>(this.logisticsCharMapping.bind(this), this.logisticsCharMappingLength());
  _o.materialKeywordData = this.bb!.createObjList<dict__string__string, dict__string__stringT>(this.materialKeywordData.bind(this), this.materialKeywordDataLength());
  _o.monthRushData = this.bb!.createObjList<clz_Torappu_SandboxV2MonthRushData, clz_Torappu_SandboxV2MonthRushDataT>(this.monthRushData.bind(this), this.monthRushDataLength());
  _o.riftTerrainParamData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2RiftParamData, dict__string__clz_Torappu_SandboxV2RiftParamDataT>(this.riftTerrainParamData.bind(this), this.riftTerrainParamDataLength());
  _o.riftClimateParamData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2RiftParamData, dict__string__clz_Torappu_SandboxV2RiftParamDataT>(this.riftClimateParamData.bind(this), this.riftClimateParamDataLength());
  _o.riftEnemyParamData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2RiftParamData, dict__string__clz_Torappu_SandboxV2RiftParamDataT>(this.riftEnemyParamData.bind(this), this.riftEnemyParamDataLength());
  _o.riftSubTargetData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2RiftSubTargetData, dict__string__clz_Torappu_SandboxV2RiftSubTargetDataT>(this.riftSubTargetData.bind(this), this.riftSubTargetDataLength());
  _o.riftMainTargetData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2RiftMainTargetData, dict__string__clz_Torappu_SandboxV2RiftMainTargetDataT>(this.riftMainTargetData.bind(this), this.riftMainTargetDataLength());
  _o.riftGlobalEffectData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2RiftGlobalEffectData, dict__string__clz_Torappu_SandboxV2RiftGlobalEffectDataT>(this.riftGlobalEffectData.bind(this), this.riftGlobalEffectDataLength());
  _o.fixedRiftData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2FixedRiftData, dict__string__clz_Torappu_SandboxV2FixedRiftDataT>(this.fixedRiftData.bind(this), this.fixedRiftDataLength());
  _o.riftTeamBuffData = this.bb!.createObjList<dict__string__list_clz_Torappu_SandboxV2RiftTeamBuffData, dict__string__list_clz_Torappu_SandboxV2RiftTeamBuffDataT>(this.riftTeamBuffData.bind(this), this.riftTeamBuffDataLength());
  _o.riftDifficultyData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2RiftDifficultyData, dict__string__clz_Torappu_SandboxV2RiftDifficultyDataT>(this.riftDifficultyData.bind(this), this.riftDifficultyDataLength());
  _o.riftRewardDisplayData = this.bb!.createObjList<dict__string__list_string, dict__string__list_stringT>(this.riftRewardDisplayData.bind(this), this.riftRewardDisplayDataLength());
  _o.enemyReplaceData = this.bb!.createObjList<dict__string__list_dict__string__string, dict__string__list_dict__string__stringT>(this.enemyReplaceData.bind(this), this.enemyReplaceDataLength());
  _o.archiveQuestData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2ArchiveQuestData, dict__string__clz_Torappu_SandboxV2ArchiveQuestDataT>(this.archiveQuestData.bind(this), this.archiveQuestDataLength());
  _o.achievementData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2ArchiveAchievementData, dict__string__clz_Torappu_SandboxV2ArchiveAchievementDataT>(this.achievementData.bind(this), this.achievementDataLength());
  _o.achievementTypeData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2ArchiveAchievementTypeData, dict__string__clz_Torappu_SandboxV2ArchiveAchievementTypeDataT>(this.achievementTypeData.bind(this), this.achievementTypeDataLength());
  _o.archiveQuestTypeData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2ArchiveQuestTypeData, dict__string__clz_Torappu_SandboxV2ArchiveQuestTypeDataT>(this.archiveQuestTypeData.bind(this), this.archiveQuestTypeDataLength());
  _o.archiveMusicUnlockData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2ArchiveMusicUnlockData, dict__string__clz_Torappu_SandboxV2ArchiveMusicUnlockDataT>(this.archiveMusicUnlockData.bind(this), this.archiveMusicUnlockDataLength());
  _o.baseUpdate = this.bb!.createObjList<clz_Torappu_SandboxV2BaseUpdateData, clz_Torappu_SandboxV2BaseUpdateDataT>(this.baseUpdate.bind(this), this.baseUpdateLength());
  _o.developmentLineSegmentDatas = this.bb!.createObjList<clz_Torappu_SandboxV2DevelopmentLineSegmentData, clz_Torappu_SandboxV2DevelopmentLineSegmentDataT>(this.developmentLineSegmentDatas.bind(this), this.developmentLineSegmentDatasLength());
  _o.buildingNodeScoreData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2BuildingNodeScoreData, dict__string__clz_Torappu_SandboxV2BuildingNodeScoreDataT>(this.buildingNodeScoreData.bind(this), this.buildingNodeScoreDataLength());
  _o.seasonData = this.bb!.createObjList<dict__string__clz_Torappu_SandboxV2SeasonData, dict__string__clz_Torappu_SandboxV2SeasonDataT>(this.seasonData.bind(this), this.seasonDataLength());
  _o.confirmIconData = this.bb!.createObjList<clz_Torappu_SandboxV2ConfirmIconData, clz_Torappu_SandboxV2ConfirmIconDataT>(this.confirmIconData.bind(this), this.confirmIconDataLength());
  _o.shopUpdateTimeData = this.bb!.createScalarList<bigint>(this.shopUpdateTimeData.bind(this), this.shopUpdateTimeDataLength());
  _o.tutorialData = (this.tutorialData() !== null ? this.tutorialData()!.unpack() : null);
  _o.racingData = (this.racingData() !== null ? this.racingData()!.unpack() : null);
  _o.challengeModeData = (this.challengeModeData() !== null ? this.challengeModeData()!.unpack() : null);
}
}

export class clz_Torappu_SandboxV2DataT implements flatbuffers.IGeneratedObject {
constructor(
  public mapData: (dict__string__clz_Torappu_SandboxV2MapDataT)[] = [],
  public itemTrapData: (dict__string__clz_Torappu_SandboxV2ItemTrapDataT)[] = [],
  public itemTrapTagData: (dict__string__clz_Torappu_SandboxV2ItemTrapTagDataT)[] = [],
  public buildingItemData: (dict__string__clz_Torappu_SandboxV2BuildingItemDataT)[] = [],
  public craftItemData: (dict__string__clz_Torappu_SandboxV2CraftItemDataT)[] = [],
  public livestockProduceData: (dict__string__clz_Torappu_SandboxV2LivestockDataT)[] = [],
  public craftGroupData: (dict__string__clz_Torappu_SandboxV2CraftGroupDataT)[] = [],
  public alchemyRecipeData: (dict__string__clz_Torappu_SandboxV2AlchemyRecipeDataT)[] = [],
  public drinkMatData: (dict__string__clz_Torappu_SandboxV2DrinkMatDataT)[] = [],
  public foodMatData: (dict__string__clz_Torappu_SandboxV2FoodMatDataT)[] = [],
  public foodData: (dict__string__clz_Torappu_SandboxV2FoodDataT)[] = [],
  public nodeTypeData: (dict__string__clz_Torappu_SandboxV2NodeTypeDataT)[] = [],
  public nodeUpgradeData: (dict__string__clz_Torappu_SandboxV2NodeUpgradeDataT)[] = [],
  public weatherData: (dict__string__clz_Torappu_SandboxV2WeatherDataT)[] = [],
  public stageData: (dict__string__clz_Torappu_SandboxV2StageDataT)[] = [],
  public zoneData: (dict__string__clz_Torappu_SandboxV2ZoneDataT)[] = [],
  public nodeBuffData: (dict__string__clz_Torappu_SandboxV2NodeBuffDataT)[] = [],
  public rewardConfigData: clz_Torappu_SandboxV2RewardConfigGroupDataT|null = null,
  public floatIconData: (dict__string__clz_Torappu_SandboxV2FloatIconDataT)[] = [],
  public enemyRushTypeData: (dict__string__clz_Torappu_SandboxV2EnemyRushTypeDataT)[] = [],
  public rushEnemyData: clz_Torappu_SandboxV2BattleRushEnemyDataT|null = null,
  public gameConst: clz_Torappu_SandboxV2GameConstT|null = null,
  public basicConst: clz_Torappu_SandboxV2BasicConstT|null = null,
  public riftConst: clz_Torappu_SandboxV2RiftConstT|null = null,
  public developmentConst: clz_Torappu_SandboxV2DevelopmentConstT|null = null,
  public battleLoadingTips: (clz_Torappu_TipDataT)[] = [],
  public runeDatas: (dict__string__clz_Torappu_RuneTable_PackedRuneDataT)[] = [],
  public itemRuneList: (dict__string__list_clz_Torappu_LegacyInLevelRuneDataT)[] = [],
  public questData: (dict__string__clz_Torappu_SandboxV2QuestDataT)[] = [],
  public npcData: (dict__string__clz_Torappu_SandboxV2NpcDataT)[] = [],
  public dialogData: (dict__string__clz_Torappu_SandboxV2DialogDataT)[] = [],
  public questLineData: (dict__string__clz_Torappu_SandboxV2QuestLineDataT)[] = [],
  public questLineStoryData: (dict__string__stringT)[] = [],
  public guideQuestData: (dict__string__clz_Torappu_SandboxV2GuideQuestDataT)[] = [],
  public developmentData: (dict__string__clz_Torappu_SandboxV2DevelopmentDataT)[] = [],
  public eventData: (dict__string__clz_Torappu_SandboxV2EventDataT)[] = [],
  public eventSceneData: (dict__string__clz_Torappu_SandboxV2EventSceneDataT)[] = [],
  public eventChoiceData: (dict__string__clz_Torappu_SandboxV2EventChoiceDataT)[] = [],
  public expeditionData: (dict__string__clz_Torappu_SandboxV2ExpeditionDataT)[] = [],
  public eventEffectData: (dict__string__clz_Torappu_SandboxV2EventEffectDataT)[] = [],
  public shopGoodData: (dict__string__clz_Torappu_SandboxV2ShopGoodDataT)[] = [],
  public shopDialogData: clz_Torappu_SandboxV2ShopDialogDataT|null = null,
  public logisticsData: (clz_Torappu_SandboxV2LogisticsDataT)[] = [],
  public logisticsCharMapping: (dict__int__list_dict__int__list_clz_Torappu_SandboxV2LogisticsCharDataT)[] = [],
  public materialKeywordData: (dict__string__stringT)[] = [],
  public monthRushData: (clz_Torappu_SandboxV2MonthRushDataT)[] = [],
  public riftTerrainParamData: (dict__string__clz_Torappu_SandboxV2RiftParamDataT)[] = [],
  public riftClimateParamData: (dict__string__clz_Torappu_SandboxV2RiftParamDataT)[] = [],
  public riftEnemyParamData: (dict__string__clz_Torappu_SandboxV2RiftParamDataT)[] = [],
  public riftSubTargetData: (dict__string__clz_Torappu_SandboxV2RiftSubTargetDataT)[] = [],
  public riftMainTargetData: (dict__string__clz_Torappu_SandboxV2RiftMainTargetDataT)[] = [],
  public riftGlobalEffectData: (dict__string__clz_Torappu_SandboxV2RiftGlobalEffectDataT)[] = [],
  public fixedRiftData: (dict__string__clz_Torappu_SandboxV2FixedRiftDataT)[] = [],
  public riftTeamBuffData: (dict__string__list_clz_Torappu_SandboxV2RiftTeamBuffDataT)[] = [],
  public riftDifficultyData: (dict__string__clz_Torappu_SandboxV2RiftDifficultyDataT)[] = [],
  public riftRewardDisplayData: (dict__string__list_stringT)[] = [],
  public enemyReplaceData: (dict__string__list_dict__string__stringT)[] = [],
  public archiveQuestData: (dict__string__clz_Torappu_SandboxV2ArchiveQuestDataT)[] = [],
  public achievementData: (dict__string__clz_Torappu_SandboxV2ArchiveAchievementDataT)[] = [],
  public achievementTypeData: (dict__string__clz_Torappu_SandboxV2ArchiveAchievementTypeDataT)[] = [],
  public archiveQuestTypeData: (dict__string__clz_Torappu_SandboxV2ArchiveQuestTypeDataT)[] = [],
  public archiveMusicUnlockData: (dict__string__clz_Torappu_SandboxV2ArchiveMusicUnlockDataT)[] = [],
  public baseUpdate: (clz_Torappu_SandboxV2BaseUpdateDataT)[] = [],
  public developmentLineSegmentDatas: (clz_Torappu_SandboxV2DevelopmentLineSegmentDataT)[] = [],
  public buildingNodeScoreData: (dict__string__clz_Torappu_SandboxV2BuildingNodeScoreDataT)[] = [],
  public seasonData: (dict__string__clz_Torappu_SandboxV2SeasonDataT)[] = [],
  public confirmIconData: (clz_Torappu_SandboxV2ConfirmIconDataT)[] = [],
  public shopUpdateTimeData: (bigint)[] = [],
  public tutorialData: clz_Torappu_SandboxV2TutorialDataT|null = null,
  public racingData: clz_Torappu_SandboxV2RacingDataT|null = null,
  public challengeModeData: clz_Torappu_SandboxV2ChallengeModeDataT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const mapData = clz_Torappu_SandboxV2Data.createMapDataVector(builder, builder.createObjectOffsetList(this.mapData));
  const itemTrapData = clz_Torappu_SandboxV2Data.createItemTrapDataVector(builder, builder.createObjectOffsetList(this.itemTrapData));
  const itemTrapTagData = clz_Torappu_SandboxV2Data.createItemTrapTagDataVector(builder, builder.createObjectOffsetList(this.itemTrapTagData));
  const buildingItemData = clz_Torappu_SandboxV2Data.createBuildingItemDataVector(builder, builder.createObjectOffsetList(this.buildingItemData));
  const craftItemData = clz_Torappu_SandboxV2Data.createCraftItemDataVector(builder, builder.createObjectOffsetList(this.craftItemData));
  const livestockProduceData = clz_Torappu_SandboxV2Data.createLivestockProduceDataVector(builder, builder.createObjectOffsetList(this.livestockProduceData));
  const craftGroupData = clz_Torappu_SandboxV2Data.createCraftGroupDataVector(builder, builder.createObjectOffsetList(this.craftGroupData));
  const alchemyRecipeData = clz_Torappu_SandboxV2Data.createAlchemyRecipeDataVector(builder, builder.createObjectOffsetList(this.alchemyRecipeData));
  const drinkMatData = clz_Torappu_SandboxV2Data.createDrinkMatDataVector(builder, builder.createObjectOffsetList(this.drinkMatData));
  const foodMatData = clz_Torappu_SandboxV2Data.createFoodMatDataVector(builder, builder.createObjectOffsetList(this.foodMatData));
  const foodData = clz_Torappu_SandboxV2Data.createFoodDataVector(builder, builder.createObjectOffsetList(this.foodData));
  const nodeTypeData = clz_Torappu_SandboxV2Data.createNodeTypeDataVector(builder, builder.createObjectOffsetList(this.nodeTypeData));
  const nodeUpgradeData = clz_Torappu_SandboxV2Data.createNodeUpgradeDataVector(builder, builder.createObjectOffsetList(this.nodeUpgradeData));
  const weatherData = clz_Torappu_SandboxV2Data.createWeatherDataVector(builder, builder.createObjectOffsetList(this.weatherData));
  const stageData = clz_Torappu_SandboxV2Data.createStageDataVector(builder, builder.createObjectOffsetList(this.stageData));
  const zoneData = clz_Torappu_SandboxV2Data.createZoneDataVector(builder, builder.createObjectOffsetList(this.zoneData));
  const nodeBuffData = clz_Torappu_SandboxV2Data.createNodeBuffDataVector(builder, builder.createObjectOffsetList(this.nodeBuffData));
  const rewardConfigData = (this.rewardConfigData !== null ? this.rewardConfigData!.pack(builder) : 0);
  const floatIconData = clz_Torappu_SandboxV2Data.createFloatIconDataVector(builder, builder.createObjectOffsetList(this.floatIconData));
  const enemyRushTypeData = clz_Torappu_SandboxV2Data.createEnemyRushTypeDataVector(builder, builder.createObjectOffsetList(this.enemyRushTypeData));
  const rushEnemyData = (this.rushEnemyData !== null ? this.rushEnemyData!.pack(builder) : 0);
  const gameConst = (this.gameConst !== null ? this.gameConst!.pack(builder) : 0);
  const basicConst = (this.basicConst !== null ? this.basicConst!.pack(builder) : 0);
  const riftConst = (this.riftConst !== null ? this.riftConst!.pack(builder) : 0);
  const developmentConst = (this.developmentConst !== null ? this.developmentConst!.pack(builder) : 0);
  const battleLoadingTips = clz_Torappu_SandboxV2Data.createBattleLoadingTipsVector(builder, builder.createObjectOffsetList(this.battleLoadingTips));
  const runeDatas = clz_Torappu_SandboxV2Data.createRuneDatasVector(builder, builder.createObjectOffsetList(this.runeDatas));
  const itemRuneList = clz_Torappu_SandboxV2Data.createItemRuneListVector(builder, builder.createObjectOffsetList(this.itemRuneList));
  const questData = clz_Torappu_SandboxV2Data.createQuestDataVector(builder, builder.createObjectOffsetList(this.questData));
  const npcData = clz_Torappu_SandboxV2Data.createNpcDataVector(builder, builder.createObjectOffsetList(this.npcData));
  const dialogData = clz_Torappu_SandboxV2Data.createDialogDataVector(builder, builder.createObjectOffsetList(this.dialogData));
  const questLineData = clz_Torappu_SandboxV2Data.createQuestLineDataVector(builder, builder.createObjectOffsetList(this.questLineData));
  const questLineStoryData = clz_Torappu_SandboxV2Data.createQuestLineStoryDataVector(builder, builder.createObjectOffsetList(this.questLineStoryData));
  const guideQuestData = clz_Torappu_SandboxV2Data.createGuideQuestDataVector(builder, builder.createObjectOffsetList(this.guideQuestData));
  const developmentData = clz_Torappu_SandboxV2Data.createDevelopmentDataVector(builder, builder.createObjectOffsetList(this.developmentData));
  const eventData = clz_Torappu_SandboxV2Data.createEventDataVector(builder, builder.createObjectOffsetList(this.eventData));
  const eventSceneData = clz_Torappu_SandboxV2Data.createEventSceneDataVector(builder, builder.createObjectOffsetList(this.eventSceneData));
  const eventChoiceData = clz_Torappu_SandboxV2Data.createEventChoiceDataVector(builder, builder.createObjectOffsetList(this.eventChoiceData));
  const expeditionData = clz_Torappu_SandboxV2Data.createExpeditionDataVector(builder, builder.createObjectOffsetList(this.expeditionData));
  const eventEffectData = clz_Torappu_SandboxV2Data.createEventEffectDataVector(builder, builder.createObjectOffsetList(this.eventEffectData));
  const shopGoodData = clz_Torappu_SandboxV2Data.createShopGoodDataVector(builder, builder.createObjectOffsetList(this.shopGoodData));
  const shopDialogData = (this.shopDialogData !== null ? this.shopDialogData!.pack(builder) : 0);
  const logisticsData = clz_Torappu_SandboxV2Data.createLogisticsDataVector(builder, builder.createObjectOffsetList(this.logisticsData));
  const logisticsCharMapping = clz_Torappu_SandboxV2Data.createLogisticsCharMappingVector(builder, builder.createObjectOffsetList(this.logisticsCharMapping));
  const materialKeywordData = clz_Torappu_SandboxV2Data.createMaterialKeywordDataVector(builder, builder.createObjectOffsetList(this.materialKeywordData));
  const monthRushData = clz_Torappu_SandboxV2Data.createMonthRushDataVector(builder, builder.createObjectOffsetList(this.monthRushData));
  const riftTerrainParamData = clz_Torappu_SandboxV2Data.createRiftTerrainParamDataVector(builder, builder.createObjectOffsetList(this.riftTerrainParamData));
  const riftClimateParamData = clz_Torappu_SandboxV2Data.createRiftClimateParamDataVector(builder, builder.createObjectOffsetList(this.riftClimateParamData));
  const riftEnemyParamData = clz_Torappu_SandboxV2Data.createRiftEnemyParamDataVector(builder, builder.createObjectOffsetList(this.riftEnemyParamData));
  const riftSubTargetData = clz_Torappu_SandboxV2Data.createRiftSubTargetDataVector(builder, builder.createObjectOffsetList(this.riftSubTargetData));
  const riftMainTargetData = clz_Torappu_SandboxV2Data.createRiftMainTargetDataVector(builder, builder.createObjectOffsetList(this.riftMainTargetData));
  const riftGlobalEffectData = clz_Torappu_SandboxV2Data.createRiftGlobalEffectDataVector(builder, builder.createObjectOffsetList(this.riftGlobalEffectData));
  const fixedRiftData = clz_Torappu_SandboxV2Data.createFixedRiftDataVector(builder, builder.createObjectOffsetList(this.fixedRiftData));
  const riftTeamBuffData = clz_Torappu_SandboxV2Data.createRiftTeamBuffDataVector(builder, builder.createObjectOffsetList(this.riftTeamBuffData));
  const riftDifficultyData = clz_Torappu_SandboxV2Data.createRiftDifficultyDataVector(builder, builder.createObjectOffsetList(this.riftDifficultyData));
  const riftRewardDisplayData = clz_Torappu_SandboxV2Data.createRiftRewardDisplayDataVector(builder, builder.createObjectOffsetList(this.riftRewardDisplayData));
  const enemyReplaceData = clz_Torappu_SandboxV2Data.createEnemyReplaceDataVector(builder, builder.createObjectOffsetList(this.enemyReplaceData));
  const archiveQuestData = clz_Torappu_SandboxV2Data.createArchiveQuestDataVector(builder, builder.createObjectOffsetList(this.archiveQuestData));
  const achievementData = clz_Torappu_SandboxV2Data.createAchievementDataVector(builder, builder.createObjectOffsetList(this.achievementData));
  const achievementTypeData = clz_Torappu_SandboxV2Data.createAchievementTypeDataVector(builder, builder.createObjectOffsetList(this.achievementTypeData));
  const archiveQuestTypeData = clz_Torappu_SandboxV2Data.createArchiveQuestTypeDataVector(builder, builder.createObjectOffsetList(this.archiveQuestTypeData));
  const archiveMusicUnlockData = clz_Torappu_SandboxV2Data.createArchiveMusicUnlockDataVector(builder, builder.createObjectOffsetList(this.archiveMusicUnlockData));
  const baseUpdate = clz_Torappu_SandboxV2Data.createBaseUpdateVector(builder, builder.createObjectOffsetList(this.baseUpdate));
  const developmentLineSegmentDatas = clz_Torappu_SandboxV2Data.createDevelopmentLineSegmentDatasVector(builder, builder.createObjectOffsetList(this.developmentLineSegmentDatas));
  const buildingNodeScoreData = clz_Torappu_SandboxV2Data.createBuildingNodeScoreDataVector(builder, builder.createObjectOffsetList(this.buildingNodeScoreData));
  const seasonData = clz_Torappu_SandboxV2Data.createSeasonDataVector(builder, builder.createObjectOffsetList(this.seasonData));
  const confirmIconData = clz_Torappu_SandboxV2Data.createConfirmIconDataVector(builder, builder.createObjectOffsetList(this.confirmIconData));
  const shopUpdateTimeData = clz_Torappu_SandboxV2Data.createShopUpdateTimeDataVector(builder, this.shopUpdateTimeData);
  const tutorialData = (this.tutorialData !== null ? this.tutorialData!.pack(builder) : 0);
  const racingData = (this.racingData !== null ? this.racingData!.pack(builder) : 0);
  const challengeModeData = (this.challengeModeData !== null ? this.challengeModeData!.pack(builder) : 0);

  clz_Torappu_SandboxV2Data.startclz_Torappu_SandboxV2Data(builder);
  clz_Torappu_SandboxV2Data.addMapData(builder, mapData);
  clz_Torappu_SandboxV2Data.addItemTrapData(builder, itemTrapData);
  clz_Torappu_SandboxV2Data.addItemTrapTagData(builder, itemTrapTagData);
  clz_Torappu_SandboxV2Data.addBuildingItemData(builder, buildingItemData);
  clz_Torappu_SandboxV2Data.addCraftItemData(builder, craftItemData);
  clz_Torappu_SandboxV2Data.addLivestockProduceData(builder, livestockProduceData);
  clz_Torappu_SandboxV2Data.addCraftGroupData(builder, craftGroupData);
  clz_Torappu_SandboxV2Data.addAlchemyRecipeData(builder, alchemyRecipeData);
  clz_Torappu_SandboxV2Data.addDrinkMatData(builder, drinkMatData);
  clz_Torappu_SandboxV2Data.addFoodMatData(builder, foodMatData);
  clz_Torappu_SandboxV2Data.addFoodData(builder, foodData);
  clz_Torappu_SandboxV2Data.addNodeTypeData(builder, nodeTypeData);
  clz_Torappu_SandboxV2Data.addNodeUpgradeData(builder, nodeUpgradeData);
  clz_Torappu_SandboxV2Data.addWeatherData(builder, weatherData);
  clz_Torappu_SandboxV2Data.addStageData(builder, stageData);
  clz_Torappu_SandboxV2Data.addZoneData(builder, zoneData);
  clz_Torappu_SandboxV2Data.addNodeBuffData(builder, nodeBuffData);
  clz_Torappu_SandboxV2Data.addRewardConfigData(builder, rewardConfigData);
  clz_Torappu_SandboxV2Data.addFloatIconData(builder, floatIconData);
  clz_Torappu_SandboxV2Data.addEnemyRushTypeData(builder, enemyRushTypeData);
  clz_Torappu_SandboxV2Data.addRushEnemyData(builder, rushEnemyData);
  clz_Torappu_SandboxV2Data.addGameConst(builder, gameConst);
  clz_Torappu_SandboxV2Data.addBasicConst(builder, basicConst);
  clz_Torappu_SandboxV2Data.addRiftConst(builder, riftConst);
  clz_Torappu_SandboxV2Data.addDevelopmentConst(builder, developmentConst);
  clz_Torappu_SandboxV2Data.addBattleLoadingTips(builder, battleLoadingTips);
  clz_Torappu_SandboxV2Data.addRuneDatas(builder, runeDatas);
  clz_Torappu_SandboxV2Data.addItemRuneList(builder, itemRuneList);
  clz_Torappu_SandboxV2Data.addQuestData(builder, questData);
  clz_Torappu_SandboxV2Data.addNpcData(builder, npcData);
  clz_Torappu_SandboxV2Data.addDialogData(builder, dialogData);
  clz_Torappu_SandboxV2Data.addQuestLineData(builder, questLineData);
  clz_Torappu_SandboxV2Data.addQuestLineStoryData(builder, questLineStoryData);
  clz_Torappu_SandboxV2Data.addGuideQuestData(builder, guideQuestData);
  clz_Torappu_SandboxV2Data.addDevelopmentData(builder, developmentData);
  clz_Torappu_SandboxV2Data.addEventData(builder, eventData);
  clz_Torappu_SandboxV2Data.addEventSceneData(builder, eventSceneData);
  clz_Torappu_SandboxV2Data.addEventChoiceData(builder, eventChoiceData);
  clz_Torappu_SandboxV2Data.addExpeditionData(builder, expeditionData);
  clz_Torappu_SandboxV2Data.addEventEffectData(builder, eventEffectData);
  clz_Torappu_SandboxV2Data.addShopGoodData(builder, shopGoodData);
  clz_Torappu_SandboxV2Data.addShopDialogData(builder, shopDialogData);
  clz_Torappu_SandboxV2Data.addLogisticsData(builder, logisticsData);
  clz_Torappu_SandboxV2Data.addLogisticsCharMapping(builder, logisticsCharMapping);
  clz_Torappu_SandboxV2Data.addMaterialKeywordData(builder, materialKeywordData);
  clz_Torappu_SandboxV2Data.addMonthRushData(builder, monthRushData);
  clz_Torappu_SandboxV2Data.addRiftTerrainParamData(builder, riftTerrainParamData);
  clz_Torappu_SandboxV2Data.addRiftClimateParamData(builder, riftClimateParamData);
  clz_Torappu_SandboxV2Data.addRiftEnemyParamData(builder, riftEnemyParamData);
  clz_Torappu_SandboxV2Data.addRiftSubTargetData(builder, riftSubTargetData);
  clz_Torappu_SandboxV2Data.addRiftMainTargetData(builder, riftMainTargetData);
  clz_Torappu_SandboxV2Data.addRiftGlobalEffectData(builder, riftGlobalEffectData);
  clz_Torappu_SandboxV2Data.addFixedRiftData(builder, fixedRiftData);
  clz_Torappu_SandboxV2Data.addRiftTeamBuffData(builder, riftTeamBuffData);
  clz_Torappu_SandboxV2Data.addRiftDifficultyData(builder, riftDifficultyData);
  clz_Torappu_SandboxV2Data.addRiftRewardDisplayData(builder, riftRewardDisplayData);
  clz_Torappu_SandboxV2Data.addEnemyReplaceData(builder, enemyReplaceData);
  clz_Torappu_SandboxV2Data.addArchiveQuestData(builder, archiveQuestData);
  clz_Torappu_SandboxV2Data.addAchievementData(builder, achievementData);
  clz_Torappu_SandboxV2Data.addAchievementTypeData(builder, achievementTypeData);
  clz_Torappu_SandboxV2Data.addArchiveQuestTypeData(builder, archiveQuestTypeData);
  clz_Torappu_SandboxV2Data.addArchiveMusicUnlockData(builder, archiveMusicUnlockData);
  clz_Torappu_SandboxV2Data.addBaseUpdate(builder, baseUpdate);
  clz_Torappu_SandboxV2Data.addDevelopmentLineSegmentDatas(builder, developmentLineSegmentDatas);
  clz_Torappu_SandboxV2Data.addBuildingNodeScoreData(builder, buildingNodeScoreData);
  clz_Torappu_SandboxV2Data.addSeasonData(builder, seasonData);
  clz_Torappu_SandboxV2Data.addConfirmIconData(builder, confirmIconData);
  clz_Torappu_SandboxV2Data.addShopUpdateTimeData(builder, shopUpdateTimeData);
  clz_Torappu_SandboxV2Data.addTutorialData(builder, tutorialData);
  clz_Torappu_SandboxV2Data.addRacingData(builder, racingData);
  clz_Torappu_SandboxV2Data.addChallengeModeData(builder, challengeModeData);

  return clz_Torappu_SandboxV2Data.endclz_Torappu_SandboxV2Data(builder);
}
}
