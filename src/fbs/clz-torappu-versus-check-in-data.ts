// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_VersusCheckInData_VoteData, clz_Torappu_VersusCheckInData_VoteDataT } from './clz-torappu-versus-check-in-data-vote-data.js';
import { dict__enum__Torappu_VersusCheckInData_TasteType__clz_Torappu_VersusCheckInData_TasteRewardData, dict__enum__Torappu_VersusCheckInData_TasteType__clz_Torappu_VersusCheckInData_TasteRewardDataT } from './dict--enum--torappu-versus-check-in-data-taste-type--clz-torappu-versus-check-in-data-taste-reward-data.js';
import { dict__int__clz_Torappu_VersusCheckInData_DailyInfo, dict__int__clz_Torappu_VersusCheckInData_DailyInfoT } from './dict--int--clz-torappu-versus-check-in-data-daily-info.js';
import { dict__int__clz_Torappu_VersusCheckInData_TasteInfoData, dict__int__clz_Torappu_VersusCheckInData_TasteInfoDataT } from './dict--int--clz-torappu-versus-check-in-data-taste-info-data.js';
import { dict__string__long, dict__string__longT } from './dict--string--long.js';


export class clz_Torappu_VersusCheckInData implements flatbuffers.IUnpackableObject<clz_Torappu_VersusCheckInDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_VersusCheckInData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_VersusCheckInData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_VersusCheckInData):clz_Torappu_VersusCheckInData {
  return (obj || new clz_Torappu_VersusCheckInData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_VersusCheckInData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_VersusCheckInData):clz_Torappu_VersusCheckInData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_VersusCheckInData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

checkInDict(index: number, obj?:dict__int__clz_Torappu_VersusCheckInData_DailyInfo):dict__int__clz_Torappu_VersusCheckInData_DailyInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new dict__int__clz_Torappu_VersusCheckInData_DailyInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

checkInDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

voteTasteList(index: number, obj?:clz_Torappu_VersusCheckInData_VoteData):clz_Torappu_VersusCheckInData_VoteData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new clz_Torappu_VersusCheckInData_VoteData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

voteTasteListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

tasteInfoDict(index: number, obj?:dict__int__clz_Torappu_VersusCheckInData_TasteInfoData):dict__int__clz_Torappu_VersusCheckInData_TasteInfoData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new dict__int__clz_Torappu_VersusCheckInData_TasteInfoData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

tasteInfoDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

tasteRewardDict(index: number, obj?:dict__enum__Torappu_VersusCheckInData_TasteType__clz_Torappu_VersusCheckInData_TasteRewardData):dict__enum__Torappu_VersusCheckInData_TasteType__clz_Torappu_VersusCheckInData_TasteRewardData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new dict__enum__Torappu_VersusCheckInData_TasteType__clz_Torappu_VersusCheckInData_TasteRewardData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

tasteRewardDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

apSupplyOutOfDateDict(index: number, obj?:dict__string__long):dict__string__long|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new dict__string__long()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

apSupplyOutOfDateDictLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

versusTotalDays():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

ruleText():string|null
ruleText(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
ruleText(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_VersusCheckInData(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static addCheckInDict(builder:flatbuffers.Builder, checkInDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, checkInDictOffset, 0);
}

static createCheckInDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCheckInDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addVoteTasteList(builder:flatbuffers.Builder, voteTasteListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, voteTasteListOffset, 0);
}

static createVoteTasteListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startVoteTasteListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTasteInfoDict(builder:flatbuffers.Builder, tasteInfoDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, tasteInfoDictOffset, 0);
}

static createTasteInfoDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTasteInfoDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTasteRewardDict(builder:flatbuffers.Builder, tasteRewardDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, tasteRewardDictOffset, 0);
}

static createTasteRewardDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTasteRewardDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addApSupplyOutOfDateDict(builder:flatbuffers.Builder, apSupplyOutOfDateDictOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, apSupplyOutOfDateDictOffset, 0);
}

static createApSupplyOutOfDateDictVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startApSupplyOutOfDateDictVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addVersusTotalDays(builder:flatbuffers.Builder, versusTotalDays:number) {
  builder.addFieldInt32(5, versusTotalDays, 0);
}

static addRuleText(builder:flatbuffers.Builder, ruleTextOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, ruleTextOffset, 0);
}

static endclz_Torappu_VersusCheckInData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_VersusCheckInData(builder:flatbuffers.Builder, checkInDictOffset:flatbuffers.Offset, voteTasteListOffset:flatbuffers.Offset, tasteInfoDictOffset:flatbuffers.Offset, tasteRewardDictOffset:flatbuffers.Offset, apSupplyOutOfDateDictOffset:flatbuffers.Offset, versusTotalDays:number, ruleTextOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_VersusCheckInData.startclz_Torappu_VersusCheckInData(builder);
  clz_Torappu_VersusCheckInData.addCheckInDict(builder, checkInDictOffset);
  clz_Torappu_VersusCheckInData.addVoteTasteList(builder, voteTasteListOffset);
  clz_Torappu_VersusCheckInData.addTasteInfoDict(builder, tasteInfoDictOffset);
  clz_Torappu_VersusCheckInData.addTasteRewardDict(builder, tasteRewardDictOffset);
  clz_Torappu_VersusCheckInData.addApSupplyOutOfDateDict(builder, apSupplyOutOfDateDictOffset);
  clz_Torappu_VersusCheckInData.addVersusTotalDays(builder, versusTotalDays);
  clz_Torappu_VersusCheckInData.addRuleText(builder, ruleTextOffset);
  return clz_Torappu_VersusCheckInData.endclz_Torappu_VersusCheckInData(builder);
}

unpack(): clz_Torappu_VersusCheckInDataT {
  return new clz_Torappu_VersusCheckInDataT(
    this.bb!.createObjList<dict__int__clz_Torappu_VersusCheckInData_DailyInfo, dict__int__clz_Torappu_VersusCheckInData_DailyInfoT>(this.checkInDict.bind(this), this.checkInDictLength()),
    this.bb!.createObjList<clz_Torappu_VersusCheckInData_VoteData, clz_Torappu_VersusCheckInData_VoteDataT>(this.voteTasteList.bind(this), this.voteTasteListLength()),
    this.bb!.createObjList<dict__int__clz_Torappu_VersusCheckInData_TasteInfoData, dict__int__clz_Torappu_VersusCheckInData_TasteInfoDataT>(this.tasteInfoDict.bind(this), this.tasteInfoDictLength()),
    this.bb!.createObjList<dict__enum__Torappu_VersusCheckInData_TasteType__clz_Torappu_VersusCheckInData_TasteRewardData, dict__enum__Torappu_VersusCheckInData_TasteType__clz_Torappu_VersusCheckInData_TasteRewardDataT>(this.tasteRewardDict.bind(this), this.tasteRewardDictLength()),
    this.bb!.createObjList<dict__string__long, dict__string__longT>(this.apSupplyOutOfDateDict.bind(this), this.apSupplyOutOfDateDictLength()),
    this.versusTotalDays(),
    this.ruleText()
  );
}


unpackTo(_o: clz_Torappu_VersusCheckInDataT): void {
  _o.checkInDict = this.bb!.createObjList<dict__int__clz_Torappu_VersusCheckInData_DailyInfo, dict__int__clz_Torappu_VersusCheckInData_DailyInfoT>(this.checkInDict.bind(this), this.checkInDictLength());
  _o.voteTasteList = this.bb!.createObjList<clz_Torappu_VersusCheckInData_VoteData, clz_Torappu_VersusCheckInData_VoteDataT>(this.voteTasteList.bind(this), this.voteTasteListLength());
  _o.tasteInfoDict = this.bb!.createObjList<dict__int__clz_Torappu_VersusCheckInData_TasteInfoData, dict__int__clz_Torappu_VersusCheckInData_TasteInfoDataT>(this.tasteInfoDict.bind(this), this.tasteInfoDictLength());
  _o.tasteRewardDict = this.bb!.createObjList<dict__enum__Torappu_VersusCheckInData_TasteType__clz_Torappu_VersusCheckInData_TasteRewardData, dict__enum__Torappu_VersusCheckInData_TasteType__clz_Torappu_VersusCheckInData_TasteRewardDataT>(this.tasteRewardDict.bind(this), this.tasteRewardDictLength());
  _o.apSupplyOutOfDateDict = this.bb!.createObjList<dict__string__long, dict__string__longT>(this.apSupplyOutOfDateDict.bind(this), this.apSupplyOutOfDateDictLength());
  _o.versusTotalDays = this.versusTotalDays();
  _o.ruleText = this.ruleText();
}
}

export class clz_Torappu_VersusCheckInDataT implements flatbuffers.IGeneratedObject {
constructor(
  public checkInDict: (dict__int__clz_Torappu_VersusCheckInData_DailyInfoT)[] = [],
  public voteTasteList: (clz_Torappu_VersusCheckInData_VoteDataT)[] = [],
  public tasteInfoDict: (dict__int__clz_Torappu_VersusCheckInData_TasteInfoDataT)[] = [],
  public tasteRewardDict: (dict__enum__Torappu_VersusCheckInData_TasteType__clz_Torappu_VersusCheckInData_TasteRewardDataT)[] = [],
  public apSupplyOutOfDateDict: (dict__string__longT)[] = [],
  public versusTotalDays: number = 0,
  public ruleText: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const checkInDict = clz_Torappu_VersusCheckInData.createCheckInDictVector(builder, builder.createObjectOffsetList(this.checkInDict));
  const voteTasteList = clz_Torappu_VersusCheckInData.createVoteTasteListVector(builder, builder.createObjectOffsetList(this.voteTasteList));
  const tasteInfoDict = clz_Torappu_VersusCheckInData.createTasteInfoDictVector(builder, builder.createObjectOffsetList(this.tasteInfoDict));
  const tasteRewardDict = clz_Torappu_VersusCheckInData.createTasteRewardDictVector(builder, builder.createObjectOffsetList(this.tasteRewardDict));
  const apSupplyOutOfDateDict = clz_Torappu_VersusCheckInData.createApSupplyOutOfDateDictVector(builder, builder.createObjectOffsetList(this.apSupplyOutOfDateDict));
  const ruleText = (this.ruleText !== null ? builder.createString(this.ruleText!) : 0);

  return clz_Torappu_VersusCheckInData.createclz_Torappu_VersusCheckInData(builder,
    checkInDict,
    voteTasteList,
    tasteInfoDict,
    tasteRewardDict,
    apSupplyOutOfDateDict,
    this.versusTotalDays,
    ruleText
  );
}
}
