// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_BuildingData_MusicSingleData implements flatbuffers.IUnpackableObject<clz_Torappu_BuildingData_MusicSingleDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_BuildingData_MusicSingleData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_BuildingData_MusicSingleData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_MusicSingleData):clz_Torappu_BuildingData_MusicSingleData {
  return (obj || new clz_Torappu_BuildingData_MusicSingleData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_BuildingData_MusicSingleData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_MusicSingleData):clz_Torappu_BuildingData_MusicSingleData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_BuildingData_MusicSingleData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

bgmId():string|null
bgmId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
bgmId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

bgmSortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

bgmStartTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

bgmName():string|null
bgmName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
bgmName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

gameMusicId():string|null
gameMusicId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
gameMusicId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

obtainApproach():string|null
obtainApproach(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
obtainApproach(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

bgmDescUnlocked():string|null
bgmDescUnlocked(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
bgmDescUnlocked(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

unlockType():string|null
unlockType(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
unlockType(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

unlockParams(index: number):string
unlockParams(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
unlockParams(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

unlockParamsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_BuildingData_MusicSingleData(builder:flatbuffers.Builder) {
  builder.startObject(9);
}

static addBgmId(builder:flatbuffers.Builder, bgmIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, bgmIdOffset, 0);
}

static addBgmSortId(builder:flatbuffers.Builder, bgmSortId:number) {
  builder.addFieldInt32(1, bgmSortId, 0);
}

static addBgmStartTime(builder:flatbuffers.Builder, bgmStartTime:bigint) {
  builder.addFieldInt64(2, bgmStartTime, BigInt('0'));
}

static addBgmName(builder:flatbuffers.Builder, bgmNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, bgmNameOffset, 0);
}

static addGameMusicId(builder:flatbuffers.Builder, gameMusicIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, gameMusicIdOffset, 0);
}

static addObtainApproach(builder:flatbuffers.Builder, obtainApproachOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, obtainApproachOffset, 0);
}

static addBgmDescUnlocked(builder:flatbuffers.Builder, bgmDescUnlockedOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, bgmDescUnlockedOffset, 0);
}

static addUnlockType(builder:flatbuffers.Builder, unlockTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, unlockTypeOffset, 0);
}

static addUnlockParams(builder:flatbuffers.Builder, unlockParamsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, unlockParamsOffset, 0);
}

static createUnlockParamsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startUnlockParamsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_BuildingData_MusicSingleData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_BuildingData_MusicSingleData(builder:flatbuffers.Builder, bgmIdOffset:flatbuffers.Offset, bgmSortId:number, bgmStartTime:bigint, bgmNameOffset:flatbuffers.Offset, gameMusicIdOffset:flatbuffers.Offset, obtainApproachOffset:flatbuffers.Offset, bgmDescUnlockedOffset:flatbuffers.Offset, unlockTypeOffset:flatbuffers.Offset, unlockParamsOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_BuildingData_MusicSingleData.startclz_Torappu_BuildingData_MusicSingleData(builder);
  clz_Torappu_BuildingData_MusicSingleData.addBgmId(builder, bgmIdOffset);
  clz_Torappu_BuildingData_MusicSingleData.addBgmSortId(builder, bgmSortId);
  clz_Torappu_BuildingData_MusicSingleData.addBgmStartTime(builder, bgmStartTime);
  clz_Torappu_BuildingData_MusicSingleData.addBgmName(builder, bgmNameOffset);
  clz_Torappu_BuildingData_MusicSingleData.addGameMusicId(builder, gameMusicIdOffset);
  clz_Torappu_BuildingData_MusicSingleData.addObtainApproach(builder, obtainApproachOffset);
  clz_Torappu_BuildingData_MusicSingleData.addBgmDescUnlocked(builder, bgmDescUnlockedOffset);
  clz_Torappu_BuildingData_MusicSingleData.addUnlockType(builder, unlockTypeOffset);
  clz_Torappu_BuildingData_MusicSingleData.addUnlockParams(builder, unlockParamsOffset);
  return clz_Torappu_BuildingData_MusicSingleData.endclz_Torappu_BuildingData_MusicSingleData(builder);
}

unpack(): clz_Torappu_BuildingData_MusicSingleDataT {
  return new clz_Torappu_BuildingData_MusicSingleDataT(
    this.bgmId(),
    this.bgmSortId(),
    this.bgmStartTime(),
    this.bgmName(),
    this.gameMusicId(),
    this.obtainApproach(),
    this.bgmDescUnlocked(),
    this.unlockType(),
    this.bb!.createScalarList<string>(this.unlockParams.bind(this), this.unlockParamsLength())
  );
}


unpackTo(_o: clz_Torappu_BuildingData_MusicSingleDataT): void {
  _o.bgmId = this.bgmId();
  _o.bgmSortId = this.bgmSortId();
  _o.bgmStartTime = this.bgmStartTime();
  _o.bgmName = this.bgmName();
  _o.gameMusicId = this.gameMusicId();
  _o.obtainApproach = this.obtainApproach();
  _o.bgmDescUnlocked = this.bgmDescUnlocked();
  _o.unlockType = this.unlockType();
  _o.unlockParams = this.bb!.createScalarList<string>(this.unlockParams.bind(this), this.unlockParamsLength());
}
}

export class clz_Torappu_BuildingData_MusicSingleDataT implements flatbuffers.IGeneratedObject {
constructor(
  public bgmId: string|Uint8Array|null = null,
  public bgmSortId: number = 0,
  public bgmStartTime: bigint = BigInt('0'),
  public bgmName: string|Uint8Array|null = null,
  public gameMusicId: string|Uint8Array|null = null,
  public obtainApproach: string|Uint8Array|null = null,
  public bgmDescUnlocked: string|Uint8Array|null = null,
  public unlockType: string|Uint8Array|null = null,
  public unlockParams: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const bgmId = (this.bgmId !== null ? builder.createString(this.bgmId!) : 0);
  const bgmName = (this.bgmName !== null ? builder.createString(this.bgmName!) : 0);
  const gameMusicId = (this.gameMusicId !== null ? builder.createString(this.gameMusicId!) : 0);
  const obtainApproach = (this.obtainApproach !== null ? builder.createString(this.obtainApproach!) : 0);
  const bgmDescUnlocked = (this.bgmDescUnlocked !== null ? builder.createString(this.bgmDescUnlocked!) : 0);
  const unlockType = (this.unlockType !== null ? builder.createString(this.unlockType!) : 0);
  const unlockParams = clz_Torappu_BuildingData_MusicSingleData.createUnlockParamsVector(builder, builder.createObjectOffsetList(this.unlockParams));

  return clz_Torappu_BuildingData_MusicSingleData.createclz_Torappu_BuildingData_MusicSingleData(builder,
    bgmId,
    this.bgmSortId,
    this.bgmStartTime,
    bgmName,
    gameMusicId,
    obtainApproach,
    bgmDescUnlocked,
    unlockType,
    unlockParams
  );
}
}
