// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_PlayerAvatarGroupType } from './enum--torappu-player-avatar-group-type.js';


export class clz_Torappu_PlayerAvatarGroupData implements flatbuffers.IUnpackableObject<clz_Torappu_PlayerAvatarGroupDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_PlayerAvatarGroupData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_PlayerAvatarGroupData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_PlayerAvatarGroupData):clz_Torappu_PlayerAvatarGroupData {
  return (obj || new clz_Torappu_PlayerAvatarGroupData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_PlayerAvatarGroupData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_PlayerAvatarGroupData):clz_Torappu_PlayerAvatarGroupData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_PlayerAvatarGroupData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

avatarType():enum__Torappu_PlayerAvatarGroupType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_PlayerAvatarGroupType.NONE;
}

typeName():string|null
typeName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
typeName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

avatarIdList(index: number):string
avatarIdList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
avatarIdList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

avatarIdListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_PlayerAvatarGroupData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addAvatarType(builder:flatbuffers.Builder, avatarType:enum__Torappu_PlayerAvatarGroupType) {
  builder.addFieldInt32(0, avatarType, enum__Torappu_PlayerAvatarGroupType.NONE);
}

static addTypeName(builder:flatbuffers.Builder, typeNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, typeNameOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(2, sortId, 0);
}

static addAvatarIdList(builder:flatbuffers.Builder, avatarIdListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, avatarIdListOffset, 0);
}

static createAvatarIdListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startAvatarIdListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_PlayerAvatarGroupData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_PlayerAvatarGroupData(builder:flatbuffers.Builder, avatarType:enum__Torappu_PlayerAvatarGroupType, typeNameOffset:flatbuffers.Offset, sortId:number, avatarIdListOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_PlayerAvatarGroupData.startclz_Torappu_PlayerAvatarGroupData(builder);
  clz_Torappu_PlayerAvatarGroupData.addAvatarType(builder, avatarType);
  clz_Torappu_PlayerAvatarGroupData.addTypeName(builder, typeNameOffset);
  clz_Torappu_PlayerAvatarGroupData.addSortId(builder, sortId);
  clz_Torappu_PlayerAvatarGroupData.addAvatarIdList(builder, avatarIdListOffset);
  return clz_Torappu_PlayerAvatarGroupData.endclz_Torappu_PlayerAvatarGroupData(builder);
}

unpack(): clz_Torappu_PlayerAvatarGroupDataT {
  return new clz_Torappu_PlayerAvatarGroupDataT(
    this.avatarType(),
    this.typeName(),
    this.sortId(),
    this.bb!.createScalarList<string>(this.avatarIdList.bind(this), this.avatarIdListLength())
  );
}


unpackTo(_o: clz_Torappu_PlayerAvatarGroupDataT): void {
  _o.avatarType = this.avatarType();
  _o.typeName = this.typeName();
  _o.sortId = this.sortId();
  _o.avatarIdList = this.bb!.createScalarList<string>(this.avatarIdList.bind(this), this.avatarIdListLength());
}
}

export class clz_Torappu_PlayerAvatarGroupDataT implements flatbuffers.IGeneratedObject {
constructor(
  public avatarType: enum__Torappu_PlayerAvatarGroupType = enum__Torappu_PlayerAvatarGroupType.NONE,
  public typeName: string|Uint8Array|null = null,
  public sortId: number = 0,
  public avatarIdList: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const typeName = (this.typeName !== null ? builder.createString(this.typeName!) : 0);
  const avatarIdList = clz_Torappu_PlayerAvatarGroupData.createAvatarIdListVector(builder, builder.createObjectOffsetList(this.avatarIdList));

  return clz_Torappu_PlayerAvatarGroupData.createclz_Torappu_PlayerAvatarGroupData(builder,
    this.avatarType,
    typeName,
    this.sortId,
    avatarIdList
  );
}
}
