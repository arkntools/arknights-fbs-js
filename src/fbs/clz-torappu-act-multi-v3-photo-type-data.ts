// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_ActMultiV3PhotoSlotData, clz_Torappu_ActMultiV3PhotoSlotDataT } from './clz-torappu-act-multi-v3-photo-slot-data.js';


export class clz_Torappu_ActMultiV3PhotoTypeData implements flatbuffers.IUnpackableObject<clz_Torappu_ActMultiV3PhotoTypeDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActMultiV3PhotoTypeData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActMultiV3PhotoTypeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActMultiV3PhotoTypeData):clz_Torappu_ActMultiV3PhotoTypeData {
  return (obj || new clz_Torappu_ActMultiV3PhotoTypeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActMultiV3PhotoTypeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActMultiV3PhotoTypeData):clz_Torappu_ActMultiV3PhotoTypeData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActMultiV3PhotoTypeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

photoTypeName():string|null
photoTypeName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
photoTypeName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

background():string|null
background(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
background(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

photoDesc():string|null
photoDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
photoDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

slots(index: number, obj?:clz_Torappu_ActMultiV3PhotoSlotData):clz_Torappu_ActMultiV3PhotoSlotData|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new clz_Torappu_ActMultiV3PhotoSlotData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

slotsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_ActMultiV3PhotoTypeData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addPhotoTypeName(builder:flatbuffers.Builder, photoTypeNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, photoTypeNameOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(1, sortId, 0);
}

static addBackground(builder:flatbuffers.Builder, backgroundOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, backgroundOffset, 0);
}

static addPhotoDesc(builder:flatbuffers.Builder, photoDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, photoDescOffset, 0);
}

static addSlots(builder:flatbuffers.Builder, slotsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, slotsOffset, 0);
}

static createSlotsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startSlotsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_ActMultiV3PhotoTypeData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActMultiV3PhotoTypeData(builder:flatbuffers.Builder, photoTypeNameOffset:flatbuffers.Offset, sortId:number, backgroundOffset:flatbuffers.Offset, photoDescOffset:flatbuffers.Offset, slotsOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActMultiV3PhotoTypeData.startclz_Torappu_ActMultiV3PhotoTypeData(builder);
  clz_Torappu_ActMultiV3PhotoTypeData.addPhotoTypeName(builder, photoTypeNameOffset);
  clz_Torappu_ActMultiV3PhotoTypeData.addSortId(builder, sortId);
  clz_Torappu_ActMultiV3PhotoTypeData.addBackground(builder, backgroundOffset);
  clz_Torappu_ActMultiV3PhotoTypeData.addPhotoDesc(builder, photoDescOffset);
  clz_Torappu_ActMultiV3PhotoTypeData.addSlots(builder, slotsOffset);
  return clz_Torappu_ActMultiV3PhotoTypeData.endclz_Torappu_ActMultiV3PhotoTypeData(builder);
}

unpack(): clz_Torappu_ActMultiV3PhotoTypeDataT {
  return new clz_Torappu_ActMultiV3PhotoTypeDataT(
    this.photoTypeName(),
    this.sortId(),
    this.background(),
    this.photoDesc(),
    this.bb!.createObjList<clz_Torappu_ActMultiV3PhotoSlotData, clz_Torappu_ActMultiV3PhotoSlotDataT>(this.slots.bind(this), this.slotsLength())
  );
}


unpackTo(_o: clz_Torappu_ActMultiV3PhotoTypeDataT): void {
  _o.photoTypeName = this.photoTypeName();
  _o.sortId = this.sortId();
  _o.background = this.background();
  _o.photoDesc = this.photoDesc();
  _o.slots = this.bb!.createObjList<clz_Torappu_ActMultiV3PhotoSlotData, clz_Torappu_ActMultiV3PhotoSlotDataT>(this.slots.bind(this), this.slotsLength());
}
}

export class clz_Torappu_ActMultiV3PhotoTypeDataT implements flatbuffers.IGeneratedObject {
constructor(
  public photoTypeName: string|Uint8Array|null = null,
  public sortId: number = 0,
  public background: string|Uint8Array|null = null,
  public photoDesc: string|Uint8Array|null = null,
  public slots: (clz_Torappu_ActMultiV3PhotoSlotDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const photoTypeName = (this.photoTypeName !== null ? builder.createString(this.photoTypeName!) : 0);
  const background = (this.background !== null ? builder.createString(this.background!) : 0);
  const photoDesc = (this.photoDesc !== null ? builder.createString(this.photoDesc!) : 0);
  const slots = clz_Torappu_ActMultiV3PhotoTypeData.createSlotsVector(builder, builder.createObjectOffsetList(this.slots));

  return clz_Torappu_ActMultiV3PhotoTypeData.createclz_Torappu_ActMultiV3PhotoTypeData(builder,
    photoTypeName,
    this.sortId,
    background,
    photoDesc,
    slots
  );
}
}
