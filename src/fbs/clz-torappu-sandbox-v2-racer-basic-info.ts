// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SandboxV2RacerBasicInfo implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxV2RacerBasicInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxV2RacerBasicInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxV2RacerBasicInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2RacerBasicInfo):clz_Torappu_SandboxV2RacerBasicInfo {
  return (obj || new clz_Torappu_SandboxV2RacerBasicInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxV2RacerBasicInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2RacerBasicInfo):clz_Torappu_SandboxV2RacerBasicInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxV2RacerBasicInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

racerId():string|null
racerId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
racerId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

racerName():string|null
racerName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
racerName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

itemId():string|null
itemId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
itemId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

attributeMaxValue(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
}

attributeMaxValueLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

attributeMaxValueArray():Int32Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

static startclz_Torappu_SandboxV2RacerBasicInfo(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addRacerId(builder:flatbuffers.Builder, racerIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, racerIdOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(1, sortId, 0);
}

static addRacerName(builder:flatbuffers.Builder, racerNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, racerNameOffset, 0);
}

static addItemId(builder:flatbuffers.Builder, itemIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, itemIdOffset, 0);
}

static addAttributeMaxValue(builder:flatbuffers.Builder, attributeMaxValueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, attributeMaxValueOffset, 0);
}

static createAttributeMaxValueVector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;
/**
 * @deprecated This Uint8Array overload will be removed in the future.
 */
static createAttributeMaxValueVector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;
static createAttributeMaxValueVector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]!);
  }
  return builder.endVector();
}

static startAttributeMaxValueVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_SandboxV2RacerBasicInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxV2RacerBasicInfo(builder:flatbuffers.Builder, racerIdOffset:flatbuffers.Offset, sortId:number, racerNameOffset:flatbuffers.Offset, itemIdOffset:flatbuffers.Offset, attributeMaxValueOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SandboxV2RacerBasicInfo.startclz_Torappu_SandboxV2RacerBasicInfo(builder);
  clz_Torappu_SandboxV2RacerBasicInfo.addRacerId(builder, racerIdOffset);
  clz_Torappu_SandboxV2RacerBasicInfo.addSortId(builder, sortId);
  clz_Torappu_SandboxV2RacerBasicInfo.addRacerName(builder, racerNameOffset);
  clz_Torappu_SandboxV2RacerBasicInfo.addItemId(builder, itemIdOffset);
  clz_Torappu_SandboxV2RacerBasicInfo.addAttributeMaxValue(builder, attributeMaxValueOffset);
  return clz_Torappu_SandboxV2RacerBasicInfo.endclz_Torappu_SandboxV2RacerBasicInfo(builder);
}

unpack(): clz_Torappu_SandboxV2RacerBasicInfoT {
  return new clz_Torappu_SandboxV2RacerBasicInfoT(
    this.racerId(),
    this.sortId(),
    this.racerName(),
    this.itemId(),
    this.bb!.createScalarList<number>(this.attributeMaxValue.bind(this), this.attributeMaxValueLength())
  );
}


unpackTo(_o: clz_Torappu_SandboxV2RacerBasicInfoT): void {
  _o.racerId = this.racerId();
  _o.sortId = this.sortId();
  _o.racerName = this.racerName();
  _o.itemId = this.itemId();
  _o.attributeMaxValue = this.bb!.createScalarList<number>(this.attributeMaxValue.bind(this), this.attributeMaxValueLength());
}
}

export class clz_Torappu_SandboxV2RacerBasicInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public racerId: string|Uint8Array|null = null,
  public sortId: number = 0,
  public racerName: string|Uint8Array|null = null,
  public itemId: string|Uint8Array|null = null,
  public attributeMaxValue: (number)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const racerId = (this.racerId !== null ? builder.createString(this.racerId!) : 0);
  const racerName = (this.racerName !== null ? builder.createString(this.racerName!) : 0);
  const itemId = (this.itemId !== null ? builder.createString(this.itemId!) : 0);
  const attributeMaxValue = clz_Torappu_SandboxV2RacerBasicInfo.createAttributeMaxValueVector(builder, this.attributeMaxValue);

  return clz_Torappu_SandboxV2RacerBasicInfo.createclz_Torappu_SandboxV2RacerBasicInfo(builder,
    racerId,
    this.sortId,
    racerName,
    itemId,
    attributeMaxValue
  );
}
}
