// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_CharSkinGroupInfo implements flatbuffers.IUnpackableObject<clz_Torappu_CharSkinGroupInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_CharSkinGroupInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_CharSkinGroupInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CharSkinGroupInfo):clz_Torappu_CharSkinGroupInfo {
  return (obj || new clz_Torappu_CharSkinGroupInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_CharSkinGroupInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CharSkinGroupInfo):clz_Torappu_CharSkinGroupInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_CharSkinGroupInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

skinGroupId():string|null
skinGroupId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
skinGroupId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

publishTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startclz_Torappu_CharSkinGroupInfo(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addSkinGroupId(builder:flatbuffers.Builder, skinGroupIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, skinGroupIdOffset, 0);
}

static addPublishTime(builder:flatbuffers.Builder, publishTime:bigint) {
  builder.addFieldInt64(1, publishTime, BigInt('0'));
}

static endclz_Torappu_CharSkinGroupInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_CharSkinGroupInfo(builder:flatbuffers.Builder, skinGroupIdOffset:flatbuffers.Offset, publishTime:bigint):flatbuffers.Offset {
  clz_Torappu_CharSkinGroupInfo.startclz_Torappu_CharSkinGroupInfo(builder);
  clz_Torappu_CharSkinGroupInfo.addSkinGroupId(builder, skinGroupIdOffset);
  clz_Torappu_CharSkinGroupInfo.addPublishTime(builder, publishTime);
  return clz_Torappu_CharSkinGroupInfo.endclz_Torappu_CharSkinGroupInfo(builder);
}

unpack(): clz_Torappu_CharSkinGroupInfoT {
  return new clz_Torappu_CharSkinGroupInfoT(
    this.skinGroupId(),
    this.publishTime()
  );
}


unpackTo(_o: clz_Torappu_CharSkinGroupInfoT): void {
  _o.skinGroupId = this.skinGroupId();
  _o.publishTime = this.publishTime();
}
}

export class clz_Torappu_CharSkinGroupInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public skinGroupId: string|Uint8Array|null = null,
  public publishTime: bigint = BigInt('0')
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const skinGroupId = (this.skinGroupId !== null ? builder.createString(this.skinGroupId!) : 0);

  return clz_Torappu_CharSkinGroupInfo.createclz_Torappu_CharSkinGroupInfo(builder,
    skinGroupId,
    this.publishTime
  );
}
}
