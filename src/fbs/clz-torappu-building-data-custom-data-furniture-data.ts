// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_BuildingData_WorkshopExtraWeightItem, clz_Torappu_BuildingData_WorkshopExtraWeightItemT } from './clz-torappu-building-data-workshop-extra-weight-item.js';
import { enum__Torappu_BuildingData_FurnitureCategory } from './enum--torappu-building-data-furniture-category.js';
import { enum__Torappu_BuildingData_FurnitureInteract } from './enum--torappu-building-data-furniture-interact.js';
import { enum__Torappu_BuildingData_FurnitureLocation } from './enum--torappu-building-data-furniture-location.js';
import { enum__Torappu_BuildingData_FurnitureSubType } from './enum--torappu-building-data-furniture-sub-type.js';
import { enum__Torappu_BuildingData_FurnitureType } from './enum--torappu-building-data-furniture-type.js';


export class clz_Torappu_BuildingData_CustomData_FurnitureData implements flatbuffers.IUnpackableObject<clz_Torappu_BuildingData_CustomData_FurnitureDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_BuildingData_CustomData_FurnitureData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_BuildingData_CustomData_FurnitureData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_CustomData_FurnitureData):clz_Torappu_BuildingData_CustomData_FurnitureData {
  return (obj || new clz_Torappu_BuildingData_CustomData_FurnitureData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_BuildingData_CustomData_FurnitureData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_CustomData_FurnitureData):clz_Torappu_BuildingData_CustomData_FurnitureData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_BuildingData_CustomData_FurnitureData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

iconId():string|null
iconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
iconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

interactType():enum__Torappu_BuildingData_FurnitureInteract {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_BuildingData_FurnitureInteract.NONE;
}

musicId():string|null
musicId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
musicId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

type():enum__Torappu_BuildingData_FurnitureType {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_BuildingData_FurnitureType.FLOOR;
}

subType():enum__Torappu_BuildingData_FurnitureSubType {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_BuildingData_FurnitureSubType.NONE;
}

location():enum__Torappu_BuildingData_FurnitureLocation {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_BuildingData_FurnitureLocation.NONE;
}

category():enum__Torappu_BuildingData_FurnitureCategory {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_BuildingData_FurnitureCategory.FURNITURE;
}

validOnRotate():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

enableRotate():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

rarity():number {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

themeId():string|null
themeId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
themeId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

groupId():string|null
groupId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
groupId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

width():number {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

depth():number {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

height():number {
  const offset = this.bb!.__offset(this.bb_pos, 38);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

comfort():number {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

usage():string|null
usage(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
usage(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

description():string|null
description(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
description(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 44);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

obtainApproach():string|null
obtainApproach(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
obtainApproach(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 46);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

processedProductId():string|null
processedProductId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
processedProductId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 48);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

processedProductCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 50);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

processedByProductPercentage():number {
  const offset = this.bb!.__offset(this.bb_pos, 52);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

processedByProductGroup(index: number, obj?:clz_Torappu_BuildingData_WorkshopExtraWeightItem):clz_Torappu_BuildingData_WorkshopExtraWeightItem|null {
  const offset = this.bb!.__offset(this.bb_pos, 54);
  return offset ? (obj || new clz_Torappu_BuildingData_WorkshopExtraWeightItem()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

processedByProductGroupLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 54);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

canBeDestroy():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 56);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

isOnly():number {
  const offset = this.bb!.__offset(this.bb_pos, 58);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

enableRoomType():number {
  const offset = this.bb!.__offset(this.bb_pos, 60);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

quantity():number {
  const offset = this.bb!.__offset(this.bb_pos, 62);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_BuildingData_CustomData_FurnitureData(builder:flatbuffers.Builder) {
  builder.startObject(30);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(1, sortId, 0);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, nameOffset, 0);
}

static addIconId(builder:flatbuffers.Builder, iconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, iconIdOffset, 0);
}

static addInteractType(builder:flatbuffers.Builder, interactType:enum__Torappu_BuildingData_FurnitureInteract) {
  builder.addFieldInt32(4, interactType, enum__Torappu_BuildingData_FurnitureInteract.NONE);
}

static addMusicId(builder:flatbuffers.Builder, musicIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, musicIdOffset, 0);
}

static addType(builder:flatbuffers.Builder, type:enum__Torappu_BuildingData_FurnitureType) {
  builder.addFieldInt32(6, type, enum__Torappu_BuildingData_FurnitureType.FLOOR);
}

static addSubType(builder:flatbuffers.Builder, subType:enum__Torappu_BuildingData_FurnitureSubType) {
  builder.addFieldInt32(7, subType, enum__Torappu_BuildingData_FurnitureSubType.NONE);
}

static addLocation(builder:flatbuffers.Builder, location:enum__Torappu_BuildingData_FurnitureLocation) {
  builder.addFieldInt32(8, location, enum__Torappu_BuildingData_FurnitureLocation.NONE);
}

static addCategory(builder:flatbuffers.Builder, category:enum__Torappu_BuildingData_FurnitureCategory) {
  builder.addFieldInt32(9, category, enum__Torappu_BuildingData_FurnitureCategory.FURNITURE);
}

static addValidOnRotate(builder:flatbuffers.Builder, validOnRotate:boolean) {
  builder.addFieldInt8(10, +validOnRotate, +false);
}

static addEnableRotate(builder:flatbuffers.Builder, enableRotate:boolean) {
  builder.addFieldInt8(11, +enableRotate, +false);
}

static addRarity(builder:flatbuffers.Builder, rarity:number) {
  builder.addFieldInt32(12, rarity, 0);
}

static addThemeId(builder:flatbuffers.Builder, themeIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, themeIdOffset, 0);
}

static addGroupId(builder:flatbuffers.Builder, groupIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, groupIdOffset, 0);
}

static addWidth(builder:flatbuffers.Builder, width:number) {
  builder.addFieldInt32(15, width, 0);
}

static addDepth(builder:flatbuffers.Builder, depth:number) {
  builder.addFieldInt32(16, depth, 0);
}

static addHeight(builder:flatbuffers.Builder, height:number) {
  builder.addFieldInt32(17, height, 0);
}

static addComfort(builder:flatbuffers.Builder, comfort:number) {
  builder.addFieldInt32(18, comfort, 0);
}

static addUsage(builder:flatbuffers.Builder, usageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(19, usageOffset, 0);
}

static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(20, descriptionOffset, 0);
}

static addObtainApproach(builder:flatbuffers.Builder, obtainApproachOffset:flatbuffers.Offset) {
  builder.addFieldOffset(21, obtainApproachOffset, 0);
}

static addProcessedProductId(builder:flatbuffers.Builder, processedProductIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(22, processedProductIdOffset, 0);
}

static addProcessedProductCount(builder:flatbuffers.Builder, processedProductCount:number) {
  builder.addFieldInt32(23, processedProductCount, 0);
}

static addProcessedByProductPercentage(builder:flatbuffers.Builder, processedByProductPercentage:number) {
  builder.addFieldInt32(24, processedByProductPercentage, 0);
}

static addProcessedByProductGroup(builder:flatbuffers.Builder, processedByProductGroupOffset:flatbuffers.Offset) {
  builder.addFieldOffset(25, processedByProductGroupOffset, 0);
}

static createProcessedByProductGroupVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startProcessedByProductGroupVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCanBeDestroy(builder:flatbuffers.Builder, canBeDestroy:boolean) {
  builder.addFieldInt8(26, +canBeDestroy, +false);
}

static addIsOnly(builder:flatbuffers.Builder, isOnly:number) {
  builder.addFieldInt32(27, isOnly, 0);
}

static addEnableRoomType(builder:flatbuffers.Builder, enableRoomType:number) {
  builder.addFieldInt32(28, enableRoomType, 0);
}

static addQuantity(builder:flatbuffers.Builder, quantity:number) {
  builder.addFieldInt32(29, quantity, 0);
}

static endclz_Torappu_BuildingData_CustomData_FurnitureData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_BuildingData_CustomData_FurnitureData(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset, sortId:number, nameOffset:flatbuffers.Offset, iconIdOffset:flatbuffers.Offset, interactType:enum__Torappu_BuildingData_FurnitureInteract, musicIdOffset:flatbuffers.Offset, type:enum__Torappu_BuildingData_FurnitureType, subType:enum__Torappu_BuildingData_FurnitureSubType, location:enum__Torappu_BuildingData_FurnitureLocation, category:enum__Torappu_BuildingData_FurnitureCategory, validOnRotate:boolean, enableRotate:boolean, rarity:number, themeIdOffset:flatbuffers.Offset, groupIdOffset:flatbuffers.Offset, width:number, depth:number, height:number, comfort:number, usageOffset:flatbuffers.Offset, descriptionOffset:flatbuffers.Offset, obtainApproachOffset:flatbuffers.Offset, processedProductIdOffset:flatbuffers.Offset, processedProductCount:number, processedByProductPercentage:number, processedByProductGroupOffset:flatbuffers.Offset, canBeDestroy:boolean, isOnly:number, enableRoomType:number, quantity:number):flatbuffers.Offset {
  clz_Torappu_BuildingData_CustomData_FurnitureData.startclz_Torappu_BuildingData_CustomData_FurnitureData(builder);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addId(builder, idOffset);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addSortId(builder, sortId);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addName(builder, nameOffset);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addIconId(builder, iconIdOffset);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addInteractType(builder, interactType);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addMusicId(builder, musicIdOffset);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addType(builder, type);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addSubType(builder, subType);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addLocation(builder, location);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addCategory(builder, category);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addValidOnRotate(builder, validOnRotate);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addEnableRotate(builder, enableRotate);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addRarity(builder, rarity);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addThemeId(builder, themeIdOffset);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addGroupId(builder, groupIdOffset);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addWidth(builder, width);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addDepth(builder, depth);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addHeight(builder, height);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addComfort(builder, comfort);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addUsage(builder, usageOffset);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addDescription(builder, descriptionOffset);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addObtainApproach(builder, obtainApproachOffset);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addProcessedProductId(builder, processedProductIdOffset);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addProcessedProductCount(builder, processedProductCount);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addProcessedByProductPercentage(builder, processedByProductPercentage);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addProcessedByProductGroup(builder, processedByProductGroupOffset);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addCanBeDestroy(builder, canBeDestroy);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addIsOnly(builder, isOnly);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addEnableRoomType(builder, enableRoomType);
  clz_Torappu_BuildingData_CustomData_FurnitureData.addQuantity(builder, quantity);
  return clz_Torappu_BuildingData_CustomData_FurnitureData.endclz_Torappu_BuildingData_CustomData_FurnitureData(builder);
}

unpack(): clz_Torappu_BuildingData_CustomData_FurnitureDataT {
  return new clz_Torappu_BuildingData_CustomData_FurnitureDataT(
    this.id(),
    this.sortId(),
    this.name(),
    this.iconId(),
    this.interactType(),
    this.musicId(),
    this.type(),
    this.subType(),
    this.location(),
    this.category(),
    this.validOnRotate(),
    this.enableRotate(),
    this.rarity(),
    this.themeId(),
    this.groupId(),
    this.width(),
    this.depth(),
    this.height(),
    this.comfort(),
    this.usage(),
    this.description(),
    this.obtainApproach(),
    this.processedProductId(),
    this.processedProductCount(),
    this.processedByProductPercentage(),
    this.bb!.createObjList<clz_Torappu_BuildingData_WorkshopExtraWeightItem, clz_Torappu_BuildingData_WorkshopExtraWeightItemT>(this.processedByProductGroup.bind(this), this.processedByProductGroupLength()),
    this.canBeDestroy(),
    this.isOnly(),
    this.enableRoomType(),
    this.quantity()
  );
}


unpackTo(_o: clz_Torappu_BuildingData_CustomData_FurnitureDataT): void {
  _o.id = this.id();
  _o.sortId = this.sortId();
  _o.name = this.name();
  _o.iconId = this.iconId();
  _o.interactType = this.interactType();
  _o.musicId = this.musicId();
  _o.type = this.type();
  _o.subType = this.subType();
  _o.location = this.location();
  _o.category = this.category();
  _o.validOnRotate = this.validOnRotate();
  _o.enableRotate = this.enableRotate();
  _o.rarity = this.rarity();
  _o.themeId = this.themeId();
  _o.groupId = this.groupId();
  _o.width = this.width();
  _o.depth = this.depth();
  _o.height = this.height();
  _o.comfort = this.comfort();
  _o.usage = this.usage();
  _o.description = this.description();
  _o.obtainApproach = this.obtainApproach();
  _o.processedProductId = this.processedProductId();
  _o.processedProductCount = this.processedProductCount();
  _o.processedByProductPercentage = this.processedByProductPercentage();
  _o.processedByProductGroup = this.bb!.createObjList<clz_Torappu_BuildingData_WorkshopExtraWeightItem, clz_Torappu_BuildingData_WorkshopExtraWeightItemT>(this.processedByProductGroup.bind(this), this.processedByProductGroupLength());
  _o.canBeDestroy = this.canBeDestroy();
  _o.isOnly = this.isOnly();
  _o.enableRoomType = this.enableRoomType();
  _o.quantity = this.quantity();
}
}

export class clz_Torappu_BuildingData_CustomData_FurnitureDataT implements flatbuffers.IGeneratedObject {
constructor(
  public id: string|Uint8Array|null = null,
  public sortId: number = 0,
  public name: string|Uint8Array|null = null,
  public iconId: string|Uint8Array|null = null,
  public interactType: enum__Torappu_BuildingData_FurnitureInteract = enum__Torappu_BuildingData_FurnitureInteract.NONE,
  public musicId: string|Uint8Array|null = null,
  public type: enum__Torappu_BuildingData_FurnitureType = enum__Torappu_BuildingData_FurnitureType.FLOOR,
  public subType: enum__Torappu_BuildingData_FurnitureSubType = enum__Torappu_BuildingData_FurnitureSubType.NONE,
  public location: enum__Torappu_BuildingData_FurnitureLocation = enum__Torappu_BuildingData_FurnitureLocation.NONE,
  public category: enum__Torappu_BuildingData_FurnitureCategory = enum__Torappu_BuildingData_FurnitureCategory.FURNITURE,
  public validOnRotate: boolean = false,
  public enableRotate: boolean = false,
  public rarity: number = 0,
  public themeId: string|Uint8Array|null = null,
  public groupId: string|Uint8Array|null = null,
  public width: number = 0,
  public depth: number = 0,
  public height: number = 0,
  public comfort: number = 0,
  public usage: string|Uint8Array|null = null,
  public description: string|Uint8Array|null = null,
  public obtainApproach: string|Uint8Array|null = null,
  public processedProductId: string|Uint8Array|null = null,
  public processedProductCount: number = 0,
  public processedByProductPercentage: number = 0,
  public processedByProductGroup: (clz_Torappu_BuildingData_WorkshopExtraWeightItemT)[] = [],
  public canBeDestroy: boolean = false,
  public isOnly: number = 0,
  public enableRoomType: number = 0,
  public quantity: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const id = (this.id !== null ? builder.createString(this.id!) : 0);
  const name = (this.name !== null ? builder.createString(this.name!) : 0);
  const iconId = (this.iconId !== null ? builder.createString(this.iconId!) : 0);
  const musicId = (this.musicId !== null ? builder.createString(this.musicId!) : 0);
  const themeId = (this.themeId !== null ? builder.createString(this.themeId!) : 0);
  const groupId = (this.groupId !== null ? builder.createString(this.groupId!) : 0);
  const usage = (this.usage !== null ? builder.createString(this.usage!) : 0);
  const description = (this.description !== null ? builder.createString(this.description!) : 0);
  const obtainApproach = (this.obtainApproach !== null ? builder.createString(this.obtainApproach!) : 0);
  const processedProductId = (this.processedProductId !== null ? builder.createString(this.processedProductId!) : 0);
  const processedByProductGroup = clz_Torappu_BuildingData_CustomData_FurnitureData.createProcessedByProductGroupVector(builder, builder.createObjectOffsetList(this.processedByProductGroup));

  return clz_Torappu_BuildingData_CustomData_FurnitureData.createclz_Torappu_BuildingData_CustomData_FurnitureData(builder,
    id,
    this.sortId,
    name,
    iconId,
    this.interactType,
    musicId,
    this.type,
    this.subType,
    this.location,
    this.category,
    this.validOnRotate,
    this.enableRotate,
    this.rarity,
    themeId,
    groupId,
    this.width,
    this.depth,
    this.height,
    this.comfort,
    usage,
    description,
    obtainApproach,
    processedProductId,
    this.processedProductCount,
    this.processedByProductPercentage,
    processedByProductGroup,
    this.canBeDestroy,
    this.isOnly,
    this.enableRoomType,
    this.quantity
  );
}
}
