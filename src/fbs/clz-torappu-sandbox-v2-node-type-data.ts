// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_SandboxV2NodeType } from './enum--torappu-sandbox-v2-node-type.js';


export class clz_Torappu_SandboxV2NodeTypeData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxV2NodeTypeDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxV2NodeTypeData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxV2NodeTypeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2NodeTypeData):clz_Torappu_SandboxV2NodeTypeData {
  return (obj || new clz_Torappu_SandboxV2NodeTypeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxV2NodeTypeData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2NodeTypeData):clz_Torappu_SandboxV2NodeTypeData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxV2NodeTypeData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

nodeType():enum__Torappu_SandboxV2NodeType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_SandboxV2NodeType.NONE;
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

iconId():string|null
iconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
iconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_SandboxV2NodeTypeData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addNodeType(builder:flatbuffers.Builder, nodeType:enum__Torappu_SandboxV2NodeType) {
  builder.addFieldInt32(0, nodeType, enum__Torappu_SandboxV2NodeType.NONE);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nameOffset, 0);
}

static addIconId(builder:flatbuffers.Builder, iconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, iconIdOffset, 0);
}

static endclz_Torappu_SandboxV2NodeTypeData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxV2NodeTypeData(builder:flatbuffers.Builder, nodeType:enum__Torappu_SandboxV2NodeType, nameOffset:flatbuffers.Offset, iconIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SandboxV2NodeTypeData.startclz_Torappu_SandboxV2NodeTypeData(builder);
  clz_Torappu_SandboxV2NodeTypeData.addNodeType(builder, nodeType);
  clz_Torappu_SandboxV2NodeTypeData.addName(builder, nameOffset);
  clz_Torappu_SandboxV2NodeTypeData.addIconId(builder, iconIdOffset);
  return clz_Torappu_SandboxV2NodeTypeData.endclz_Torappu_SandboxV2NodeTypeData(builder);
}

unpack(): clz_Torappu_SandboxV2NodeTypeDataT {
  return new clz_Torappu_SandboxV2NodeTypeDataT(
    this.nodeType(),
    this.name(),
    this.iconId()
  );
}


unpackTo(_o: clz_Torappu_SandboxV2NodeTypeDataT): void {
  _o.nodeType = this.nodeType();
  _o.name = this.name();
  _o.iconId = this.iconId();
}
}

export class clz_Torappu_SandboxV2NodeTypeDataT implements flatbuffers.IGeneratedObject {
constructor(
  public nodeType: enum__Torappu_SandboxV2NodeType = enum__Torappu_SandboxV2NodeType.NONE,
  public name: string|Uint8Array|null = null,
  public iconId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const name = (this.name !== null ? builder.createString(this.name!) : 0);
  const iconId = (this.iconId !== null ? builder.createString(this.iconId!) : 0);

  return clz_Torappu_SandboxV2NodeTypeData.createclz_Torappu_SandboxV2NodeTypeData(builder,
    this.nodeType,
    name,
    iconId
  );
}
}
