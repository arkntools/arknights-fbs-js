// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_ClimbTowerLevelDropInfo, clz_Torappu_ClimbTowerLevelDropInfoT } from './clz-torappu-climb-tower-level-drop-info.js';
import { enum__Torappu_ClimbTowerLevelType } from './enum--torappu-climb-tower-level-type.js';


export class clz_Torappu_ClimbTowerSingleLevelData implements flatbuffers.IUnpackableObject<clz_Torappu_ClimbTowerSingleLevelDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ClimbTowerSingleLevelData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ClimbTowerSingleLevelData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ClimbTowerSingleLevelData):clz_Torappu_ClimbTowerSingleLevelData {
  return (obj || new clz_Torappu_ClimbTowerSingleLevelData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ClimbTowerSingleLevelData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ClimbTowerSingleLevelData):clz_Torappu_ClimbTowerSingleLevelData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ClimbTowerSingleLevelData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

levelId():string|null
levelId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
levelId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

towerId():string|null
towerId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
towerId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

layerNum():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

code():string|null
code(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
code(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

desc():string|null
desc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
desc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

levelType():enum__Torappu_ClimbTowerLevelType {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_ClimbTowerLevelType.NORMAL;
}

loadingPicId():string|null
loadingPicId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
loadingPicId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

dropInfo(obj?:clz_Torappu_ClimbTowerLevelDropInfo):clz_Torappu_ClimbTowerLevelDropInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? (obj || new clz_Torappu_ClimbTowerLevelDropInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startclz_Torappu_ClimbTowerSingleLevelData(builder:flatbuffers.Builder) {
  builder.startObject(10);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addLevelId(builder:flatbuffers.Builder, levelIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, levelIdOffset, 0);
}

static addTowerId(builder:flatbuffers.Builder, towerIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, towerIdOffset, 0);
}

static addLayerNum(builder:flatbuffers.Builder, layerNum:number) {
  builder.addFieldInt32(3, layerNum, 0);
}

static addCode(builder:flatbuffers.Builder, codeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, codeOffset, 0);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, nameOffset, 0);
}

static addDesc(builder:flatbuffers.Builder, descOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, descOffset, 0);
}

static addLevelType(builder:flatbuffers.Builder, levelType:enum__Torappu_ClimbTowerLevelType) {
  builder.addFieldInt32(7, levelType, enum__Torappu_ClimbTowerLevelType.NORMAL);
}

static addLoadingPicId(builder:flatbuffers.Builder, loadingPicIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, loadingPicIdOffset, 0);
}

static addDropInfo(builder:flatbuffers.Builder, dropInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, dropInfoOffset, 0);
}

static endclz_Torappu_ClimbTowerSingleLevelData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_ClimbTowerSingleLevelDataT {
  return new clz_Torappu_ClimbTowerSingleLevelDataT(
    this.id(),
    this.levelId(),
    this.towerId(),
    this.layerNum(),
    this.code(),
    this.name(),
    this.desc(),
    this.levelType(),
    this.loadingPicId(),
    (this.dropInfo() !== null ? this.dropInfo()!.unpack() : null)
  );
}


unpackTo(_o: clz_Torappu_ClimbTowerSingleLevelDataT): void {
  _o.id = this.id();
  _o.levelId = this.levelId();
  _o.towerId = this.towerId();
  _o.layerNum = this.layerNum();
  _o.code = this.code();
  _o.name = this.name();
  _o.desc = this.desc();
  _o.levelType = this.levelType();
  _o.loadingPicId = this.loadingPicId();
  _o.dropInfo = (this.dropInfo() !== null ? this.dropInfo()!.unpack() : null);
}
}

export class clz_Torappu_ClimbTowerSingleLevelDataT implements flatbuffers.IGeneratedObject {
constructor(
  public id: string|Uint8Array|null = null,
  public levelId: string|Uint8Array|null = null,
  public towerId: string|Uint8Array|null = null,
  public layerNum: number = 0,
  public code: string|Uint8Array|null = null,
  public name: string|Uint8Array|null = null,
  public desc: string|Uint8Array|null = null,
  public levelType: enum__Torappu_ClimbTowerLevelType = enum__Torappu_ClimbTowerLevelType.NORMAL,
  public loadingPicId: string|Uint8Array|null = null,
  public dropInfo: clz_Torappu_ClimbTowerLevelDropInfoT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const id = (this.id !== null ? builder.createString(this.id!) : 0);
  const levelId = (this.levelId !== null ? builder.createString(this.levelId!) : 0);
  const towerId = (this.towerId !== null ? builder.createString(this.towerId!) : 0);
  const code = (this.code !== null ? builder.createString(this.code!) : 0);
  const name = (this.name !== null ? builder.createString(this.name!) : 0);
  const desc = (this.desc !== null ? builder.createString(this.desc!) : 0);
  const loadingPicId = (this.loadingPicId !== null ? builder.createString(this.loadingPicId!) : 0);
  const dropInfo = (this.dropInfo !== null ? this.dropInfo!.pack(builder) : 0);

  clz_Torappu_ClimbTowerSingleLevelData.startclz_Torappu_ClimbTowerSingleLevelData(builder);
  clz_Torappu_ClimbTowerSingleLevelData.addId(builder, id);
  clz_Torappu_ClimbTowerSingleLevelData.addLevelId(builder, levelId);
  clz_Torappu_ClimbTowerSingleLevelData.addTowerId(builder, towerId);
  clz_Torappu_ClimbTowerSingleLevelData.addLayerNum(builder, this.layerNum);
  clz_Torappu_ClimbTowerSingleLevelData.addCode(builder, code);
  clz_Torappu_ClimbTowerSingleLevelData.addName(builder, name);
  clz_Torappu_ClimbTowerSingleLevelData.addDesc(builder, desc);
  clz_Torappu_ClimbTowerSingleLevelData.addLevelType(builder, this.levelType);
  clz_Torappu_ClimbTowerSingleLevelData.addLoadingPicId(builder, loadingPicId);
  clz_Torappu_ClimbTowerSingleLevelData.addDropInfo(builder, dropInfo);

  return clz_Torappu_ClimbTowerSingleLevelData.endclz_Torappu_ClimbTowerSingleLevelData(builder);
}
}
