// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData implements flatbuffers.IUnpackableObject<clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData):clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData {
  return (obj || new clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData):clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

shopLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

levelTagBgColor():string|null
levelTagBgColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
levelTagBgColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

isLevelCharChessEmpty():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

isLevelTrapChessEmpty():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

charChessDiySlotIdList(index: number):string
charChessDiySlotIdList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
charChessDiySlotIdList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

charChessDiySlotIdListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addShopLevel(builder:flatbuffers.Builder, shopLevel:number) {
  builder.addFieldInt32(0, shopLevel, 0);
}

static addLevelTagBgColor(builder:flatbuffers.Builder, levelTagBgColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, levelTagBgColorOffset, 0);
}

static addIsLevelCharChessEmpty(builder:flatbuffers.Builder, isLevelCharChessEmpty:boolean) {
  builder.addFieldInt8(2, +isLevelCharChessEmpty, +false);
}

static addIsLevelTrapChessEmpty(builder:flatbuffers.Builder, isLevelTrapChessEmpty:boolean) {
  builder.addFieldInt8(3, +isLevelTrapChessEmpty, +false);
}

static addCharChessDiySlotIdList(builder:flatbuffers.Builder, charChessDiySlotIdListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, charChessDiySlotIdListOffset, 0);
}

static createCharChessDiySlotIdListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCharChessDiySlotIdListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData(builder:flatbuffers.Builder, shopLevel:number, levelTagBgColorOffset:flatbuffers.Offset, isLevelCharChessEmpty:boolean, isLevelTrapChessEmpty:boolean, charChessDiySlotIdListOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData.startclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData(builder);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData.addShopLevel(builder, shopLevel);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData.addLevelTagBgColor(builder, levelTagBgColorOffset);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData.addIsLevelCharChessEmpty(builder, isLevelCharChessEmpty);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData.addIsLevelTrapChessEmpty(builder, isLevelTrapChessEmpty);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData.addCharChessDiySlotIdList(builder, charChessDiySlotIdListOffset);
  return clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData.endclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData(builder);
}

unpack(): clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayDataT {
  return new clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayDataT(
    this.shopLevel(),
    this.levelTagBgColor(),
    this.isLevelCharChessEmpty(),
    this.isLevelTrapChessEmpty(),
    this.bb!.createScalarList<string>(this.charChessDiySlotIdList.bind(this), this.charChessDiySlotIdListLength())
  );
}


unpackTo(_o: clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayDataT): void {
  _o.shopLevel = this.shopLevel();
  _o.levelTagBgColor = this.levelTagBgColor();
  _o.isLevelCharChessEmpty = this.isLevelCharChessEmpty();
  _o.isLevelTrapChessEmpty = this.isLevelTrapChessEmpty();
  _o.charChessDiySlotIdList = this.bb!.createScalarList<string>(this.charChessDiySlotIdList.bind(this), this.charChessDiySlotIdListLength());
}
}

export class clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayDataT implements flatbuffers.IGeneratedObject {
constructor(
  public shopLevel: number = 0,
  public levelTagBgColor: string|Uint8Array|null = null,
  public isLevelCharChessEmpty: boolean = false,
  public isLevelTrapChessEmpty: boolean = false,
  public charChessDiySlotIdList: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const levelTagBgColor = (this.levelTagBgColor !== null ? builder.createString(this.levelTagBgColor!) : 0);
  const charChessDiySlotIdList = clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData.createCharChessDiySlotIdListVector(builder, builder.createObjectOffsetList(this.charChessDiySlotIdList));

  return clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData.createclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessShopLevelDisplayData(builder,
    this.shopLevel,
    levelTagBgColor,
    this.isLevelCharChessEmpty,
    this.isLevelTrapChessEmpty,
    charChessDiySlotIdList
  );
}
}
