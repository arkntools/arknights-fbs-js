// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { dict__string__int, dict__string__intT } from './dict--string--int.js';
import { enum__Torappu_SandboxV2CraftItemType } from './enum--torappu-sandbox-v2-craft-item-type.js';


export class clz_Torappu_SandboxV2CraftItemData implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxV2CraftItemDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxV2CraftItemData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxV2CraftItemData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2CraftItemData):clz_Torappu_SandboxV2CraftItemData {
  return (obj || new clz_Torappu_SandboxV2CraftItemData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxV2CraftItemData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxV2CraftItemData):clz_Torappu_SandboxV2CraftItemData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxV2CraftItemData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

itemId():string|null
itemId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
itemId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

type():enum__Torappu_SandboxV2CraftItemType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_SandboxV2CraftItemType.BASE_BUILDING;
}

buildingUnlockDesc():string|null
buildingUnlockDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
buildingUnlockDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

materialItems(index: number, obj?:dict__string__int):dict__string__int|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new dict__string__int()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

materialItemsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

upgradeItems(index: number, obj?:dict__string__int):dict__string__int|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new dict__string__int()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

upgradeItemsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

outputRatio():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

withdrawRatio():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

repairCost():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

isHidden():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

craftGroupId():string|null
craftGroupId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
craftGroupId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

recipeLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SandboxV2CraftItemData(builder:flatbuffers.Builder) {
  builder.startObject(11);
}

static addItemId(builder:flatbuffers.Builder, itemIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, itemIdOffset, 0);
}

static addType(builder:flatbuffers.Builder, type:enum__Torappu_SandboxV2CraftItemType) {
  builder.addFieldInt32(1, type, enum__Torappu_SandboxV2CraftItemType.BASE_BUILDING);
}

static addBuildingUnlockDesc(builder:flatbuffers.Builder, buildingUnlockDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, buildingUnlockDescOffset, 0);
}

static addMaterialItems(builder:flatbuffers.Builder, materialItemsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, materialItemsOffset, 0);
}

static createMaterialItemsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startMaterialItemsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addUpgradeItems(builder:flatbuffers.Builder, upgradeItemsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, upgradeItemsOffset, 0);
}

static createUpgradeItemsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startUpgradeItemsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addOutputRatio(builder:flatbuffers.Builder, outputRatio:number) {
  builder.addFieldInt32(5, outputRatio, 0);
}

static addWithdrawRatio(builder:flatbuffers.Builder, withdrawRatio:number) {
  builder.addFieldInt32(6, withdrawRatio, 0);
}

static addRepairCost(builder:flatbuffers.Builder, repairCost:number) {
  builder.addFieldInt32(7, repairCost, 0);
}

static addIsHidden(builder:flatbuffers.Builder, isHidden:boolean) {
  builder.addFieldInt8(8, +isHidden, +false);
}

static addCraftGroupId(builder:flatbuffers.Builder, craftGroupIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, craftGroupIdOffset, 0);
}

static addRecipeLevel(builder:flatbuffers.Builder, recipeLevel:number) {
  builder.addFieldInt32(10, recipeLevel, 0);
}

static endclz_Torappu_SandboxV2CraftItemData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SandboxV2CraftItemData(builder:flatbuffers.Builder, itemIdOffset:flatbuffers.Offset, type:enum__Torappu_SandboxV2CraftItemType, buildingUnlockDescOffset:flatbuffers.Offset, materialItemsOffset:flatbuffers.Offset, upgradeItemsOffset:flatbuffers.Offset, outputRatio:number, withdrawRatio:number, repairCost:number, isHidden:boolean, craftGroupIdOffset:flatbuffers.Offset, recipeLevel:number):flatbuffers.Offset {
  clz_Torappu_SandboxV2CraftItemData.startclz_Torappu_SandboxV2CraftItemData(builder);
  clz_Torappu_SandboxV2CraftItemData.addItemId(builder, itemIdOffset);
  clz_Torappu_SandboxV2CraftItemData.addType(builder, type);
  clz_Torappu_SandboxV2CraftItemData.addBuildingUnlockDesc(builder, buildingUnlockDescOffset);
  clz_Torappu_SandboxV2CraftItemData.addMaterialItems(builder, materialItemsOffset);
  clz_Torappu_SandboxV2CraftItemData.addUpgradeItems(builder, upgradeItemsOffset);
  clz_Torappu_SandboxV2CraftItemData.addOutputRatio(builder, outputRatio);
  clz_Torappu_SandboxV2CraftItemData.addWithdrawRatio(builder, withdrawRatio);
  clz_Torappu_SandboxV2CraftItemData.addRepairCost(builder, repairCost);
  clz_Torappu_SandboxV2CraftItemData.addIsHidden(builder, isHidden);
  clz_Torappu_SandboxV2CraftItemData.addCraftGroupId(builder, craftGroupIdOffset);
  clz_Torappu_SandboxV2CraftItemData.addRecipeLevel(builder, recipeLevel);
  return clz_Torappu_SandboxV2CraftItemData.endclz_Torappu_SandboxV2CraftItemData(builder);
}

unpack(): clz_Torappu_SandboxV2CraftItemDataT {
  return new clz_Torappu_SandboxV2CraftItemDataT(
    this.itemId(),
    this.type(),
    this.buildingUnlockDesc(),
    this.bb!.createObjList<dict__string__int, dict__string__intT>(this.materialItems.bind(this), this.materialItemsLength()),
    this.bb!.createObjList<dict__string__int, dict__string__intT>(this.upgradeItems.bind(this), this.upgradeItemsLength()),
    this.outputRatio(),
    this.withdrawRatio(),
    this.repairCost(),
    this.isHidden(),
    this.craftGroupId(),
    this.recipeLevel()
  );
}


unpackTo(_o: clz_Torappu_SandboxV2CraftItemDataT): void {
  _o.itemId = this.itemId();
  _o.type = this.type();
  _o.buildingUnlockDesc = this.buildingUnlockDesc();
  _o.materialItems = this.bb!.createObjList<dict__string__int, dict__string__intT>(this.materialItems.bind(this), this.materialItemsLength());
  _o.upgradeItems = this.bb!.createObjList<dict__string__int, dict__string__intT>(this.upgradeItems.bind(this), this.upgradeItemsLength());
  _o.outputRatio = this.outputRatio();
  _o.withdrawRatio = this.withdrawRatio();
  _o.repairCost = this.repairCost();
  _o.isHidden = this.isHidden();
  _o.craftGroupId = this.craftGroupId();
  _o.recipeLevel = this.recipeLevel();
}
}

export class clz_Torappu_SandboxV2CraftItemDataT implements flatbuffers.IGeneratedObject {
constructor(
  public itemId: string|Uint8Array|null = null,
  public type: enum__Torappu_SandboxV2CraftItemType = enum__Torappu_SandboxV2CraftItemType.BASE_BUILDING,
  public buildingUnlockDesc: string|Uint8Array|null = null,
  public materialItems: (dict__string__intT)[] = [],
  public upgradeItems: (dict__string__intT)[] = [],
  public outputRatio: number = 0,
  public withdrawRatio: number = 0,
  public repairCost: number = 0,
  public isHidden: boolean = false,
  public craftGroupId: string|Uint8Array|null = null,
  public recipeLevel: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const itemId = (this.itemId !== null ? builder.createString(this.itemId!) : 0);
  const buildingUnlockDesc = (this.buildingUnlockDesc !== null ? builder.createString(this.buildingUnlockDesc!) : 0);
  const materialItems = clz_Torappu_SandboxV2CraftItemData.createMaterialItemsVector(builder, builder.createObjectOffsetList(this.materialItems));
  const upgradeItems = clz_Torappu_SandboxV2CraftItemData.createUpgradeItemsVector(builder, builder.createObjectOffsetList(this.upgradeItems));
  const craftGroupId = (this.craftGroupId !== null ? builder.createString(this.craftGroupId!) : 0);

  return clz_Torappu_SandboxV2CraftItemData.createclz_Torappu_SandboxV2CraftItemData(builder,
    itemId,
    this.type,
    buildingUnlockDesc,
    materialItems,
    upgradeItems,
    this.outputRatio,
    this.withdrawRatio,
    this.repairCost,
    this.isHidden,
    craftGroupId,
    this.recipeLevel
  );
}
}
