// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT } from './clz-torappu-item-bundle.js';
import { enum__Torappu_MailArchiveItemType } from './enum--torappu-mail-archive-item-type.js';


export class clz_Torappu_MailArchiveItemData implements flatbuffers.IUnpackableObject<clz_Torappu_MailArchiveItemDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_MailArchiveItemData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_MailArchiveItemData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_MailArchiveItemData):clz_Torappu_MailArchiveItemData {
  return (obj || new clz_Torappu_MailArchiveItemData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_MailArchiveItemData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_MailArchiveItemData):clz_Torappu_MailArchiveItemData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_MailArchiveItemData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

type():enum__Torappu_MailArchiveItemType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_MailArchiveItemType.NORMAL;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

displayReceiveTs():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

year():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

dateDelta():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

senderId():string|null
senderId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
senderId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

title():string|null
title(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
title(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

content():string|null
content(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
content(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

rewardList(index: number, obj?:clz_Torappu_ItemBundle):clz_Torappu_ItemBundle|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? (obj || new clz_Torappu_ItemBundle()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

rewardListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_MailArchiveItemData(builder:flatbuffers.Builder) {
  builder.startObject(10);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addType(builder:flatbuffers.Builder, type:enum__Torappu_MailArchiveItemType) {
  builder.addFieldInt32(1, type, enum__Torappu_MailArchiveItemType.NORMAL);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(2, sortId, 0);
}

static addDisplayReceiveTs(builder:flatbuffers.Builder, displayReceiveTs:bigint) {
  builder.addFieldInt64(3, displayReceiveTs, BigInt('0'));
}

static addYear(builder:flatbuffers.Builder, year:number) {
  builder.addFieldInt32(4, year, 0);
}

static addDateDelta(builder:flatbuffers.Builder, dateDelta:number) {
  builder.addFieldInt32(5, dateDelta, 0);
}

static addSenderId(builder:flatbuffers.Builder, senderIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, senderIdOffset, 0);
}

static addTitle(builder:flatbuffers.Builder, titleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, titleOffset, 0);
}

static addContent(builder:flatbuffers.Builder, contentOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, contentOffset, 0);
}

static addRewardList(builder:flatbuffers.Builder, rewardListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, rewardListOffset, 0);
}

static createRewardListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRewardListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_MailArchiveItemData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_MailArchiveItemData(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset, type:enum__Torappu_MailArchiveItemType, sortId:number, displayReceiveTs:bigint, year:number, dateDelta:number, senderIdOffset:flatbuffers.Offset, titleOffset:flatbuffers.Offset, contentOffset:flatbuffers.Offset, rewardListOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_MailArchiveItemData.startclz_Torappu_MailArchiveItemData(builder);
  clz_Torappu_MailArchiveItemData.addId(builder, idOffset);
  clz_Torappu_MailArchiveItemData.addType(builder, type);
  clz_Torappu_MailArchiveItemData.addSortId(builder, sortId);
  clz_Torappu_MailArchiveItemData.addDisplayReceiveTs(builder, displayReceiveTs);
  clz_Torappu_MailArchiveItemData.addYear(builder, year);
  clz_Torappu_MailArchiveItemData.addDateDelta(builder, dateDelta);
  clz_Torappu_MailArchiveItemData.addSenderId(builder, senderIdOffset);
  clz_Torappu_MailArchiveItemData.addTitle(builder, titleOffset);
  clz_Torappu_MailArchiveItemData.addContent(builder, contentOffset);
  clz_Torappu_MailArchiveItemData.addRewardList(builder, rewardListOffset);
  return clz_Torappu_MailArchiveItemData.endclz_Torappu_MailArchiveItemData(builder);
}

unpack(): clz_Torappu_MailArchiveItemDataT {
  return new clz_Torappu_MailArchiveItemDataT(
    this.id(),
    this.type(),
    this.sortId(),
    this.displayReceiveTs(),
    this.year(),
    this.dateDelta(),
    this.senderId(),
    this.title(),
    this.content(),
    this.bb!.createObjList<clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT>(this.rewardList.bind(this), this.rewardListLength())
  );
}


unpackTo(_o: clz_Torappu_MailArchiveItemDataT): void {
  _o.id = this.id();
  _o.type = this.type();
  _o.sortId = this.sortId();
  _o.displayReceiveTs = this.displayReceiveTs();
  _o.year = this.year();
  _o.dateDelta = this.dateDelta();
  _o.senderId = this.senderId();
  _o.title = this.title();
  _o.content = this.content();
  _o.rewardList = this.bb!.createObjList<clz_Torappu_ItemBundle, clz_Torappu_ItemBundleT>(this.rewardList.bind(this), this.rewardListLength());
}
}

export class clz_Torappu_MailArchiveItemDataT implements flatbuffers.IGeneratedObject {
constructor(
  public id: string|Uint8Array|null = null,
  public type: enum__Torappu_MailArchiveItemType = enum__Torappu_MailArchiveItemType.NORMAL,
  public sortId: number = 0,
  public displayReceiveTs: bigint = BigInt('0'),
  public year: number = 0,
  public dateDelta: number = 0,
  public senderId: string|Uint8Array|null = null,
  public title: string|Uint8Array|null = null,
  public content: string|Uint8Array|null = null,
  public rewardList: (clz_Torappu_ItemBundleT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const id = (this.id !== null ? builder.createString(this.id!) : 0);
  const senderId = (this.senderId !== null ? builder.createString(this.senderId!) : 0);
  const title = (this.title !== null ? builder.createString(this.title!) : 0);
  const content = (this.content !== null ? builder.createString(this.content!) : 0);
  const rewardList = clz_Torappu_MailArchiveItemData.createRewardListVector(builder, builder.createObjectOffsetList(this.rewardList));

  return clz_Torappu_MailArchiveItemData.createclz_Torappu_MailArchiveItemData(builder,
    id,
    this.type,
    this.sortId,
    this.displayReceiveTs,
    this.year,
    this.dateDelta,
    senderId,
    title,
    content,
    rewardList
  );
}
}
