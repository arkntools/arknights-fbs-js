// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_RoguelikeTopicChallengeTask implements flatbuffers.IUnpackableObject<clz_Torappu_RoguelikeTopicChallengeTaskT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RoguelikeTopicChallengeTask {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RoguelikeTopicChallengeTask(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeTopicChallengeTask):clz_Torappu_RoguelikeTopicChallengeTask {
  return (obj || new clz_Torappu_RoguelikeTopicChallengeTask()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RoguelikeTopicChallengeTask(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeTopicChallengeTask):clz_Torappu_RoguelikeTopicChallengeTask {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RoguelikeTopicChallengeTask()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

taskId():string|null
taskId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
taskId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

taskDes():string|null
taskDes(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
taskDes(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

completionClass():string|null
completionClass(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
completionClass(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

completionParams(index: number):string
completionParams(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
completionParams(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

completionParamsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_RoguelikeTopicChallengeTask(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addTaskId(builder:flatbuffers.Builder, taskIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, taskIdOffset, 0);
}

static addTaskDes(builder:flatbuffers.Builder, taskDesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, taskDesOffset, 0);
}

static addCompletionClass(builder:flatbuffers.Builder, completionClassOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, completionClassOffset, 0);
}

static addCompletionParams(builder:flatbuffers.Builder, completionParamsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, completionParamsOffset, 0);
}

static createCompletionParamsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCompletionParamsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_RoguelikeTopicChallengeTask(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_RoguelikeTopicChallengeTask(builder:flatbuffers.Builder, taskIdOffset:flatbuffers.Offset, taskDesOffset:flatbuffers.Offset, completionClassOffset:flatbuffers.Offset, completionParamsOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_RoguelikeTopicChallengeTask.startclz_Torappu_RoguelikeTopicChallengeTask(builder);
  clz_Torappu_RoguelikeTopicChallengeTask.addTaskId(builder, taskIdOffset);
  clz_Torappu_RoguelikeTopicChallengeTask.addTaskDes(builder, taskDesOffset);
  clz_Torappu_RoguelikeTopicChallengeTask.addCompletionClass(builder, completionClassOffset);
  clz_Torappu_RoguelikeTopicChallengeTask.addCompletionParams(builder, completionParamsOffset);
  return clz_Torappu_RoguelikeTopicChallengeTask.endclz_Torappu_RoguelikeTopicChallengeTask(builder);
}

unpack(): clz_Torappu_RoguelikeTopicChallengeTaskT {
  return new clz_Torappu_RoguelikeTopicChallengeTaskT(
    this.taskId(),
    this.taskDes(),
    this.completionClass(),
    this.bb!.createScalarList<string>(this.completionParams.bind(this), this.completionParamsLength())
  );
}


unpackTo(_o: clz_Torappu_RoguelikeTopicChallengeTaskT): void {
  _o.taskId = this.taskId();
  _o.taskDes = this.taskDes();
  _o.completionClass = this.completionClass();
  _o.completionParams = this.bb!.createScalarList<string>(this.completionParams.bind(this), this.completionParamsLength());
}
}

export class clz_Torappu_RoguelikeTopicChallengeTaskT implements flatbuffers.IGeneratedObject {
constructor(
  public taskId: string|Uint8Array|null = null,
  public taskDes: string|Uint8Array|null = null,
  public completionClass: string|Uint8Array|null = null,
  public completionParams: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const taskId = (this.taskId !== null ? builder.createString(this.taskId!) : 0);
  const taskDes = (this.taskDes !== null ? builder.createString(this.taskDes!) : 0);
  const completionClass = (this.completionClass !== null ? builder.createString(this.completionClass!) : 0);
  const completionParams = clz_Torappu_RoguelikeTopicChallengeTask.createCompletionParamsVector(builder, builder.createObjectOffsetList(this.completionParams));

  return clz_Torappu_RoguelikeTopicChallengeTask.createclz_Torappu_RoguelikeTopicChallengeTask(builder,
    taskId,
    taskDes,
    completionClass,
    completionParams
  );
}
}
