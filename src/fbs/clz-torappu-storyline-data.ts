// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { dict__string__clz_Torappu_StorylineLocationData, dict__string__clz_Torappu_StorylineLocationDataT } from './dict--string--clz-torappu-storyline-location-data.js';
import { enum__Torappu_StorylineType } from './enum--torappu-storyline-type.js';


export class clz_Torappu_StorylineData implements flatbuffers.IUnpackableObject<clz_Torappu_StorylineDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_StorylineData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_StorylineData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_StorylineData):clz_Torappu_StorylineData {
  return (obj || new clz_Torappu_StorylineData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_StorylineData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_StorylineData):clz_Torappu_StorylineData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_StorylineData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

storylineId():string|null
storylineId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
storylineId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

storylineType():enum__Torappu_StorylineType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_StorylineType.CONTINUE;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

storylineName():string|null
storylineName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
storylineName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

storylineIconId():string|null
storylineIconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
storylineIconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

storylineLogoId():string|null
storylineLogoId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
storylineLogoId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

backgroundId():string|null
backgroundId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
backgroundId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

hasVideoToPlay():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

startTs():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

locations(index: number, obj?:dict__string__clz_Torappu_StorylineLocationData):dict__string__clz_Torappu_StorylineLocationData|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? (obj || new dict__string__clz_Torappu_StorylineLocationData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

locationsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_StorylineData(builder:flatbuffers.Builder) {
  builder.startObject(10);
}

static addStorylineId(builder:flatbuffers.Builder, storylineIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, storylineIdOffset, 0);
}

static addStorylineType(builder:flatbuffers.Builder, storylineType:enum__Torappu_StorylineType) {
  builder.addFieldInt32(1, storylineType, enum__Torappu_StorylineType.CONTINUE);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(2, sortId, 0);
}

static addStorylineName(builder:flatbuffers.Builder, storylineNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, storylineNameOffset, 0);
}

static addStorylineIconId(builder:flatbuffers.Builder, storylineIconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, storylineIconIdOffset, 0);
}

static addStorylineLogoId(builder:flatbuffers.Builder, storylineLogoIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, storylineLogoIdOffset, 0);
}

static addBackgroundId(builder:flatbuffers.Builder, backgroundIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, backgroundIdOffset, 0);
}

static addHasVideoToPlay(builder:flatbuffers.Builder, hasVideoToPlay:boolean) {
  builder.addFieldInt8(7, +hasVideoToPlay, +false);
}

static addStartTs(builder:flatbuffers.Builder, startTs:bigint) {
  builder.addFieldInt64(8, startTs, BigInt('0'));
}

static addLocations(builder:flatbuffers.Builder, locationsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, locationsOffset, 0);
}

static createLocationsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startLocationsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_StorylineData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_StorylineData(builder:flatbuffers.Builder, storylineIdOffset:flatbuffers.Offset, storylineType:enum__Torappu_StorylineType, sortId:number, storylineNameOffset:flatbuffers.Offset, storylineIconIdOffset:flatbuffers.Offset, storylineLogoIdOffset:flatbuffers.Offset, backgroundIdOffset:flatbuffers.Offset, hasVideoToPlay:boolean, startTs:bigint, locationsOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_StorylineData.startclz_Torappu_StorylineData(builder);
  clz_Torappu_StorylineData.addStorylineId(builder, storylineIdOffset);
  clz_Torappu_StorylineData.addStorylineType(builder, storylineType);
  clz_Torappu_StorylineData.addSortId(builder, sortId);
  clz_Torappu_StorylineData.addStorylineName(builder, storylineNameOffset);
  clz_Torappu_StorylineData.addStorylineIconId(builder, storylineIconIdOffset);
  clz_Torappu_StorylineData.addStorylineLogoId(builder, storylineLogoIdOffset);
  clz_Torappu_StorylineData.addBackgroundId(builder, backgroundIdOffset);
  clz_Torappu_StorylineData.addHasVideoToPlay(builder, hasVideoToPlay);
  clz_Torappu_StorylineData.addStartTs(builder, startTs);
  clz_Torappu_StorylineData.addLocations(builder, locationsOffset);
  return clz_Torappu_StorylineData.endclz_Torappu_StorylineData(builder);
}

unpack(): clz_Torappu_StorylineDataT {
  return new clz_Torappu_StorylineDataT(
    this.storylineId(),
    this.storylineType(),
    this.sortId(),
    this.storylineName(),
    this.storylineIconId(),
    this.storylineLogoId(),
    this.backgroundId(),
    this.hasVideoToPlay(),
    this.startTs(),
    this.bb!.createObjList<dict__string__clz_Torappu_StorylineLocationData, dict__string__clz_Torappu_StorylineLocationDataT>(this.locations.bind(this), this.locationsLength())
  );
}


unpackTo(_o: clz_Torappu_StorylineDataT): void {
  _o.storylineId = this.storylineId();
  _o.storylineType = this.storylineType();
  _o.sortId = this.sortId();
  _o.storylineName = this.storylineName();
  _o.storylineIconId = this.storylineIconId();
  _o.storylineLogoId = this.storylineLogoId();
  _o.backgroundId = this.backgroundId();
  _o.hasVideoToPlay = this.hasVideoToPlay();
  _o.startTs = this.startTs();
  _o.locations = this.bb!.createObjList<dict__string__clz_Torappu_StorylineLocationData, dict__string__clz_Torappu_StorylineLocationDataT>(this.locations.bind(this), this.locationsLength());
}
}

export class clz_Torappu_StorylineDataT implements flatbuffers.IGeneratedObject {
constructor(
  public storylineId: string|Uint8Array|null = null,
  public storylineType: enum__Torappu_StorylineType = enum__Torappu_StorylineType.CONTINUE,
  public sortId: number = 0,
  public storylineName: string|Uint8Array|null = null,
  public storylineIconId: string|Uint8Array|null = null,
  public storylineLogoId: string|Uint8Array|null = null,
  public backgroundId: string|Uint8Array|null = null,
  public hasVideoToPlay: boolean = false,
  public startTs: bigint = BigInt('0'),
  public locations: (dict__string__clz_Torappu_StorylineLocationDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const storylineId = (this.storylineId !== null ? builder.createString(this.storylineId!) : 0);
  const storylineName = (this.storylineName !== null ? builder.createString(this.storylineName!) : 0);
  const storylineIconId = (this.storylineIconId !== null ? builder.createString(this.storylineIconId!) : 0);
  const storylineLogoId = (this.storylineLogoId !== null ? builder.createString(this.storylineLogoId!) : 0);
  const backgroundId = (this.backgroundId !== null ? builder.createString(this.backgroundId!) : 0);
  const locations = clz_Torappu_StorylineData.createLocationsVector(builder, builder.createObjectOffsetList(this.locations));

  return clz_Torappu_StorylineData.createclz_Torappu_StorylineData(builder,
    storylineId,
    this.storylineType,
    this.sortId,
    storylineName,
    storylineIconId,
    storylineLogoId,
    backgroundId,
    this.hasVideoToPlay,
    this.startTs,
    locations
  );
}
}
