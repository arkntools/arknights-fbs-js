// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT } from './clz-torappu-blackboard-data-pair.js';
import { clz_Torappu_CharacterData_UnlockCondition, clz_Torappu_CharacterData_UnlockConditionT } from './clz-torappu-character-data-unlock-condition.js';


export class clz_Torappu_EquipTalentData implements flatbuffers.IUnpackableObject<clz_Torappu_EquipTalentDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_EquipTalentData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_EquipTalentData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_EquipTalentData):clz_Torappu_EquipTalentData {
  return (obj || new clz_Torappu_EquipTalentData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_EquipTalentData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_EquipTalentData):clz_Torappu_EquipTalentData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_EquipTalentData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

displayRangeId():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

upgradeDescription():string|null
upgradeDescription(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
upgradeDescription(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

talentIndex():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

unlockCondition(obj?:clz_Torappu_CharacterData_UnlockCondition):clz_Torappu_CharacterData_UnlockCondition|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new clz_Torappu_CharacterData_UnlockCondition()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

requiredPotentialRank():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

prefabKey():string|null
prefabKey(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
prefabKey(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

description():string|null
description(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
description(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

rangeId():string|null
rangeId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
rangeId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

blackboard(index: number, obj?:clz_Torappu_Blackboard_DataPair):clz_Torappu_Blackboard_DataPair|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? (obj || new clz_Torappu_Blackboard_DataPair()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

blackboardLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

tokenKey():string|null
tokenKey(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
tokenKey(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

isHideTalent():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startclz_Torappu_EquipTalentData(builder:flatbuffers.Builder) {
  builder.startObject(12);
}

static addDisplayRangeId(builder:flatbuffers.Builder, displayRangeId:boolean) {
  builder.addFieldInt8(0, +displayRangeId, +false);
}

static addUpgradeDescription(builder:flatbuffers.Builder, upgradeDescriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, upgradeDescriptionOffset, 0);
}

static addTalentIndex(builder:flatbuffers.Builder, talentIndex:number) {
  builder.addFieldInt32(2, talentIndex, 0);
}

static addUnlockCondition(builder:flatbuffers.Builder, unlockConditionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, unlockConditionOffset, 0);
}

static addRequiredPotentialRank(builder:flatbuffers.Builder, requiredPotentialRank:number) {
  builder.addFieldInt32(4, requiredPotentialRank, 0);
}

static addPrefabKey(builder:flatbuffers.Builder, prefabKeyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, prefabKeyOffset, 0);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, nameOffset, 0);
}

static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, descriptionOffset, 0);
}

static addRangeId(builder:flatbuffers.Builder, rangeIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, rangeIdOffset, 0);
}

static addBlackboard(builder:flatbuffers.Builder, blackboardOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, blackboardOffset, 0);
}

static createBlackboardVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBlackboardVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTokenKey(builder:flatbuffers.Builder, tokenKeyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, tokenKeyOffset, 0);
}

static addIsHideTalent(builder:flatbuffers.Builder, isHideTalent:boolean) {
  builder.addFieldInt8(11, +isHideTalent, +false);
}

static endclz_Torappu_EquipTalentData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_EquipTalentDataT {
  return new clz_Torappu_EquipTalentDataT(
    this.displayRangeId(),
    this.upgradeDescription(),
    this.talentIndex(),
    (this.unlockCondition() !== null ? this.unlockCondition()!.unpack() : null),
    this.requiredPotentialRank(),
    this.prefabKey(),
    this.name(),
    this.description(),
    this.rangeId(),
    this.bb!.createObjList<clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT>(this.blackboard.bind(this), this.blackboardLength()),
    this.tokenKey(),
    this.isHideTalent()
  );
}


unpackTo(_o: clz_Torappu_EquipTalentDataT): void {
  _o.displayRangeId = this.displayRangeId();
  _o.upgradeDescription = this.upgradeDescription();
  _o.talentIndex = this.talentIndex();
  _o.unlockCondition = (this.unlockCondition() !== null ? this.unlockCondition()!.unpack() : null);
  _o.requiredPotentialRank = this.requiredPotentialRank();
  _o.prefabKey = this.prefabKey();
  _o.name = this.name();
  _o.description = this.description();
  _o.rangeId = this.rangeId();
  _o.blackboard = this.bb!.createObjList<clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT>(this.blackboard.bind(this), this.blackboardLength());
  _o.tokenKey = this.tokenKey();
  _o.isHideTalent = this.isHideTalent();
}
}

export class clz_Torappu_EquipTalentDataT implements flatbuffers.IGeneratedObject {
constructor(
  public displayRangeId: boolean = false,
  public upgradeDescription: string|Uint8Array|null = null,
  public talentIndex: number = 0,
  public unlockCondition: clz_Torappu_CharacterData_UnlockConditionT|null = null,
  public requiredPotentialRank: number = 0,
  public prefabKey: string|Uint8Array|null = null,
  public name: string|Uint8Array|null = null,
  public description: string|Uint8Array|null = null,
  public rangeId: string|Uint8Array|null = null,
  public blackboard: (clz_Torappu_Blackboard_DataPairT)[] = [],
  public tokenKey: string|Uint8Array|null = null,
  public isHideTalent: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const upgradeDescription = (this.upgradeDescription !== null ? builder.createString(this.upgradeDescription!) : 0);
  const unlockCondition = (this.unlockCondition !== null ? this.unlockCondition!.pack(builder) : 0);
  const prefabKey = (this.prefabKey !== null ? builder.createString(this.prefabKey!) : 0);
  const name = (this.name !== null ? builder.createString(this.name!) : 0);
  const description = (this.description !== null ? builder.createString(this.description!) : 0);
  const rangeId = (this.rangeId !== null ? builder.createString(this.rangeId!) : 0);
  const blackboard = clz_Torappu_EquipTalentData.createBlackboardVector(builder, builder.createObjectOffsetList(this.blackboard));
  const tokenKey = (this.tokenKey !== null ? builder.createString(this.tokenKey!) : 0);

  clz_Torappu_EquipTalentData.startclz_Torappu_EquipTalentData(builder);
  clz_Torappu_EquipTalentData.addDisplayRangeId(builder, this.displayRangeId);
  clz_Torappu_EquipTalentData.addUpgradeDescription(builder, upgradeDescription);
  clz_Torappu_EquipTalentData.addTalentIndex(builder, this.talentIndex);
  clz_Torappu_EquipTalentData.addUnlockCondition(builder, unlockCondition);
  clz_Torappu_EquipTalentData.addRequiredPotentialRank(builder, this.requiredPotentialRank);
  clz_Torappu_EquipTalentData.addPrefabKey(builder, prefabKey);
  clz_Torappu_EquipTalentData.addName(builder, name);
  clz_Torappu_EquipTalentData.addDescription(builder, description);
  clz_Torappu_EquipTalentData.addRangeId(builder, rangeId);
  clz_Torappu_EquipTalentData.addBlackboard(builder, blackboard);
  clz_Torappu_EquipTalentData.addTokenKey(builder, tokenKey);
  clz_Torappu_EquipTalentData.addIsHideTalent(builder, this.isHideTalent);

  return clz_Torappu_EquipTalentData.endclz_Torappu_EquipTalentData(builder);
}
}
