// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_Act38SideData_ConstData implements flatbuffers.IUnpackableObject<clz_Torappu_Act38SideData_ConstDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Act38SideData_ConstData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Act38SideData_ConstData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act38SideData_ConstData):clz_Torappu_Act38SideData_ConstData {
  return (obj || new clz_Torappu_Act38SideData_ConstData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Act38SideData_ConstData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act38SideData_ConstData):clz_Torappu_Act38SideData_ConstData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Act38SideData_ConstData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

npcIdleSpineName():string|null
npcIdleSpineName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
npcIdleSpineName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

puzzleMapAnimGroupId():string|null
puzzleMapAnimGroupId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
puzzleMapAnimGroupId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

puzzleCrossDayTrackId():string|null
puzzleCrossDayTrackId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
puzzleCrossDayTrackId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

puzzleListText():string|null
puzzleListText(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
puzzleListText(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

puzzleRewardNum():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_Act38SideData_ConstData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addNpcIdleSpineName(builder:flatbuffers.Builder, npcIdleSpineNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, npcIdleSpineNameOffset, 0);
}

static addPuzzleMapAnimGroupId(builder:flatbuffers.Builder, puzzleMapAnimGroupIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, puzzleMapAnimGroupIdOffset, 0);
}

static addPuzzleCrossDayTrackId(builder:flatbuffers.Builder, puzzleCrossDayTrackIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, puzzleCrossDayTrackIdOffset, 0);
}

static addPuzzleListText(builder:flatbuffers.Builder, puzzleListTextOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, puzzleListTextOffset, 0);
}

static addPuzzleRewardNum(builder:flatbuffers.Builder, puzzleRewardNum:number) {
  builder.addFieldInt32(4, puzzleRewardNum, 0);
}

static endclz_Torappu_Act38SideData_ConstData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Act38SideData_ConstData(builder:flatbuffers.Builder, npcIdleSpineNameOffset:flatbuffers.Offset, puzzleMapAnimGroupIdOffset:flatbuffers.Offset, puzzleCrossDayTrackIdOffset:flatbuffers.Offset, puzzleListTextOffset:flatbuffers.Offset, puzzleRewardNum:number):flatbuffers.Offset {
  clz_Torappu_Act38SideData_ConstData.startclz_Torappu_Act38SideData_ConstData(builder);
  clz_Torappu_Act38SideData_ConstData.addNpcIdleSpineName(builder, npcIdleSpineNameOffset);
  clz_Torappu_Act38SideData_ConstData.addPuzzleMapAnimGroupId(builder, puzzleMapAnimGroupIdOffset);
  clz_Torappu_Act38SideData_ConstData.addPuzzleCrossDayTrackId(builder, puzzleCrossDayTrackIdOffset);
  clz_Torappu_Act38SideData_ConstData.addPuzzleListText(builder, puzzleListTextOffset);
  clz_Torappu_Act38SideData_ConstData.addPuzzleRewardNum(builder, puzzleRewardNum);
  return clz_Torappu_Act38SideData_ConstData.endclz_Torappu_Act38SideData_ConstData(builder);
}

unpack(): clz_Torappu_Act38SideData_ConstDataT {
  return new clz_Torappu_Act38SideData_ConstDataT(
    this.npcIdleSpineName(),
    this.puzzleMapAnimGroupId(),
    this.puzzleCrossDayTrackId(),
    this.puzzleListText(),
    this.puzzleRewardNum()
  );
}


unpackTo(_o: clz_Torappu_Act38SideData_ConstDataT): void {
  _o.npcIdleSpineName = this.npcIdleSpineName();
  _o.puzzleMapAnimGroupId = this.puzzleMapAnimGroupId();
  _o.puzzleCrossDayTrackId = this.puzzleCrossDayTrackId();
  _o.puzzleListText = this.puzzleListText();
  _o.puzzleRewardNum = this.puzzleRewardNum();
}
}

export class clz_Torappu_Act38SideData_ConstDataT implements flatbuffers.IGeneratedObject {
constructor(
  public npcIdleSpineName: string|Uint8Array|null = null,
  public puzzleMapAnimGroupId: string|Uint8Array|null = null,
  public puzzleCrossDayTrackId: string|Uint8Array|null = null,
  public puzzleListText: string|Uint8Array|null = null,
  public puzzleRewardNum: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const npcIdleSpineName = (this.npcIdleSpineName !== null ? builder.createString(this.npcIdleSpineName!) : 0);
  const puzzleMapAnimGroupId = (this.puzzleMapAnimGroupId !== null ? builder.createString(this.puzzleMapAnimGroupId!) : 0);
  const puzzleCrossDayTrackId = (this.puzzleCrossDayTrackId !== null ? builder.createString(this.puzzleCrossDayTrackId!) : 0);
  const puzzleListText = (this.puzzleListText !== null ? builder.createString(this.puzzleListText!) : 0);

  return clz_Torappu_Act38SideData_ConstData.createclz_Torappu_Act38SideData_ConstData(builder,
    npcIdleSpineName,
    puzzleMapAnimGroupId,
    puzzleCrossDayTrackId,
    puzzleListText,
    this.puzzleRewardNum
  );
}
}
