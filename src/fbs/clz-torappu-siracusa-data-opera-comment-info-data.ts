// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_SiracusaData_OperaCommentInfoData implements flatbuffers.IUnpackableObject<clz_Torappu_SiracusaData_OperaCommentInfoDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SiracusaData_OperaCommentInfoData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SiracusaData_OperaCommentInfoData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SiracusaData_OperaCommentInfoData):clz_Torappu_SiracusaData_OperaCommentInfoData {
  return (obj || new clz_Torappu_SiracusaData_OperaCommentInfoData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SiracusaData_OperaCommentInfoData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SiracusaData_OperaCommentInfoData):clz_Torappu_SiracusaData_OperaCommentInfoData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SiracusaData_OperaCommentInfoData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

commentId():string|null
commentId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
commentId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

referenceOperaId():string|null
referenceOperaId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
referenceOperaId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

columnIndex():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

columnSortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

commentTitle():string|null
commentTitle(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
commentTitle(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

score():string|null
score(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
score(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

commentContent():string|null
commentContent(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
commentContent(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

commentCharId():string|null
commentCharId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
commentCharId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_SiracusaData_OperaCommentInfoData(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addCommentId(builder:flatbuffers.Builder, commentIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, commentIdOffset, 0);
}

static addReferenceOperaId(builder:flatbuffers.Builder, referenceOperaIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, referenceOperaIdOffset, 0);
}

static addColumnIndex(builder:flatbuffers.Builder, columnIndex:number) {
  builder.addFieldInt32(2, columnIndex, 0);
}

static addColumnSortId(builder:flatbuffers.Builder, columnSortId:number) {
  builder.addFieldInt32(3, columnSortId, 0);
}

static addCommentTitle(builder:flatbuffers.Builder, commentTitleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, commentTitleOffset, 0);
}

static addScore(builder:flatbuffers.Builder, scoreOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, scoreOffset, 0);
}

static addCommentContent(builder:flatbuffers.Builder, commentContentOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, commentContentOffset, 0);
}

static addCommentCharId(builder:flatbuffers.Builder, commentCharIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, commentCharIdOffset, 0);
}

static endclz_Torappu_SiracusaData_OperaCommentInfoData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SiracusaData_OperaCommentInfoData(builder:flatbuffers.Builder, commentIdOffset:flatbuffers.Offset, referenceOperaIdOffset:flatbuffers.Offset, columnIndex:number, columnSortId:number, commentTitleOffset:flatbuffers.Offset, scoreOffset:flatbuffers.Offset, commentContentOffset:flatbuffers.Offset, commentCharIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SiracusaData_OperaCommentInfoData.startclz_Torappu_SiracusaData_OperaCommentInfoData(builder);
  clz_Torappu_SiracusaData_OperaCommentInfoData.addCommentId(builder, commentIdOffset);
  clz_Torappu_SiracusaData_OperaCommentInfoData.addReferenceOperaId(builder, referenceOperaIdOffset);
  clz_Torappu_SiracusaData_OperaCommentInfoData.addColumnIndex(builder, columnIndex);
  clz_Torappu_SiracusaData_OperaCommentInfoData.addColumnSortId(builder, columnSortId);
  clz_Torappu_SiracusaData_OperaCommentInfoData.addCommentTitle(builder, commentTitleOffset);
  clz_Torappu_SiracusaData_OperaCommentInfoData.addScore(builder, scoreOffset);
  clz_Torappu_SiracusaData_OperaCommentInfoData.addCommentContent(builder, commentContentOffset);
  clz_Torappu_SiracusaData_OperaCommentInfoData.addCommentCharId(builder, commentCharIdOffset);
  return clz_Torappu_SiracusaData_OperaCommentInfoData.endclz_Torappu_SiracusaData_OperaCommentInfoData(builder);
}

unpack(): clz_Torappu_SiracusaData_OperaCommentInfoDataT {
  return new clz_Torappu_SiracusaData_OperaCommentInfoDataT(
    this.commentId(),
    this.referenceOperaId(),
    this.columnIndex(),
    this.columnSortId(),
    this.commentTitle(),
    this.score(),
    this.commentContent(),
    this.commentCharId()
  );
}


unpackTo(_o: clz_Torappu_SiracusaData_OperaCommentInfoDataT): void {
  _o.commentId = this.commentId();
  _o.referenceOperaId = this.referenceOperaId();
  _o.columnIndex = this.columnIndex();
  _o.columnSortId = this.columnSortId();
  _o.commentTitle = this.commentTitle();
  _o.score = this.score();
  _o.commentContent = this.commentContent();
  _o.commentCharId = this.commentCharId();
}
}

export class clz_Torappu_SiracusaData_OperaCommentInfoDataT implements flatbuffers.IGeneratedObject {
constructor(
  public commentId: string|Uint8Array|null = null,
  public referenceOperaId: string|Uint8Array|null = null,
  public columnIndex: number = 0,
  public columnSortId: number = 0,
  public commentTitle: string|Uint8Array|null = null,
  public score: string|Uint8Array|null = null,
  public commentContent: string|Uint8Array|null = null,
  public commentCharId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const commentId = (this.commentId !== null ? builder.createString(this.commentId!) : 0);
  const referenceOperaId = (this.referenceOperaId !== null ? builder.createString(this.referenceOperaId!) : 0);
  const commentTitle = (this.commentTitle !== null ? builder.createString(this.commentTitle!) : 0);
  const score = (this.score !== null ? builder.createString(this.score!) : 0);
  const commentContent = (this.commentContent !== null ? builder.createString(this.commentContent!) : 0);
  const commentCharId = (this.commentCharId !== null ? builder.createString(this.commentCharId!) : 0);

  return clz_Torappu_SiracusaData_OperaCommentInfoData.createclz_Torappu_SiracusaData_OperaCommentInfoData(builder,
    commentId,
    referenceOperaId,
    this.columnIndex,
    this.columnSortId,
    commentTitle,
    score,
    commentContent,
    commentCharId
  );
}
}
