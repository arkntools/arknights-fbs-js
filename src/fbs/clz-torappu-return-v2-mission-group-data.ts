// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_ReturnV2MissionItemData, clz_Torappu_ReturnV2MissionItemDataT } from './clz-torappu-return-v2-mission-item-data.js';


export class clz_Torappu_ReturnV2MissionGroupData implements flatbuffers.IUnpackableObject<clz_Torappu_ReturnV2MissionGroupDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ReturnV2MissionGroupData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ReturnV2MissionGroupData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ReturnV2MissionGroupData):clz_Torappu_ReturnV2MissionGroupData {
  return (obj || new clz_Torappu_ReturnV2MissionGroupData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ReturnV2MissionGroupData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ReturnV2MissionGroupData):clz_Torappu_ReturnV2MissionGroupData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ReturnV2MissionGroupData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

groupId():string|null
groupId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
groupId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

tabTitle():string|null
tabTitle(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
tabTitle(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

title():string|null
title(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
title(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

desc():string|null
desc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
desc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

diffMissionCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

startTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

endTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

imageId():string|null
imageId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
imageId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

iconId():string|null
iconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
iconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

missionList(index: number, obj?:clz_Torappu_ReturnV2MissionItemData):clz_Torappu_ReturnV2MissionItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? (obj || new clz_Torappu_ReturnV2MissionItemData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

missionListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_ReturnV2MissionGroupData(builder:flatbuffers.Builder) {
  builder.startObject(11);
}

static addGroupId(builder:flatbuffers.Builder, groupIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, groupIdOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(1, sortId, 0);
}

static addTabTitle(builder:flatbuffers.Builder, tabTitleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, tabTitleOffset, 0);
}

static addTitle(builder:flatbuffers.Builder, titleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, titleOffset, 0);
}

static addDesc(builder:flatbuffers.Builder, descOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, descOffset, 0);
}

static addDiffMissionCount(builder:flatbuffers.Builder, diffMissionCount:number) {
  builder.addFieldInt32(5, diffMissionCount, 0);
}

static addStartTime(builder:flatbuffers.Builder, startTime:bigint) {
  builder.addFieldInt64(6, startTime, BigInt('0'));
}

static addEndTime(builder:flatbuffers.Builder, endTime:bigint) {
  builder.addFieldInt64(7, endTime, BigInt('0'));
}

static addImageId(builder:flatbuffers.Builder, imageIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, imageIdOffset, 0);
}

static addIconId(builder:flatbuffers.Builder, iconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, iconIdOffset, 0);
}

static addMissionList(builder:flatbuffers.Builder, missionListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, missionListOffset, 0);
}

static createMissionListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startMissionListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_ReturnV2MissionGroupData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ReturnV2MissionGroupData(builder:flatbuffers.Builder, groupIdOffset:flatbuffers.Offset, sortId:number, tabTitleOffset:flatbuffers.Offset, titleOffset:flatbuffers.Offset, descOffset:flatbuffers.Offset, diffMissionCount:number, startTime:bigint, endTime:bigint, imageIdOffset:flatbuffers.Offset, iconIdOffset:flatbuffers.Offset, missionListOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ReturnV2MissionGroupData.startclz_Torappu_ReturnV2MissionGroupData(builder);
  clz_Torappu_ReturnV2MissionGroupData.addGroupId(builder, groupIdOffset);
  clz_Torappu_ReturnV2MissionGroupData.addSortId(builder, sortId);
  clz_Torappu_ReturnV2MissionGroupData.addTabTitle(builder, tabTitleOffset);
  clz_Torappu_ReturnV2MissionGroupData.addTitle(builder, titleOffset);
  clz_Torappu_ReturnV2MissionGroupData.addDesc(builder, descOffset);
  clz_Torappu_ReturnV2MissionGroupData.addDiffMissionCount(builder, diffMissionCount);
  clz_Torappu_ReturnV2MissionGroupData.addStartTime(builder, startTime);
  clz_Torappu_ReturnV2MissionGroupData.addEndTime(builder, endTime);
  clz_Torappu_ReturnV2MissionGroupData.addImageId(builder, imageIdOffset);
  clz_Torappu_ReturnV2MissionGroupData.addIconId(builder, iconIdOffset);
  clz_Torappu_ReturnV2MissionGroupData.addMissionList(builder, missionListOffset);
  return clz_Torappu_ReturnV2MissionGroupData.endclz_Torappu_ReturnV2MissionGroupData(builder);
}

unpack(): clz_Torappu_ReturnV2MissionGroupDataT {
  return new clz_Torappu_ReturnV2MissionGroupDataT(
    this.groupId(),
    this.sortId(),
    this.tabTitle(),
    this.title(),
    this.desc(),
    this.diffMissionCount(),
    this.startTime(),
    this.endTime(),
    this.imageId(),
    this.iconId(),
    this.bb!.createObjList<clz_Torappu_ReturnV2MissionItemData, clz_Torappu_ReturnV2MissionItemDataT>(this.missionList.bind(this), this.missionListLength())
  );
}


unpackTo(_o: clz_Torappu_ReturnV2MissionGroupDataT): void {
  _o.groupId = this.groupId();
  _o.sortId = this.sortId();
  _o.tabTitle = this.tabTitle();
  _o.title = this.title();
  _o.desc = this.desc();
  _o.diffMissionCount = this.diffMissionCount();
  _o.startTime = this.startTime();
  _o.endTime = this.endTime();
  _o.imageId = this.imageId();
  _o.iconId = this.iconId();
  _o.missionList = this.bb!.createObjList<clz_Torappu_ReturnV2MissionItemData, clz_Torappu_ReturnV2MissionItemDataT>(this.missionList.bind(this), this.missionListLength());
}
}

export class clz_Torappu_ReturnV2MissionGroupDataT implements flatbuffers.IGeneratedObject {
constructor(
  public groupId: string|Uint8Array|null = null,
  public sortId: number = 0,
  public tabTitle: string|Uint8Array|null = null,
  public title: string|Uint8Array|null = null,
  public desc: string|Uint8Array|null = null,
  public diffMissionCount: number = 0,
  public startTime: bigint = BigInt('0'),
  public endTime: bigint = BigInt('0'),
  public imageId: string|Uint8Array|null = null,
  public iconId: string|Uint8Array|null = null,
  public missionList: (clz_Torappu_ReturnV2MissionItemDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const groupId = (this.groupId !== null ? builder.createString(this.groupId!) : 0);
  const tabTitle = (this.tabTitle !== null ? builder.createString(this.tabTitle!) : 0);
  const title = (this.title !== null ? builder.createString(this.title!) : 0);
  const desc = (this.desc !== null ? builder.createString(this.desc!) : 0);
  const imageId = (this.imageId !== null ? builder.createString(this.imageId!) : 0);
  const iconId = (this.iconId !== null ? builder.createString(this.iconId!) : 0);
  const missionList = clz_Torappu_ReturnV2MissionGroupData.createMissionListVector(builder, builder.createObjectOffsetList(this.missionList));

  return clz_Torappu_ReturnV2MissionGroupData.createclz_Torappu_ReturnV2MissionGroupData(builder,
    groupId,
    this.sortId,
    tabTitle,
    title,
    desc,
    this.diffMissionCount,
    this.startTime,
    this.endTime,
    imageId,
    iconId,
    missionList
  );
}
}
