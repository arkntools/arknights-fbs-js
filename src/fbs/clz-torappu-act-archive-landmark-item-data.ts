// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActArchiveLandmarkItemData implements flatbuffers.IUnpackableObject<clz_Torappu_ActArchiveLandmarkItemDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActArchiveLandmarkItemData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActArchiveLandmarkItemData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActArchiveLandmarkItemData):clz_Torappu_ActArchiveLandmarkItemData {
  return (obj || new clz_Torappu_ActArchiveLandmarkItemData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActArchiveLandmarkItemData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActArchiveLandmarkItemData):clz_Torappu_ActArchiveLandmarkItemData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActArchiveLandmarkItemData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

landmarkId():string|null
landmarkId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
landmarkId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

landmarkSortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_ActArchiveLandmarkItemData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addLandmarkId(builder:flatbuffers.Builder, landmarkIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, landmarkIdOffset, 0);
}

static addLandmarkSortId(builder:flatbuffers.Builder, landmarkSortId:number) {
  builder.addFieldInt32(1, landmarkSortId, 0);
}

static endclz_Torappu_ActArchiveLandmarkItemData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActArchiveLandmarkItemData(builder:flatbuffers.Builder, landmarkIdOffset:flatbuffers.Offset, landmarkSortId:number):flatbuffers.Offset {
  clz_Torappu_ActArchiveLandmarkItemData.startclz_Torappu_ActArchiveLandmarkItemData(builder);
  clz_Torappu_ActArchiveLandmarkItemData.addLandmarkId(builder, landmarkIdOffset);
  clz_Torappu_ActArchiveLandmarkItemData.addLandmarkSortId(builder, landmarkSortId);
  return clz_Torappu_ActArchiveLandmarkItemData.endclz_Torappu_ActArchiveLandmarkItemData(builder);
}

unpack(): clz_Torappu_ActArchiveLandmarkItemDataT {
  return new clz_Torappu_ActArchiveLandmarkItemDataT(
    this.landmarkId(),
    this.landmarkSortId()
  );
}


unpackTo(_o: clz_Torappu_ActArchiveLandmarkItemDataT): void {
  _o.landmarkId = this.landmarkId();
  _o.landmarkSortId = this.landmarkSortId();
}
}

export class clz_Torappu_ActArchiveLandmarkItemDataT implements flatbuffers.IGeneratedObject {
constructor(
  public landmarkId: string|Uint8Array|null = null,
  public landmarkSortId: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const landmarkId = (this.landmarkId !== null ? builder.createString(this.landmarkId!) : 0);

  return clz_Torappu_ActArchiveLandmarkItemData.createclz_Torappu_ActArchiveLandmarkItemData(builder,
    landmarkId,
    this.landmarkSortId
  );
}
}
