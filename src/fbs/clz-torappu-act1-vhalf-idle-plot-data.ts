// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_Act1VHalfIdlePlotData_ItemDropData, clz_Torappu_Act1VHalfIdlePlotData_ItemDropDataT } from './clz-torappu-act1-vhalf-idle-plot-data-item-drop-data.js';
import { clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData, clz_Torappu_Act1VHalfIdlePlotData_PlotCombineDataT } from './clz-torappu-act1-vhalf-idle-plot-data-plot-combine-data.js';
import { enum__Torappu_Act1VHalfIdlePlotType } from './enum--torappu-act1-vhalf-idle-plot-type.js';


export class clz_Torappu_Act1VHalfIdlePlotData implements flatbuffers.IUnpackableObject<clz_Torappu_Act1VHalfIdlePlotDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Act1VHalfIdlePlotData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Act1VHalfIdlePlotData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act1VHalfIdlePlotData):clz_Torappu_Act1VHalfIdlePlotData {
  return (obj || new clz_Torappu_Act1VHalfIdlePlotData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Act1VHalfIdlePlotData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act1VHalfIdlePlotData):clz_Torappu_Act1VHalfIdlePlotData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Act1VHalfIdlePlotData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

plotId():string|null
plotId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
plotId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

plotName():string|null
plotName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
plotName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

plotType():enum__Torappu_Act1VHalfIdlePlotType {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_Act1VHalfIdlePlotType.NONE;
}

trapId():string|null
trapId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
trapId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

initUnlock():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

rarity():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

isBasePlot():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

iconId():string|null
iconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
iconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

funcDesc():string|null
funcDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
funcDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

flavorDesc():string|null
flavorDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
flavorDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

enemyIds(index: number):string
enemyIds(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
enemyIds(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

enemyIdsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

enemyDesc():string|null
enemyDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
enemyDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

itemIdShown():string|null
itemIdShown(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
itemIdShown(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

itemDropData(index: number, obj?:clz_Torappu_Act1VHalfIdlePlotData_ItemDropData):clz_Torappu_Act1VHalfIdlePlotData_ItemDropData|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? (obj || new clz_Torappu_Act1VHalfIdlePlotData_ItemDropData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

itemDropDataLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

prevCombineData(obj?:clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData):clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData|null {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? (obj || new clz_Torappu_Act1VHalfIdlePlotData_PlotCombineData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

derivedPlots(index: number):string
derivedPlots(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
derivedPlots(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

derivedPlotsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_Act1VHalfIdlePlotData(builder:flatbuffers.Builder) {
  builder.startObject(17);
}

static addPlotId(builder:flatbuffers.Builder, plotIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, plotIdOffset, 0);
}

static addPlotName(builder:flatbuffers.Builder, plotNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, plotNameOffset, 0);
}

static addPlotType(builder:flatbuffers.Builder, plotType:enum__Torappu_Act1VHalfIdlePlotType) {
  builder.addFieldInt32(2, plotType, enum__Torappu_Act1VHalfIdlePlotType.NONE);
}

static addTrapId(builder:flatbuffers.Builder, trapIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, trapIdOffset, 0);
}

static addInitUnlock(builder:flatbuffers.Builder, initUnlock:boolean) {
  builder.addFieldInt8(4, +initUnlock, +false);
}

static addRarity(builder:flatbuffers.Builder, rarity:number) {
  builder.addFieldInt32(5, rarity, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(6, sortId, 0);
}

static addIsBasePlot(builder:flatbuffers.Builder, isBasePlot:boolean) {
  builder.addFieldInt8(7, +isBasePlot, +false);
}

static addIconId(builder:flatbuffers.Builder, iconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, iconIdOffset, 0);
}

static addFuncDesc(builder:flatbuffers.Builder, funcDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, funcDescOffset, 0);
}

static addFlavorDesc(builder:flatbuffers.Builder, flavorDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, flavorDescOffset, 0);
}

static addEnemyIds(builder:flatbuffers.Builder, enemyIdsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, enemyIdsOffset, 0);
}

static createEnemyIdsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEnemyIdsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addEnemyDesc(builder:flatbuffers.Builder, enemyDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, enemyDescOffset, 0);
}

static addItemIdShown(builder:flatbuffers.Builder, itemIdShownOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, itemIdShownOffset, 0);
}

static addItemDropData(builder:flatbuffers.Builder, itemDropDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, itemDropDataOffset, 0);
}

static createItemDropDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startItemDropDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addPrevCombineData(builder:flatbuffers.Builder, prevCombineDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(15, prevCombineDataOffset, 0);
}

static addDerivedPlots(builder:flatbuffers.Builder, derivedPlotsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(16, derivedPlotsOffset, 0);
}

static createDerivedPlotsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startDerivedPlotsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_Act1VHalfIdlePlotData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): clz_Torappu_Act1VHalfIdlePlotDataT {
  return new clz_Torappu_Act1VHalfIdlePlotDataT(
    this.plotId(),
    this.plotName(),
    this.plotType(),
    this.trapId(),
    this.initUnlock(),
    this.rarity(),
    this.sortId(),
    this.isBasePlot(),
    this.iconId(),
    this.funcDesc(),
    this.flavorDesc(),
    this.bb!.createScalarList<string>(this.enemyIds.bind(this), this.enemyIdsLength()),
    this.enemyDesc(),
    this.itemIdShown(),
    this.bb!.createObjList<clz_Torappu_Act1VHalfIdlePlotData_ItemDropData, clz_Torappu_Act1VHalfIdlePlotData_ItemDropDataT>(this.itemDropData.bind(this), this.itemDropDataLength()),
    (this.prevCombineData() !== null ? this.prevCombineData()!.unpack() : null),
    this.bb!.createScalarList<string>(this.derivedPlots.bind(this), this.derivedPlotsLength())
  );
}


unpackTo(_o: clz_Torappu_Act1VHalfIdlePlotDataT): void {
  _o.plotId = this.plotId();
  _o.plotName = this.plotName();
  _o.plotType = this.plotType();
  _o.trapId = this.trapId();
  _o.initUnlock = this.initUnlock();
  _o.rarity = this.rarity();
  _o.sortId = this.sortId();
  _o.isBasePlot = this.isBasePlot();
  _o.iconId = this.iconId();
  _o.funcDesc = this.funcDesc();
  _o.flavorDesc = this.flavorDesc();
  _o.enemyIds = this.bb!.createScalarList<string>(this.enemyIds.bind(this), this.enemyIdsLength());
  _o.enemyDesc = this.enemyDesc();
  _o.itemIdShown = this.itemIdShown();
  _o.itemDropData = this.bb!.createObjList<clz_Torappu_Act1VHalfIdlePlotData_ItemDropData, clz_Torappu_Act1VHalfIdlePlotData_ItemDropDataT>(this.itemDropData.bind(this), this.itemDropDataLength());
  _o.prevCombineData = (this.prevCombineData() !== null ? this.prevCombineData()!.unpack() : null);
  _o.derivedPlots = this.bb!.createScalarList<string>(this.derivedPlots.bind(this), this.derivedPlotsLength());
}
}

export class clz_Torappu_Act1VHalfIdlePlotDataT implements flatbuffers.IGeneratedObject {
constructor(
  public plotId: string|Uint8Array|null = null,
  public plotName: string|Uint8Array|null = null,
  public plotType: enum__Torappu_Act1VHalfIdlePlotType = enum__Torappu_Act1VHalfIdlePlotType.NONE,
  public trapId: string|Uint8Array|null = null,
  public initUnlock: boolean = false,
  public rarity: number = 0,
  public sortId: number = 0,
  public isBasePlot: boolean = false,
  public iconId: string|Uint8Array|null = null,
  public funcDesc: string|Uint8Array|null = null,
  public flavorDesc: string|Uint8Array|null = null,
  public enemyIds: (string)[] = [],
  public enemyDesc: string|Uint8Array|null = null,
  public itemIdShown: string|Uint8Array|null = null,
  public itemDropData: (clz_Torappu_Act1VHalfIdlePlotData_ItemDropDataT)[] = [],
  public prevCombineData: clz_Torappu_Act1VHalfIdlePlotData_PlotCombineDataT|null = null,
  public derivedPlots: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const plotId = (this.plotId !== null ? builder.createString(this.plotId!) : 0);
  const plotName = (this.plotName !== null ? builder.createString(this.plotName!) : 0);
  const trapId = (this.trapId !== null ? builder.createString(this.trapId!) : 0);
  const iconId = (this.iconId !== null ? builder.createString(this.iconId!) : 0);
  const funcDesc = (this.funcDesc !== null ? builder.createString(this.funcDesc!) : 0);
  const flavorDesc = (this.flavorDesc !== null ? builder.createString(this.flavorDesc!) : 0);
  const enemyIds = clz_Torappu_Act1VHalfIdlePlotData.createEnemyIdsVector(builder, builder.createObjectOffsetList(this.enemyIds));
  const enemyDesc = (this.enemyDesc !== null ? builder.createString(this.enemyDesc!) : 0);
  const itemIdShown = (this.itemIdShown !== null ? builder.createString(this.itemIdShown!) : 0);
  const itemDropData = clz_Torappu_Act1VHalfIdlePlotData.createItemDropDataVector(builder, builder.createObjectOffsetList(this.itemDropData));
  const prevCombineData = (this.prevCombineData !== null ? this.prevCombineData!.pack(builder) : 0);
  const derivedPlots = clz_Torappu_Act1VHalfIdlePlotData.createDerivedPlotsVector(builder, builder.createObjectOffsetList(this.derivedPlots));

  clz_Torappu_Act1VHalfIdlePlotData.startclz_Torappu_Act1VHalfIdlePlotData(builder);
  clz_Torappu_Act1VHalfIdlePlotData.addPlotId(builder, plotId);
  clz_Torappu_Act1VHalfIdlePlotData.addPlotName(builder, plotName);
  clz_Torappu_Act1VHalfIdlePlotData.addPlotType(builder, this.plotType);
  clz_Torappu_Act1VHalfIdlePlotData.addTrapId(builder, trapId);
  clz_Torappu_Act1VHalfIdlePlotData.addInitUnlock(builder, this.initUnlock);
  clz_Torappu_Act1VHalfIdlePlotData.addRarity(builder, this.rarity);
  clz_Torappu_Act1VHalfIdlePlotData.addSortId(builder, this.sortId);
  clz_Torappu_Act1VHalfIdlePlotData.addIsBasePlot(builder, this.isBasePlot);
  clz_Torappu_Act1VHalfIdlePlotData.addIconId(builder, iconId);
  clz_Torappu_Act1VHalfIdlePlotData.addFuncDesc(builder, funcDesc);
  clz_Torappu_Act1VHalfIdlePlotData.addFlavorDesc(builder, flavorDesc);
  clz_Torappu_Act1VHalfIdlePlotData.addEnemyIds(builder, enemyIds);
  clz_Torappu_Act1VHalfIdlePlotData.addEnemyDesc(builder, enemyDesc);
  clz_Torappu_Act1VHalfIdlePlotData.addItemIdShown(builder, itemIdShown);
  clz_Torappu_Act1VHalfIdlePlotData.addItemDropData(builder, itemDropData);
  clz_Torappu_Act1VHalfIdlePlotData.addPrevCombineData(builder, prevCombineData);
  clz_Torappu_Act1VHalfIdlePlotData.addDerivedPlots(builder, derivedPlots);

  return clz_Torappu_Act1VHalfIdlePlotData.endclz_Torappu_Act1VHalfIdlePlotData(builder);
}
}
