// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData implements flatbuffers.IUnpackableObject<clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData):clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData {
  return (obj || new clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData):clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

modeId():string|null
modeId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
modeId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

hp():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addModeId(builder:flatbuffers.Builder, modeIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, modeIdOffset, 0);
}

static addHp(builder:flatbuffers.Builder, hp:number) {
  builder.addFieldInt32(1, hp, 0);
}

static endclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData(builder:flatbuffers.Builder, modeIdOffset:flatbuffers.Offset, hp:number):flatbuffers.Offset {
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData.startclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData(builder);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData.addModeId(builder, modeIdOffset);
  clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData.addHp(builder, hp);
  return clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData.endclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData(builder);
}

unpack(): clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpDataT {
  return new clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpDataT(
    this.modeId(),
    this.hp()
  );
}


unpackTo(_o: clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpDataT): void {
  _o.modeId = this.modeId();
  _o.hp = this.hp();
}
}

export class clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpDataT implements flatbuffers.IGeneratedObject {
constructor(
  public modeId: string|Uint8Array|null = null,
  public hp: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const modeId = (this.modeId !== null ? builder.createString(this.modeId!) : 0);

  return clz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData.createclz_Torappu_ActivityAutoChessVerify1Data_Act1VAutoChessModeBossHpData(builder,
    modeId,
    this.hp
  );
}
}
