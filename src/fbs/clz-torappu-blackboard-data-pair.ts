// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_Blackboard_DataPair implements flatbuffers.IUnpackableObject<clz_Torappu_Blackboard_DataPairT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Blackboard_DataPair {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Blackboard_DataPair(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Blackboard_DataPair):clz_Torappu_Blackboard_DataPair {
  return (obj || new clz_Torappu_Blackboard_DataPair()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Blackboard_DataPair(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Blackboard_DataPair):clz_Torappu_Blackboard_DataPair {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Blackboard_DataPair()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

key():string|null
key(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
key(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

value():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

valueStr():string|null
valueStr(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
valueStr(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_Blackboard_DataPair(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addKey(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, keyOffset, 0);
}

static addValue(builder:flatbuffers.Builder, value:number) {
  builder.addFieldFloat32(1, value, 0.0);
}

static addValueStr(builder:flatbuffers.Builder, valueStrOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, valueStrOffset, 0);
}

static endclz_Torappu_Blackboard_DataPair(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Blackboard_DataPair(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset, value:number, valueStrOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_Blackboard_DataPair.startclz_Torappu_Blackboard_DataPair(builder);
  clz_Torappu_Blackboard_DataPair.addKey(builder, keyOffset);
  clz_Torappu_Blackboard_DataPair.addValue(builder, value);
  clz_Torappu_Blackboard_DataPair.addValueStr(builder, valueStrOffset);
  return clz_Torappu_Blackboard_DataPair.endclz_Torappu_Blackboard_DataPair(builder);
}

unpack(): clz_Torappu_Blackboard_DataPairT {
  return new clz_Torappu_Blackboard_DataPairT(
    this.key(),
    this.value(),
    this.valueStr()
  );
}


unpackTo(_o: clz_Torappu_Blackboard_DataPairT): void {
  _o.key = this.key();
  _o.value = this.value();
  _o.valueStr = this.valueStr();
}
}

export class clz_Torappu_Blackboard_DataPairT implements flatbuffers.IGeneratedObject {
constructor(
  public key: string|Uint8Array|null = null,
  public value: number = 0.0,
  public valueStr: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const key = (this.key !== null ? builder.createString(this.key!) : 0);
  const valueStr = (this.valueStr !== null ? builder.createString(this.valueStr!) : 0);

  return clz_Torappu_Blackboard_DataPair.createclz_Torappu_Blackboard_DataPair(builder,
    key,
    this.value,
    valueStr
  );
}
}
