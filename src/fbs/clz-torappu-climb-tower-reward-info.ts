// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ClimbTowerRewardInfo implements flatbuffers.IUnpackableObject<clz_Torappu_ClimbTowerRewardInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ClimbTowerRewardInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ClimbTowerRewardInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ClimbTowerRewardInfo):clz_Torappu_ClimbTowerRewardInfo {
  return (obj || new clz_Torappu_ClimbTowerRewardInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ClimbTowerRewardInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ClimbTowerRewardInfo):clz_Torappu_ClimbTowerRewardInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ClimbTowerRewardInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

stageSort():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

lowerItemCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

higherItemCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_ClimbTowerRewardInfo(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addStageSort(builder:flatbuffers.Builder, stageSort:number) {
  builder.addFieldInt32(0, stageSort, 0);
}

static addLowerItemCount(builder:flatbuffers.Builder, lowerItemCount:number) {
  builder.addFieldInt32(1, lowerItemCount, 0);
}

static addHigherItemCount(builder:flatbuffers.Builder, higherItemCount:number) {
  builder.addFieldInt32(2, higherItemCount, 0);
}

static endclz_Torappu_ClimbTowerRewardInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ClimbTowerRewardInfo(builder:flatbuffers.Builder, stageSort:number, lowerItemCount:number, higherItemCount:number):flatbuffers.Offset {
  clz_Torappu_ClimbTowerRewardInfo.startclz_Torappu_ClimbTowerRewardInfo(builder);
  clz_Torappu_ClimbTowerRewardInfo.addStageSort(builder, stageSort);
  clz_Torappu_ClimbTowerRewardInfo.addLowerItemCount(builder, lowerItemCount);
  clz_Torappu_ClimbTowerRewardInfo.addHigherItemCount(builder, higherItemCount);
  return clz_Torappu_ClimbTowerRewardInfo.endclz_Torappu_ClimbTowerRewardInfo(builder);
}

unpack(): clz_Torappu_ClimbTowerRewardInfoT {
  return new clz_Torappu_ClimbTowerRewardInfoT(
    this.stageSort(),
    this.lowerItemCount(),
    this.higherItemCount()
  );
}


unpackTo(_o: clz_Torappu_ClimbTowerRewardInfoT): void {
  _o.stageSort = this.stageSort();
  _o.lowerItemCount = this.lowerItemCount();
  _o.higherItemCount = this.higherItemCount();
}
}

export class clz_Torappu_ClimbTowerRewardInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public stageSort: number = 0,
  public lowerItemCount: number = 0,
  public higherItemCount: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return clz_Torappu_ClimbTowerRewardInfo.createclz_Torappu_ClimbTowerRewardInfo(builder,
    this.stageSort,
    this.lowerItemCount,
    this.higherItemCount
  );
}
}
