// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { dict__string__float, dict__string__floatT } from './dict--string--float.js';


export class clz_Torappu_ActivityFloatParadeData_Tactic implements flatbuffers.IUnpackableObject<clz_Torappu_ActivityFloatParadeData_TacticT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActivityFloatParadeData_Tactic {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActivityFloatParadeData_Tactic(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityFloatParadeData_Tactic):clz_Torappu_ActivityFloatParadeData_Tactic {
  return (obj || new clz_Torappu_ActivityFloatParadeData_Tactic()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActivityFloatParadeData_Tactic(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityFloatParadeData_Tactic):clz_Torappu_ActivityFloatParadeData_Tactic {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActivityFloatParadeData_Tactic()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

packName():string|null
packName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
packName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

briefName():string|null
briefName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
briefName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

rewardVar(index: number, obj?:dict__string__float):dict__string__float|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new dict__string__float()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

rewardVarLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_ActivityFloatParadeData_Tactic(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addId(builder:flatbuffers.Builder, id:number) {
  builder.addFieldInt32(0, id, 0);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nameOffset, 0);
}

static addPackName(builder:flatbuffers.Builder, packNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, packNameOffset, 0);
}

static addBriefName(builder:flatbuffers.Builder, briefNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, briefNameOffset, 0);
}

static addRewardVar(builder:flatbuffers.Builder, rewardVarOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, rewardVarOffset, 0);
}

static createRewardVarVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRewardVarVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_ActivityFloatParadeData_Tactic(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActivityFloatParadeData_Tactic(builder:flatbuffers.Builder, id:number, nameOffset:flatbuffers.Offset, packNameOffset:flatbuffers.Offset, briefNameOffset:flatbuffers.Offset, rewardVarOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActivityFloatParadeData_Tactic.startclz_Torappu_ActivityFloatParadeData_Tactic(builder);
  clz_Torappu_ActivityFloatParadeData_Tactic.addId(builder, id);
  clz_Torappu_ActivityFloatParadeData_Tactic.addName(builder, nameOffset);
  clz_Torappu_ActivityFloatParadeData_Tactic.addPackName(builder, packNameOffset);
  clz_Torappu_ActivityFloatParadeData_Tactic.addBriefName(builder, briefNameOffset);
  clz_Torappu_ActivityFloatParadeData_Tactic.addRewardVar(builder, rewardVarOffset);
  return clz_Torappu_ActivityFloatParadeData_Tactic.endclz_Torappu_ActivityFloatParadeData_Tactic(builder);
}

unpack(): clz_Torappu_ActivityFloatParadeData_TacticT {
  return new clz_Torappu_ActivityFloatParadeData_TacticT(
    this.id(),
    this.name(),
    this.packName(),
    this.briefName(),
    this.bb!.createObjList<dict__string__float, dict__string__floatT>(this.rewardVar.bind(this), this.rewardVarLength())
  );
}


unpackTo(_o: clz_Torappu_ActivityFloatParadeData_TacticT): void {
  _o.id = this.id();
  _o.name = this.name();
  _o.packName = this.packName();
  _o.briefName = this.briefName();
  _o.rewardVar = this.bb!.createObjList<dict__string__float, dict__string__floatT>(this.rewardVar.bind(this), this.rewardVarLength());
}
}

export class clz_Torappu_ActivityFloatParadeData_TacticT implements flatbuffers.IGeneratedObject {
constructor(
  public id: number = 0,
  public name: string|Uint8Array|null = null,
  public packName: string|Uint8Array|null = null,
  public briefName: string|Uint8Array|null = null,
  public rewardVar: (dict__string__floatT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const name = (this.name !== null ? builder.createString(this.name!) : 0);
  const packName = (this.packName !== null ? builder.createString(this.packName!) : 0);
  const briefName = (this.briefName !== null ? builder.createString(this.briefName!) : 0);
  const rewardVar = clz_Torappu_ActivityFloatParadeData_Tactic.createRewardVarVector(builder, builder.createObjectOffsetList(this.rewardVar));

  return clz_Torappu_ActivityFloatParadeData_Tactic.createclz_Torappu_ActivityFloatParadeData_Tactic(builder,
    this.id,
    name,
    packName,
    briefName,
    rewardVar
  );
}
}
