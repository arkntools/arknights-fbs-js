// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_Audio_Middleware_Data_AudioFadeType } from './enum--torappu-audio-middleware-data-audio-fade-type.js';


export class clz_Torappu_Audio_Middleware_Data_FadeStyleData implements flatbuffers.IUnpackableObject<clz_Torappu_Audio_Middleware_Data_FadeStyleDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Audio_Middleware_Data_FadeStyleData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Audio_Middleware_Data_FadeStyleData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Audio_Middleware_Data_FadeStyleData):clz_Torappu_Audio_Middleware_Data_FadeStyleData {
  return (obj || new clz_Torappu_Audio_Middleware_Data_FadeStyleData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Audio_Middleware_Data_FadeStyleData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Audio_Middleware_Data_FadeStyleData):clz_Torappu_Audio_Middleware_Data_FadeStyleData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Audio_Middleware_Data_FadeStyleData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

styleName():string|null
styleName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
styleName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

fadeinTime():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

fadeoutTime():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

fadeinType():enum__Torappu_Audio_Middleware_Data_AudioFadeType {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_Audio_Middleware_Data_AudioFadeType.LINEAR;
}

fadeoutType():enum__Torappu_Audio_Middleware_Data_AudioFadeType {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_Audio_Middleware_Data_AudioFadeType.LINEAR;
}

static startclz_Torappu_Audio_Middleware_Data_FadeStyleData(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addStyleName(builder:flatbuffers.Builder, styleNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, styleNameOffset, 0);
}

static addFadeinTime(builder:flatbuffers.Builder, fadeinTime:number) {
  builder.addFieldFloat32(1, fadeinTime, 0.0);
}

static addFadeoutTime(builder:flatbuffers.Builder, fadeoutTime:number) {
  builder.addFieldFloat32(2, fadeoutTime, 0.0);
}

static addFadeinType(builder:flatbuffers.Builder, fadeinType:enum__Torappu_Audio_Middleware_Data_AudioFadeType) {
  builder.addFieldInt32(3, fadeinType, enum__Torappu_Audio_Middleware_Data_AudioFadeType.LINEAR);
}

static addFadeoutType(builder:flatbuffers.Builder, fadeoutType:enum__Torappu_Audio_Middleware_Data_AudioFadeType) {
  builder.addFieldInt32(4, fadeoutType, enum__Torappu_Audio_Middleware_Data_AudioFadeType.LINEAR);
}

static endclz_Torappu_Audio_Middleware_Data_FadeStyleData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Audio_Middleware_Data_FadeStyleData(builder:flatbuffers.Builder, styleNameOffset:flatbuffers.Offset, fadeinTime:number, fadeoutTime:number, fadeinType:enum__Torappu_Audio_Middleware_Data_AudioFadeType, fadeoutType:enum__Torappu_Audio_Middleware_Data_AudioFadeType):flatbuffers.Offset {
  clz_Torappu_Audio_Middleware_Data_FadeStyleData.startclz_Torappu_Audio_Middleware_Data_FadeStyleData(builder);
  clz_Torappu_Audio_Middleware_Data_FadeStyleData.addStyleName(builder, styleNameOffset);
  clz_Torappu_Audio_Middleware_Data_FadeStyleData.addFadeinTime(builder, fadeinTime);
  clz_Torappu_Audio_Middleware_Data_FadeStyleData.addFadeoutTime(builder, fadeoutTime);
  clz_Torappu_Audio_Middleware_Data_FadeStyleData.addFadeinType(builder, fadeinType);
  clz_Torappu_Audio_Middleware_Data_FadeStyleData.addFadeoutType(builder, fadeoutType);
  return clz_Torappu_Audio_Middleware_Data_FadeStyleData.endclz_Torappu_Audio_Middleware_Data_FadeStyleData(builder);
}

unpack(): clz_Torappu_Audio_Middleware_Data_FadeStyleDataT {
  return new clz_Torappu_Audio_Middleware_Data_FadeStyleDataT(
    this.styleName(),
    this.fadeinTime(),
    this.fadeoutTime(),
    this.fadeinType(),
    this.fadeoutType()
  );
}


unpackTo(_o: clz_Torappu_Audio_Middleware_Data_FadeStyleDataT): void {
  _o.styleName = this.styleName();
  _o.fadeinTime = this.fadeinTime();
  _o.fadeoutTime = this.fadeoutTime();
  _o.fadeinType = this.fadeinType();
  _o.fadeoutType = this.fadeoutType();
}
}

export class clz_Torappu_Audio_Middleware_Data_FadeStyleDataT implements flatbuffers.IGeneratedObject {
constructor(
  public styleName: string|Uint8Array|null = null,
  public fadeinTime: number = 0.0,
  public fadeoutTime: number = 0.0,
  public fadeinType: enum__Torappu_Audio_Middleware_Data_AudioFadeType = enum__Torappu_Audio_Middleware_Data_AudioFadeType.LINEAR,
  public fadeoutType: enum__Torappu_Audio_Middleware_Data_AudioFadeType = enum__Torappu_Audio_Middleware_Data_AudioFadeType.LINEAR
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const styleName = (this.styleName !== null ? builder.createString(this.styleName!) : 0);

  return clz_Torappu_Audio_Middleware_Data_FadeStyleData.createclz_Torappu_Audio_Middleware_Data_FadeStyleData(builder,
    styleName,
    this.fadeinTime,
    this.fadeoutTime,
    this.fadeinType,
    this.fadeoutType
  );
}
}
