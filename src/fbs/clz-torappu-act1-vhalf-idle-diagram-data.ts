// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { dict__string__clz_Torappu_Act1VHalfIdleDiagramData_LinePosData, dict__string__clz_Torappu_Act1VHalfIdleDiagramData_LinePosDataT } from './dict--string--clz-torappu-act1-vhalf-idle-diagram-data-line-pos-data.js';
import { dict__string__clz_Torappu_Act1VHalfIdleDiagramData_LineRelationData, dict__string__clz_Torappu_Act1VHalfIdleDiagramData_LineRelationDataT } from './dict--string--clz-torappu-act1-vhalf-idle-diagram-data-line-relation-data.js';
import { dict__string__clz_Torappu_Act1VHalfIdleDiagramData_NodePointData, dict__string__clz_Torappu_Act1VHalfIdleDiagramData_NodePointDataT } from './dict--string--clz-torappu-act1-vhalf-idle-diagram-data-node-point-data.js';
import { dict__string__clz_Torappu_Act1VHalfIdleDiagramData_PointPosData, dict__string__clz_Torappu_Act1VHalfIdleDiagramData_PointPosDataT } from './dict--string--clz-torappu-act1-vhalf-idle-diagram-data-point-pos-data.js';


export class clz_Torappu_Act1VHalfIdleDiagramData implements flatbuffers.IUnpackableObject<clz_Torappu_Act1VHalfIdleDiagramDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Act1VHalfIdleDiagramData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Act1VHalfIdleDiagramData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act1VHalfIdleDiagramData):clz_Torappu_Act1VHalfIdleDiagramData {
  return (obj || new clz_Torappu_Act1VHalfIdleDiagramData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Act1VHalfIdleDiagramData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act1VHalfIdleDiagramData):clz_Torappu_Act1VHalfIdleDiagramData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Act1VHalfIdleDiagramData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

width():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

height():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

pointPosDataMap(index: number, obj?:dict__string__clz_Torappu_Act1VHalfIdleDiagramData_PointPosData):dict__string__clz_Torappu_Act1VHalfIdleDiagramData_PointPosData|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new dict__string__clz_Torappu_Act1VHalfIdleDiagramData_PointPosData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

pointPosDataMapLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

linePosDataMap(index: number, obj?:dict__string__clz_Torappu_Act1VHalfIdleDiagramData_LinePosData):dict__string__clz_Torappu_Act1VHalfIdleDiagramData_LinePosData|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new dict__string__clz_Torappu_Act1VHalfIdleDiagramData_LinePosData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

linePosDataMapLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

lineRelationDataMap(index: number, obj?:dict__string__clz_Torappu_Act1VHalfIdleDiagramData_LineRelationData):dict__string__clz_Torappu_Act1VHalfIdleDiagramData_LineRelationData|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new dict__string__clz_Torappu_Act1VHalfIdleDiagramData_LineRelationData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

lineRelationDataMapLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

nodePointDataMap(index: number, obj?:dict__string__clz_Torappu_Act1VHalfIdleDiagramData_NodePointData):dict__string__clz_Torappu_Act1VHalfIdleDiagramData_NodePointData|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new dict__string__clz_Torappu_Act1VHalfIdleDiagramData_NodePointData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

nodePointDataMapLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_Act1VHalfIdleDiagramData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addWidth(builder:flatbuffers.Builder, width:number) {
  builder.addFieldFloat32(0, width, 0.0);
}

static addHeight(builder:flatbuffers.Builder, height:number) {
  builder.addFieldFloat32(1, height, 0.0);
}

static addPointPosDataMap(builder:flatbuffers.Builder, pointPosDataMapOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, pointPosDataMapOffset, 0);
}

static createPointPosDataMapVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPointPosDataMapVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addLinePosDataMap(builder:flatbuffers.Builder, linePosDataMapOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, linePosDataMapOffset, 0);
}

static createLinePosDataMapVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startLinePosDataMapVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addLineRelationDataMap(builder:flatbuffers.Builder, lineRelationDataMapOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, lineRelationDataMapOffset, 0);
}

static createLineRelationDataMapVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startLineRelationDataMapVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addNodePointDataMap(builder:flatbuffers.Builder, nodePointDataMapOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, nodePointDataMapOffset, 0);
}

static createNodePointDataMapVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startNodePointDataMapVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_Act1VHalfIdleDiagramData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Act1VHalfIdleDiagramData(builder:flatbuffers.Builder, width:number, height:number, pointPosDataMapOffset:flatbuffers.Offset, linePosDataMapOffset:flatbuffers.Offset, lineRelationDataMapOffset:flatbuffers.Offset, nodePointDataMapOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_Act1VHalfIdleDiagramData.startclz_Torappu_Act1VHalfIdleDiagramData(builder);
  clz_Torappu_Act1VHalfIdleDiagramData.addWidth(builder, width);
  clz_Torappu_Act1VHalfIdleDiagramData.addHeight(builder, height);
  clz_Torappu_Act1VHalfIdleDiagramData.addPointPosDataMap(builder, pointPosDataMapOffset);
  clz_Torappu_Act1VHalfIdleDiagramData.addLinePosDataMap(builder, linePosDataMapOffset);
  clz_Torappu_Act1VHalfIdleDiagramData.addLineRelationDataMap(builder, lineRelationDataMapOffset);
  clz_Torappu_Act1VHalfIdleDiagramData.addNodePointDataMap(builder, nodePointDataMapOffset);
  return clz_Torappu_Act1VHalfIdleDiagramData.endclz_Torappu_Act1VHalfIdleDiagramData(builder);
}

unpack(): clz_Torappu_Act1VHalfIdleDiagramDataT {
  return new clz_Torappu_Act1VHalfIdleDiagramDataT(
    this.width(),
    this.height(),
    this.bb!.createObjList<dict__string__clz_Torappu_Act1VHalfIdleDiagramData_PointPosData, dict__string__clz_Torappu_Act1VHalfIdleDiagramData_PointPosDataT>(this.pointPosDataMap.bind(this), this.pointPosDataMapLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_Act1VHalfIdleDiagramData_LinePosData, dict__string__clz_Torappu_Act1VHalfIdleDiagramData_LinePosDataT>(this.linePosDataMap.bind(this), this.linePosDataMapLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_Act1VHalfIdleDiagramData_LineRelationData, dict__string__clz_Torappu_Act1VHalfIdleDiagramData_LineRelationDataT>(this.lineRelationDataMap.bind(this), this.lineRelationDataMapLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_Act1VHalfIdleDiagramData_NodePointData, dict__string__clz_Torappu_Act1VHalfIdleDiagramData_NodePointDataT>(this.nodePointDataMap.bind(this), this.nodePointDataMapLength())
  );
}


unpackTo(_o: clz_Torappu_Act1VHalfIdleDiagramDataT): void {
  _o.width = this.width();
  _o.height = this.height();
  _o.pointPosDataMap = this.bb!.createObjList<dict__string__clz_Torappu_Act1VHalfIdleDiagramData_PointPosData, dict__string__clz_Torappu_Act1VHalfIdleDiagramData_PointPosDataT>(this.pointPosDataMap.bind(this), this.pointPosDataMapLength());
  _o.linePosDataMap = this.bb!.createObjList<dict__string__clz_Torappu_Act1VHalfIdleDiagramData_LinePosData, dict__string__clz_Torappu_Act1VHalfIdleDiagramData_LinePosDataT>(this.linePosDataMap.bind(this), this.linePosDataMapLength());
  _o.lineRelationDataMap = this.bb!.createObjList<dict__string__clz_Torappu_Act1VHalfIdleDiagramData_LineRelationData, dict__string__clz_Torappu_Act1VHalfIdleDiagramData_LineRelationDataT>(this.lineRelationDataMap.bind(this), this.lineRelationDataMapLength());
  _o.nodePointDataMap = this.bb!.createObjList<dict__string__clz_Torappu_Act1VHalfIdleDiagramData_NodePointData, dict__string__clz_Torappu_Act1VHalfIdleDiagramData_NodePointDataT>(this.nodePointDataMap.bind(this), this.nodePointDataMapLength());
}
}

export class clz_Torappu_Act1VHalfIdleDiagramDataT implements flatbuffers.IGeneratedObject {
constructor(
  public width: number = 0.0,
  public height: number = 0.0,
  public pointPosDataMap: (dict__string__clz_Torappu_Act1VHalfIdleDiagramData_PointPosDataT)[] = [],
  public linePosDataMap: (dict__string__clz_Torappu_Act1VHalfIdleDiagramData_LinePosDataT)[] = [],
  public lineRelationDataMap: (dict__string__clz_Torappu_Act1VHalfIdleDiagramData_LineRelationDataT)[] = [],
  public nodePointDataMap: (dict__string__clz_Torappu_Act1VHalfIdleDiagramData_NodePointDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const pointPosDataMap = clz_Torappu_Act1VHalfIdleDiagramData.createPointPosDataMapVector(builder, builder.createObjectOffsetList(this.pointPosDataMap));
  const linePosDataMap = clz_Torappu_Act1VHalfIdleDiagramData.createLinePosDataMapVector(builder, builder.createObjectOffsetList(this.linePosDataMap));
  const lineRelationDataMap = clz_Torappu_Act1VHalfIdleDiagramData.createLineRelationDataMapVector(builder, builder.createObjectOffsetList(this.lineRelationDataMap));
  const nodePointDataMap = clz_Torappu_Act1VHalfIdleDiagramData.createNodePointDataMapVector(builder, builder.createObjectOffsetList(this.nodePointDataMap));

  return clz_Torappu_Act1VHalfIdleDiagramData.createclz_Torappu_Act1VHalfIdleDiagramData(builder,
    this.width,
    this.height,
    pointPosDataMap,
    linePosDataMap,
    lineRelationDataMap,
    nodePointDataMap
  );
}
}
