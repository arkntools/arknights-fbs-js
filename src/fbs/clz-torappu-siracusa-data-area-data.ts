// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_SiracusaData_ZoneUnlockType } from './enum--torappu-siracusa-data-zone-unlock-type.js';


export class clz_Torappu_SiracusaData_AreaData implements flatbuffers.IUnpackableObject<clz_Torappu_SiracusaData_AreaDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SiracusaData_AreaData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SiracusaData_AreaData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SiracusaData_AreaData):clz_Torappu_SiracusaData_AreaData {
  return (obj || new clz_Torappu_SiracusaData_AreaData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SiracusaData_AreaData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SiracusaData_AreaData):clz_Torappu_SiracusaData_AreaData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SiracusaData_AreaData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

areaId():string|null
areaId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
areaId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

areaName():string|null
areaName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
areaName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

areaSubName():string|null
areaSubName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
areaSubName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

unlockType():enum__Torappu_SiracusaData_ZoneUnlockType {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_SiracusaData_ZoneUnlockType.NONE;
}

unlockStage():string|null
unlockStage(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
unlockStage(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

areaIconId():string|null
areaIconId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
areaIconId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

pointList(index: number):string
pointList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
pointList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

pointListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SiracusaData_AreaData(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static addAreaId(builder:flatbuffers.Builder, areaIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, areaIdOffset, 0);
}

static addAreaName(builder:flatbuffers.Builder, areaNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, areaNameOffset, 0);
}

static addAreaSubName(builder:flatbuffers.Builder, areaSubNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, areaSubNameOffset, 0);
}

static addUnlockType(builder:flatbuffers.Builder, unlockType:enum__Torappu_SiracusaData_ZoneUnlockType) {
  builder.addFieldInt32(3, unlockType, enum__Torappu_SiracusaData_ZoneUnlockType.NONE);
}

static addUnlockStage(builder:flatbuffers.Builder, unlockStageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, unlockStageOffset, 0);
}

static addAreaIconId(builder:flatbuffers.Builder, areaIconIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, areaIconIdOffset, 0);
}

static addPointList(builder:flatbuffers.Builder, pointListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, pointListOffset, 0);
}

static createPointListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPointListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_SiracusaData_AreaData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_SiracusaData_AreaData(builder:flatbuffers.Builder, areaIdOffset:flatbuffers.Offset, areaNameOffset:flatbuffers.Offset, areaSubNameOffset:flatbuffers.Offset, unlockType:enum__Torappu_SiracusaData_ZoneUnlockType, unlockStageOffset:flatbuffers.Offset, areaIconIdOffset:flatbuffers.Offset, pointListOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SiracusaData_AreaData.startclz_Torappu_SiracusaData_AreaData(builder);
  clz_Torappu_SiracusaData_AreaData.addAreaId(builder, areaIdOffset);
  clz_Torappu_SiracusaData_AreaData.addAreaName(builder, areaNameOffset);
  clz_Torappu_SiracusaData_AreaData.addAreaSubName(builder, areaSubNameOffset);
  clz_Torappu_SiracusaData_AreaData.addUnlockType(builder, unlockType);
  clz_Torappu_SiracusaData_AreaData.addUnlockStage(builder, unlockStageOffset);
  clz_Torappu_SiracusaData_AreaData.addAreaIconId(builder, areaIconIdOffset);
  clz_Torappu_SiracusaData_AreaData.addPointList(builder, pointListOffset);
  return clz_Torappu_SiracusaData_AreaData.endclz_Torappu_SiracusaData_AreaData(builder);
}

unpack(): clz_Torappu_SiracusaData_AreaDataT {
  return new clz_Torappu_SiracusaData_AreaDataT(
    this.areaId(),
    this.areaName(),
    this.areaSubName(),
    this.unlockType(),
    this.unlockStage(),
    this.areaIconId(),
    this.bb!.createScalarList<string>(this.pointList.bind(this), this.pointListLength())
  );
}


unpackTo(_o: clz_Torappu_SiracusaData_AreaDataT): void {
  _o.areaId = this.areaId();
  _o.areaName = this.areaName();
  _o.areaSubName = this.areaSubName();
  _o.unlockType = this.unlockType();
  _o.unlockStage = this.unlockStage();
  _o.areaIconId = this.areaIconId();
  _o.pointList = this.bb!.createScalarList<string>(this.pointList.bind(this), this.pointListLength());
}
}

export class clz_Torappu_SiracusaData_AreaDataT implements flatbuffers.IGeneratedObject {
constructor(
  public areaId: string|Uint8Array|null = null,
  public areaName: string|Uint8Array|null = null,
  public areaSubName: string|Uint8Array|null = null,
  public unlockType: enum__Torappu_SiracusaData_ZoneUnlockType = enum__Torappu_SiracusaData_ZoneUnlockType.NONE,
  public unlockStage: string|Uint8Array|null = null,
  public areaIconId: string|Uint8Array|null = null,
  public pointList: (string)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const areaId = (this.areaId !== null ? builder.createString(this.areaId!) : 0);
  const areaName = (this.areaName !== null ? builder.createString(this.areaName!) : 0);
  const areaSubName = (this.areaSubName !== null ? builder.createString(this.areaSubName!) : 0);
  const unlockStage = (this.unlockStage !== null ? builder.createString(this.unlockStage!) : 0);
  const areaIconId = (this.areaIconId !== null ? builder.createString(this.areaIconId!) : 0);
  const pointList = clz_Torappu_SiracusaData_AreaData.createPointListVector(builder, builder.createObjectOffsetList(this.pointList));

  return clz_Torappu_SiracusaData_AreaData.createclz_Torappu_SiracusaData_AreaData(builder,
    areaId,
    areaName,
    areaSubName,
    this.unlockType,
    unlockStage,
    areaIconId,
    pointList
  );
}
}
