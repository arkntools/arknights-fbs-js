// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_OccPer } from './enum--torappu-occ-per.js';


export class clz_Torappu_ItemData_StageDropInfo implements flatbuffers.IUnpackableObject<clz_Torappu_ItemData_StageDropInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ItemData_StageDropInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ItemData_StageDropInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ItemData_StageDropInfo):clz_Torappu_ItemData_StageDropInfo {
  return (obj || new clz_Torappu_ItemData_StageDropInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ItemData_StageDropInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ItemData_StageDropInfo):clz_Torappu_ItemData_StageDropInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ItemData_StageDropInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

stageId():string|null
stageId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
stageId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

occPer():enum__Torappu_OccPer {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_OccPer.ALWAYS;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_ItemData_StageDropInfo(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addStageId(builder:flatbuffers.Builder, stageIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, stageIdOffset, 0);
}

static addOccPer(builder:flatbuffers.Builder, occPer:enum__Torappu_OccPer) {
  builder.addFieldInt32(1, occPer, enum__Torappu_OccPer.ALWAYS);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(2, sortId, 0);
}

static endclz_Torappu_ItemData_StageDropInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ItemData_StageDropInfo(builder:flatbuffers.Builder, stageIdOffset:flatbuffers.Offset, occPer:enum__Torappu_OccPer, sortId:number):flatbuffers.Offset {
  clz_Torappu_ItemData_StageDropInfo.startclz_Torappu_ItemData_StageDropInfo(builder);
  clz_Torappu_ItemData_StageDropInfo.addStageId(builder, stageIdOffset);
  clz_Torappu_ItemData_StageDropInfo.addOccPer(builder, occPer);
  clz_Torappu_ItemData_StageDropInfo.addSortId(builder, sortId);
  return clz_Torappu_ItemData_StageDropInfo.endclz_Torappu_ItemData_StageDropInfo(builder);
}

unpack(): clz_Torappu_ItemData_StageDropInfoT {
  return new clz_Torappu_ItemData_StageDropInfoT(
    this.stageId(),
    this.occPer(),
    this.sortId()
  );
}


unpackTo(_o: clz_Torappu_ItemData_StageDropInfoT): void {
  _o.stageId = this.stageId();
  _o.occPer = this.occPer();
  _o.sortId = this.sortId();
}
}

export class clz_Torappu_ItemData_StageDropInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public stageId: string|Uint8Array|null = null,
  public occPer: enum__Torappu_OccPer = enum__Torappu_OccPer.ALWAYS,
  public sortId: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const stageId = (this.stageId !== null ? builder.createString(this.stageId!) : 0);

  return clz_Torappu_ItemData_StageDropInfo.createclz_Torappu_ItemData_StageDropInfo(builder,
    stageId,
    this.occPer,
    this.sortId
  );
}
}
