// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_MissionDisplayRewards, clz_Torappu_MissionDisplayRewardsT } from './clz-torappu-mission-display-rewards.js';
import { enum__Torappu_MissionItemBgType } from './enum--torappu-mission-item-bg-type.js';
import { enum__Torappu_MissionType } from './enum--torappu-mission-type.js';


export class clz_Torappu_FifthAnnivExploreMissionData implements flatbuffers.IUnpackableObject<clz_Torappu_FifthAnnivExploreMissionDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_FifthAnnivExploreMissionData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_FifthAnnivExploreMissionData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_FifthAnnivExploreMissionData):clz_Torappu_FifthAnnivExploreMissionData {
  return (obj || new clz_Torappu_FifthAnnivExploreMissionData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_FifthAnnivExploreMissionData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_FifthAnnivExploreMissionData):clz_Torappu_FifthAnnivExploreMissionData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_FifthAnnivExploreMissionData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

progressUpLimit():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

sortId():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

description():string|null
description(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
description(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

type():enum__Torappu_MissionType {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_MissionType.UNKNOWN;
}

itemBgType():enum__Torappu_MissionItemBgType {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_MissionItemBgType.COMMON;
}

preMissionIds(index: number):string
preMissionIds(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
preMissionIds(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

preMissionIdsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

template():string|null
template(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
template(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

templateType():string|null
templateType(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
templateType(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

param(index: number):string
param(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
param(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

paramLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

unlockCondition():string|null
unlockCondition(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
unlockCondition(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

unlockParam(index: number):string
unlockParam(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
unlockParam(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

unlockParamLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

missionGroup():string|null
missionGroup(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
missionGroup(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

toPage():string|null
toPage(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
toPage(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

periodicalPoint():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

rewards(index: number, obj?:clz_Torappu_MissionDisplayRewards):clz_Torappu_MissionDisplayRewards|null {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? (obj || new clz_Torappu_MissionDisplayRewards()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

rewardsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

backImagePath():string|null
backImagePath(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
backImagePath(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

foldId():string|null
foldId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
foldId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 38);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

haveSubMissionToUnlock():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

countEndTs():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startclz_Torappu_FifthAnnivExploreMissionData(builder:flatbuffers.Builder) {
  builder.startObject(20);
}

static addProgressUpLimit(builder:flatbuffers.Builder, progressUpLimit:number) {
  builder.addFieldInt32(0, progressUpLimit, 0);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, idOffset, 0);
}

static addSortId(builder:flatbuffers.Builder, sortId:number) {
  builder.addFieldInt32(2, sortId, 0);
}

static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, descriptionOffset, 0);
}

static addType(builder:flatbuffers.Builder, type:enum__Torappu_MissionType) {
  builder.addFieldInt32(4, type, enum__Torappu_MissionType.UNKNOWN);
}

static addItemBgType(builder:flatbuffers.Builder, itemBgType:enum__Torappu_MissionItemBgType) {
  builder.addFieldInt32(5, itemBgType, enum__Torappu_MissionItemBgType.COMMON);
}

static addPreMissionIds(builder:flatbuffers.Builder, preMissionIdsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, preMissionIdsOffset, 0);
}

static createPreMissionIdsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPreMissionIdsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTemplate(builder:flatbuffers.Builder, templateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, templateOffset, 0);
}

static addTemplateType(builder:flatbuffers.Builder, templateTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, templateTypeOffset, 0);
}

static addParam(builder:flatbuffers.Builder, paramOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, paramOffset, 0);
}

static createParamVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startParamVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addUnlockCondition(builder:flatbuffers.Builder, unlockConditionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, unlockConditionOffset, 0);
}

static addUnlockParam(builder:flatbuffers.Builder, unlockParamOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, unlockParamOffset, 0);
}

static createUnlockParamVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startUnlockParamVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addMissionGroup(builder:flatbuffers.Builder, missionGroupOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, missionGroupOffset, 0);
}

static addToPage(builder:flatbuffers.Builder, toPageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, toPageOffset, 0);
}

static addPeriodicalPoint(builder:flatbuffers.Builder, periodicalPoint:number) {
  builder.addFieldInt32(14, periodicalPoint, 0);
}

static addRewards(builder:flatbuffers.Builder, rewardsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(15, rewardsOffset, 0);
}

static createRewardsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRewardsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addBackImagePath(builder:flatbuffers.Builder, backImagePathOffset:flatbuffers.Offset) {
  builder.addFieldOffset(16, backImagePathOffset, 0);
}

static addFoldId(builder:flatbuffers.Builder, foldIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(17, foldIdOffset, 0);
}

static addHaveSubMissionToUnlock(builder:flatbuffers.Builder, haveSubMissionToUnlock:boolean) {
  builder.addFieldInt8(18, +haveSubMissionToUnlock, +false);
}

static addCountEndTs(builder:flatbuffers.Builder, countEndTs:bigint) {
  builder.addFieldInt64(19, countEndTs, BigInt('0'));
}

static endclz_Torappu_FifthAnnivExploreMissionData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_FifthAnnivExploreMissionData(builder:flatbuffers.Builder, progressUpLimit:number, idOffset:flatbuffers.Offset, sortId:number, descriptionOffset:flatbuffers.Offset, type:enum__Torappu_MissionType, itemBgType:enum__Torappu_MissionItemBgType, preMissionIdsOffset:flatbuffers.Offset, templateOffset:flatbuffers.Offset, templateTypeOffset:flatbuffers.Offset, paramOffset:flatbuffers.Offset, unlockConditionOffset:flatbuffers.Offset, unlockParamOffset:flatbuffers.Offset, missionGroupOffset:flatbuffers.Offset, toPageOffset:flatbuffers.Offset, periodicalPoint:number, rewardsOffset:flatbuffers.Offset, backImagePathOffset:flatbuffers.Offset, foldIdOffset:flatbuffers.Offset, haveSubMissionToUnlock:boolean, countEndTs:bigint):flatbuffers.Offset {
  clz_Torappu_FifthAnnivExploreMissionData.startclz_Torappu_FifthAnnivExploreMissionData(builder);
  clz_Torappu_FifthAnnivExploreMissionData.addProgressUpLimit(builder, progressUpLimit);
  clz_Torappu_FifthAnnivExploreMissionData.addId(builder, idOffset);
  clz_Torappu_FifthAnnivExploreMissionData.addSortId(builder, sortId);
  clz_Torappu_FifthAnnivExploreMissionData.addDescription(builder, descriptionOffset);
  clz_Torappu_FifthAnnivExploreMissionData.addType(builder, type);
  clz_Torappu_FifthAnnivExploreMissionData.addItemBgType(builder, itemBgType);
  clz_Torappu_FifthAnnivExploreMissionData.addPreMissionIds(builder, preMissionIdsOffset);
  clz_Torappu_FifthAnnivExploreMissionData.addTemplate(builder, templateOffset);
  clz_Torappu_FifthAnnivExploreMissionData.addTemplateType(builder, templateTypeOffset);
  clz_Torappu_FifthAnnivExploreMissionData.addParam(builder, paramOffset);
  clz_Torappu_FifthAnnivExploreMissionData.addUnlockCondition(builder, unlockConditionOffset);
  clz_Torappu_FifthAnnivExploreMissionData.addUnlockParam(builder, unlockParamOffset);
  clz_Torappu_FifthAnnivExploreMissionData.addMissionGroup(builder, missionGroupOffset);
  clz_Torappu_FifthAnnivExploreMissionData.addToPage(builder, toPageOffset);
  clz_Torappu_FifthAnnivExploreMissionData.addPeriodicalPoint(builder, periodicalPoint);
  clz_Torappu_FifthAnnivExploreMissionData.addRewards(builder, rewardsOffset);
  clz_Torappu_FifthAnnivExploreMissionData.addBackImagePath(builder, backImagePathOffset);
  clz_Torappu_FifthAnnivExploreMissionData.addFoldId(builder, foldIdOffset);
  clz_Torappu_FifthAnnivExploreMissionData.addHaveSubMissionToUnlock(builder, haveSubMissionToUnlock);
  clz_Torappu_FifthAnnivExploreMissionData.addCountEndTs(builder, countEndTs);
  return clz_Torappu_FifthAnnivExploreMissionData.endclz_Torappu_FifthAnnivExploreMissionData(builder);
}

unpack(): clz_Torappu_FifthAnnivExploreMissionDataT {
  return new clz_Torappu_FifthAnnivExploreMissionDataT(
    this.progressUpLimit(),
    this.id(),
    this.sortId(),
    this.description(),
    this.type(),
    this.itemBgType(),
    this.bb!.createScalarList<string>(this.preMissionIds.bind(this), this.preMissionIdsLength()),
    this.template(),
    this.templateType(),
    this.bb!.createScalarList<string>(this.param.bind(this), this.paramLength()),
    this.unlockCondition(),
    this.bb!.createScalarList<string>(this.unlockParam.bind(this), this.unlockParamLength()),
    this.missionGroup(),
    this.toPage(),
    this.periodicalPoint(),
    this.bb!.createObjList<clz_Torappu_MissionDisplayRewards, clz_Torappu_MissionDisplayRewardsT>(this.rewards.bind(this), this.rewardsLength()),
    this.backImagePath(),
    this.foldId(),
    this.haveSubMissionToUnlock(),
    this.countEndTs()
  );
}


unpackTo(_o: clz_Torappu_FifthAnnivExploreMissionDataT): void {
  _o.progressUpLimit = this.progressUpLimit();
  _o.id = this.id();
  _o.sortId = this.sortId();
  _o.description = this.description();
  _o.type = this.type();
  _o.itemBgType = this.itemBgType();
  _o.preMissionIds = this.bb!.createScalarList<string>(this.preMissionIds.bind(this), this.preMissionIdsLength());
  _o.template = this.template();
  _o.templateType = this.templateType();
  _o.param = this.bb!.createScalarList<string>(this.param.bind(this), this.paramLength());
  _o.unlockCondition = this.unlockCondition();
  _o.unlockParam = this.bb!.createScalarList<string>(this.unlockParam.bind(this), this.unlockParamLength());
  _o.missionGroup = this.missionGroup();
  _o.toPage = this.toPage();
  _o.periodicalPoint = this.periodicalPoint();
  _o.rewards = this.bb!.createObjList<clz_Torappu_MissionDisplayRewards, clz_Torappu_MissionDisplayRewardsT>(this.rewards.bind(this), this.rewardsLength());
  _o.backImagePath = this.backImagePath();
  _o.foldId = this.foldId();
  _o.haveSubMissionToUnlock = this.haveSubMissionToUnlock();
  _o.countEndTs = this.countEndTs();
}
}

export class clz_Torappu_FifthAnnivExploreMissionDataT implements flatbuffers.IGeneratedObject {
constructor(
  public progressUpLimit: number = 0,
  public id: string|Uint8Array|null = null,
  public sortId: number = 0,
  public description: string|Uint8Array|null = null,
  public type: enum__Torappu_MissionType = enum__Torappu_MissionType.UNKNOWN,
  public itemBgType: enum__Torappu_MissionItemBgType = enum__Torappu_MissionItemBgType.COMMON,
  public preMissionIds: (string)[] = [],
  public template: string|Uint8Array|null = null,
  public templateType: string|Uint8Array|null = null,
  public param: (string)[] = [],
  public unlockCondition: string|Uint8Array|null = null,
  public unlockParam: (string)[] = [],
  public missionGroup: string|Uint8Array|null = null,
  public toPage: string|Uint8Array|null = null,
  public periodicalPoint: number = 0,
  public rewards: (clz_Torappu_MissionDisplayRewardsT)[] = [],
  public backImagePath: string|Uint8Array|null = null,
  public foldId: string|Uint8Array|null = null,
  public haveSubMissionToUnlock: boolean = false,
  public countEndTs: bigint = BigInt('0')
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const id = (this.id !== null ? builder.createString(this.id!) : 0);
  const description = (this.description !== null ? builder.createString(this.description!) : 0);
  const preMissionIds = clz_Torappu_FifthAnnivExploreMissionData.createPreMissionIdsVector(builder, builder.createObjectOffsetList(this.preMissionIds));
  const template = (this.template !== null ? builder.createString(this.template!) : 0);
  const templateType = (this.templateType !== null ? builder.createString(this.templateType!) : 0);
  const param = clz_Torappu_FifthAnnivExploreMissionData.createParamVector(builder, builder.createObjectOffsetList(this.param));
  const unlockCondition = (this.unlockCondition !== null ? builder.createString(this.unlockCondition!) : 0);
  const unlockParam = clz_Torappu_FifthAnnivExploreMissionData.createUnlockParamVector(builder, builder.createObjectOffsetList(this.unlockParam));
  const missionGroup = (this.missionGroup !== null ? builder.createString(this.missionGroup!) : 0);
  const toPage = (this.toPage !== null ? builder.createString(this.toPage!) : 0);
  const rewards = clz_Torappu_FifthAnnivExploreMissionData.createRewardsVector(builder, builder.createObjectOffsetList(this.rewards));
  const backImagePath = (this.backImagePath !== null ? builder.createString(this.backImagePath!) : 0);
  const foldId = (this.foldId !== null ? builder.createString(this.foldId!) : 0);

  return clz_Torappu_FifthAnnivExploreMissionData.createclz_Torappu_FifthAnnivExploreMissionData(builder,
    this.progressUpLimit,
    id,
    this.sortId,
    description,
    this.type,
    this.itemBgType,
    preMissionIds,
    template,
    templateType,
    param,
    unlockCondition,
    unlockParam,
    missionGroup,
    toPage,
    this.periodicalPoint,
    rewards,
    backImagePath,
    foldId,
    this.haveSubMissionToUnlock,
    this.countEndTs
  );
}
}
