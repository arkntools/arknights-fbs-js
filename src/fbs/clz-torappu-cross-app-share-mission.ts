// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_MissionDisplayRewards, clz_Torappu_MissionDisplayRewardsT } from './clz-torappu-mission-display-rewards.js';
import { enum__Torappu_CrossAppShareMissionType } from './enum--torappu-cross-app-share-mission-type.js';


export class clz_Torappu_CrossAppShareMission implements flatbuffers.IUnpackableObject<clz_Torappu_CrossAppShareMissionT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_CrossAppShareMission {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_CrossAppShareMission(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CrossAppShareMission):clz_Torappu_CrossAppShareMission {
  return (obj || new clz_Torappu_CrossAppShareMission()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_CrossAppShareMission(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CrossAppShareMission):clz_Torappu_CrossAppShareMission {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_CrossAppShareMission()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

shareMissionId():string|null
shareMissionId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
shareMissionId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

missionType():enum__Torappu_CrossAppShareMissionType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_CrossAppShareMissionType.NORMAL;
}

relateActivityId():string|null
relateActivityId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
relateActivityId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

startTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

endTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

limitCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

condTemplate():string|null
condTemplate(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
condTemplate(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

condParam(index: number):string
condParam(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
condParam(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

condParamLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

rewardsList(index: number, obj?:clz_Torappu_MissionDisplayRewards):clz_Torappu_MissionDisplayRewards|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? (obj || new clz_Torappu_MissionDisplayRewards()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

rewardsListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_CrossAppShareMission(builder:flatbuffers.Builder) {
  builder.startObject(9);
}

static addShareMissionId(builder:flatbuffers.Builder, shareMissionIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, shareMissionIdOffset, 0);
}

static addMissionType(builder:flatbuffers.Builder, missionType:enum__Torappu_CrossAppShareMissionType) {
  builder.addFieldInt32(1, missionType, enum__Torappu_CrossAppShareMissionType.NORMAL);
}

static addRelateActivityId(builder:flatbuffers.Builder, relateActivityIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, relateActivityIdOffset, 0);
}

static addStartTime(builder:flatbuffers.Builder, startTime:bigint) {
  builder.addFieldInt64(3, startTime, BigInt('0'));
}

static addEndTime(builder:flatbuffers.Builder, endTime:bigint) {
  builder.addFieldInt64(4, endTime, BigInt('0'));
}

static addLimitCount(builder:flatbuffers.Builder, limitCount:number) {
  builder.addFieldInt32(5, limitCount, 0);
}

static addCondTemplate(builder:flatbuffers.Builder, condTemplateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, condTemplateOffset, 0);
}

static addCondParam(builder:flatbuffers.Builder, condParamOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, condParamOffset, 0);
}

static createCondParamVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCondParamVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRewardsList(builder:flatbuffers.Builder, rewardsListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, rewardsListOffset, 0);
}

static createRewardsListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRewardsListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_CrossAppShareMission(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_CrossAppShareMission(builder:flatbuffers.Builder, shareMissionIdOffset:flatbuffers.Offset, missionType:enum__Torappu_CrossAppShareMissionType, relateActivityIdOffset:flatbuffers.Offset, startTime:bigint, endTime:bigint, limitCount:number, condTemplateOffset:flatbuffers.Offset, condParamOffset:flatbuffers.Offset, rewardsListOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_CrossAppShareMission.startclz_Torappu_CrossAppShareMission(builder);
  clz_Torappu_CrossAppShareMission.addShareMissionId(builder, shareMissionIdOffset);
  clz_Torappu_CrossAppShareMission.addMissionType(builder, missionType);
  clz_Torappu_CrossAppShareMission.addRelateActivityId(builder, relateActivityIdOffset);
  clz_Torappu_CrossAppShareMission.addStartTime(builder, startTime);
  clz_Torappu_CrossAppShareMission.addEndTime(builder, endTime);
  clz_Torappu_CrossAppShareMission.addLimitCount(builder, limitCount);
  clz_Torappu_CrossAppShareMission.addCondTemplate(builder, condTemplateOffset);
  clz_Torappu_CrossAppShareMission.addCondParam(builder, condParamOffset);
  clz_Torappu_CrossAppShareMission.addRewardsList(builder, rewardsListOffset);
  return clz_Torappu_CrossAppShareMission.endclz_Torappu_CrossAppShareMission(builder);
}

unpack(): clz_Torappu_CrossAppShareMissionT {
  return new clz_Torappu_CrossAppShareMissionT(
    this.shareMissionId(),
    this.missionType(),
    this.relateActivityId(),
    this.startTime(),
    this.endTime(),
    this.limitCount(),
    this.condTemplate(),
    this.bb!.createScalarList<string>(this.condParam.bind(this), this.condParamLength()),
    this.bb!.createObjList<clz_Torappu_MissionDisplayRewards, clz_Torappu_MissionDisplayRewardsT>(this.rewardsList.bind(this), this.rewardsListLength())
  );
}


unpackTo(_o: clz_Torappu_CrossAppShareMissionT): void {
  _o.shareMissionId = this.shareMissionId();
  _o.missionType = this.missionType();
  _o.relateActivityId = this.relateActivityId();
  _o.startTime = this.startTime();
  _o.endTime = this.endTime();
  _o.limitCount = this.limitCount();
  _o.condTemplate = this.condTemplate();
  _o.condParam = this.bb!.createScalarList<string>(this.condParam.bind(this), this.condParamLength());
  _o.rewardsList = this.bb!.createObjList<clz_Torappu_MissionDisplayRewards, clz_Torappu_MissionDisplayRewardsT>(this.rewardsList.bind(this), this.rewardsListLength());
}
}

export class clz_Torappu_CrossAppShareMissionT implements flatbuffers.IGeneratedObject {
constructor(
  public shareMissionId: string|Uint8Array|null = null,
  public missionType: enum__Torappu_CrossAppShareMissionType = enum__Torappu_CrossAppShareMissionType.NORMAL,
  public relateActivityId: string|Uint8Array|null = null,
  public startTime: bigint = BigInt('0'),
  public endTime: bigint = BigInt('0'),
  public limitCount: number = 0,
  public condTemplate: string|Uint8Array|null = null,
  public condParam: (string)[] = [],
  public rewardsList: (clz_Torappu_MissionDisplayRewardsT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const shareMissionId = (this.shareMissionId !== null ? builder.createString(this.shareMissionId!) : 0);
  const relateActivityId = (this.relateActivityId !== null ? builder.createString(this.relateActivityId!) : 0);
  const condTemplate = (this.condTemplate !== null ? builder.createString(this.condTemplate!) : 0);
  const condParam = clz_Torappu_CrossAppShareMission.createCondParamVector(builder, builder.createObjectOffsetList(this.condParam));
  const rewardsList = clz_Torappu_CrossAppShareMission.createRewardsListVector(builder, builder.createObjectOffsetList(this.rewardsList));

  return clz_Torappu_CrossAppShareMission.createclz_Torappu_CrossAppShareMission(builder,
    shareMissionId,
    this.missionType,
    relateActivityId,
    this.startTime,
    this.endTime,
    this.limitCount,
    condTemplate,
    condParam,
    rewardsList
  );
}
}
