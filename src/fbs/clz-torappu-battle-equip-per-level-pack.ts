// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_BattleUniEquipData, clz_Torappu_BattleUniEquipDataT } from './clz-torappu-battle-uni-equip-data.js';
import { clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT } from './clz-torappu-blackboard-data-pair.js';
import { dict__string__list_clz_Torappu_Blackboard_DataPair, dict__string__list_clz_Torappu_Blackboard_DataPairT } from './dict--string--list-clz-torappu-blackboard-data-pair.js';


export class clz_Torappu_BattleEquipPerLevelPack implements flatbuffers.IUnpackableObject<clz_Torappu_BattleEquipPerLevelPackT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_BattleEquipPerLevelPack {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_BattleEquipPerLevelPack(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BattleEquipPerLevelPack):clz_Torappu_BattleEquipPerLevelPack {
  return (obj || new clz_Torappu_BattleEquipPerLevelPack()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_BattleEquipPerLevelPack(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BattleEquipPerLevelPack):clz_Torappu_BattleEquipPerLevelPack {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_BattleEquipPerLevelPack()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

equipLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

parts(index: number, obj?:clz_Torappu_BattleUniEquipData):clz_Torappu_BattleUniEquipData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new clz_Torappu_BattleUniEquipData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

partsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

attributeBlackboard(index: number, obj?:clz_Torappu_Blackboard_DataPair):clz_Torappu_Blackboard_DataPair|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new clz_Torappu_Blackboard_DataPair()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

attributeBlackboardLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

tokenAttributeBlackboard(index: number, obj?:dict__string__list_clz_Torappu_Blackboard_DataPair):dict__string__list_clz_Torappu_Blackboard_DataPair|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new dict__string__list_clz_Torappu_Blackboard_DataPair()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

tokenAttributeBlackboardLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_BattleEquipPerLevelPack(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addEquipLevel(builder:flatbuffers.Builder, equipLevel:number) {
  builder.addFieldInt32(0, equipLevel, 0);
}

static addParts(builder:flatbuffers.Builder, partsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, partsOffset, 0);
}

static createPartsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPartsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addAttributeBlackboard(builder:flatbuffers.Builder, attributeBlackboardOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, attributeBlackboardOffset, 0);
}

static createAttributeBlackboardVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startAttributeBlackboardVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTokenAttributeBlackboard(builder:flatbuffers.Builder, tokenAttributeBlackboardOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, tokenAttributeBlackboardOffset, 0);
}

static createTokenAttributeBlackboardVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startTokenAttributeBlackboardVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_BattleEquipPerLevelPack(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_BattleEquipPerLevelPack(builder:flatbuffers.Builder, equipLevel:number, partsOffset:flatbuffers.Offset, attributeBlackboardOffset:flatbuffers.Offset, tokenAttributeBlackboardOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_BattleEquipPerLevelPack.startclz_Torappu_BattleEquipPerLevelPack(builder);
  clz_Torappu_BattleEquipPerLevelPack.addEquipLevel(builder, equipLevel);
  clz_Torappu_BattleEquipPerLevelPack.addParts(builder, partsOffset);
  clz_Torappu_BattleEquipPerLevelPack.addAttributeBlackboard(builder, attributeBlackboardOffset);
  clz_Torappu_BattleEquipPerLevelPack.addTokenAttributeBlackboard(builder, tokenAttributeBlackboardOffset);
  return clz_Torappu_BattleEquipPerLevelPack.endclz_Torappu_BattleEquipPerLevelPack(builder);
}

unpack(): clz_Torappu_BattleEquipPerLevelPackT {
  return new clz_Torappu_BattleEquipPerLevelPackT(
    this.equipLevel(),
    this.bb!.createObjList<clz_Torappu_BattleUniEquipData, clz_Torappu_BattleUniEquipDataT>(this.parts.bind(this), this.partsLength()),
    this.bb!.createObjList<clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT>(this.attributeBlackboard.bind(this), this.attributeBlackboardLength()),
    this.bb!.createObjList<dict__string__list_clz_Torappu_Blackboard_DataPair, dict__string__list_clz_Torappu_Blackboard_DataPairT>(this.tokenAttributeBlackboard.bind(this), this.tokenAttributeBlackboardLength())
  );
}


unpackTo(_o: clz_Torappu_BattleEquipPerLevelPackT): void {
  _o.equipLevel = this.equipLevel();
  _o.parts = this.bb!.createObjList<clz_Torappu_BattleUniEquipData, clz_Torappu_BattleUniEquipDataT>(this.parts.bind(this), this.partsLength());
  _o.attributeBlackboard = this.bb!.createObjList<clz_Torappu_Blackboard_DataPair, clz_Torappu_Blackboard_DataPairT>(this.attributeBlackboard.bind(this), this.attributeBlackboardLength());
  _o.tokenAttributeBlackboard = this.bb!.createObjList<dict__string__list_clz_Torappu_Blackboard_DataPair, dict__string__list_clz_Torappu_Blackboard_DataPairT>(this.tokenAttributeBlackboard.bind(this), this.tokenAttributeBlackboardLength());
}
}

export class clz_Torappu_BattleEquipPerLevelPackT implements flatbuffers.IGeneratedObject {
constructor(
  public equipLevel: number = 0,
  public parts: (clz_Torappu_BattleUniEquipDataT)[] = [],
  public attributeBlackboard: (clz_Torappu_Blackboard_DataPairT)[] = [],
  public tokenAttributeBlackboard: (dict__string__list_clz_Torappu_Blackboard_DataPairT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const parts = clz_Torappu_BattleEquipPerLevelPack.createPartsVector(builder, builder.createObjectOffsetList(this.parts));
  const attributeBlackboard = clz_Torappu_BattleEquipPerLevelPack.createAttributeBlackboardVector(builder, builder.createObjectOffsetList(this.attributeBlackboard));
  const tokenAttributeBlackboard = clz_Torappu_BattleEquipPerLevelPack.createTokenAttributeBlackboardVector(builder, builder.createObjectOffsetList(this.tokenAttributeBlackboard));

  return clz_Torappu_BattleEquipPerLevelPack.createclz_Torappu_BattleEquipPerLevelPack(builder,
    this.equipLevel,
    parts,
    attributeBlackboard,
    tokenAttributeBlackboard
  );
}
}
