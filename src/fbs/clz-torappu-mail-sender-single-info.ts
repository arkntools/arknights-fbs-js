// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_MailSenderSingleInfo implements flatbuffers.IUnpackableObject<clz_Torappu_MailSenderSingleInfoT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_MailSenderSingleInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_MailSenderSingleInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_MailSenderSingleInfo):clz_Torappu_MailSenderSingleInfo {
  return (obj || new clz_Torappu_MailSenderSingleInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_MailSenderSingleInfo(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_MailSenderSingleInfo):clz_Torappu_MailSenderSingleInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_MailSenderSingleInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

senderId():string|null
senderId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
senderId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

senderName():string|null
senderName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
senderName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

avatarId():string|null
avatarId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
avatarId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_MailSenderSingleInfo(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addSenderId(builder:flatbuffers.Builder, senderIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, senderIdOffset, 0);
}

static addSenderName(builder:flatbuffers.Builder, senderNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, senderNameOffset, 0);
}

static addAvatarId(builder:flatbuffers.Builder, avatarIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, avatarIdOffset, 0);
}

static endclz_Torappu_MailSenderSingleInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_MailSenderSingleInfo(builder:flatbuffers.Builder, senderIdOffset:flatbuffers.Offset, senderNameOffset:flatbuffers.Offset, avatarIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_MailSenderSingleInfo.startclz_Torappu_MailSenderSingleInfo(builder);
  clz_Torappu_MailSenderSingleInfo.addSenderId(builder, senderIdOffset);
  clz_Torappu_MailSenderSingleInfo.addSenderName(builder, senderNameOffset);
  clz_Torappu_MailSenderSingleInfo.addAvatarId(builder, avatarIdOffset);
  return clz_Torappu_MailSenderSingleInfo.endclz_Torappu_MailSenderSingleInfo(builder);
}

unpack(): clz_Torappu_MailSenderSingleInfoT {
  return new clz_Torappu_MailSenderSingleInfoT(
    this.senderId(),
    this.senderName(),
    this.avatarId()
  );
}


unpackTo(_o: clz_Torappu_MailSenderSingleInfoT): void {
  _o.senderId = this.senderId();
  _o.senderName = this.senderName();
  _o.avatarId = this.avatarId();
}
}

export class clz_Torappu_MailSenderSingleInfoT implements flatbuffers.IGeneratedObject {
constructor(
  public senderId: string|Uint8Array|null = null,
  public senderName: string|Uint8Array|null = null,
  public avatarId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const senderId = (this.senderId !== null ? builder.createString(this.senderId!) : 0);
  const senderName = (this.senderName !== null ? builder.createString(this.senderName!) : 0);
  const avatarId = (this.avatarId !== null ? builder.createString(this.avatarId!) : 0);

  return clz_Torappu_MailSenderSingleInfo.createclz_Torappu_MailSenderSingleInfo(builder,
    senderId,
    senderName,
    avatarId
  );
}
}
