// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActivityBossRushData_BossRushMissionAdditionData implements flatbuffers.IUnpackableObject<clz_Torappu_ActivityBossRushData_BossRushMissionAdditionDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActivityBossRushData_BossRushMissionAdditionData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActivityBossRushData_BossRushMissionAdditionData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityBossRushData_BossRushMissionAdditionData):clz_Torappu_ActivityBossRushData_BossRushMissionAdditionData {
  return (obj || new clz_Torappu_ActivityBossRushData_BossRushMissionAdditionData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActivityBossRushData_BossRushMissionAdditionData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityBossRushData_BossRushMissionAdditionData):clz_Torappu_ActivityBossRushData_BossRushMissionAdditionData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActivityBossRushData_BossRushMissionAdditionData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

missionId():string|null
missionId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
missionId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

isRelicTask():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startclz_Torappu_ActivityBossRushData_BossRushMissionAdditionData(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addMissionId(builder:flatbuffers.Builder, missionIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, missionIdOffset, 0);
}

static addIsRelicTask(builder:flatbuffers.Builder, isRelicTask:boolean) {
  builder.addFieldInt8(1, +isRelicTask, +false);
}

static endclz_Torappu_ActivityBossRushData_BossRushMissionAdditionData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActivityBossRushData_BossRushMissionAdditionData(builder:flatbuffers.Builder, missionIdOffset:flatbuffers.Offset, isRelicTask:boolean):flatbuffers.Offset {
  clz_Torappu_ActivityBossRushData_BossRushMissionAdditionData.startclz_Torappu_ActivityBossRushData_BossRushMissionAdditionData(builder);
  clz_Torappu_ActivityBossRushData_BossRushMissionAdditionData.addMissionId(builder, missionIdOffset);
  clz_Torappu_ActivityBossRushData_BossRushMissionAdditionData.addIsRelicTask(builder, isRelicTask);
  return clz_Torappu_ActivityBossRushData_BossRushMissionAdditionData.endclz_Torappu_ActivityBossRushData_BossRushMissionAdditionData(builder);
}

unpack(): clz_Torappu_ActivityBossRushData_BossRushMissionAdditionDataT {
  return new clz_Torappu_ActivityBossRushData_BossRushMissionAdditionDataT(
    this.missionId(),
    this.isRelicTask()
  );
}


unpackTo(_o: clz_Torappu_ActivityBossRushData_BossRushMissionAdditionDataT): void {
  _o.missionId = this.missionId();
  _o.isRelicTask = this.isRelicTask();
}
}

export class clz_Torappu_ActivityBossRushData_BossRushMissionAdditionDataT implements flatbuffers.IGeneratedObject {
constructor(
  public missionId: string|Uint8Array|null = null,
  public isRelicTask: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const missionId = (this.missionId !== null ? builder.createString(this.missionId!) : 0);

  return clz_Torappu_ActivityBossRushData_BossRushMissionAdditionData.createclz_Torappu_ActivityBossRushData_BossRushMissionAdditionData(builder,
    missionId,
    this.isRelicTask
  );
}
}
