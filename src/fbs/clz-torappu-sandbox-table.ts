// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { dict__string__clz_Torappu_SandboxActTable, dict__string__clz_Torappu_SandboxActTableT } from './dict--string--clz-torappu-sandbox-act-table.js';
import { dict__string__clz_Torappu_SandboxItemData, dict__string__clz_Torappu_SandboxItemDataT } from './dict--string--clz-torappu-sandbox-item-data.js';


export class clz_Torappu_SandboxTable implements flatbuffers.IUnpackableObject<clz_Torappu_SandboxTableT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_SandboxTable {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_SandboxTable(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxTable):clz_Torappu_SandboxTable {
  return (obj || new clz_Torappu_SandboxTable()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_SandboxTable(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_SandboxTable):clz_Torappu_SandboxTable {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_SandboxTable()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

sandboxActTables(index: number, obj?:dict__string__clz_Torappu_SandboxActTable):dict__string__clz_Torappu_SandboxActTable|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxActTable()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

sandboxActTablesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

itemDatas(index: number, obj?:dict__string__clz_Torappu_SandboxItemData):dict__string__clz_Torappu_SandboxItemData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new dict__string__clz_Torappu_SandboxItemData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

itemDatasLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_SandboxTable(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addSandboxActTables(builder:flatbuffers.Builder, sandboxActTablesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, sandboxActTablesOffset, 0);
}

static createSandboxActTablesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startSandboxActTablesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addItemDatas(builder:flatbuffers.Builder, itemDatasOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, itemDatasOffset, 0);
}

static createItemDatasVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startItemDatasVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_SandboxTable(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishclz_Torappu_SandboxTableBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedclz_Torappu_SandboxTableBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createclz_Torappu_SandboxTable(builder:flatbuffers.Builder, sandboxActTablesOffset:flatbuffers.Offset, itemDatasOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_SandboxTable.startclz_Torappu_SandboxTable(builder);
  clz_Torappu_SandboxTable.addSandboxActTables(builder, sandboxActTablesOffset);
  clz_Torappu_SandboxTable.addItemDatas(builder, itemDatasOffset);
  return clz_Torappu_SandboxTable.endclz_Torappu_SandboxTable(builder);
}

unpack(): clz_Torappu_SandboxTableT {
  return new clz_Torappu_SandboxTableT(
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxActTable, dict__string__clz_Torappu_SandboxActTableT>(this.sandboxActTables.bind(this), this.sandboxActTablesLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_SandboxItemData, dict__string__clz_Torappu_SandboxItemDataT>(this.itemDatas.bind(this), this.itemDatasLength())
  );
}


unpackTo(_o: clz_Torappu_SandboxTableT): void {
  _o.sandboxActTables = this.bb!.createObjList<dict__string__clz_Torappu_SandboxActTable, dict__string__clz_Torappu_SandboxActTableT>(this.sandboxActTables.bind(this), this.sandboxActTablesLength());
  _o.itemDatas = this.bb!.createObjList<dict__string__clz_Torappu_SandboxItemData, dict__string__clz_Torappu_SandboxItemDataT>(this.itemDatas.bind(this), this.itemDatasLength());
}
}

export class clz_Torappu_SandboxTableT implements flatbuffers.IGeneratedObject {
constructor(
  public sandboxActTables: (dict__string__clz_Torappu_SandboxActTableT)[] = [],
  public itemDatas: (dict__string__clz_Torappu_SandboxItemDataT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const sandboxActTables = clz_Torappu_SandboxTable.createSandboxActTablesVector(builder, builder.createObjectOffsetList(this.sandboxActTables));
  const itemDatas = clz_Torappu_SandboxTable.createItemDatasVector(builder, builder.createObjectOffsetList(this.itemDatas));

  return clz_Torappu_SandboxTable.createclz_Torappu_SandboxTable(builder,
    sandboxActTables,
    itemDatas
  );
}
}
