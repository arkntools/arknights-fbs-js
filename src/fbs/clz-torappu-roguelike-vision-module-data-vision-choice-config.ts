// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { enum__Torappu_RoguelikeVisionModuleData_VisionChoiceCheckType } from './enum--torappu-roguelike-vision-module-data-vision-choice-check-type.js';


export class clz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig implements flatbuffers.IUnpackableObject<clz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfigT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig):clz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig {
  return (obj || new clz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig):clz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

value():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

type():enum__Torappu_RoguelikeVisionModuleData_VisionChoiceCheckType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_RoguelikeVisionModuleData_VisionChoiceCheckType.LOWER;
}

static startclz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addValue(builder:flatbuffers.Builder, value:number) {
  builder.addFieldInt32(0, value, 0);
}

static addType(builder:flatbuffers.Builder, type:enum__Torappu_RoguelikeVisionModuleData_VisionChoiceCheckType) {
  builder.addFieldInt32(1, type, enum__Torappu_RoguelikeVisionModuleData_VisionChoiceCheckType.LOWER);
}

static endclz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig(builder:flatbuffers.Builder, value:number, type:enum__Torappu_RoguelikeVisionModuleData_VisionChoiceCheckType):flatbuffers.Offset {
  clz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig.startclz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig(builder);
  clz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig.addValue(builder, value);
  clz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig.addType(builder, type);
  return clz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig.endclz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig(builder);
}

unpack(): clz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfigT {
  return new clz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfigT(
    this.value(),
    this.type()
  );
}


unpackTo(_o: clz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfigT): void {
  _o.value = this.value();
  _o.type = this.type();
}
}

export class clz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfigT implements flatbuffers.IGeneratedObject {
constructor(
  public value: number = 0,
  public type: enum__Torappu_RoguelikeVisionModuleData_VisionChoiceCheckType = enum__Torappu_RoguelikeVisionModuleData_VisionChoiceCheckType.LOWER
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return clz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig.createclz_Torappu_RoguelikeVisionModuleData_VisionChoiceConfig(builder,
    this.value,
    this.type
  );
}
}
