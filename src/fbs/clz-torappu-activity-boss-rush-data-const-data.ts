// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActivityBossRushData_ConstData implements flatbuffers.IUnpackableObject<clz_Torappu_ActivityBossRushData_ConstDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActivityBossRushData_ConstData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActivityBossRushData_ConstData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityBossRushData_ConstData):clz_Torappu_ActivityBossRushData_ConstData {
  return (obj || new clz_Torappu_ActivityBossRushData_ConstData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActivityBossRushData_ConstData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActivityBossRushData_ConstData):clz_Torappu_ActivityBossRushData_ConstData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActivityBossRushData_ConstData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

maxProvidedCharNum():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

textMilestoneItemLevelDesc():string|null
textMilestoneItemLevelDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
textMilestoneItemLevelDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

milestonePointId():string|null
milestonePointId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
milestonePointId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

relicUpgradeItemId():string|null
relicUpgradeItemId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
relicUpgradeItemId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

defaultRelictList(index: number):string
defaultRelictList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
defaultRelictList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

defaultRelictListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

rewardSkinId():string|null
rewardSkinId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
rewardSkinId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_ActivityBossRushData_ConstData(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addMaxProvidedCharNum(builder:flatbuffers.Builder, maxProvidedCharNum:number) {
  builder.addFieldInt32(0, maxProvidedCharNum, 0);
}

static addTextMilestoneItemLevelDesc(builder:flatbuffers.Builder, textMilestoneItemLevelDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, textMilestoneItemLevelDescOffset, 0);
}

static addMilestonePointId(builder:flatbuffers.Builder, milestonePointIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, milestonePointIdOffset, 0);
}

static addRelicUpgradeItemId(builder:flatbuffers.Builder, relicUpgradeItemIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, relicUpgradeItemIdOffset, 0);
}

static addDefaultRelictList(builder:flatbuffers.Builder, defaultRelictListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, defaultRelictListOffset, 0);
}

static createDefaultRelictListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startDefaultRelictListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addRewardSkinId(builder:flatbuffers.Builder, rewardSkinIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, rewardSkinIdOffset, 0);
}

static endclz_Torappu_ActivityBossRushData_ConstData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActivityBossRushData_ConstData(builder:flatbuffers.Builder, maxProvidedCharNum:number, textMilestoneItemLevelDescOffset:flatbuffers.Offset, milestonePointIdOffset:flatbuffers.Offset, relicUpgradeItemIdOffset:flatbuffers.Offset, defaultRelictListOffset:flatbuffers.Offset, rewardSkinIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_ActivityBossRushData_ConstData.startclz_Torappu_ActivityBossRushData_ConstData(builder);
  clz_Torappu_ActivityBossRushData_ConstData.addMaxProvidedCharNum(builder, maxProvidedCharNum);
  clz_Torappu_ActivityBossRushData_ConstData.addTextMilestoneItemLevelDesc(builder, textMilestoneItemLevelDescOffset);
  clz_Torappu_ActivityBossRushData_ConstData.addMilestonePointId(builder, milestonePointIdOffset);
  clz_Torappu_ActivityBossRushData_ConstData.addRelicUpgradeItemId(builder, relicUpgradeItemIdOffset);
  clz_Torappu_ActivityBossRushData_ConstData.addDefaultRelictList(builder, defaultRelictListOffset);
  clz_Torappu_ActivityBossRushData_ConstData.addRewardSkinId(builder, rewardSkinIdOffset);
  return clz_Torappu_ActivityBossRushData_ConstData.endclz_Torappu_ActivityBossRushData_ConstData(builder);
}

unpack(): clz_Torappu_ActivityBossRushData_ConstDataT {
  return new clz_Torappu_ActivityBossRushData_ConstDataT(
    this.maxProvidedCharNum(),
    this.textMilestoneItemLevelDesc(),
    this.milestonePointId(),
    this.relicUpgradeItemId(),
    this.bb!.createScalarList<string>(this.defaultRelictList.bind(this), this.defaultRelictListLength()),
    this.rewardSkinId()
  );
}


unpackTo(_o: clz_Torappu_ActivityBossRushData_ConstDataT): void {
  _o.maxProvidedCharNum = this.maxProvidedCharNum();
  _o.textMilestoneItemLevelDesc = this.textMilestoneItemLevelDesc();
  _o.milestonePointId = this.milestonePointId();
  _o.relicUpgradeItemId = this.relicUpgradeItemId();
  _o.defaultRelictList = this.bb!.createScalarList<string>(this.defaultRelictList.bind(this), this.defaultRelictListLength());
  _o.rewardSkinId = this.rewardSkinId();
}
}

export class clz_Torappu_ActivityBossRushData_ConstDataT implements flatbuffers.IGeneratedObject {
constructor(
  public maxProvidedCharNum: number = 0,
  public textMilestoneItemLevelDesc: string|Uint8Array|null = null,
  public milestonePointId: string|Uint8Array|null = null,
  public relicUpgradeItemId: string|Uint8Array|null = null,
  public defaultRelictList: (string)[] = [],
  public rewardSkinId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const textMilestoneItemLevelDesc = (this.textMilestoneItemLevelDesc !== null ? builder.createString(this.textMilestoneItemLevelDesc!) : 0);
  const milestonePointId = (this.milestonePointId !== null ? builder.createString(this.milestonePointId!) : 0);
  const relicUpgradeItemId = (this.relicUpgradeItemId !== null ? builder.createString(this.relicUpgradeItemId!) : 0);
  const defaultRelictList = clz_Torappu_ActivityBossRushData_ConstData.createDefaultRelictListVector(builder, builder.createObjectOffsetList(this.defaultRelictList));
  const rewardSkinId = (this.rewardSkinId !== null ? builder.createString(this.rewardSkinId!) : 0);

  return clz_Torappu_ActivityBossRushData_ConstData.createclz_Torappu_ActivityBossRushData_ConstData(builder,
    this.maxProvidedCharNum,
    textMilestoneItemLevelDesc,
    milestonePointId,
    relicUpgradeItemId,
    defaultRelictList,
    rewardSkinId
  );
}
}
