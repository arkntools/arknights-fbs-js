// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_Act5D1Data_RuneRecurrentStateData implements flatbuffers.IUnpackableObject<clz_Torappu_Act5D1Data_RuneRecurrentStateDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_Act5D1Data_RuneRecurrentStateData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_Act5D1Data_RuneRecurrentStateData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act5D1Data_RuneRecurrentStateData):clz_Torappu_Act5D1Data_RuneRecurrentStateData {
  return (obj || new clz_Torappu_Act5D1Data_RuneRecurrentStateData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_Act5D1Data_RuneRecurrentStateData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_Act5D1Data_RuneRecurrentStateData):clz_Torappu_Act5D1Data_RuneRecurrentStateData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_Act5D1Data_RuneRecurrentStateData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

runeReId():string|null
runeReId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
runeReId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

stageId():string|null
stageId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
stageId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

slotId():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

startTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

endTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

runeList(index: number):string
runeList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
runeList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

runeListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

isAvail():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

warningPoint():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startclz_Torappu_Act5D1Data_RuneRecurrentStateData(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addRuneReId(builder:flatbuffers.Builder, runeReIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, runeReIdOffset, 0);
}

static addStageId(builder:flatbuffers.Builder, stageIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, stageIdOffset, 0);
}

static addSlotId(builder:flatbuffers.Builder, slotId:number) {
  builder.addFieldInt32(2, slotId, 0);
}

static addStartTime(builder:flatbuffers.Builder, startTime:bigint) {
  builder.addFieldInt64(3, startTime, BigInt('0'));
}

static addEndTime(builder:flatbuffers.Builder, endTime:bigint) {
  builder.addFieldInt64(4, endTime, BigInt('0'));
}

static addRuneList(builder:flatbuffers.Builder, runeListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, runeListOffset, 0);
}

static createRuneListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startRuneListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addIsAvail(builder:flatbuffers.Builder, isAvail:boolean) {
  builder.addFieldInt8(6, +isAvail, +false);
}

static addWarningPoint(builder:flatbuffers.Builder, warningPoint:number) {
  builder.addFieldInt32(7, warningPoint, 0);
}

static endclz_Torappu_Act5D1Data_RuneRecurrentStateData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_Act5D1Data_RuneRecurrentStateData(builder:flatbuffers.Builder, runeReIdOffset:flatbuffers.Offset, stageIdOffset:flatbuffers.Offset, slotId:number, startTime:bigint, endTime:bigint, runeListOffset:flatbuffers.Offset, isAvail:boolean, warningPoint:number):flatbuffers.Offset {
  clz_Torappu_Act5D1Data_RuneRecurrentStateData.startclz_Torappu_Act5D1Data_RuneRecurrentStateData(builder);
  clz_Torappu_Act5D1Data_RuneRecurrentStateData.addRuneReId(builder, runeReIdOffset);
  clz_Torappu_Act5D1Data_RuneRecurrentStateData.addStageId(builder, stageIdOffset);
  clz_Torappu_Act5D1Data_RuneRecurrentStateData.addSlotId(builder, slotId);
  clz_Torappu_Act5D1Data_RuneRecurrentStateData.addStartTime(builder, startTime);
  clz_Torappu_Act5D1Data_RuneRecurrentStateData.addEndTime(builder, endTime);
  clz_Torappu_Act5D1Data_RuneRecurrentStateData.addRuneList(builder, runeListOffset);
  clz_Torappu_Act5D1Data_RuneRecurrentStateData.addIsAvail(builder, isAvail);
  clz_Torappu_Act5D1Data_RuneRecurrentStateData.addWarningPoint(builder, warningPoint);
  return clz_Torappu_Act5D1Data_RuneRecurrentStateData.endclz_Torappu_Act5D1Data_RuneRecurrentStateData(builder);
}

unpack(): clz_Torappu_Act5D1Data_RuneRecurrentStateDataT {
  return new clz_Torappu_Act5D1Data_RuneRecurrentStateDataT(
    this.runeReId(),
    this.stageId(),
    this.slotId(),
    this.startTime(),
    this.endTime(),
    this.bb!.createScalarList<string>(this.runeList.bind(this), this.runeListLength()),
    this.isAvail(),
    this.warningPoint()
  );
}


unpackTo(_o: clz_Torappu_Act5D1Data_RuneRecurrentStateDataT): void {
  _o.runeReId = this.runeReId();
  _o.stageId = this.stageId();
  _o.slotId = this.slotId();
  _o.startTime = this.startTime();
  _o.endTime = this.endTime();
  _o.runeList = this.bb!.createScalarList<string>(this.runeList.bind(this), this.runeListLength());
  _o.isAvail = this.isAvail();
  _o.warningPoint = this.warningPoint();
}
}

export class clz_Torappu_Act5D1Data_RuneRecurrentStateDataT implements flatbuffers.IGeneratedObject {
constructor(
  public runeReId: string|Uint8Array|null = null,
  public stageId: string|Uint8Array|null = null,
  public slotId: number = 0,
  public startTime: bigint = BigInt('0'),
  public endTime: bigint = BigInt('0'),
  public runeList: (string)[] = [],
  public isAvail: boolean = false,
  public warningPoint: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const runeReId = (this.runeReId !== null ? builder.createString(this.runeReId!) : 0);
  const stageId = (this.stageId !== null ? builder.createString(this.stageId!) : 0);
  const runeList = clz_Torappu_Act5D1Data_RuneRecurrentStateData.createRuneListVector(builder, builder.createObjectOffsetList(this.runeList));

  return clz_Torappu_Act5D1Data_RuneRecurrentStateData.createclz_Torappu_Act5D1Data_RuneRecurrentStateData(builder,
    runeReId,
    stageId,
    this.slotId,
    this.startTime,
    this.endTime,
    runeList,
    this.isAvail,
    this.warningPoint
  );
}
}
