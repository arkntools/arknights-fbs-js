// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { dict__int__list_clz_Torappu_ItemBundle, dict__int__list_clz_Torappu_ItemBundleT } from './dict--int--list-clz-torappu-item-bundle.js';
import { dict__string__int, dict__string__intT } from './dict--string--int.js';
import { enum__Torappu_EvolvePhase } from './enum--torappu-evolve-phase.js';
import { enum__Torappu_UniEquipType } from './enum--torappu-uni-equip-type.js';


export class clz_Torappu_UniEquipData implements flatbuffers.IUnpackableObject<clz_Torappu_UniEquipDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_UniEquipData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_UniEquipData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_UniEquipData):clz_Torappu_UniEquipData {
  return (obj || new clz_Torappu_UniEquipData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_UniEquipData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_UniEquipData):clz_Torappu_UniEquipData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_UniEquipData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

uniEquipId():string|null
uniEquipId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
uniEquipId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

uniEquipName():string|null
uniEquipName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
uniEquipName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

uniEquipIcon():string|null
uniEquipIcon(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
uniEquipIcon(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

uniEquipDesc():string|null
uniEquipDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
uniEquipDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

typeIcon():string|null
typeIcon(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
typeIcon(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

typeName1():string|null
typeName1(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
typeName1(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

typeName2():string|null
typeName2(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
typeName2(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

equipShiningColor():string|null
equipShiningColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
equipShiningColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

showEvolvePhase():enum__Torappu_EvolvePhase {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_EvolvePhase.PHASE_0;
}

unlockEvolvePhase():enum__Torappu_EvolvePhase {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_EvolvePhase.PHASE_0;
}

charId():string|null
charId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
charId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

tmplId():string|null
tmplId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
tmplId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

showLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

unlockLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

missionList(index: number):string
missionList(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
missionList(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

missionListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

unlockFavors(index: number, obj?:dict__string__int):dict__string__int|null {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? (obj || new dict__string__int()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

unlockFavorsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

itemCost(index: number, obj?:dict__int__list_clz_Torappu_ItemBundle):dict__int__list_clz_Torappu_ItemBundle|null {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? (obj || new dict__int__list_clz_Torappu_ItemBundle()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

itemCostLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

type():enum__Torappu_UniEquipType {
  const offset = this.bb!.__offset(this.bb_pos, 38);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : enum__Torappu_UniEquipType.INITIAL;
}

uniEquipGetTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

uniEquipShowEnd():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

charEquipOrder():number {
  const offset = this.bb!.__offset(this.bb_pos, 44);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

hasUnlockMission():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 46);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

isSpecialEquip():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 48);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

specialEquipDesc():string|null
specialEquipDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
specialEquipDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 50);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

specialEquipColor():string|null
specialEquipColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
specialEquipColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 52);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

charColor():string|null
charColor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
charColor(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 54);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startclz_Torappu_UniEquipData(builder:flatbuffers.Builder) {
  builder.startObject(26);
}

static addUniEquipId(builder:flatbuffers.Builder, uniEquipIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, uniEquipIdOffset, 0);
}

static addUniEquipName(builder:flatbuffers.Builder, uniEquipNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, uniEquipNameOffset, 0);
}

static addUniEquipIcon(builder:flatbuffers.Builder, uniEquipIconOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, uniEquipIconOffset, 0);
}

static addUniEquipDesc(builder:flatbuffers.Builder, uniEquipDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, uniEquipDescOffset, 0);
}

static addTypeIcon(builder:flatbuffers.Builder, typeIconOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, typeIconOffset, 0);
}

static addTypeName1(builder:flatbuffers.Builder, typeName1Offset:flatbuffers.Offset) {
  builder.addFieldOffset(5, typeName1Offset, 0);
}

static addTypeName2(builder:flatbuffers.Builder, typeName2Offset:flatbuffers.Offset) {
  builder.addFieldOffset(6, typeName2Offset, 0);
}

static addEquipShiningColor(builder:flatbuffers.Builder, equipShiningColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, equipShiningColorOffset, 0);
}

static addShowEvolvePhase(builder:flatbuffers.Builder, showEvolvePhase:enum__Torappu_EvolvePhase) {
  builder.addFieldInt32(8, showEvolvePhase, enum__Torappu_EvolvePhase.PHASE_0);
}

static addUnlockEvolvePhase(builder:flatbuffers.Builder, unlockEvolvePhase:enum__Torappu_EvolvePhase) {
  builder.addFieldInt32(9, unlockEvolvePhase, enum__Torappu_EvolvePhase.PHASE_0);
}

static addCharId(builder:flatbuffers.Builder, charIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, charIdOffset, 0);
}

static addTmplId(builder:flatbuffers.Builder, tmplIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, tmplIdOffset, 0);
}

static addShowLevel(builder:flatbuffers.Builder, showLevel:number) {
  builder.addFieldInt32(12, showLevel, 0);
}

static addUnlockLevel(builder:flatbuffers.Builder, unlockLevel:number) {
  builder.addFieldInt32(13, unlockLevel, 0);
}

static addMissionList(builder:flatbuffers.Builder, missionListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, missionListOffset, 0);
}

static createMissionListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startMissionListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addUnlockFavors(builder:flatbuffers.Builder, unlockFavorsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(15, unlockFavorsOffset, 0);
}

static createUnlockFavorsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startUnlockFavorsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addItemCost(builder:flatbuffers.Builder, itemCostOffset:flatbuffers.Offset) {
  builder.addFieldOffset(16, itemCostOffset, 0);
}

static createItemCostVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startItemCostVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addType(builder:flatbuffers.Builder, type:enum__Torappu_UniEquipType) {
  builder.addFieldInt32(17, type, enum__Torappu_UniEquipType.INITIAL);
}

static addUniEquipGetTime(builder:flatbuffers.Builder, uniEquipGetTime:bigint) {
  builder.addFieldInt64(18, uniEquipGetTime, BigInt('0'));
}

static addUniEquipShowEnd(builder:flatbuffers.Builder, uniEquipShowEnd:bigint) {
  builder.addFieldInt64(19, uniEquipShowEnd, BigInt('0'));
}

static addCharEquipOrder(builder:flatbuffers.Builder, charEquipOrder:number) {
  builder.addFieldInt32(20, charEquipOrder, 0);
}

static addHasUnlockMission(builder:flatbuffers.Builder, hasUnlockMission:boolean) {
  builder.addFieldInt8(21, +hasUnlockMission, +false);
}

static addIsSpecialEquip(builder:flatbuffers.Builder, isSpecialEquip:boolean) {
  builder.addFieldInt8(22, +isSpecialEquip, +false);
}

static addSpecialEquipDesc(builder:flatbuffers.Builder, specialEquipDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(23, specialEquipDescOffset, 0);
}

static addSpecialEquipColor(builder:flatbuffers.Builder, specialEquipColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(24, specialEquipColorOffset, 0);
}

static addCharColor(builder:flatbuffers.Builder, charColorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(25, charColorOffset, 0);
}

static endclz_Torappu_UniEquipData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_UniEquipData(builder:flatbuffers.Builder, uniEquipIdOffset:flatbuffers.Offset, uniEquipNameOffset:flatbuffers.Offset, uniEquipIconOffset:flatbuffers.Offset, uniEquipDescOffset:flatbuffers.Offset, typeIconOffset:flatbuffers.Offset, typeName1Offset:flatbuffers.Offset, typeName2Offset:flatbuffers.Offset, equipShiningColorOffset:flatbuffers.Offset, showEvolvePhase:enum__Torappu_EvolvePhase, unlockEvolvePhase:enum__Torappu_EvolvePhase, charIdOffset:flatbuffers.Offset, tmplIdOffset:flatbuffers.Offset, showLevel:number, unlockLevel:number, missionListOffset:flatbuffers.Offset, unlockFavorsOffset:flatbuffers.Offset, itemCostOffset:flatbuffers.Offset, type:enum__Torappu_UniEquipType, uniEquipGetTime:bigint, uniEquipShowEnd:bigint, charEquipOrder:number, hasUnlockMission:boolean, isSpecialEquip:boolean, specialEquipDescOffset:flatbuffers.Offset, specialEquipColorOffset:flatbuffers.Offset, charColorOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_UniEquipData.startclz_Torappu_UniEquipData(builder);
  clz_Torappu_UniEquipData.addUniEquipId(builder, uniEquipIdOffset);
  clz_Torappu_UniEquipData.addUniEquipName(builder, uniEquipNameOffset);
  clz_Torappu_UniEquipData.addUniEquipIcon(builder, uniEquipIconOffset);
  clz_Torappu_UniEquipData.addUniEquipDesc(builder, uniEquipDescOffset);
  clz_Torappu_UniEquipData.addTypeIcon(builder, typeIconOffset);
  clz_Torappu_UniEquipData.addTypeName1(builder, typeName1Offset);
  clz_Torappu_UniEquipData.addTypeName2(builder, typeName2Offset);
  clz_Torappu_UniEquipData.addEquipShiningColor(builder, equipShiningColorOffset);
  clz_Torappu_UniEquipData.addShowEvolvePhase(builder, showEvolvePhase);
  clz_Torappu_UniEquipData.addUnlockEvolvePhase(builder, unlockEvolvePhase);
  clz_Torappu_UniEquipData.addCharId(builder, charIdOffset);
  clz_Torappu_UniEquipData.addTmplId(builder, tmplIdOffset);
  clz_Torappu_UniEquipData.addShowLevel(builder, showLevel);
  clz_Torappu_UniEquipData.addUnlockLevel(builder, unlockLevel);
  clz_Torappu_UniEquipData.addMissionList(builder, missionListOffset);
  clz_Torappu_UniEquipData.addUnlockFavors(builder, unlockFavorsOffset);
  clz_Torappu_UniEquipData.addItemCost(builder, itemCostOffset);
  clz_Torappu_UniEquipData.addType(builder, type);
  clz_Torappu_UniEquipData.addUniEquipGetTime(builder, uniEquipGetTime);
  clz_Torappu_UniEquipData.addUniEquipShowEnd(builder, uniEquipShowEnd);
  clz_Torappu_UniEquipData.addCharEquipOrder(builder, charEquipOrder);
  clz_Torappu_UniEquipData.addHasUnlockMission(builder, hasUnlockMission);
  clz_Torappu_UniEquipData.addIsSpecialEquip(builder, isSpecialEquip);
  clz_Torappu_UniEquipData.addSpecialEquipDesc(builder, specialEquipDescOffset);
  clz_Torappu_UniEquipData.addSpecialEquipColor(builder, specialEquipColorOffset);
  clz_Torappu_UniEquipData.addCharColor(builder, charColorOffset);
  return clz_Torappu_UniEquipData.endclz_Torappu_UniEquipData(builder);
}

unpack(): clz_Torappu_UniEquipDataT {
  return new clz_Torappu_UniEquipDataT(
    this.uniEquipId(),
    this.uniEquipName(),
    this.uniEquipIcon(),
    this.uniEquipDesc(),
    this.typeIcon(),
    this.typeName1(),
    this.typeName2(),
    this.equipShiningColor(),
    this.showEvolvePhase(),
    this.unlockEvolvePhase(),
    this.charId(),
    this.tmplId(),
    this.showLevel(),
    this.unlockLevel(),
    this.bb!.createScalarList<string>(this.missionList.bind(this), this.missionListLength()),
    this.bb!.createObjList<dict__string__int, dict__string__intT>(this.unlockFavors.bind(this), this.unlockFavorsLength()),
    this.bb!.createObjList<dict__int__list_clz_Torappu_ItemBundle, dict__int__list_clz_Torappu_ItemBundleT>(this.itemCost.bind(this), this.itemCostLength()),
    this.type(),
    this.uniEquipGetTime(),
    this.uniEquipShowEnd(),
    this.charEquipOrder(),
    this.hasUnlockMission(),
    this.isSpecialEquip(),
    this.specialEquipDesc(),
    this.specialEquipColor(),
    this.charColor()
  );
}


unpackTo(_o: clz_Torappu_UniEquipDataT): void {
  _o.uniEquipId = this.uniEquipId();
  _o.uniEquipName = this.uniEquipName();
  _o.uniEquipIcon = this.uniEquipIcon();
  _o.uniEquipDesc = this.uniEquipDesc();
  _o.typeIcon = this.typeIcon();
  _o.typeName1 = this.typeName1();
  _o.typeName2 = this.typeName2();
  _o.equipShiningColor = this.equipShiningColor();
  _o.showEvolvePhase = this.showEvolvePhase();
  _o.unlockEvolvePhase = this.unlockEvolvePhase();
  _o.charId = this.charId();
  _o.tmplId = this.tmplId();
  _o.showLevel = this.showLevel();
  _o.unlockLevel = this.unlockLevel();
  _o.missionList = this.bb!.createScalarList<string>(this.missionList.bind(this), this.missionListLength());
  _o.unlockFavors = this.bb!.createObjList<dict__string__int, dict__string__intT>(this.unlockFavors.bind(this), this.unlockFavorsLength());
  _o.itemCost = this.bb!.createObjList<dict__int__list_clz_Torappu_ItemBundle, dict__int__list_clz_Torappu_ItemBundleT>(this.itemCost.bind(this), this.itemCostLength());
  _o.type = this.type();
  _o.uniEquipGetTime = this.uniEquipGetTime();
  _o.uniEquipShowEnd = this.uniEquipShowEnd();
  _o.charEquipOrder = this.charEquipOrder();
  _o.hasUnlockMission = this.hasUnlockMission();
  _o.isSpecialEquip = this.isSpecialEquip();
  _o.specialEquipDesc = this.specialEquipDesc();
  _o.specialEquipColor = this.specialEquipColor();
  _o.charColor = this.charColor();
}
}

export class clz_Torappu_UniEquipDataT implements flatbuffers.IGeneratedObject {
constructor(
  public uniEquipId: string|Uint8Array|null = null,
  public uniEquipName: string|Uint8Array|null = null,
  public uniEquipIcon: string|Uint8Array|null = null,
  public uniEquipDesc: string|Uint8Array|null = null,
  public typeIcon: string|Uint8Array|null = null,
  public typeName1: string|Uint8Array|null = null,
  public typeName2: string|Uint8Array|null = null,
  public equipShiningColor: string|Uint8Array|null = null,
  public showEvolvePhase: enum__Torappu_EvolvePhase = enum__Torappu_EvolvePhase.PHASE_0,
  public unlockEvolvePhase: enum__Torappu_EvolvePhase = enum__Torappu_EvolvePhase.PHASE_0,
  public charId: string|Uint8Array|null = null,
  public tmplId: string|Uint8Array|null = null,
  public showLevel: number = 0,
  public unlockLevel: number = 0,
  public missionList: (string)[] = [],
  public unlockFavors: (dict__string__intT)[] = [],
  public itemCost: (dict__int__list_clz_Torappu_ItemBundleT)[] = [],
  public type: enum__Torappu_UniEquipType = enum__Torappu_UniEquipType.INITIAL,
  public uniEquipGetTime: bigint = BigInt('0'),
  public uniEquipShowEnd: bigint = BigInt('0'),
  public charEquipOrder: number = 0,
  public hasUnlockMission: boolean = false,
  public isSpecialEquip: boolean = false,
  public specialEquipDesc: string|Uint8Array|null = null,
  public specialEquipColor: string|Uint8Array|null = null,
  public charColor: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const uniEquipId = (this.uniEquipId !== null ? builder.createString(this.uniEquipId!) : 0);
  const uniEquipName = (this.uniEquipName !== null ? builder.createString(this.uniEquipName!) : 0);
  const uniEquipIcon = (this.uniEquipIcon !== null ? builder.createString(this.uniEquipIcon!) : 0);
  const uniEquipDesc = (this.uniEquipDesc !== null ? builder.createString(this.uniEquipDesc!) : 0);
  const typeIcon = (this.typeIcon !== null ? builder.createString(this.typeIcon!) : 0);
  const typeName1 = (this.typeName1 !== null ? builder.createString(this.typeName1!) : 0);
  const typeName2 = (this.typeName2 !== null ? builder.createString(this.typeName2!) : 0);
  const equipShiningColor = (this.equipShiningColor !== null ? builder.createString(this.equipShiningColor!) : 0);
  const charId = (this.charId !== null ? builder.createString(this.charId!) : 0);
  const tmplId = (this.tmplId !== null ? builder.createString(this.tmplId!) : 0);
  const missionList = clz_Torappu_UniEquipData.createMissionListVector(builder, builder.createObjectOffsetList(this.missionList));
  const unlockFavors = clz_Torappu_UniEquipData.createUnlockFavorsVector(builder, builder.createObjectOffsetList(this.unlockFavors));
  const itemCost = clz_Torappu_UniEquipData.createItemCostVector(builder, builder.createObjectOffsetList(this.itemCost));
  const specialEquipDesc = (this.specialEquipDesc !== null ? builder.createString(this.specialEquipDesc!) : 0);
  const specialEquipColor = (this.specialEquipColor !== null ? builder.createString(this.specialEquipColor!) : 0);
  const charColor = (this.charColor !== null ? builder.createString(this.charColor!) : 0);

  return clz_Torappu_UniEquipData.createclz_Torappu_UniEquipData(builder,
    uniEquipId,
    uniEquipName,
    uniEquipIcon,
    uniEquipDesc,
    typeIcon,
    typeName1,
    typeName2,
    equipShiningColor,
    this.showEvolvePhase,
    this.unlockEvolvePhase,
    charId,
    tmplId,
    this.showLevel,
    this.unlockLevel,
    missionList,
    unlockFavors,
    itemCost,
    this.type,
    this.uniEquipGetTime,
    this.uniEquipShowEnd,
    this.charEquipOrder,
    this.hasUnlockMission,
    this.isSpecialEquip,
    specialEquipDesc,
    specialEquipColor,
    charColor
  );
}
}
