// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { dict__string__clz_Torappu_CharPatchData_PatchDetailInfo, dict__string__clz_Torappu_CharPatchData_PatchDetailInfoT } from './dict--string--clz-torappu-char-patch-data-patch-detail-info.js';
import { dict__string__clz_Torappu_CharPatchData_PatchInfo, dict__string__clz_Torappu_CharPatchData_PatchInfoT } from './dict--string--clz-torappu-char-patch-data-patch-info.js';
import { dict__string__clz_Torappu_CharPatchData_UnlockCond, dict__string__clz_Torappu_CharPatchData_UnlockCondT } from './dict--string--clz-torappu-char-patch-data-unlock-cond.js';
import { dict__string__clz_Torappu_CharacterData, dict__string__clz_Torappu_CharacterDataT } from './dict--string--clz-torappu-character-data.js';


export class clz_Torappu_CharPatchData implements flatbuffers.IUnpackableObject<clz_Torappu_CharPatchDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_CharPatchData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_CharPatchData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CharPatchData):clz_Torappu_CharPatchData {
  return (obj || new clz_Torappu_CharPatchData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_CharPatchData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_CharPatchData):clz_Torappu_CharPatchData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_CharPatchData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

infos(index: number, obj?:dict__string__clz_Torappu_CharPatchData_PatchInfo):dict__string__clz_Torappu_CharPatchData_PatchInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new dict__string__clz_Torappu_CharPatchData_PatchInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

infosLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

patchChars(index: number, obj?:dict__string__clz_Torappu_CharacterData):dict__string__clz_Torappu_CharacterData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new dict__string__clz_Torappu_CharacterData()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

patchCharsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

unlockConds(index: number, obj?:dict__string__clz_Torappu_CharPatchData_UnlockCond):dict__string__clz_Torappu_CharPatchData_UnlockCond|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new dict__string__clz_Torappu_CharPatchData_UnlockCond()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

unlockCondsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

patchDetailInfoList(index: number, obj?:dict__string__clz_Torappu_CharPatchData_PatchDetailInfo):dict__string__clz_Torappu_CharPatchData_PatchDetailInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new dict__string__clz_Torappu_CharPatchData_PatchDetailInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

patchDetailInfoListLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_CharPatchData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addInfos(builder:flatbuffers.Builder, infosOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, infosOffset, 0);
}

static createInfosVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startInfosVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addPatchChars(builder:flatbuffers.Builder, patchCharsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, patchCharsOffset, 0);
}

static createPatchCharsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPatchCharsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addUnlockConds(builder:flatbuffers.Builder, unlockCondsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, unlockCondsOffset, 0);
}

static createUnlockCondsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startUnlockCondsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addPatchDetailInfoList(builder:flatbuffers.Builder, patchDetailInfoListOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, patchDetailInfoListOffset, 0);
}

static createPatchDetailInfoListVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPatchDetailInfoListVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_CharPatchData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishclz_Torappu_CharPatchDataBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedclz_Torappu_CharPatchDataBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createclz_Torappu_CharPatchData(builder:flatbuffers.Builder, infosOffset:flatbuffers.Offset, patchCharsOffset:flatbuffers.Offset, unlockCondsOffset:flatbuffers.Offset, patchDetailInfoListOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_CharPatchData.startclz_Torappu_CharPatchData(builder);
  clz_Torappu_CharPatchData.addInfos(builder, infosOffset);
  clz_Torappu_CharPatchData.addPatchChars(builder, patchCharsOffset);
  clz_Torappu_CharPatchData.addUnlockConds(builder, unlockCondsOffset);
  clz_Torappu_CharPatchData.addPatchDetailInfoList(builder, patchDetailInfoListOffset);
  return clz_Torappu_CharPatchData.endclz_Torappu_CharPatchData(builder);
}

unpack(): clz_Torappu_CharPatchDataT {
  return new clz_Torappu_CharPatchDataT(
    this.bb!.createObjList<dict__string__clz_Torappu_CharPatchData_PatchInfo, dict__string__clz_Torappu_CharPatchData_PatchInfoT>(this.infos.bind(this), this.infosLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_CharacterData, dict__string__clz_Torappu_CharacterDataT>(this.patchChars.bind(this), this.patchCharsLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_CharPatchData_UnlockCond, dict__string__clz_Torappu_CharPatchData_UnlockCondT>(this.unlockConds.bind(this), this.unlockCondsLength()),
    this.bb!.createObjList<dict__string__clz_Torappu_CharPatchData_PatchDetailInfo, dict__string__clz_Torappu_CharPatchData_PatchDetailInfoT>(this.patchDetailInfoList.bind(this), this.patchDetailInfoListLength())
  );
}


unpackTo(_o: clz_Torappu_CharPatchDataT): void {
  _o.infos = this.bb!.createObjList<dict__string__clz_Torappu_CharPatchData_PatchInfo, dict__string__clz_Torappu_CharPatchData_PatchInfoT>(this.infos.bind(this), this.infosLength());
  _o.patchChars = this.bb!.createObjList<dict__string__clz_Torappu_CharacterData, dict__string__clz_Torappu_CharacterDataT>(this.patchChars.bind(this), this.patchCharsLength());
  _o.unlockConds = this.bb!.createObjList<dict__string__clz_Torappu_CharPatchData_UnlockCond, dict__string__clz_Torappu_CharPatchData_UnlockCondT>(this.unlockConds.bind(this), this.unlockCondsLength());
  _o.patchDetailInfoList = this.bb!.createObjList<dict__string__clz_Torappu_CharPatchData_PatchDetailInfo, dict__string__clz_Torappu_CharPatchData_PatchDetailInfoT>(this.patchDetailInfoList.bind(this), this.patchDetailInfoListLength());
}
}

export class clz_Torappu_CharPatchDataT implements flatbuffers.IGeneratedObject {
constructor(
  public infos: (dict__string__clz_Torappu_CharPatchData_PatchInfoT)[] = [],
  public patchChars: (dict__string__clz_Torappu_CharacterDataT)[] = [],
  public unlockConds: (dict__string__clz_Torappu_CharPatchData_UnlockCondT)[] = [],
  public patchDetailInfoList: (dict__string__clz_Torappu_CharPatchData_PatchDetailInfoT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const infos = clz_Torappu_CharPatchData.createInfosVector(builder, builder.createObjectOffsetList(this.infos));
  const patchChars = clz_Torappu_CharPatchData.createPatchCharsVector(builder, builder.createObjectOffsetList(this.patchChars));
  const unlockConds = clz_Torappu_CharPatchData.createUnlockCondsVector(builder, builder.createObjectOffsetList(this.unlockConds));
  const patchDetailInfoList = clz_Torappu_CharPatchData.createPatchDetailInfoListVector(builder, builder.createObjectOffsetList(this.patchDetailInfoList));

  return clz_Torappu_CharPatchData.createclz_Torappu_CharPatchData(builder,
    infos,
    patchChars,
    unlockConds,
    patchDetailInfoList
  );
}
}
