// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class clz_Torappu_ActMultiV3TitleData implements flatbuffers.IUnpackableObject<clz_Torappu_ActMultiV3TitleDataT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_ActMultiV3TitleData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_ActMultiV3TitleData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActMultiV3TitleData):clz_Torappu_ActMultiV3TitleData {
  return (obj || new clz_Torappu_ActMultiV3TitleData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_ActMultiV3TitleData(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_ActMultiV3TitleData):clz_Torappu_ActMultiV3TitleData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_ActMultiV3TitleData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

order():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

titleDesc():string|null
titleDesc(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
titleDesc(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

isBack():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startclz_Torappu_ActMultiV3TitleData(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addOrder(builder:flatbuffers.Builder, order:number) {
  builder.addFieldInt32(0, order, 0);
}

static addTitleDesc(builder:flatbuffers.Builder, titleDescOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, titleDescOffset, 0);
}

static addIsBack(builder:flatbuffers.Builder, isBack:boolean) {
  builder.addFieldInt8(2, +isBack, +false);
}

static endclz_Torappu_ActMultiV3TitleData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_ActMultiV3TitleData(builder:flatbuffers.Builder, order:number, titleDescOffset:flatbuffers.Offset, isBack:boolean):flatbuffers.Offset {
  clz_Torappu_ActMultiV3TitleData.startclz_Torappu_ActMultiV3TitleData(builder);
  clz_Torappu_ActMultiV3TitleData.addOrder(builder, order);
  clz_Torappu_ActMultiV3TitleData.addTitleDesc(builder, titleDescOffset);
  clz_Torappu_ActMultiV3TitleData.addIsBack(builder, isBack);
  return clz_Torappu_ActMultiV3TitleData.endclz_Torappu_ActMultiV3TitleData(builder);
}

unpack(): clz_Torappu_ActMultiV3TitleDataT {
  return new clz_Torappu_ActMultiV3TitleDataT(
    this.order(),
    this.titleDesc(),
    this.isBack()
  );
}


unpackTo(_o: clz_Torappu_ActMultiV3TitleDataT): void {
  _o.order = this.order();
  _o.titleDesc = this.titleDesc();
  _o.isBack = this.isBack();
}
}

export class clz_Torappu_ActMultiV3TitleDataT implements flatbuffers.IGeneratedObject {
constructor(
  public order: number = 0,
  public titleDesc: string|Uint8Array|null = null,
  public isBack: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const titleDesc = (this.titleDesc !== null ? builder.createString(this.titleDesc!) : 0);

  return clz_Torappu_ActMultiV3TitleData.createclz_Torappu_ActMultiV3TitleData(builder,
    this.order,
    titleDesc,
    this.isBack
  );
}
}
