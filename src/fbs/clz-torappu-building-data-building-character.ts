// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { clz_Torappu_BuildingData_BuildingBuffCharSlot, clz_Torappu_BuildingData_BuildingBuffCharSlotT } from './clz-torappu-building-data-building-buff-char-slot.js';


export class clz_Torappu_BuildingData_BuildingCharacter implements flatbuffers.IUnpackableObject<clz_Torappu_BuildingData_BuildingCharacterT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):clz_Torappu_BuildingData_BuildingCharacter {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsclz_Torappu_BuildingData_BuildingCharacter(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_BuildingCharacter):clz_Torappu_BuildingData_BuildingCharacter {
  return (obj || new clz_Torappu_BuildingData_BuildingCharacter()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsclz_Torappu_BuildingData_BuildingCharacter(bb:flatbuffers.ByteBuffer, obj?:clz_Torappu_BuildingData_BuildingCharacter):clz_Torappu_BuildingData_BuildingCharacter {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new clz_Torappu_BuildingData_BuildingCharacter()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

charId():string|null
charId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
charId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

maxManpower():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

buffChar(index: number, obj?:clz_Torappu_BuildingData_BuildingBuffCharSlot):clz_Torappu_BuildingData_BuildingBuffCharSlot|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new clz_Torappu_BuildingData_BuildingBuffCharSlot()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

buffCharLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startclz_Torappu_BuildingData_BuildingCharacter(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addCharId(builder:flatbuffers.Builder, charIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, charIdOffset, 0);
}

static addMaxManpower(builder:flatbuffers.Builder, maxManpower:bigint) {
  builder.addFieldInt64(1, maxManpower, BigInt('0'));
}

static addBuffChar(builder:flatbuffers.Builder, buffCharOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, buffCharOffset, 0);
}

static createBuffCharVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startBuffCharVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endclz_Torappu_BuildingData_BuildingCharacter(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createclz_Torappu_BuildingData_BuildingCharacter(builder:flatbuffers.Builder, charIdOffset:flatbuffers.Offset, maxManpower:bigint, buffCharOffset:flatbuffers.Offset):flatbuffers.Offset {
  clz_Torappu_BuildingData_BuildingCharacter.startclz_Torappu_BuildingData_BuildingCharacter(builder);
  clz_Torappu_BuildingData_BuildingCharacter.addCharId(builder, charIdOffset);
  clz_Torappu_BuildingData_BuildingCharacter.addMaxManpower(builder, maxManpower);
  clz_Torappu_BuildingData_BuildingCharacter.addBuffChar(builder, buffCharOffset);
  return clz_Torappu_BuildingData_BuildingCharacter.endclz_Torappu_BuildingData_BuildingCharacter(builder);
}

unpack(): clz_Torappu_BuildingData_BuildingCharacterT {
  return new clz_Torappu_BuildingData_BuildingCharacterT(
    this.charId(),
    this.maxManpower(),
    this.bb!.createObjList<clz_Torappu_BuildingData_BuildingBuffCharSlot, clz_Torappu_BuildingData_BuildingBuffCharSlotT>(this.buffChar.bind(this), this.buffCharLength())
  );
}


unpackTo(_o: clz_Torappu_BuildingData_BuildingCharacterT): void {
  _o.charId = this.charId();
  _o.maxManpower = this.maxManpower();
  _o.buffChar = this.bb!.createObjList<clz_Torappu_BuildingData_BuildingBuffCharSlot, clz_Torappu_BuildingData_BuildingBuffCharSlotT>(this.buffChar.bind(this), this.buffCharLength());
}
}

export class clz_Torappu_BuildingData_BuildingCharacterT implements flatbuffers.IGeneratedObject {
constructor(
  public charId: string|Uint8Array|null = null,
  public maxManpower: bigint = BigInt('0'),
  public buffChar: (clz_Torappu_BuildingData_BuildingBuffCharSlotT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const charId = (this.charId !== null ? builder.createString(this.charId!) : 0);
  const buffChar = clz_Torappu_BuildingData_BuildingCharacter.createBuffCharVector(builder, builder.createObjectOffsetList(this.buffChar));

  return clz_Torappu_BuildingData_BuildingCharacter.createclz_Torappu_BuildingData_BuildingCharacter(builder,
    charId,
    this.maxManpower,
    buffChar
  );
}
}
